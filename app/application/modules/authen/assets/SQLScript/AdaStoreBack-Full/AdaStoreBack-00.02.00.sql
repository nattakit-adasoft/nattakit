IF NOT EXISTS(SELECT name FROM sys.filegroups WHERE name = 'AdaPos5_RPT_Filegroups') BEGIN
 DECLARE @nIndex int
 DECLARE @tFullpath varchar(200)
 SET @tFullpath = (SELECT physical_name FROM sys.database_files where data_space_id = '1')
 SET @nIndex = CHARINDEX('\', REVERSE(@tFullpath))

 DECLARE @tDBName VARCHAR(50)
 DECLARE @tSql NVARCHAR(1000)
 SET @tDBName = DB_NAME()
 SET @tSql = 'ALTER DATABASE ' + @tDBName + ' ADD FILEGROUP AdaPos5_RPT_Filegroups'
 EXECUTE sp_executesql @tSql
 
 SET @tSql = 'ALTER DATABASE ' + @tDBName + CHAR(13) +
    'ADD FILE (NAME=''AdaPos5_RPT_Filegroups'',FILENAME = '''+ REVERSE(SUBSTRING(REVERSE(@tFullpath), @nIndex, LEN(@tFullpath))) + 'AdaPos5_RPT_Filegroups_' + @tDBName +''')' + CHAR(13) +
    'TO FILEGROUP AdaPos5_RPT_Filegroups'
 EXECUTE sp_executesql @tSql
END


IF (SELECT COUNT(*) AS C FROM TCNMComp) = 0 BEGIN

INSERT INTO [TCNMComp] ([FTCmpCode], [FTCmpTel], [FTCmpFax], [FTBchcode], [FTCmpWhsInOrEx], [FTCmpRetInOrEx], [FTCmpEmail], [FTRteCode], [FTVatCode], [FDLastUpdOn], [FTLastUpdBy], [FDCreateOn], [FTCreateBy]) VALUES ('00001', '02-444-5555', '02-444-5555-1', NULL, '', '1', '', '00001', '00003', GETDATE(), '00001', NULL, NULL);
INSERT INTO [TCNMComp_L] ([FTCmpCode], [FNLngID], [FTCmpName], [FTCmpShop], [FTCmpDirector]) VALUES ('00001', '1', 'ทดสอบ', '', 'ทดสอบ');

END


/****** Object:  Table [dbo].[_Tmp]    Script Date: 5/8/2563 12:32:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[_Tmp](
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FDStkDate] [datetime] NULL,
	[FTStkDocNo] [varchar](20) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTWahName] [varchar](100) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FCStkQtyMonEnd] [numeric](18, 4) NULL,
	[FCStkQtyIn] [numeric](18, 4) NULL,
	[FCStkQtyOut] [numeric](18, 4) NULL,
	[FCStkQtySaleDN] [numeric](18, 4) NULL,
	[FCStkQtyCN] [numeric](18, 4) NULL,
	[FCStkQtyAdj] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[cCTRptCrdTmp]    Script Date: 5/8/2563 12:32:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[cCTRptCrdTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[cCTRptCrdTmp](
	[FTComName] [varchar](100) NOT NULL,
	[FTRptName] [varchar](100) NULL,
	[FTTxnDocNoRef] [varchar](25) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTTxnPosCode] [varchar](20) NULL,
	[FTTxnDocRefNo] [varchar](50) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTDptName] [varchar](255) NULL,
	[FTPosType] [varchar](255) NULL,
	[FNTxnID] [int] NULL,
	[FNTxnIDRef] [int] NULL,
	[FTTxnDocType] [varchar](10) NULL,
	[FTTxnStaOffLine] [varchar](1) NULL,
	[FTCrdCode] [varchar](20) NULL,
	[FTCrdName] [varchar](255) NULL,
	[FTCtyCode] [varchar](20) NULL,
	[FTCtyName] [varchar](255) NULL,
	[FTCrdHolderID] [varchar](20) NULL,
	[FTCrdStaActive] [varchar](1) NULL,
	[FDTxnDocDate] [datetime] NULL,
	[FDCrdExpireDate] [datetime] NULL,
	[FTBchCodeRef] [varchar](5) NULL,
	[FCTxnValue] [numeric](18, 4) NULL,
	[FCTxnCrdValue] [numeric](18, 4) NULL,
	[FCTxnCrdAftTrans] [numeric](18, 4) NULL,
	[FCCrdBalance] [numeric](18, 4) NULL,
	[CardExpValue] [numeric](18, 4) NULL,
	[FTTxnDocTypeName] [varchar](255) NULL,
	[FDCrdStartDate] [datetime] NULL,
	[FCCrdValue] [numeric](18, 4) NULL,
	[FDDocDate] [datetime] NULL,
	[FTCvdOldCode] [varchar](20) NULL,
	[FTOldCtyName] [varchar](255) NULL,
	[FTCvdNewCode] [varchar](20) NULL,
	[FTNewCtyName] [varchar](255) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FCOldCrdValue] [numeric](18, 4) NULL,
	[FCNewCrdValue] [numeric](18, 4) NULL,
	[FTCdtRmk] [varchar](255) NULL,
	[TimesUsage] [numeric](18, 0) NULL,
	[FTCrdRemark] [varchar](255) NULL,
	[FTTxnYear] [varchar](20) NULL,
	[FNTxnCountCard] [int] NULL,
	[FTCrdStaType] [varchar](1) NULL,
	[FNLngID] [int] NULL,
	[FTUsrCreate] [varchar](20) NULL,
	[FTDocLastUpdBy] [varchar](20) NULL,
	[FTDocCreateBy] [varchar](20) NULL,
	[FCTxnValAftTrans] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[StkPdtTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[StkPdtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[StkPdtTmp](
	[nCount] [int] NULL,
	[FTStkDocNo] [varchar](20) NULL,
	[FTPdtCode] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TARTDocApvTxnTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TARTDocApvTxnTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TARTDocApvTxnTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTDatRefCode] [varchar](20) NOT NULL,
	[FTDatRefType] [varchar](30) NOT NULL,
	[FNDatApvSeq] [int] NOT NULL,
	[FTDatUsrApv] [varchar](20) NULL,
	[FDDatDateApv] [datetime] NULL,
	[FTDatStaPrc] [varchar](1) NULL,
	[FTDatRmk] [varchar](100) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TARTRedeemDT_Tmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TARTRedeemDT_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TARTRedeemDT_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTRdhDocNo] [varchar](20) NOT NULL,
	[FNRddSeq] [bigint] NOT NULL,
	[FTRddStaType] [varchar](1) NULL,
	[FTRddGrpName] [varchar](50) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTRddBarCode] [varchar](25) NULL,
	[FTSessionID] [varchar](250) NOT NULL,
	[FTRddGrpCode] [varchar](250) NULL,
	[FTRddGrpCreated] [int] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TARTSoDTTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TARTSoDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TARTSoDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXsdPdtName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FCXsdFactor] [numeric](18, 4) NULL,
	[FTXsdBarCode] [varchar](25) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXsdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXsdVatRate] [numeric](18, 4) NULL,
	[FTXsdSaleType] [varchar](1) NULL,
	[FCXsdSalePrice] [numeric](18, 4) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdQtyAll] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXsdDisChgTxt] [varchar](20) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdChg] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdWhtAmt] [numeric](18, 4) NULL,
	[FTXsdWhtCode] [varchar](5) NULL,
	[FCXsdWhtRate] [numeric](18, 4) NULL,
	[FCXsdCostIn] [numeric](18, 4) NULL,
	[FCXsdCostEx] [numeric](18, 4) NULL,
	[FTXsdStaPdt] [varchar](1) NULL,
	[FCXsdQtyLef] [numeric](18, 4) NULL,
	[FCXsdQtyRfn] [numeric](18, 4) NULL,
	[FTXsdStaPrcStk] [varchar](1) NULL,
	[FTXsdStaAlwDis] [varchar](1) NULL,
	[FNXsdPdtLevel] [int] NULL,
	[FTXsdPdtParent] [varchar](20) NULL,
	[FCXsdQtySet] [numeric](18, 4) NULL,
	[FTPdtStaSet] [varchar](1) NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TARTSoHDCstTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TARTSoHDCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TARTSoHDCstTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCstName] [varchar](255) NULL,
	[FTXshCstTel] [varchar](255) NULL,
	[FTXshCardNo] [varchar](20) NULL,
	[FNXshCrTerm] [int] NULL,
	[FDXshDueDate] [datetime] NULL,
	[FDXshBillDue] [datetime] NULL,
	[FTXshCtrName] [varchar](100) NULL,
	[FDXshTnfDate] [datetime] NULL,
	[FTXshRefTnfID] [varchar](20) NULL,
	[FNXshAddrShip] [bigint] NULL,
	[FNXshAddrTax] [bigint] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TARTSoHDTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TARTSoHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TARTSoHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTSpnCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcDoc] [varchar](255) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNMPdt_LTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNMPdt_LTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNMPdt_LTmp](
	[FTPdtCode] [varchar](20) NULL,
	[FNLngID] [bigint] NULL,
	[FTPdtName] [varchar](100) NULL,
	[FTPdtNameOth] [varchar](100) NULL,
	[FTPdtNameABB] [varchar](50) NULL,
	[FTPdtRmk] [varchar](200) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNMPdtBarTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNMPdtBarTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNMPdtBarTmp](
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTBarCode] [varchar](25) NOT NULL,
	[FTPunCode] [varchar](5) NOT NULL,
	[FTBarStaUse] [varchar](1) NULL,
	[FTBarStaAlwSale] [varchar](1) NULL,
	[FTBarStaByGen] [varchar](1) NULL,
	[FTPlcCode] [varchar](5) NULL,
	[FNPldSeq] [bigint] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
 CONSTRAINT [PK_TCNMPdtBarTmp_1] PRIMARY KEY CLUSTERED 
(
	[FTPdtCode] ASC,
	[FTBarCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNMPdtPackSizeTmp]    Script Date: 5/8/2563 12:32:27 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNMPdtPackSizeTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNMPdtPackSizeTmp](
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTPunCode] [varchar](5) NOT NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FCPdtPriceRET] [numeric](18, 4) NULL,
	[FCPdtPriceWHS] [numeric](18, 4) NULL,
	[FCPdtPriceNET] [numeric](18, 4) NULL,
	[FTPdtGrade] [varchar](50) NULL,
	[FCPdtWeight] [numeric](18, 4) NULL,
	[FTClrCode] [varchar](5) NULL,
	[FTPszCode] [varchar](5) NULL,
	[FTPdtUnitDim] [varchar](50) NULL,
	[FTPdtPkgDim] [varchar](50) NULL,
	[FTPdtStaAlwPick] [varchar](1) NULL,
	[FTPdtStaAlwPoHQ] [varchar](1) NULL,
	[FTPdtStaAlwBuy] [varchar](1) NULL,
	[FTPdtStaAlwSale] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
 CONSTRAINT [PK_TCNMPdtPackSizeTmp] PRIMARY KEY CLUSTERED 
(
	[FTPdtCode] ASC,
	[FTPunCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNMPdtTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNMPdtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNMPdtTmp](
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTPdtStkControl] [varchar](1) NULL,
	[FTPdtGrpControl] [varchar](1) NULL,
	[FTPdtForSystem] [varchar](30) NULL,
	[FCPdtQtyOrdBuy] [numeric](18, 4) NULL,
	[FCPdtCostDef] [numeric](18, 4) NULL,
	[FCPdtCostOth] [numeric](18, 4) NULL,
	[FCPdtCostStd] [numeric](18, 4) NULL,
	[FCPdtMin] [numeric](18, 4) NULL,
	[FCPdtMax] [numeric](18, 4) NULL,
	[FTPdtPoint] [varchar](1) NULL,
	[FCPdtPointTime] [numeric](18, 4) NULL,
	[FTPdtType] [varchar](1) NULL,
	[FTPdtSaleType] [varchar](1) NULL,
	[FTPdtSetOrSN] [varchar](1) NULL,
	[FTPdtStaSetPri] [varchar](1) NULL,
	[FTPdtStaSetShwDT] [varchar](1) NULL,
	[FTPdtStaAlwDis] [varchar](1) NULL,
	[FTPdtStaAlwReturn] [varchar](1) NULL,
	[FTPdtStaVatBuy] [varchar](1) NULL,
	[FTPdtStaVat] [varchar](1) NULL,
	[FTPdtStaActive] [varchar](1) NULL,
	[FTPdtStaAlwReCalOpt] [varchar](1) NULL,
	[FTPdtStaCsm] [varchar](1) NULL,
	[FTTcgCode] [varchar](5) NULL,
	[FTPgpChain] [varchar](30) NULL,
	[FTPtyCode] [varchar](5) NULL,
	[FTPbnCode] [varchar](5) NULL,
	[FTPmoCode] [varchar](5) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FTEvhCode] [varchar](5) NULL,
	[FDPdtSaleStart] [datetime] NULL,
	[FDPdtSaleStop] [datetime] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
 CONSTRAINT [PK_TCNMPdtTmp_1] PRIMARY KEY CLUSTERED 
(
	[FTPdtCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNMTaxAddress_LTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNMTaxAddress_LTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNMTaxAddress_LTmp](
	[FTAddTaxNo] [varchar](20) NOT NULL,
	[FNLngID] [bigint] NOT NULL,
	[FNAddSeqNo] [bigint] IDENTITY(1,1) NOT NULL,
	[FTAddRefNo] [varchar](20) NULL,
	[FTAddName] [varchar](200) NULL,
	[FTAddRmk] [varchar](200) NULL,
	[FTAddCountry] [varchar](100) NULL,
	[FTAreCode] [varchar](5) NULL,
	[FTZneCode] [varchar](30) NULL,
	[FTAddVersion] [varchar](1) NULL,
	[FTAddV1No] [varchar](30) NULL,
	[FTAddV1Soi] [varchar](30) NULL,
	[FTAddV1Village] [varchar](70) NULL,
	[FTAddV1Road] [varchar](30) NULL,
	[FTAddV1SubDist] [varchar](30) NULL,
	[FTAddV1DstCode] [varchar](5) NULL,
	[FTAddV1PvnCode] [varchar](5) NULL,
	[FTAddV1PostCode] [varchar](5) NULL,
	[FTAddV2Desc1] [varchar](255) NULL,
	[FTAddV2Desc2] [varchar](255) NULL,
	[FTAddWebsite] [varchar](200) NULL,
	[FTAddLongitude] [varchar](50) NULL,
	[FTAddLatitude] [varchar](50) NULL,
	[FTAddStaBusiness] [varchar](1) NULL,
	[FTAddStaHQ] [varchar](1) NULL,
	[FTAddStaBchCode] [varchar](5) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTAddTel] [varchar](50) NULL,
	[FTAddFax] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTDocDTDisTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTDocDTDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTDocDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NOT NULL,
	[FNXtdSeqNo] [bigint] NOT NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDXtdDateIns] [datetime] NOT NULL,
	[FNXtdStaDis] [bigint] NULL,
	[FTXtdDisChgType] [varchar](10) NULL,
	[FCXtdNet] [numeric](18, 4) NULL,
	[FCXtdValue] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
 CONSTRAINT [PK_TCNTDocDTDisTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTXthDocNo] ASC,
	[FNXtdSeqNo] ASC,
	[FTSessionID] ASC,
	[FDXtdDateIns] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTDocDTTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTDocDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTDocDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NULL,
	[FNXtdSeqNo] [bigint] NULL,
	[FTXthDocKey] [varchar](20) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXtdPdtName] [varchar](255) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FCXtdFactor] [numeric](18, 4) NULL,
	[FTXtdBarCode] [varchar](25) NULL,
	[FTXtdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXtdVatRate] [numeric](18, 4) NULL,
	[FCXtdQty] [numeric](18, 4) NULL,
	[FCXtdQtyAll] [numeric](18, 4) NULL,
	[FCXtdSetPrice] [numeric](18, 4) NULL,
	[FCXtdAmt] [numeric](18, 4) NULL,
	[FCXtdVat] [numeric](18, 4) NULL,
	[FCXtdVatable] [numeric](18, 4) NULL,
	[FCXtdNet] [numeric](18, 4) NULL,
	[FCXtdCostIn] [numeric](18, 4) NULL,
	[FCXtdCostEx] [numeric](18, 4) NULL,
	[FTXtdStaPrcStk] [varchar](1) NULL,
	[FNXtdPdtLevel] [bigint] NULL,
	[FTXtdPdtParent] [varchar](20) NULL,
	[FCXtdQtySet] [numeric](18, 4) NULL,
	[FTXtdPdtStaSet] [varchar](1) NULL,
	[FTXtdRmk] [varchar](200) NULL,
	[FTXtdBchRef] [varchar](5) NULL,
	[FTXtdDocNoRef] [varchar](20) NULL,
	[FCXtdPriceRet] [numeric](18, 4) NULL,
	[FCXtdPriceWhs] [numeric](18, 4) NULL,
	[FCXtdPriceNet] [numeric](18, 4) NULL,
	[FTXtdShpTo] [varchar](5) NULL,
	[FTXtdBchTo] [varchar](5) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXtdSaleType] [varchar](1) NULL,
	[FCXtdSalePrice] [numeric](18, 4) NULL,
	[FCXtdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
	[FCXtdDis] [numeric](18, 4) NULL,
	[FCXtdChg] [numeric](18, 4) NULL,
	[FCXtdNetAfHD] [numeric](18, 4) NULL,
	[FCXtdWhtAmt] [numeric](18, 4) NULL,
	[FTXtdWhtCode] [varchar](5) NULL,
	[FCXtdWhtRate] [numeric](18, 4) NULL,
	[FCXtdQtyLef] [numeric](18, 4) NULL,
	[FCXtdQtyRfn] [numeric](18, 4) NULL,
	[FTXtdStaAlwDis] [varchar](1) NULL,
	[FTPdtName] [varchar](50) NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FTPgpChain] [varchar](50) NULL,
	[FNAjdLayRow] [numeric](18, 2) NULL,
	[FNAjdLayCol] [numeric](18, 2) NULL,
	[FCAjdWahB4Adj] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC1] [numeric](18, 4) NULL,
	[FDAjdDateTimeC1] [datetime] NULL,
	[FCAjdUnitQtyC1] [numeric](18, 4) NULL,
	[FCAjdQtyAllC1] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC2] [numeric](18, 4) NULL,
	[FDAjdDateTimeC2] [datetime] NULL,
	[FCAjdUnitQtyC2] [numeric](18, 4) NULL,
	[FCAjdQtyAllC2] [numeric](18, 4) NULL,
	[FCAjdUnitQty] [numeric](18, 4) NULL,
	[FDAjdDateTime] [datetime] NULL,
	[FCAjdQtyAll] [numeric](18, 4) NULL,
	[FCAjdQtyAllDiff] [numeric](18, 4) NULL,
	[FTAjdPlcCode] [varchar](5) NULL,
	[FTSessionID] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FNLayRowForTWXVD] [bigint] NULL,
	[FNLayColForTWXVD] [bigint] NULL,
	[FCLayColQtyMaxForTWXVD] [numeric](18, 4) NULL,
	[FCStkQty] [numeric](18, 4) NULL,
	[FCMaxTransferForTWXVD] [numeric](18, 4) NULL,
	[FCUserInPutTransferForTWXVD] [numeric](18, 4) NULL,
	[FTMerCodeForADJPL] [varchar](5) NULL,
	[FTShpCodeForADJPL] [varchar](5) NULL,
	[FTPzeCodeForADJPL] [varchar](5) NULL,
	[FTRthCodeForADJPL] [varchar](5) NULL,
	[FTSizNameForADJPL] [varchar](40) NULL,
	[FTBchCodeForADJPL] [varchar](5) NULL,
	[FNLayRowForADJSTKVD] [bigint] NULL,
	[FNLayColForADJSTKVD] [bigint] NULL,
	[FCLayColQtyMaxForADJSTKVD] [numeric](18, 4) NULL,
	[FCUserInPutForADJSTKVD] [numeric](18, 4) NULL,
	[FCDateTimeInputForADJSTKVD] [datetime] NULL,
	[FNCabSeqForTWXVD] [int] NULL,
	[FTCabNameForTWXVD] [varchar](255) NULL,
	[FTXthWhFrmForTWXVD] [varchar](5) NULL,
	[FTXthWhToForTWXVD] [varchar](5) NULL,
	[FTBddTypeForDeposit] [varchar](255) NULL,
	[FTBddRefNoForDeposit] [varchar](20) NULL,
	[FDBddRefDateForDeposit] [datetime] NULL,
	[FCBddRefAmtForDeposit] [numeric](18, 4) NULL,
	[FTBddRefBnkNameForDeposit] [varchar](255) NULL,
	[FTTmpStatus] [varchar](1) NULL,
	[FTTmpRemark] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTDocHDDisTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTDocHDDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTDocHDDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NOT NULL,
	[FDXtdDateIns] [datetime] NOT NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
	[FTXtdDisChgType] [varchar](10) NULL,
	[FCXtdTotalAfDisChg] [numeric](18, 4) NULL,
	[FCXtdTotalB4DisChg] [numeric](18, 4) NULL,
	[FCXtdDisChg] [numeric](18, 4) NULL,
	[FCXtdAmt] [numeric](18, 4) NULL,
	[FTSessionID] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](255) NULL,
	[FTCreateBy] [varchar](255) NULL,
 CONSTRAINT [PK_TCNTDocHDDisTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTXthDocNo] ASC,
	[FDXtdDateIns] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTImpMasTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTImpMasTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTImpMasTmp](
	[FTTmpTableKey] [varchar](50) NULL,
	[FTSessionID] [varchar](255) NULL,
	[FNTmpSeq] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTAgnCode] [varchar](10) NULL,
	[FTPplCode] [varchar](5) NULL,
	[FTTmpStatus] [varchar](1) NULL,
	[FTTmpRemark] [varchar](max) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTUsrName] [varchar](100) NULL,
	[FTRolCode] [varchar](5) NULL,
	[FTMerCode] [varchar](10) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTUsrTel] [varchar](50) NULL,
	[FTUsrEmail] [varchar](50) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPosName] [varchar](100) NULL,
	[FTPosType] [varchar](30) NULL,
	[FTPosRegNo] [varchar](20) NULL,
	[FTTcgCode] [varchar](5) NULL,
	[FTTcgName] [varchar](100) NULL,
	[FTPbnCode] [varchar](5) NULL,
	[FTPbnName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](100) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FTPdtNameABB] [varchar](50) NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FTBarCode] [varchar](25) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTMemAmtActiveTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTMemAmtActiveTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTMemAmtActiveTmp](
	[FTCgpCode] [varchar](5) NOT NULL,
	[FTMemCode] [varchar](20) NOT NULL,
	[FCTxnBuyTotal] [numeric](18, 4) NULL,
	[FDTxnBuyLast] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTMemPntActiveTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTMemPntActiveTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTMemPntActiveTmp](
	[FTCgpCode] [varchar](5) NOT NULL,
	[FTMemCode] [varchar](20) NOT NULL,
	[FCTxnPntQty] [numeric](18, 4) NULL,
	[FCTxnPnt2ExpYear] [numeric](18, 4) NULL,
	[FDTxnPntLast] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTMemPntSplActiveTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTMemPntSplActiveTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTMemPntSplActiveTmp](
	[FTCgpCode] [varchar](5) NOT NULL,
	[FTMemCode] [varchar](20) NOT NULL,
	[FTTxnRefSpl] [varchar](20) NOT NULL,
	[FDTxnPntStart] [datetime] NOT NULL,
	[FCTxnPntQty] [numeric](18, 4) NULL,
	[FDTxnPntLast] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTMemTxnRedeemTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTMemTxnRedeemTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTMemTxnRedeemTmp](
	[FTCgpCode] [varchar](5) NOT NULL,
	[FTMemCode] [varchar](20) NOT NULL,
	[FTRedRefDoc] [varchar](30) NOT NULL,
	[FTRedRefInt] [varchar](30) NOT NULL,
	[FTRedRefSpl] [varchar](20) NOT NULL,
	[FDRedRefDate] [datetime] NULL,
	[FCRedPntB4Bill] [numeric](18, 4) NULL,
	[FCRedPntBillQty] [numeric](18, 4) NULL,
	[FTRedPntStaClosed] [varchar](1) NULL,
	[FDRedPntStart] [datetime] NULL,
	[FDRedPntExpired] [datetime] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTRedPntDocType] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTMemTxnSaleTmp]    Script Date: 5/8/2563 12:32:28 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTMemTxnSaleTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTMemTxnSaleTmp](
	[FTCgpCode] [varchar](5) NOT NULL,
	[FTMemCode] [varchar](20) NOT NULL,
	[FTTxnRefDoc] [varchar](30) NOT NULL,
	[FTTxnRefInt] [varchar](30) NOT NULL,
	[FTTxnRefSpl] [varchar](20) NOT NULL,
	[FDTxnRefDate] [datetime] NULL,
	[FCTxnRefGrand] [numeric](18, 4) NULL,
	[FCTxnPntOptBuyAmt] [numeric](18, 4) NULL,
	[FCTxnPntOptGetQty] [numeric](18, 4) NULL,
	[FCTxnPntB4Bill] [numeric](18, 4) NULL,
	[FDTxnPntStart] [datetime] NULL,
	[FDTxnPntExpired] [datetime] NULL,
	[FCTxnPntBillQty] [numeric](18, 4) NULL,
	[FCTxnPntUsed] [numeric](18, 4) NULL,
	[FCTxnPntExpired] [numeric](18, 4) NULL,
	[FTTxnPntStaClosed] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTTxnPntDocType] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtAdjPriDT_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtAdjPriDT_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtAdjPriDT_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXphDocNo] [varchar](20) NOT NULL,
	[FNXpdSeq] [bigint] NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FCXpdPriceRet] [numeric](18, 4) NULL,
	[FCXpdPriceWhs] [numeric](18, 4) NULL,
	[FCXpdPriceNet] [numeric](18, 4) NULL,
	[FTXpdShpTo] [varchar](5) NULL,
	[FTXpdBchTo] [varchar](5) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtAdjPriHD_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtAdjPriHD_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtAdjPriHD_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXphDocNo] [varchar](20) NOT NULL,
	[FTXphDocType] [varchar](1) NULL,
	[FTXphStaAdj] [varchar](1) NULL,
	[FDXphDocDate] [datetime] NULL,
	[FTXphDocTime] [varchar](8) NULL,
	[FTXphRefInt] [varchar](20) NULL,
	[FDXphRefIntDate] [datetime] NULL,
	[FTXphName] [varchar](200) NULL,
	[FTPplCode] [varchar](20) NULL,
	[FTAggCode] [varchar](5) NULL,
	[FTMerCode] [varchar](10) NULL,
	[FDXphDStart] [datetime] NULL,
	[FTXphTStart] [varchar](10) NULL,
	[FDXphDStop] [datetime] NULL,
	[FTXphTStop] [varchar](10) NULL,
	[FTXphPriType] [varchar](1) NULL,
	[FTXphStaDoc] [varchar](1) NULL,
	[FTXphStaApv] [varchar](1) NULL,
	[FTXphStaPrcDoc] [varchar](1) NULL,
	[FNXphStaDocAct] [int] NULL,
	[FTXphStaDelMQ] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTXphUsrApv] [varchar](20) NULL,
	[FTXphZneTo] [varchar](30) NULL,
	[FTXphBchTo] [varchar](5) NULL,
	[FTXphRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtCB_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtCB_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtCB_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FNPbySeq] [bigint] NOT NULL,
	[FTPmdGrpName] [varchar](50) NULL,
	[FTPbyStaCalSum] [varchar](1) NULL,
	[FTPbyStaBuyCond] [varchar](1) NULL,
	[FTPbyStaPdtDT] [varchar](1) NULL,
	[FCPbyPerAvgDis] [numeric](18, 4) NULL,
	[FCPbyMinSetPri] [numeric](18, 4) NULL,
	[FCPbyMinValue] [numeric](18, 4) NULL,
	[FCPbyMaxValue] [numeric](18, 4) NULL,
	[FTPbyMinTime] [varchar](10) NULL,
	[FTPbyMaxTime] [varchar](10) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtCG_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtCG_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtCG_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FNPgtSeq] [bigint] NOT NULL,
	[FTPmdGrpName] [varchar](50) NULL,
	[FTPgtStaGetEffect] [varchar](1) NULL,
	[FTPgtStaGetType] [varchar](1) NULL,
	[FTPgtStaGetPdt] [varchar](1) NULL,
	[FTRolCode] [varchar](5) NULL,
	[FCPgtGetvalue] [numeric](18, 4) NULL,
	[FTPplCode] [varchar](20) NULL,
	[FTPplName] [varchar](255) NULL,
	[FCPgtGetQty] [numeric](18, 4) NULL,
	[FCPgtPerAvgDis] [numeric](18, 4) NULL,
	[FTPgtStaPoint] [varchar](1) NULL,
	[FTPgtStaPntCalType] [varchar](1) NULL,
	[FTPgtStaPdtDT] [varchar](1) NULL,
	[FNPgtPntGet] [bigint] NULL,
	[FNPgtPntBuy] [bigint] NULL,
	[FTPgtStaCoupon] [varchar](1) NULL,
	[FTPgtCpnText] [varchar](50) NULL,
	[FTCphDocNo] [varchar](20) NULL,
	[FTCphDocName] [varchar](255) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtDT_Bin]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtDT_Bin]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtDT_Bin](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FNPmdSeq] [bigint] NOT NULL,
	[FTPmdStaType] [varchar](1) NULL,
	[FTPmdStaListType] [varchar](1) NULL,
	[FTPmdGrpName] [varchar](50) NULL,
	[FTPmdRefCode] [varchar](20) NULL,
	[FTPmdRefName] [varchar](255) NULL,
	[FTPmdSubRef] [varchar](5) NULL,
	[FTPmdSubRefName] [varchar](255) NULL,
	[FTPmdBarCode] [varchar](25) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtDT_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtDT_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtDT_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FNPmdSeq] [bigint] NOT NULL,
	[FTPmdStaType] [varchar](1) NULL,
	[FTPmdStaListType] [varchar](1) NULL,
	[FTPmdGrpName] [varchar](50) NULL,
	[FTPmdRefCode] [varchar](20) NULL,
	[FTPmdRefName] [varchar](255) NULL,
	[FTPmdSubRef] [varchar](5) NULL,
	[FTPmdSubRefName] [varchar](255) NULL,
	[FTPmdBarCode] [varchar](25) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtHDBch_Tmp]    Script Date: 5/8/2563 12:32:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtHDBch_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtHDBch_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FTPmhBchTo] [varchar](5) NOT NULL,
	[FTPmhMerTo] [varchar](10) NOT NULL,
	[FTPmhShpTo] [varchar](5) NOT NULL,
	[FTPmhBchToName] [varchar](50) NULL,
	[FTPmhMerToName] [varchar](50) NULL,
	[FTPmhShpToName] [varchar](50) NULL,
	[FTPmhStaType] [varchar](1) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtHDCstPri_Tmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtHDCstPri_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtHDCstPri_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FTPplCode] [varchar](20) NOT NULL,
	[FTPplName] [varchar](50) NULL,
	[FTPmhStaType] [varchar](1) NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDCreateOn] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPmtHDTmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPmtHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPmtHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FDPmhDStart] [datetime] NULL,
	[FDPmhDStop] [datetime] NULL,
	[FDPmhTStart] [datetime] NULL,
	[FDPmhTStop] [datetime] NULL,
	[FTPmhStaLimitCst] [varchar](1) NULL,
	[FTPmhStaClosed] [varchar](1) NULL,
	[FTPmhStaDoc] [varchar](1) NULL,
	[FTPmhStaApv] [varchar](1) NULL,
	[FTPmhStaPrcDoc] [varchar](1) NULL,
	[FNPmhStaDocAct] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTPmhUsrApv] [varchar](20) NULL,
	[FTPmhStaOnTopPmt] [varchar](1) NULL,
	[FTPmhStaAlwCalPntStd] [varchar](1) NULL,
	[FTPmhStaRcvFree] [varchar](1) NULL,
	[FTPmhStaLimitGet] [varchar](1) NULL,
	[FTPmhStaLimitTime] [varchar](1) NULL,
	[FTPmhStaGetPdt] [varchar](1) NULL,
	[FTPmhRefAccCode] [varchar](20) NULL,
	[FTPmhStaPdtExc] [varchar](1) NULL,
	[FTRolCode] [varchar](5) NULL,
	[FNPmhLimitQty] [bigint] NULL,
	[FTPmhStaChkLimit] [varchar](1) NULL,
	[FTPmhStaChkCst] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPrice4PDT_Tmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPrice4PDT_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPrice4PDT_Tmp](
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTPunCode] [varchar](5) NOT NULL,
	[FDPghDStart] [datetime] NOT NULL,
	[FTPghTStart] [varchar](10) NOT NULL,
	[FTPplCode] [varchar](20) NULL,
	[FDPghDStop] [datetime] NULL,
	[FTPghTStop] [varchar](10) NULL,
	[FTPghDocNo] [varchar](20) NULL,
	[FTPghDocType] [varchar](1) NULL,
	[FTPghStaAdj] [varchar](1) NULL,
	[FCPgdPriceRet] [numeric](18, 4) NULL,
	[FCPgdPriceWhs] [numeric](18, 4) NULL,
	[FCPgdPriceNet] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TCNTPdtPrice4PDT_Tmp1]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TCNTPdtPrice4PDT_Tmp1]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TCNTPdtPrice4PDT_Tmp1](
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTPunCode] [varchar](5) NOT NULL,
	[FDPghDStart] [datetime] NOT NULL,
	[FTPghTStart] [varchar](10) NOT NULL,
	[FTPplCode] [varchar](20) NULL,
	[FDPghDStop] [datetime] NULL,
	[FTPghTStop] [varchar](10) NULL,
	[FTPghDocNo] [varchar](20) NULL,
	[FTPghDocType] [varchar](1) NULL,
	[FTPghStaAdj] [varchar](1) NULL,
	[FCPgdPriceRet] [numeric](18, 4) NULL,
	[FCPgdPriceWhs] [numeric](18, 4) NULL,
	[FCPgdPriceNet] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TemImport]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TemImport]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TemImport](
	[FTSysBCH] [varchar](50) NULL,
	[FTSysWah] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TFCTRptBalCrdTemp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFCTRptBalCrdTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFCTRptBalCrdTemp](
	[FTComName] [varchar](100) NULL,
	[FTRptName] [varchar](100) NULL,
	[FTCrdStaActive] [varchar](1) NULL,
	[FTCrdStaActiveTH] [varchar](100) NULL,
	[FTCrdStaActiveEN] [varchar](100) NULL,
	[FNCrdBalanceQty] [numeric](18, 4) NULL,
	[FCCrdBalanceValue] [numeric](18, 4) NULL,
	[FNCrdInOutAdjQty] [numeric](18, 4) NULL,
	[FCCrdInOutAdjValue] [numeric](18, 4) NULL,
	[FNCrdSaleQty] [numeric](18, 4) NULL,
	[FCCrdSaleValue] [numeric](18, 4) NULL,
	[FNCrdRetQty] [numeric](18, 4) NULL,
	[FNCrdRetValue] [numeric](18, 4) NULL,
	[FNCrdSpendQty] [numeric](18, 4) NULL,
	[FCCrdSpendValue] [numeric](18, 4) NULL,
	[FNCrdExpireQty] [numeric](18, 4) NULL,
	[FCCrdExpireValue] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TFCTRptCrdAnalysisTmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFCTRptCrdAnalysisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFCTRptCrdAnalysisTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FTComName] [varchar](100) NOT NULL,
	[FTRptName] [varchar](100) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTTxnDocNoRef] [varchar](25) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTTxnPosCode] [varchar](20) NULL,
	[FTTxnDocRefNo] [varchar](50) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTDptName] [varchar](255) NULL,
	[FTPosType] [varchar](255) NULL,
	[FNTxnID] [int] NULL,
	[FNTxnIDRef] [int] NULL,
	[FTTxnDocType] [varchar](10) NULL,
	[FTTxnStaOffLine] [varchar](1) NULL,
	[FTCrdCode] [varchar](20) NULL,
	[FTCrdName] [varchar](255) NULL,
	[FTCtyCode] [varchar](20) NULL,
	[FTCtyName] [varchar](255) NULL,
	[FTCrdHolderID] [varchar](20) NULL,
	[FTCrdStaActive] [varchar](1) NULL,
	[FDTxnDocDate] [datetime] NULL,
	[FDCrdExpireDate] [datetime] NULL,
	[FTBchCodeRef] [varchar](5) NULL,
	[FCTxnValue] [numeric](18, 4) NULL,
	[FCTxnCrdValue] [numeric](18, 4) NULL,
	[FCTxnCrdAftTrans] [numeric](18, 4) NULL,
	[FCCrdBalance] [numeric](18, 4) NULL,
	[CardExpValue] [numeric](18, 4) NULL,
	[FTTxnDocTypeName] [varchar](255) NULL,
	[FDCrdStartDate] [datetime] NULL,
	[FCCrdValue] [numeric](18, 4) NULL,
	[FDDocDate] [datetime] NULL,
	[FTCvdOldCode] [varchar](20) NULL,
	[FTOldCtyName] [varchar](255) NULL,
	[FTCvdNewCode] [varchar](20) NULL,
	[FTNewCtyName] [varchar](255) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FCOldCrdValue] [numeric](18, 4) NULL,
	[FCNewCrdValue] [numeric](18, 4) NULL,
	[FTCdtRmk] [varchar](255) NULL,
	[TimesUsage] [numeric](18, 0) NULL,
	[FTCrdRemark] [varchar](255) NULL,
	[FTTxnYear] [varchar](20) NULL,
	[FNTxnCountCard] [int] NULL,
	[FTCrdStaType] [varchar](1) NULL,
	[FNLngID] [int] NULL,
	[FTUsrCreate] [varchar](20) NULL,
	[FTDocLastUpdBy] [varchar](20) NULL,
	[FTDocCreateBy] [varchar](20) NULL,
	[FCTxnValAftTrans] [numeric](18, 4) NULL,
	[FCTxnSaleVal] [numeric](18, 4) NULL,
	[FCTxnCancelSaleVal] [numeric](18, 4) NULL,
	[FCTxnSaleNet] [numeric](18, 4) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFCTRptCrdAnalysisTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TFCTRptCrdAnalysisTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TFNTCrdImpTmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFNTCrdImpTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFNTCrdImpTmp](
	[FTBchCode] [varchar](5) NULL,
	[FTCihDocNo] [varchar](20) NULL,
	[FNCidSeqNo] [bigint] NULL,
	[FTCidCrdCode] [varchar](30) NULL,
	[FCCvdOldBal] [numeric](18, 4) NULL,
	[FTCidCrdRef] [varchar](30) NULL,
	[FTCtyCode] [varchar](5) NULL,
	[FTCidCrdName] [varchar](200) NULL,
	[FTCidCrdHolderID] [varchar](30) NULL,
	[FTCidCrdDepart] [varchar](100) NULL,
	[FTCidStaCrd] [varchar](30) NULL,
	[FTCidStaPrc] [varchar](30) NULL,
	[FTCidRmk] [varchar](255) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTSessionID] [varchar](255) NULL
) ON [AdaPos5_FN_Filegroups]
END
GO
/****** Object:  Table [dbo].[TFNTCrdShiftTmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFNTCrdShiftTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFNTCrdShiftTmp](
	[FTBchCode] [varchar](5) NULL,
	[FTCshDocNo] [varchar](20) NULL,
	[FNCsdSeqNo] [bigint] NULL,
	[FTCrdCode] [varchar](30) NULL,
	[FCCtdCardBal] [numeric](18, 4) NULL,
	[FTCrdStaCrd] [varchar](30) NULL,
	[FTCrdStaPrc] [varchar](30) NULL,
	[FTCrdRmk] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTsessionID] [varchar](255) NULL
) ON [AdaPos5_FN_Filegroups]
END
GO
/****** Object:  Table [dbo].[TFNTCrdTopUpTmp]    Script Date: 5/8/2563 12:32:30 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFNTCrdTopUpTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFNTCrdTopUpTmp](
	[FTBchCode] [varchar](5) NULL,
	[FTCthDocNo] [varchar](20) NULL,
	[FNCtdSeqNo] [bigint] NULL,
	[FTCrdCode] [varchar](30) NULL,
	[FCCtdCrdTP] [numeric](18, 4) NULL,
	[FTCtdStaCrd] [varchar](30) NULL,
	[FTCtdStaPrc] [varchar](30) NULL,
	[FTCtdRmk] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTSessionID] [varchar](255) NULL
) ON [AdaPos5_FN_Filegroups]
END
GO
/****** Object:  Table [dbo].[TFNTCrdVoidTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TFNTCrdVoidTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TFNTCrdVoidTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTCvhDocNo] [varchar](20) NOT NULL,
	[FNCvdSeqNo] [bigint] NOT NULL,
	[FTCvdOldCode] [varchar](30) NULL,
	[FCCvdOldBal] [numeric](18, 4) NULL,
	[FTCvdNewCode] [varchar](30) NULL,
	[FTCvdStaCrd] [varchar](30) NULL,
	[FTCvdStaPrc] [varchar](30) NULL,
	[FTCvdRmk] [varchar](255) NULL,
	[FTRsnCode] [varchar](5) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTSessionID] [varchar](255) NULL,
 CONSTRAINT [PK_TFNTCrdVoidTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTCvhDocNo] ASC,
	[FNCvdSeqNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_FN_Filegroups]
) ON [AdaPos5_FN_Filegroups]
END
GO
/****** Object:  Table [dbo].[TPSTCouponHD_Tmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTCouponHD_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTCouponHD_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTCphDocNo] [varchar](20) NOT NULL,
	[FTCptCode] [varchar](30) NOT NULL,
	[FTCphDisType] [varchar](1) NULL,
	[FTCpdBarCpn] [varchar](20) NOT NULL,
	[FNCpdAlwMaxUse] [bigint] NULL,
	[FTStaChkMember] [bigint] NULL,
	[FNCphLimitUsePerBill] [bigint] NULL,
	[FCCphDisValue] [numeric](18, 4) NULL,
	[FCCphMinValue] [numeric](18, 4) NULL,
	[FTCphStaClosed] [varchar](255) NULL,
	[FTCphStaOnTopPmt] [varchar](1) NULL,
	[FTCphTimeStart] [varchar](8) NULL,
	[FTCphTimeStop] [varchar](8) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTCouponHDTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTCouponHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTCouponHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTCphDocNo] [varchar](20) NOT NULL,
	[FTCptCode] [varchar](30) NOT NULL,
	[FTCphDisType] [varchar](1) NULL,
	[FTCpdBarCpn] [varchar](20) NOT NULL,
	[FNCpdAlwMaxUse] [bigint] NULL,
	[FNStaChkMember] [bigint] NULL,
	[FNCphLimitUsePerBill] [bigint] NULL,
	[FCCphDisValue] [numeric](18, 4) NULL,
	[FTCphStaClosed] [varchar](255) NULL,
	[FTCphStaOnTopPmt] [varchar](1) NULL,
	[FTCphTimeStart] [varchar](8) NULL,
	[FTCphTimeStop] [varchar](8) NULL,
 CONSTRAINT [PK_TPSTCouponHDTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTCphDocNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTRedeemHD_Tmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTRedeemHD_Tmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTRedeemHD_Tmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTRdhDocNo] [varchar](20) NOT NULL,
	[FTTmpDocType] [varchar](1) NULL,
	[FTTmpCalType] [varchar](1) NULL,
	[FDTmpDStart] [datetime] NULL,
	[FDTmpDStop] [datetime] NULL,
	[FDTmpTStart] [datetime] NULL,
	[FDTmpTStop] [datetime] NULL,
	[FTTmpStaOnTopPmt] [bigint] NULL,
	[FNTmpLimitPerBill] [varchar](1) NULL,
	[FTTmpGrpName] [varchar](50) NULL,
	[FTTmpPdtCode] [varchar](20) NULL,
	[FTTmpPunCode] [varchar](5) NULL,
	[FTTmpPdtStaType] [varchar](1) NULL,
	[FTTmpRedeemCode] [varchar](30) NULL,
	[FCTmpUsePoint] [numeric](18, 4) NULL,
	[FCTmpUseMny] [numeric](18, 4) NULL,
	[FCTmpMinTotBill] [numeric](18, 4) NULL,
	[FTTmpBchTo] [varchar](5) NULL,
	[FTTmpBchStaType] [varchar](1) NULL,
	[FTTmpPplCode] [varchar](20) NULL,
	[FTTmpPplStaType] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTRedeemHDTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTRedeemHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTRedeemHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTRdhDocNo] [varchar](20) NOT NULL,
	[FTRdhDocType] [varchar](1) NULL,
	[FTRdhCalType] [varchar](1) NULL,
	[FTPplCode] [varchar](20) NOT NULL,
	[FDRdhDStart] [datetime] NULL,
	[FDRdhDStop] [datetime] NULL,
	[FDRdhTStart] [datetime] NULL,
	[FDRdhTStop] [datetime] NULL,
	[FTRdhStaOnTopPmt] [varchar](1) NULL,
	[FTRddGrpName] [varchar](50) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTRddStaType] [varchar](1) NULL,
	[FTRdcRefCode] [varchar](30) NULL,
	[FCRdcUsePoint] [numeric](18, 4) NULL,
	[FCRdcUseMny] [numeric](18, 4) NULL,
	[FCRdcMinTotBill] [numeric](18, 4) NULL,
	[FTRdhBchTo] [varchar](5) NOT NULL,
	[FTRdhStaType] [varchar](1) NULL,
 CONSTRAINT [PK_TPSTRedeemHDTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTRdhDocNo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalDTDisTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalDTDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FDXddDateIns] [datetime] NOT NULL,
	[FTXddRefCode] [varchar](20) NULL,
	[FNXddStaDis] [int] NULL,
	[FTXddDisChgTxt] [varchar](20) NULL,
	[FTXddDisChgType] [varchar](10) NULL,
	[FCXddNet] [numeric](18, 4) NULL,
	[FCXddValue] [numeric](18, 4) NULL,
	[FTDisCode] [varchar](5) NOT NULL,
	[FTRsnCode] [varchar](5) NOT NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalDTPmtTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalDTPmtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalDTPmtTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTPmhCode] [varchar](20) NOT NULL,
	[FTXdpGrpName] [varchar](50) NOT NULL,
	[FTXsdBarCode] [varchar](25) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FCXdpQtyAll] [numeric](18, 4) NULL,
	[FCXdpNet] [numeric](18, 4) NULL,
	[FCXdpSetPrice] [numeric](18, 4) NULL,
	[FCXdpGetQtyDiv] [numeric](18, 4) NULL,
	[FCXdpGetCond] [numeric](18, 4) NULL,
	[FCXdpGetValue] [numeric](18, 4) NULL,
	[FCXdpDis] [numeric](18, 4) NULL,
	[FCXdpDisAvg] [numeric](18, 4) NULL,
	[FCXdpPoint] [numeric](18, 4) NULL,
	[FTXdpStaExceptPmt] [varchar](1) NULL,
	[FTXdpStaRcv] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalDTTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXsdPdtName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FCXsdFactor] [numeric](18, 4) NULL,
	[FTXsdBarCode] [varchar](25) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXsdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FTPplCode] [varchar](20) NULL,
	[FCXsdVatRate] [numeric](18, 4) NULL,
	[FTXsdSaleType] [varchar](1) NULL,
	[FCXsdSalePrice] [numeric](18, 4) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdQtyAll] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXsdDisChgTxt] [varchar](20) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdChg] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdWhtAmt] [numeric](18, 4) NULL,
	[FTXsdWhtCode] [varchar](5) NULL,
	[FCXsdWhtRate] [numeric](18, 4) NULL,
	[FCXsdCostIn] [numeric](18, 4) NULL,
	[FCXsdCostEx] [numeric](18, 4) NULL,
	[FTXsdStaPdt] [varchar](1) NULL,
	[FCXsdQtyLef] [numeric](18, 4) NULL,
	[FCXsdQtyRfn] [numeric](18, 4) NULL,
	[FTXsdStaPrcStk] [varchar](1) NULL,
	[FTXsdStaAlwDis] [varchar](1) NULL,
	[FNXsdPdtLevel] [int] NULL,
	[FTXsdPdtParent] [varchar](20) NULL,
	[FCXsdQtySet] [numeric](18, 4) NULL,
	[FTPdtStaSet] [varchar](1) NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalHDCstTmp]    Script Date: 5/8/2563 12:32:31 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalHDCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalHDCstTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCstTel] [varchar](20) NULL,
	[FTXshCstName] [varchar](200) NULL,
	[FTXshCardNo] [varchar](20) NULL,
	[FNXshCrTerm] [int] NULL,
	[FDXshDueDate] [datetime] NULL,
	[FDXshBillDue] [datetime] NULL,
	[FTXshCtrName] [varchar](100) NULL,
	[FDXshTnfDate] [datetime] NULL,
	[FTXshRefTnfID] [varchar](20) NULL,
	[FNXshAddrShip] [bigint] NULL,
	[FNXshAddrTax] [bigint] NULL,
	[FCXshCstPnt] [numeric](18, 4) NULL,
	[FCXshCstPntPmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalHDDisTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalHDDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalHDDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXhdDateIns] [datetime] NOT NULL,
	[FTXhdRefCode] [varchar](20) NULL,
	[FTXhdDisChgTxt] [varchar](20) NULL,
	[FTXhdDisChgType] [varchar](10) NULL,
	[FCXhdTotalAfDisChg] [numeric](18, 4) NULL,
	[FCXhdDisChg] [numeric](18, 4) NULL,
	[FCXhdAmt] [numeric](18, 4) NULL,
	[FTDisCode] [varchar](5) NOT NULL,
	[FTRsnCode] [varchar](5) NOT NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalHDTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTSpnCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalPDTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalPDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalPDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTPmhDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPmdGrpName] [varchar](50) NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdQtyAll] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXpdGetQtyDiv] [numeric](18, 4) NULL,
	[FTXpdGetType] [varchar](1) NULL,
	[FCXpdGetValue] [numeric](18, 4) NULL,
	[FCXpdDis] [numeric](18, 4) NULL,
	[FCXpdPerDisAvg] [numeric](18, 4) NULL,
	[FCXpdDisAvg] [numeric](18, 4) NULL,
	[FCXpdPoint] [numeric](18, 4) NULL,
	[FTXpdStaRcv] [varchar](1) NULL,
	[FTPplCode] [varchar](20) NULL,
	[FTXpdCpnText] [varchar](100) NULL,
	[FTCpdBarCpn] [varchar](20) NULL,
	[FTPmhStaGrpPriority] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalRCTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalRCTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXrcSeqNo] [int] NOT NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [datetime] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTSalRDTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTSalRDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTSalRDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXrdSeqNo] [int] NOT NULL,
	[FTRdhDocType] [varchar](1) NULL,
	[FNXrdRefSeq] [int] NULL,
	[FTXrdRefCode] [varchar](20) NULL,
	[FCXrdPdtQty] [numeric](18, 4) NULL,
	[FNXrdPntUse] [bigint] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftDTTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FTShpCode] [varchar](5) NOT NULL,
	[FTUsrCode] [varchar](20) NOT NULL,
	[FDSdtSignIn] [datetime] NULL,
	[FDSdtSignOut] [datetime] NULL,
	[FTSdtUsrClosed] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftEventTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftEventTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftEventTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FDHisDateTime] [datetime] NOT NULL,
	[FTEvnCode] [varchar](5) NULL,
	[FNSvnQty] [int] NULL,
	[FCSvnAmt] [numeric](18, 4) NULL,
	[FTRsnCode] [varchar](5) NULL,
	[FTSvnApvCode] [varchar](20) NULL,
	[FTSvnRemark] [varchar](100) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftSKeyBNTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftSKeyBNTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftSKeyBNTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FTBntCode] [varchar](5) NOT NULL,
	[FCKbnRateAmt] [numeric](18, 4) NULL,
	[FNKbnQty] [bigint] NULL,
	[FCKbnAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftSKeyRcvTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftSKeyRcvTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftSKeyRcvTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FTRcvCode] [varchar](3) NOT NULL,
	[FCRcvPayAmt] [numeric](18, 4) NULL,
	[FCRcvRndAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftSLastDocTmp]    Script Date: 5/8/2563 12:32:32 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftSLastDocTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftSLastDocTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FNLstDocType] [int] NOT NULL,
	[FTLstDocNoFrm] [varchar](20) NULL,
	[FTLstDocNoTo] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftSRatePdtTmp]    Script Date: 5/8/2563 12:32:33 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftSRatePdtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftSRatePdtTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FTSrpCodeRef] [varchar](20) NOT NULL,
	[FTSrpType] [varchar](1) NOT NULL,
	[FTSrpNameRef] [varchar](100) NULL,
	[FCSrpQty] [numeric](18, 4) NULL,
	[FCSrpAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTShiftSSumRcvTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTShiftSSumRcvTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTShiftSSumRcvTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTShfCode] [varchar](30) NOT NULL,
	[FNSdtSeqNo] [int] NOT NULL,
	[FTRcvCode] [varchar](3) NOT NULL,
	[FTRcvDocType] [varchar](1) NOT NULL,
	[FCRcvPayAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxDTDisTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxDTDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FDXddDateIns] [datetime] NOT NULL,
	[FNXddStaDis] [int] NULL,
	[FTXddDisChgTxt] [varchar](20) NULL,
	[FTXddDisChgType] [varchar](10) NULL,
	[FCXddNet] [numeric](18, 4) NULL,
	[FCXddValue] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxDTPmtTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxDTPmtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxDTPmtTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTPmhCode] [varchar](20) NOT NULL,
	[FTXdpGrpName] [varchar](50) NOT NULL,
	[FTXsdBarCode] [varchar](25) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FCXdpQtyAll] [numeric](18, 4) NULL,
	[FCXdpNet] [numeric](18, 4) NULL,
	[FCXdpSetPrice] [numeric](18, 4) NULL,
	[FCXdpGetQtyDiv] [numeric](18, 4) NULL,
	[FCXdpGetCond] [numeric](18, 4) NULL,
	[FCXdpGetValue] [numeric](18, 4) NULL,
	[FCXdpDis] [numeric](18, 4) NULL,
	[FCXdpDisAvg] [numeric](18, 4) NULL,
	[FCXdpPoint] [numeric](18, 4) NULL,
	[FTXdpStaExceptPmt] [varchar](1) NULL,
	[FTXdpStaRcv] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxDTTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXsdPdtName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FTPplCode] [varchar](20) NULL,
	[FCXsdFactor] [numeric](18, 4) NULL,
	[FTXsdBarCode] [varchar](25) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXsdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXsdVatRate] [numeric](18, 4) NULL,
	[FTXsdSaleType] [varchar](1) NULL,
	[FCXsdSalePrice] [numeric](18, 4) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdQtyAll] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXsdDisChgTxt] [varchar](20) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdChg] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdWhtAmt] [numeric](18, 4) NULL,
	[FTXsdWhtCode] [varchar](5) NULL,
	[FCXsdWhtRate] [numeric](18, 4) NULL,
	[FCXsdCostIn] [numeric](18, 4) NULL,
	[FCXsdCostEx] [numeric](18, 4) NULL,
	[FTXsdStaPdt] [varchar](1) NULL,
	[FCXsdQtyLef] [numeric](18, 4) NULL,
	[FCXsdQtyRfn] [numeric](18, 4) NULL,
	[FTXsdStaPrcStk] [varchar](1) NULL,
	[FTXsdStaAlwDis] [varchar](1) NULL,
	[FNXsdPdtLevel] [int] NULL,
	[FTXsdPdtParent] [varchar](20) NULL,
	[FCXsdQtySet] [numeric](18, 4) NULL,
	[FTPdtStaSet] [varchar](1) NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxHDCstTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxHDCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxHDCstTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCardNo] [varchar](20) NULL,
	[FNXshCrTerm] [int] NULL,
	[FDXshDueDate] [datetime] NULL,
	[FDXshBillDue] [datetime] NULL,
	[FTXshCtrName] [varchar](100) NULL,
	[FDXshTnfDate] [datetime] NULL,
	[FTXshRefTnfID] [varchar](20) NULL,
	[FNXshAddrShip] [bigint] NULL,
	[FNXshAddrTax] [bigint] NULL,
	[FTXshCstName] [varchar](200) NULL,
	[FTXshCstTel] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxHDDisTmp]    Script Date: 5/8/2563 12:32:34 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxHDDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxHDDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXhdDateIns] [datetime] NOT NULL,
	[FTXhhDisChgTxt] [varchar](20) NULL,
	[FTXhdDisChgType] [varchar](10) NULL,
	[FCXhdTotalAfDisChg] [numeric](18, 4) NULL,
	[FCXhdDisChg] [numeric](18, 4) NULL,
	[FCXhdAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxHDTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTSpnCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTTaxRCTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTTaxRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTTaxRCTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXrcSeqNo] [int] NOT NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [datetime] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTVoidDTDisTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTVoidDTDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTVoidDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FNVidNo] [bigint] NOT NULL,
	[FNXidSeqNo] [int] NOT NULL,
	[FDXddDateIns] [datetime] NOT NULL,
	[FTXihDocNo] [varchar](20) NOT NULL,
	[FNXddStaDis] [int] NULL,
	[FTXddDisChgTxt] [varchar](20) NULL,
	[FTXddDisChgType] [varchar](10) NULL,
	[FCXddNet] [numeric](18, 4) NULL,
	[FCXddValue] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TPSTVoidDTTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TPSTVoidDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TPSTVoidDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FNVidNo] [bigint] NOT NULL,
	[FNXidSeqNo] [int] NOT NULL,
	[FTVidType] [varchar](1) NULL,
	[FTRsnCode] [varchar](5) NULL,
	[FTXihDocNo] [varchar](20) NOT NULL,
	[FTXihDocType] [varchar](2) NULL,
	[FDXihDocDate] [datetime] NULL,
	[FTXihDocTime] [varchar](255) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXidPdtName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FCXidFactor] [numeric](18, 4) NULL,
	[FTXidBarCode] [varchar](25) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXidVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXidVatRate] [numeric](18, 4) NULL,
	[FTXidSaleType] [varchar](1) NULL,
	[FCXidSalePrice] [numeric](18, 4) NULL,
	[FCXidQty] [numeric](18, 4) NULL,
	[FCXidSetPrice] [numeric](18, 4) NULL,
	[FCXidB4DisChg] [numeric](18, 4) NULL,
	[FCXidQtyAll] [numeric](18, 4) NULL,
	[FCXidNet] [numeric](18, 4) NULL,
	[FCXidNetTotal] [numeric](18, 4) NULL,
	[FCXidVat] [numeric](18, 4) NULL,
	[FCXidVatable] [numeric](18, 4) NULL,
	[FCXidCostIn] [numeric](18, 4) NULL,
	[FCXidCostEx] [numeric](18, 4) NULL,
	[FTXidStaPdt] [varchar](1) NULL,
	[FCXidQtyLef] [numeric](18, 4) NULL,
	[FCXidQtyRfn] [numeric](18, 4) NULL,
	[FTXidStaPrcStk] [varchar](1) NULL,
	[FNXidPdtLevel] [int] NULL,
	[FTXidPdtParent] [varchar](20) NULL,
	[FCXidQtySet] [numeric](18, 4) NULL,
	[FTPdtStaSet] [varchar](1) NULL,
	[FTXidRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTBnkDplTmp_Moshi]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTBnkDplTmp_Moshi]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTBnkDplTmp_Moshi](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDBdhDate] [datetime] NULL,
	[FTBdhDocNo] [varchar](20) NULL,
	[FTBbkCode] [varchar](5) NULL,
	[FTBbkAccNo] [varchar](20) NULL,
	[FTBbkType] [varchar](100) NULL,
	[FTBddType] [varchar](100) NULL,
	[FDBdhRefExtDate] [datetime] NULL,
	[FCBddRefAmt] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTBnkDplTmp_Moshi] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTBnkDplTmp_Moshi' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTBnkDplTmp_Moshi] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTLockerDetailDepositAmountTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTLockerDetailDepositAmountTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTLockerDetailDepositAmountTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocTime] [varchar](50) NULL,
	[FNXsdLayNo] [bigint] NULL,
	[FTPzeCode] [varchar](5) NULL,
	[FTSizName] [varchar](255) NULL,
	[FTRthCode] [varchar](5) NULL,
	[FTRthName] [varchar](255) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FDXshTimePick] [datetime] NULL,
	[FTXshSpendTime] [varchar](50) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTLockerDetailDepositAmountTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTLockerDetailDepositAmountTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTLockerPaymentByBillTmp]    Script Date: 5/8/2563 12:32:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTLockerPaymentByBillTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTLockerPaymentByBillTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTXshDocType] [varchar](5) NULL,
	[FTXshRefInt] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXdtPay] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXrcDocNo] [varchar](20) NULL,
	[FDXrcDocDate] [datetime] NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcDis] [numeric](18, 4) NULL,
	[FCXrcGrand] [numeric](18, 4) NULL,
	[FCXrcLeft] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTMnyShotOverDailyDTTmp_Moshi]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverDailyDTTmp_Moshi]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverDailyDTTmp_Moshi](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NOT NULL,
	[FTBchName] [varchar](255) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTUsrCode] [varchar](20) NOT NULL,
	[FDShdSaleDate] [datetime] NOT NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FCKbnAmtCash] [numeric](18, 4) NULL,
	[FCRcvPayCash] [numeric](18, 4) NULL,
	[FCKbnAmtCredit] [numeric](18, 4) NULL,
	[FCRcvPayCredit] [numeric](18, 4) NULL,
	[FCKbnAmtVouchers] [numeric](18, 4) NULL,
	[FCRcvPayVouchers] [numeric](18, 4) NULL,
	[FCKbnAmtCoupon] [numeric](18, 4) NULL,
	[FCRcvPayCoupon] [numeric](18, 4) NULL,
	[FCKbnAmtChque] [numeric](18, 4) NULL,
	[FCRcvPayChque] [numeric](18, 4) NULL,
	[FCKbnAmtPromptpay] [numeric](18, 4) NULL,
	[FCRcvPayPromptpay] [numeric](18, 4) NULL,
	[FCKbnAmtOther] [numeric](18, 4) NULL,
	[FCRcvPayOther] [numeric](18, 4) NULL,
	[FCAmtShipClose] [numeric](18, 4) NULL,
	[FCAmtSystem] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTMnyShotOverDailyDTTmp_Moshi] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTMnyShotOverDailyDTTmp_Moshi' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTMnyShotOverDailyDTTmp_Moshi] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTMnyShotOverMonthlyTmp_Moshi]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverMonthlyTmp_Moshi]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverMonthlyTmp_Moshi](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NOT NULL,
	[FTBchName] [varchar](255) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTUsrCode] [varchar](20) NOT NULL,
	[FTYear] [varchar](4) NOT NULL,
	[FTMonth] [varchar](2) NOT NULL,
	[FTMonthNameTh] [varchar](100) NOT NULL,
	[FTMonthNameEN] [varchar](100) NOT NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FCShotOver] [numeric](18, 4) NULL,
	[FTDayD1] [numeric](18, 2) NULL,
	[FTDayD2] [numeric](18, 2) NULL,
	[FTDayD3] [numeric](18, 2) NULL,
	[FTDayD4] [numeric](18, 2) NULL,
	[FTDayD5] [numeric](18, 2) NULL,
	[FTDayD6] [numeric](18, 2) NULL,
	[FTDayD7] [numeric](18, 2) NULL,
	[FTDayD8] [numeric](18, 2) NULL,
	[FTDayD9] [numeric](18, 2) NULL,
	[FTDayD10] [numeric](18, 2) NULL,
	[FTDayD11] [numeric](18, 2) NULL,
	[FTDayD12] [numeric](18, 2) NULL,
	[FTDayD13] [numeric](18, 2) NULL,
	[FTDayD14] [numeric](18, 2) NULL,
	[FTDayD15] [numeric](18, 2) NULL,
	[FTDayD16] [numeric](18, 2) NULL,
	[FTDayD17] [numeric](18, 2) NULL,
	[FTDayD18] [numeric](18, 2) NULL,
	[FTDayD19] [numeric](18, 2) NULL,
	[FTDayD20] [numeric](18, 2) NULL,
	[FTDayD21] [numeric](18, 2) NULL,
	[FTDayD22] [numeric](18, 2) NULL,
	[FTDayD23] [numeric](18, 2) NULL,
	[FTDayD24] [numeric](18, 2) NULL,
	[FTDayD25] [numeric](18, 2) NULL,
	[FTDayD26] [numeric](18, 2) NULL,
	[FTDayD27] [numeric](18, 2) NULL,
	[FTDayD28] [numeric](18, 2) NULL,
	[FTDayD29] [numeric](18, 2) NULL,
	[FTDayD30] [numeric](18, 2) NULL,
	[FTDayD31] [numeric](18, 2) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTMnyShotOverMonthlyTmp_Moshi] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTMnyShotOverMonthlyTmp_Moshi' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTMnyShotOverMonthlyTmp_Moshi] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTMnyShotOverTmp_Moshi]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverTmp_Moshi]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverTmp_Moshi](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NOT NULL,
	[FTBchName] [varchar](255) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FTUsrCode] [varchar](20) NOT NULL,
	[FDShdSaleDate] [datetime] NOT NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTMnyShotOverTmp_Moshi] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTMnyShotOverTmp_Moshi' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTMnyShotOverTmp_Moshi] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPdtAdjStkTmp]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPdtAdjStkTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPdtAdjStkTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTShopCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTAjhDocNo] [varchar](20) NULL,
	[FDAjhDocDate] [datetime] NULL,
	[FNAjdSeqNo] [bigint] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](50) NULL,
	[FTPunName] [varchar](50) NULL,
	[FTAjdBarcode] [varchar](25) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FTPgpChain] [varchar](30) NULL,
	[FTAjdPlcCode] [varchar](5) NULL,
	[FNAjdLayRow] [bigint] NULL,
	[FNAjdLayCol] [bigint] NULL,
	[FCAjdWahB4Adj] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC1] [numeric](18, 4) NULL,
	[FDAjdDateTimeC1] [datetime] NULL,
	[FCAjdUnitQtyC1] [numeric](18, 4) NULL,
	[FCAjdQtyAllC1] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC2] [numeric](18, 4) NULL,
	[FDAjdDateTimeC2] [datetime] NULL,
	[FCAjdUnitQtyC2] [numeric](18, 4) NULL,
	[FCAjdQtyAllC2] [numeric](18, 4) NULL,
	[FCAjdUnitQty] [numeric](18, 4) NULL,
	[FDAjdDateTime] [datetime] NULL,
	[FCAjdQtyAll] [numeric](18, 4) NULL,
	[FCAjdQtyAllDiff] [numeric](18, 4) NULL,
	[FTAjdApvCode] [varchar](5) NULL,
	[FTAjdApvName] [varchar](50) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPdtAdjStkTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPdtAdjStkTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPdtAdjStkTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPdtRefillTmp]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPdtRefillTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPdtRefillTmp](
	[FTComName] [varchar](100) NOT NULL,
	[FTRptName] [varchar](100) NULL,
	[FTTxnDocNoRef] [varchar](25) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](20) NULL,
	[FTTxnPosCode] [varchar](20) NULL,
	[FTTxnDocRefNo] [varchar](50) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTDptName] [varchar](255) NULL,
	[FTPosType] [varchar](255) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTWahName] [varchar](100) NULL,
	[FDDocDate] [datetime] NULL,
	[FNCabSeq] [int] NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FCXtdQty] [numeric](18, 4) NULL,
	[FTUsrCreate] [varchar](20) NULL,
	[FTDocLastUpdBy] [varchar](20) NULL,
	[FTDocCreateBy] [varchar](20) NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTRptCode] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPdtStkBalTmp]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPdtStkBalTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPdtStkBalTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTWahName] [varchar](255) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FTPgpChainName] [varchar](255) NULL,
	[FCPdtCostAVGEX] [numeric](18, 4) NULL,
	[FCPdtCostTotal] [numeric](18, 4) NULL,
	[FCStkQty] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTPdtS__F671FB6BEA1F8426] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPdtStkBalTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPdtStkBalTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPdtStkCrdTmp]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPdtStkCrdTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPdtStkCrdTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNRowPartIDWah] [bigint] NULL,
	[FNRowPartIDBch] [bigint] NULL,
	[FNStkCrdID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FDStkDate] [datetime] NULL,
	[FTStkDocNo] [varchar](20) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTStkType] [varchar](1) NULL,
	[FCStkQtyMonEnd] [numeric](18, 4) NULL,
	[FCStkQtyIn] [numeric](18, 4) NULL,
	[FCStkQtyOut] [numeric](18, 4) NULL,
	[FCStkQtySaleDN] [numeric](18, 4) NULL,
	[FCStkQtyCN] [numeric](18, 4) NULL,
	[FCStkQtyAdj] [numeric](18, 4) NULL,
	[FCStkSetPrice] [numeric](18, 4) NULL,
	[FCStkCostIn] [numeric](18, 4) NULL,
	[FCStkCostEx] [numeric](18, 4) NULL,
	[FTWahName] [varchar](255) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCStkQtyBal] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPdtStkCrdTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPdtStkCrdTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPdtStkCrdTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTProductSaleOfWeekTmp]    Script Date: 5/8/2563 12:32:36 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTProductSaleOfWeekTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTProductSaleOfWeekTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPosName] [varchar](255) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNWeek] [bigint] NULL,
	[FCBillQty] [numeric](18, 4) NULL,
	[FCPrice] [numeric](18, 4) NULL,
	[FCVDQR] [numeric](18, 4) NULL,
	[FCPosCash] [numeric](18, 4) NULL,
	[FCPosQR] [numeric](18, 4) NULL,
	[FCPosEDC] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPSSaleDailyTmp09]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSSaleDailyTmp09]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSSaleDailyTmp09](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTPSSaleDailyTmp09] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxDailyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxDailyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxDailyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTRcvCode] [nchar](5) NULL,
	[FTFmtCode] [nchar](5) NULL,
	[FTFmtName] [nchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTPdtCode] [varchar](25) NULL,
	[FTPdtName] [varchar](200) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstLastName] [varchar](255) NULL,
	[FTCstIDCard] [varchar](20) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPSTaxDailyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxDailyTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxDailyTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxHDDateTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxHDDateTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxHDDateTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNoSale] [varchar](50) NULL,
	[FTXshDocNoRefun] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPSTaxHDDateTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxHDDateTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxHDDateTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxHDTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxHDTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCstCode] [varchar](50) NULL,
	[FTCstBusiness] [varchar](1) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstBchCode] [varchar](50) NULL,
	[FTXshTaxID] [varchar](50) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FTCstTaxNo] [varchar](20) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTEstablishment] [varchar](100) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPSTaxHD] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxHDTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxHDTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxMonthlyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxMonthlyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxMonthlyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTRcvCode] [nchar](5) NULL,
	[FTFmtCode] [nchar](5) NULL,
	[FTFmtName] [nchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTPdtCode] [varchar](25) NULL,
	[FTPdtName] [varchar](200) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstLastName] [varchar](255) NULL,
	[FTCstIDCard] [varchar](20) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTPSTaxMonthlyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxWeeklyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxWeeklyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxWeeklyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](255) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTPdtCode] [varchar](25) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstLastName] [varchar](255) NULL,
	[FTCstIDCard] [varchar](20) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK__TRPTPSTa__F671FB6B5746D22B] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPSTSaleProfitTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTSaleProfitTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTSaleProfitTmp](
	[FNAppType] [int] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FTChainName] [varchar](255) NULL,
	[FCXsdSaleQty] [numeric](18, 4) NULL,
	[FCPdtCost] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXsdProfit] [numeric](18, 4) NULL,
	[FCXsdProfitPercent] [numeric](18, 4) NULL,
	[FCXsdSalePercent] [numeric](18, 4) NULL,
	[FTRptRowSeq] [bigint] NULL,
	[FNRowPartID] [bigint] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTSaleProfitTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTSaleProfitTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPdtSaleDet]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPdtSaleDet]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPdtSaleDet](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTPdtName] [nvarchar](max) NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXshCstName] [varchar](255) NULL,
	[FTXshCstLastName] [varchar](255) NULL,
	[FTXshCstTel] [varchar](20) NULL,
	[FTXshCardID] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FNXshDocType] [numeric](18, 2) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FNAppType] [varchar](10) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPdtSaleDet_1] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPdtSaleDet' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPdtSaleDet] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSSaleDailyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSSaleDailyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSSaleDailyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSSaleDailyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSSaleDailyTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSSaleDailyTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSSaleMonthlyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSSaleMonthlyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSSaleMonthlyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FNSaleMonthly] [int] NULL,
	[FNSaleYear] [int] NULL,
	[FTSaleMonthName] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSSaleMonthlyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSSaleMonthlyTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSSaleMonthlyTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSSaleWeeklyTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSSaleWeeklyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSSaleWeeklyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FNSaleWeekly] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSSaleWeeklyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSSaleWeeklyTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSSaleWeeklyTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSSaleWeeklyTmpAda062]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSSaleWeeklyTmpAda062]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSSaleWeeklyTmpAda062](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FNSaleWeekly] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSVDDailySaleTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSVDDailySaleTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSVDDailySaleTmp](
	[FTRptRowSeq] [int] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDXshDocDate] [date] NULL,
	[FNXshTotalBill] [int] NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXrcNetVDQR] [numeric](18, 4) NULL,
	[FCXrcNetPosCash] [numeric](18, 4) NULL,
	[FCXrcNetPosQR] [numeric](18, 4) NULL,
	[FCXrcNetPosEDC] [numeric](18, 4) NULL,
	[FTXshRem] [varchar](255) NULL,
	[FTComName] [varchar](100) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPdtSaleDet] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSVDDailySaleTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSVDDailySaleTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSVDMonthlySaleTmp]    Script Date: 5/8/2563 12:32:37 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSVDMonthlySaleTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSVDMonthlySaleTmp](
	[FTRptRowSeq] [int] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTXshDocMonth] [varchar](10) NULL,
	[FNXshTotalBill] [int] NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXrcNetVDQR] [numeric](18, 4) NULL,
	[FCXrcNetPosCash] [numeric](18, 4) NULL,
	[FCXrcNetPosQR] [numeric](18, 4) NULL,
	[FCXrcNetPosEDC] [numeric](18, 4) NULL,
	[FTXshRem] [varchar](255) NULL,
	[FTComName] [varchar](100) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSVDMonthlySaleTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSVDMonthlySaleTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSVDMonthlySaleTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSVDSaleDailyTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSVDSaleDailyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSVDSaleDailyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNcshCountBill] [int] NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FCXshCashCoupon] [numeric](18, 4) NULL,
	[FCXshAmtAFDisc] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXshAllInOne] [numeric](18, 4) NULL,
	[FCXshElocker] [numeric](18, 4) NULL,
	[FCXshDoctor] [numeric](18, 4) NULL,
	[FCXshTelemedi] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSVDSaleDailyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcPSVDWeeklySaleTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcPSVDWeeklySaleTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcPSVDWeeklySaleTmp](
	[FTRptRowSeq] [int] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDXshDocWeek] [int] NULL,
	[FNXshTotalBill] [int] NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXrcNetVDQR] [numeric](18, 4) NULL,
	[FCXrcNetPosCash] [numeric](18, 4) NULL,
	[FCXrcNetPosQR] [numeric](18, 4) NULL,
	[FCXrcNetPosEDC] [numeric](18, 4) NULL,
	[FTXshRem] [varchar](255) NULL,
	[FTComName] [varchar](100) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTPTTSpcPSVDWeeklySaleTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcPSVDWeeklySaleTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcPSVDWeeklySaleTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTPTTSpcSaleAmountTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPTTSpcSaleAmountTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPTTSpcSaleAmountTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTRcvCode] [varchar](20) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FTCstCardID] [varchar](50) NULL,
	[FTCstName] [varchar](200) NULL,
	[FTCstLastName] [varchar](200) NULL,
	[FTCstTel] [varchar](50) NULL,
	[FTXshRmk] [varchar](100) NULL,
	[FTXrcRmk] [varchar](100) NULL,
	[FTCstCode] [varchar](50) NULL,
	[FNAppType] [int] NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNXshAppType] [varchar](10) NULL,
	[FTXshCardNo] [nvarchar](225) NULL,
	[FCVatRate] [numeric](18, 4) NULL,
	[FTVatCode] [numeric](18, 2) NULL,
	[FCXsdVat2] [numeric](18, 4) NULL,
	[FCXrcGrand] [numeric](18, 4) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTCRSa__B1E687472BBA1777] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPTTSpcSaleAmountTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPTTSpcSaleAmountTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTBookingTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTBookingTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTBookingTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNBkgDocID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FTBkgToBch] [varchar](5) NULL,
	[FTBkgToBchName] [varchar](255) NULL,
	[FTBkgToShp] [varchar](5) NULL,
	[FTBkgToShpName] [varchar](255) NULL,
	[FTBkgToPos] [varchar](5) NULL,
	[FNBkgToLayNo] [bigint] NULL,
	[FTBkgToSize] [varchar](5) NULL,
	[FTBkgToSizeName] [varchar](255) NULL,
	[FTBkgToRate] [varchar](5) NULL,
	[FTBkgToRateName] [varchar](255) NULL,
	[FDBkgToStartDate] [date] NULL,
	[FTBkgToStartTime] [varchar](10) NULL,
	[FTBkgRefCst] [varchar](20) NULL,
	[FTBkgRefCstLogin] [varchar](50) NULL,
	[FTBkgRefCstDoc] [varchar](20) NULL,
	[FTBkgRefSale] [varchar](20) NULL,
	[FTBkgProducer] [varchar](50) NULL,
	[FTBkgStaBook] [varchar](1) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTRTBookingTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTBookingTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTBookingTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTDepositAccordingSlotSizeTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTDepositAccordingSlotSizeTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTDepositAccordingSlotSizeTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTSizCode] [varchar](5) NULL,
	[FTSizName] [varchar](255) NULL,
	[FNXshQTYBill] [bigint] NULL,
	[FTXshDepositTime] [numeric](18, 2) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTRTDe__F671FB6B4B45ACA5] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTDepositAccordingSlotSizeTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTDepositAccordingSlotSizeTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTDepositsNotPickedTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTDepositsNotPickedTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTDepositsNotPickedTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FNXsdLayNo] [bigint] NULL,
	[FDXshDocTime] [datetime] NULL,
	[FTSizName] [varchar](255) NULL,
	[FTRthName] [varchar](255) NULL,
	[FTXshFrmLoginName] [varchar](255) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPzeCode] [varchar](5) NULL,
	[FTRthCode] [varchar](5) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTBchName] [varchar](255) NULL,
	[FDXshDocDate] [datetime] NULL,
 CONSTRAINT [PK__TRPTRTDe__F671FB6BF0A93019] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTRTDetailReceiveDepositTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTDetailReceiveDepositTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTDetailReceiveDepositTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocTime] [varchar](10) NULL,
	[FNXsdLayNo] [bigint] NULL,
	[FTPzeCode] [varchar](5) NULL,
	[FTSizName] [varchar](255) NULL,
	[FTRthCode] [varchar](5) NULL,
	[FTRthName] [varchar](255) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshFrmLoginName] [varchar](255) NULL,
	[FTXshToLogin] [varchar](20) NULL,
	[FTXshToLoginName] [varchar](255) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FTXshTimePick] [varchar](10) NULL,
	[FTComName] [varchar](50) NOT NULL,
	[FTRptCode] [varchar](255) NOT NULL,
	[FTUsrSession] [varchar](255) NOT NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTRTDropByDateTemp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTDropByDateTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTDropByDateTemp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPzeName] [varchar](255) NULL,
	[FTRthCode] [varchar](5) NULL,
	[FTXsdTimeStart] [varchar](8) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTDropByDateTemp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTDropByDateTemp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTHisChgStaLockerTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTHisChgStaLockerTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTHisChgStaLockerTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FDXshActionDate] [datetime] NULL,
	[FTXshActionTime] [varchar](10) NULL,
	[FNHisLayNo] [bigint] NULL,
	[FTLayStaUse] [varchar](1) NULL,
	[FTRsnName] [varchar](200) NULL,
	[FTHisUsrCode] [varchar](20) NULL,
	[FTUsrName] [varchar](200) NULL,
	[FTComName] [varchar](50) NOT NULL,
	[FTRptCode] [varchar](255) NOT NULL,
	[FTUsrSession] [varchar](255) NOT NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTHisChgStaLockerTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTHisChgStaLockerTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTLockerPaymentTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTLockerPaymentTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTLockerPaymentTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXrcDocNo] [varchar](20) NULL,
	[FTXshDocType] [bigint] NULL,
	[FDXrcDocDate] [date] NULL,
	[FTCstCode] [varchar](5) NULL,
	[FTCstName] [varchar](255) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcDis] [numeric](18, 4) NULL,
	[FCXrcGrand] [numeric](18, 4) NULL,
	[FTXsdRefDocNo] [varchar](20) NULL,
	[FTXsdDocDate] [date] NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdPayB4] [numeric](18, 4) NULL,
	[FCXsdRefPaid] [numeric](18, 4) NULL,
	[FCXsdGrand] [numeric](18, 4) NULL,
	[FCXsdLeft] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK_TRPTRTLockerPaymentTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTRTOpenLockerHisAdminTmp]    Script Date: 5/8/2563 12:32:38 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTOpenLockerHisAdminTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTOpenLockerHisAdminTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FDHisDate] [date] NULL,
	[FTHisTime] [varchar](10) NULL,
	[FNHisLayNo] [bigint] NULL,
	[FTRsnCode] [varchar](5) NULL,
	[FTRsnName] [varchar](255) NULL,
	[FTUsrCode] [varchar](5) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTRTOpenLockerHisAdminTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTOpenLockerHisAdminTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTOpenLockerHisAdminTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTPickByDateTemp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTPickByDateTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTPickByDateTemp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPzeName] [varchar](255) NULL,
	[FTRthCode] [varchar](5) NULL,
	[FTXsdTimeFinish] [varchar](8) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTPickByDateTemp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTPickByDateTemp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTRecePtionByTimeTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTRecePtionByTimeTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTRecePtionByTimeTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](10) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](10) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](10) NULL,
	[FNXshBillQTY] [numeric](18, 0) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTTPdStart] [time](7) NULL,
	[FTTPdStop] [time](7) NULL,
	[FTTpdHours] [time](7) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTRTRe__F671FB6BFF94AAAD] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTRecePtionByTimeTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTRecePtionByTimeTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTSalBySizeTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTSalBySizeTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTSalBySizeTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](20) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPzeCode] [varchar](5) NULL,
	[FTPzeName] [varchar](255) NULL,
	[FTXhdQty] [numeric](18, 2) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK_TRPTRTSalBySizeTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTRTSalDTSLTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTSalDTSLTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTSalDTSLTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTXshDocDate] [datetime] NULL,
	[FNXsdSeqNo] [int] NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](20) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FNXsdLayNo] [bigint] NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FTPzeCode] [varchar](5) NULL,
	[FTXsdStaPayItem] [varchar](1) NULL,
	[FTPzeName] [varchar](255) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK_TRPTSalDTSLTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTRTSalDTTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTSalDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTSalDTTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FNLayNo] [bigint] NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FTPzeName] [varchar](255) NULL,
	[FTRakName] [varchar](255) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCryCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshFrmLoginPwd] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FTXshToLoginPwd] [varchar](50) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FCXshPrePaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FNXshStaRef] [int] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTRTSalDTTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTSalDTTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTSalDTTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTSalHDTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTSalHDTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshFrmLoginPwd] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FTXshToLoginPwd] [varchar](50) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPrePaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTRTSalHDTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTSalHDTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTSalHDTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTSalRCTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTSalRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTSalRCTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FNXrcSeqNo] [int] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](255) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [date] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTBnkName] [varchar](255) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FTXrcAmt] [varchar](255) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTSalRCTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTSalRCTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTTaxHDTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTTaxHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTTaxHDTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTXshTaxID] [varchar](50) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTCstTaxNo] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTRTTaxHD] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTTaxHDTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTTaxHDTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTRTTimeDepositTmp]    Script Date: 5/8/2563 12:32:39 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTRTTimeDepositTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTRTTimeDepositTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](20) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTShpCode] [varchar](20) NULL,
	[FTShpName] [varchar](255) NULL,
	[FTPosCode] [varchar](20) NULL,
	[FTTpdStart] [varchar](20) NULL,
	[FTTpdStop] [varchar](20) NULL,
	[FNXshBillQTY] [bigint] NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTRTTi__F671FB6BBC04F386] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTRTTimeDepositTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTRTTimeDepositTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalDailyByCashierTmp]    Script Date: 5/8/2563 12:32:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalDailyByCashierTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalDailyByCashierTmp](
	[FNRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTUsrCode] [varchar](5) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FTTnsType] [varchar](1) NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FCXshNet] [numeric](18, 4) NULL,
	[FCXshReturn] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTSale__F671FB6B1506FD83] PRIMARY KEY CLUSTERED 
(
	[FNRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalDailyByCashierTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalDailyByCashierTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalDailyByPosTmp]    Script Date: 5/8/2563 12:32:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalDailyByPosTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalDailyByPosTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTTnsType] [varchar](1) NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPosName] [varchar](255) NULL,
	[FCXshNet] [numeric](18, 4) NULL,
	[FCXshReturn] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTSalDailyByPosTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalDailyByPosTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalDailyByPosTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalDTTmp]    Script Date: 5/8/2563 12:32:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalDTTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXsdSeqNo] [int] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXsdPdtName] [varchar](100) NULL,
	[FTPgpChainName] [varchar](255) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FCXsdFactor] [numeric](18, 4) NULL,
	[FTXsdBarCode] [varchar](25) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXsdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXsdVatRate] [numeric](18, 4) NULL,
	[FTXsdSaleType] [varchar](1) NULL,
	[FCXsdSalePrice] [numeric](18, 4) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdQtyAll] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXsdDisChgTxt] [varchar](20) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdChg] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdWhtAmt] [numeric](18, 4) NULL,
	[FTXsdWhtCode] [varchar](5) NULL,
	[FCXsdWhtRate] [numeric](18, 4) NULL,
	[FCXsdCostIn] [numeric](18, 4) NULL,
	[FCXsdCostEx] [numeric](18, 4) NULL,
	[FTXsdStaPdt] [varchar](1) NULL,
	[FCXsdQtyLef] [numeric](18, 4) NULL,
	[FCXsdQtyRfn] [numeric](18, 4) NULL,
	[FTXsdStaPrcStk] [varchar](1) NULL,
	[FTXsdStaAlwDis] [varchar](1) NULL,
	[FNXsdPdtLevel] [int] NULL,
	[FTXsdPdtParent] [varchar](20) NULL,
	[FCXsdQtySet] [numeric](18, 4) NULL,
	[FTPdtStaSet] [varchar](1) NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTSalDTTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalDTTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalDTTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSaleAmountTmp]    Script Date: 5/8/2563 12:32:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSaleAmountTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSaleAmountTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTMerCode] [varchar](10) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTPdtName] [varchar](100) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTXshRem1] [varchar](100) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCstName] [varchar](255) NULL,
	[FTXshCstTel] [varchar](20) NULL,
	[FTXrcRmk] [varchar](250) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTSalHDTmp]    Script Date: 5/8/2563 12:32:40 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalHDTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTSpnCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK_TRPTSalHDTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTSalMonthlyQtyByPdtTmp]    Script Date: 5/8/2563 12:32:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalMonthlyQtyByPdtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalMonthlyQtyByPdtTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FCXsdQty01] [numeric](18, 4) NULL,
	[FCXsdQty02] [numeric](18, 4) NULL,
	[FCXsdQty03] [numeric](18, 4) NULL,
	[FCXsdQty04] [numeric](18, 4) NULL,
	[FCXsdQty05] [numeric](18, 4) NULL,
	[FCXsdQty06] [numeric](18, 4) NULL,
	[FCXsdQty07] [numeric](18, 4) NULL,
	[FCXsdQty08] [numeric](18, 4) NULL,
	[FCXsdQty09] [numeric](18, 4) NULL,
	[FCXsdQty10] [numeric](18, 4) NULL,
	[FCXsdQty11] [numeric](18, 4) NULL,
	[FCXsdQty12] [numeric](18, 4) NULL,
	[FCXsdQtyTotal] [numeric](18, 4) NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
 CONSTRAINT [PK_TRPTSalMonthlyQtyByPdtTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTSalMthQtyByPdtTmp]    Script Date: 5/8/2563 12:32:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalMthQtyByPdtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalMthQtyByPdtTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTPdtCode] [varchar](25) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCXsdQty01] [numeric](18, 4) NULL,
	[FCXsdQty02] [numeric](18, 4) NULL,
	[FCXsdQty03] [numeric](18, 4) NULL,
	[FCXsdQty04] [numeric](18, 4) NULL,
	[FCXsdQty05] [numeric](18, 4) NULL,
	[FCXsdQty06] [numeric](18, 4) NULL,
	[FCXsdQty07] [numeric](18, 4) NULL,
	[FCXsdQty08] [numeric](18, 4) NULL,
	[FCXsdQty09] [numeric](18, 4) NULL,
	[FCXsdQty10] [numeric](18, 4) NULL,
	[FCXsdQty11] [numeric](18, 4) NULL,
	[FCXsdQty12] [numeric](18, 4) NULL,
	[FCXsdQtyTotal] [numeric](18, 4) NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTSalMthQtyByPdtTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalMthQtyByPdtTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalMthQtyByPdtTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalPdtBillTmp]    Script Date: 5/8/2563 12:32:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalPdtBillTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalPdtBillTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FNXshDocType] [int] NULL,
	[FNType] [int] NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](100) NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FCXshTotalAfDis] [numeric](18, 4) NULL,
	[FNXrcSeqNo] [int] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FDXrcRefDate] [datetime] NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTBnkName] [varchar](100) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FNXsdSeqNo] [int] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FTXsdBarCode] [varchar](25) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmt] [numeric](18, 4) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [AdaPos5_SalePS_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalPdtBillTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalPdtBillTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalPdtRetTmp]    Script Date: 10/8/2563 16:36:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalPdtRetTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalPdtRetTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTXihDocNo] [varchar](20) NULL,
	[FTXihRefIn] [varchar](20) NULL,
	[FDXihDocDate] [datetime] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FCXidQty] [numeric](18, 2) NULL,
	[FCXshRnd] [numeric](18, 2) NULL,
	[FCXtdAmount] [numeric](18, 2) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](255) NULL,
	[FTRsnCode] [varchar](5) NULL,
	[FTRsnName] [varchar](100) NULL,
	[FTUsrCode] [varchar](5) NULL,
	[FTUsrName] [varchar](50) NULL,
	[FTXshApvCode] [varchar](5) NULL,
	[FTXshApvName] [varchar](255) NULL,
	[FTXthTnsType] [varchar](1) NULL,
	[FTAppCode] [varchar](50) NULL,
	[FTAppName] [varchar](50) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL,
 CONSTRAINT [PK_TRPTSalPdtRetTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalPdtRetTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalPdtRetTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTSalDailyTmp]    Script Date: 10/8/2563 18:18:47 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalDailyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalDailyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FTXihValType] [varchar](1) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTXihChkType] [varchar](1) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL,
 CONSTRAINT [PK_TRPTSalDailyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalDailyTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalDailyTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTPSTaxHDFullTmp]    Script Date: 10/8/2563 18:26:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxHDFullTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxHDFullTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCstCode] [varchar](50) NULL,
	[FTCstBusiness] [varchar](1) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstBchCode] [varchar](50) NULL,
	[FTXshTaxID] [varchar](50) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FTCstTaxNo] [varchar](20) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTEstablishment] [varchar](100) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxHDFullTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxHDFullTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTCancelBillByDateTmp]    Script Date: 10/8/2563 18:31:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTCancelBillByDateTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTCancelBillByDateTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTPdtCode] [varchar](30) NULL,
	[FTXihDocNo] [varchar](20) NULL,
	[FTXidPdtName] [varchar](255) NULL,
	[FDXihDocDate] [datetime] NULL,
	[FTPunName] [varchar](50) NULL,
	[FTRsnName] [varchar](200) NULL,
	[FTUsrVoidName] [varchar](100) NULL,
	[FTUsrAprvName] [varchar](100) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FCXidQty] [numeric](18, 4) NULL,
PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [PRIMARY]
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPointByCstTmp]    Script Date: 10/8/2563 18:31:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPointByCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPointByCstTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTMemCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FDCstApply] [datetime] NULL,
	[FDCstCrdExpire] [datetime] NULL,
	[FCTxnPntGet] [numeric](18, 4) NULL,
	[FCTxnPntUsed] [numeric](18, 4) NULL,
	[FCTxnPntBal] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTPSTaxHDDateTmp]    Script Date: 10/8/2563 18:31:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxHDDateTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxHDDateTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNoSale] [varchar](50) NULL,
	[FTXshDocNoRefun] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxHDDateTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxHDDateTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO

/****** Object:  Table [dbo].[TRPTSalByCashierAndPosTmp]    Script Date: 10/8/2563 18:31:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalByCashierAndPosTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalByCashierAndPosTmp](
	[FNRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTUsrCode] [varchar](5) NULL,
	[FTUsrName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTPosName] [varchar](255) NULL,
	[FNXshBillQty] [bigint] NULL,
	[FCXshNet] [decimal](18, 2) NULL,
	[FCXshReturn] [decimal](18, 2) NULL,
	[FCXshRnd] [decimal](18, 2) NULL,
	[FCXshDis] [decimal](18, 2) NULL,
	[FCXshGrand] [decimal](18, 2) NULL,
	[FCXrcCash] [decimal](18, 2) NULL,
	[FCXrcCredit] [decimal](18, 2) NULL,
	[FCXrcCheque] [decimal](18, 2) NULL,
	[FCXrcCashCpn] [decimal](18, 2) NULL,
	[FCXrcVoucher] [decimal](18, 2) NULL,
	[FCXrcCashCrd] [decimal](18, 2) NULL,
	[FCXrcOther] [decimal](18, 2) NULL,
	[FCXrcTotal] [decimal](18, 2) NULL,
	[FTComName] [varchar](255) NULL,
	[FTRptCode] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalByCashierAndPosTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalByCashierAndPosTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalByCstTmp]    Script Date: 10/8/2563 18:31:25 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalByCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalByCstTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](100) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO


/****** Object:  Table [dbo].[TRPTSalRCTmp]    Script Date: 5/8/2563 12:32:41 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalRCTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FNAppType] [int] NULL,
	[FNXshDocType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXrcSeqNo] [int] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTFmtCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [date] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTBnkName] [varchar](255) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTSalRCTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSalRCTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSalRCTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTSalShiftTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSalShiftTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSalShiftTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FDShdSaleDate] [date] NULL,
	[FTShdStaCloseShif] [varchar](5) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
 CONSTRAINT [PK_TRPTSalShiftTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTSpcSaleAmountTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSpcSaleAmountTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSpcSaleAmountTmp](
	[FTRptRowSeq] [bigint] NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTRcvCode] [varchar](20) NULL,
	[FTRcvName] [varchar](100) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTXshRem1] [varchar](255) NULL,
	[FTCstCode] [varchar](255) NULL,
	[FTXshCardID] [varchar](255) NULL,
	[FTXshCstName] [varchar](255) NULL,
	[FTXshCstTel] [varchar](20) NULL,
	[FTXrcRmk] [varchar](255) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRPTSpcSalPosSrvTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTSpcSalPosSrvTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTSpcSalPosSrvTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](100) NULL,
	[FDXshDocDate] [date] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](20) NULL,
	[FTPosName] [varchar](100) NULL,
	[FTPdtCode] [varchar](5) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXrcGrand] [numeric](18, 4) NULL,
	[FTXrcRmk1] [varchar](255) NULL,
	[FTHnNumber] [varchar](100) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCstName] [varchar](100) NULL,
	[FTCstlName] [varchar](100) NULL,
	[FTXshCstTel] [varchar](30) NULL,
	[FTXrcRmk2] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTXshCardNo] [varchar](100) NULL,
	[FTVatCode] [numeric](10, 0) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TRPTCRSa__F671FB6BD61A728E] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTSpcSalPosSrvTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTSpcSalPosSrvTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTTSalHDTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTTSalHDTmp](
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NULL,
	[FTXshFrmLoginPwd] [varchar](50) NULL,
	[FTXshToLogin] [varchar](50) NULL,
	[FTXshToLoginPwd] [varchar](50) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPrePaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTVDPdtStkBalTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDPdtStkBalTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDPdtStkBalTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FCStkQty] [numeric](18, 4) NULL,
	[FCPdtCostIn] [numeric](18, 4) NULL,
	[FCPdtCostEx] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTVDPdtStkBalTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDPdtStkBalTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDPdtStkBalTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTVDPdtTwxTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDPdtTwxTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDPdtTwxTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTXthDocNo] [varchar](20) NULL,
	[FDXthDocDate] [datetime] NULL,
	[FTXthWhFrm] [varchar](5) NULL,
	[FTXthWhFrmName] [varchar](255) NULL,
	[FTXthWhTo] [varchar](5) NULL,
	[FTXthWhToName] [varchar](255) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FCXtdQty] [numeric](18, 4) NULL,
	[FTXtdUsrKey] [varchar](50) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDPdtTwxTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDPdtTwxTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTVDSalRCTmp]    Script Date: 5/8/2563 12:32:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDSalRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDSalRCTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FNXrcSeqNo] [int] NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [date] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTBnkName] [varchar](255) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTVDSalRCTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDSalRCTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDSalRCTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTVDTaxHDTmp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDTaxHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDTaxHDTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FTXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstBch] [varchar](255) NULL,
	[FTXshTaxID] [varchar](50) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FTCstTaxNo] [varchar](20) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTVDTaxHD] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDTaxHDTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDTaxHDTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTVDTopSaleTmp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDTopSaleTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDTopSaleTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FDXshDocNo] [datetime] NULL,
	[FTXshDocDate] [datetime] NULL,
	[FTPdtCode] [varchar](5) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FTPdtChain] [varchar](100) NULL,
	[FTPdtChainName] [varchar](255) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdDisChg] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatTable] [numeric](18, 4) NULL,
	[FCXsdGrandTotal] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TRPTVDTopSaleTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDTopSaleTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDTopSaleTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRPTVDTSaleByBillTemp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDTSaleByBillTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDTSaleByBillTemp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK_TVDTSaleByBillTemp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDTSaleByBillTemp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDTSaleByBillTemp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTPSTaxHDFullTmp]    Script Date: 10/8/2563 18:26:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTaxHDFullTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTaxHDFullTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCstCode] [varchar](50) NULL,
	[FTCstBusiness] [varchar](1) NULL,
	[FTCstName] [varchar](255) NULL,
	[FTCstBchCode] [varchar](50) NULL,
	[FTXshTaxID] [varchar](50) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FTCstTaxNo] [varchar](20) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTEstablishment] [varchar](100) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTaxHDFullTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTaxHDFullTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTVDTSaleByProductTemp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDTSaleByProductTemp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDTSaleByProductTemp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTXshDocNo] [varchar](20) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTPdtCode] [varchar](5) NULL,
	[FTXsdPdtName] [varchar](255) NULL,
	[FTPunName] [varchar](50) NULL,
	[FTPgpName] [varchar](50) NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FCXsdPriceAvg] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTRcvCode] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL,
 CONSTRAINT [PK__TVDTSale__F671FB6B8F42F45B] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = OFF, ALLOW_PAGE_LOCKS = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDTSaleByProductTemp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDTSaleByProductTemp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO


/****** Object:  Table [dbo].[TRPTPSTTaxDateFullTmp]    Script Date: 10/8/2563 18:39:26 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTPSTTaxDateFullTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTPSTTaxDateFullTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FNAppType] [int] NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](50) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPosCode] [nchar](5) NULL,
	[FTPosRegNo] [nchar](20) NULL,
	[FTXshDocNoSale] [varchar](50) NULL,
	[FTXshDocNoRefun] [varchar](50) NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocRef] [varchar](20) NULL,
	[FTCmpCode] [varchar](20) NULL,
	[FTCmpName] [varchar](255) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshGrandTotal] [numeric](18, 4) NULL,
	[FTXshDocVatFull] [varchar](50) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FDTmpTxnDate] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [PRIMARY]
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTPSTTaxDateFullTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTPSTTaxDateFullTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO



/****** Object:  Table [dbo].[TRPTVDTSaleProfitTmp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTVDTSaleProfitTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTVDTSaleProfitTmp](
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](255) NULL,
	[FTChainName] [varchar](255) NULL,
	[FCXsdSaleQty] [numeric](18, 4) NULL,
	[FCPdtCost] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXsdProfit] [numeric](18, 4) NULL,
	[FCXsdProfitPercent] [numeric](18, 4) NULL,
	[FCXsdSalePercent] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FDTmpTxnDate] [datetime] DEFAULT (getdate()) NOT NULL
) ON [PRIMARY]
END
GO
IF (SELECT Column_Default FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRPTVDTSaleProfitTmp' AND COLUMN_NAME = 'FDTmpTxnDate') is NULL
BEGIN
 ALTER TABLE [dbo].[TRPTVDTSaleProfitTmp] ADD  DEFAULT (getdate()) FOR [FDTmpTxnDate]
END
GO
/****** Object:  Table [dbo].[TRTTAdminHisTmp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTAdminHisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTAdminHisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTShpCode] [varchar](5) NOT NULL,
	[FTPosCode] [varchar](5) NOT NULL,
	[FDHisDateTime] [datetime] NOT NULL,
	[FNHisLayNo] [bigint] NOT NULL,
	[FTHisType] [varchar](1) NULL,
	[FTLayStaUse] [varchar](1) NULL,
	[FTHisUsrCode] [varchar](20) NULL,
	[FTHisCstTel] [varchar](20) NOT NULL,
	[FTHisRsnCode] [varchar](5) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTPayDTTmp]    Script Date: 5/8/2563 12:32:43 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTPayDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTPayDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [bigint] NOT NULL,
	[FTXsdRefDocNo] [varchar](20) NOT NULL,
	[FTXsdRefDocType] [varchar](1) NULL,
	[FDXsdRefDocDate] [datetime] NULL,
	[FCXsdRefGrand] [numeric](18, 4) NULL,
	[FCXsdRefPrePaid] [numeric](18, 4) NULL,
	[FCXsdRefPaid] [numeric](18, 4) NULL,
	[FCXsdRefLeft] [numeric](18, 4) NULL,
	[FNXsdLevel] [bigint] NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTPayHDTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTPayHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTPayHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshDocTime] [varchar](8) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshCardNo] [varchar](20) NULL,
	[FNXshDocPrint] [bigint] NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshWht] [numeric](18, 4) NULL,
	[FCXshAfWht] [numeric](18, 4) NULL,
	[FCXshFee] [numeric](18, 4) NULL,
	[FCXshDisc] [numeric](18, 4) NULL,
	[FCXshAfDisc] [numeric](18, 4) NULL,
	[FCXshAmt] [numeric](18, 4) NULL,
	[FCXshPay] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaPrcDoc] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTPayRCTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTPayRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTPayRCTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsrSeqNo] [bigint] NOT NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [datetime] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTSalDTSLTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTSalDTSLTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTSalDTSLTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FNXsdLayNo] [bigint] NOT NULL,
	[FTXsdStaPayItem] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTSalDTSNTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTSalDTSNTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTSalDTSNTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPdtSerial] [varchar](20) NOT NULL,
	[FTXsdStaRet] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTSalDTTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTSalDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTSalDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FTPdtCode] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FTPzeCode] [varchar](5) NOT NULL,
	[FTRthCode] [varchar](5) NOT NULL,
	[FDXsdStart] [datetime] NULL,
	[FDXsdFinish] [datetime] NULL,
	[FCXsdQty] [numeric](18, 4) NULL,
	[FTXsdVatType] [varchar](1) NULL,
	[FTXsdStaAlwDis] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXsdVatRate] [numeric](18, 4) NULL,
	[FCXsdSalePrice] [numeric](18, 4) NULL,
	[FCXsdSetPrice] [numeric](18, 4) NULL,
	[FCXsdAmtB4DisChg] [numeric](18, 4) NULL,
	[FCXsdDis] [numeric](18, 4) NULL,
	[FCXsdChg] [numeric](18, 4) NULL,
	[FCXsdNet] [numeric](18, 4) NULL,
	[FCXsdNetAfHD] [numeric](18, 4) NULL,
	[FCXsdVat] [numeric](18, 4) NULL,
	[FCXsdVatable] [numeric](18, 4) NULL,
	[FCXsdWhtAmt] [numeric](18, 4) NULL,
	[FTXsdWhtCode] [varchar](5) NULL,
	[FCXsdWhtRate] [numeric](18, 4) NULL,
	[FCXsdPrePaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXsdRmk] [varchar](200) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TRTTSalHDTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRTTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRTTSalHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTCryCode] [varchar](20) NULL,
	[FTXshFrmLogin] [varchar](50) NOT NULL,
	[FTXshFrmLoginPwd] [varchar](50) NOT NULL,
	[FTXshToLogin] [varchar](50) NOT NULL,
	[FTXshToLoginPwd] [varchar](50) NOT NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPrePaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FDXshDatePick] [datetime] NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TsysMasTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TsysMasTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TsysMasTmp](
	[FTMttTableKey] [varchar](255) NULL,
	[FTMttRefKey] [varchar](255) NULL,
	[FTMttSessionID] [varchar](255) NULL,
	[FTRefPdtCode] [varchar](20) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTPdtName] [varchar](100) NULL,
	[FTBarCode] [varchar](25) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FTPlcCode] [varchar](5) NULL,
	[FTPlcName] [varchar](100) NULL,
	[FTSplCode] [varchar](20) NULL,
	[FTSplName] [varchar](200) NULL,
	[FTSplStaAlwPO] [varchar](1) NULL,
	[FTBarStaUse] [varchar](1) NULL,
	[FTBarStaAlwSale] [varchar](1) NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FTPdtGrade] [varchar](50) NULL,
	[FCPdtWeight] [numeric](18, 4) NULL,
	[FTClrCode] [varchar](5) NULL,
	[FTClrName] [varchar](50) NULL,
	[FTPszCode] [varchar](5) NULL,
	[FTPszName] [varchar](50) NULL,
	[FTPdtUnitDim] [varchar](50) NULL,
	[FTPdtPkgDim] [varchar](50) NULL,
	[FTPdtStaAlwPick] [varchar](1) NULL,
	[FTPdtStaAlwPoHQ] [varchar](1) NULL,
	[FTPdtStaAlwBuy] [varchar](1) NULL,
	[FTPdtStaAlwSale] [varchar](1) NULL,
	[FCPgdPriceRet] [numeric](18, 4) NULL,
	[FCPgdPriceWhs] [numeric](18, 4) NULL,
	[FCPgdPriceNet] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTShpCode] [varchar](5) NULL,
	[FDSgpStart] [datetime] NULL,
	[FCSgpPerSun] [numeric](18, 4) NULL,
	[FCSgpPerMon] [numeric](18, 4) NULL,
	[FCSgpPerTue] [numeric](18, 4) NULL,
	[FCSgpPerWed] [numeric](18, 4) NULL,
	[FCSgpPerThu] [numeric](18, 4) NULL,
	[FCSgpPerFri] [numeric](18, 4) NULL,
	[FCSgpPerSat] [numeric](18, 4) NULL,
	[FTMerCode] [varchar](5) NULL,
	[FNLayNo] [bigint] NULL,
	[FNLayRow] [bigint] NULL,
	[FNLayCol] [bigint] NULL,
	[FTLayStaUse] [varchar](1) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTRakCode] [varchar](5) NULL,
	[FTGhdApp] [varchar](50) NULL,
	[FTAppName] [varchar](50) NULL,
	[FTGdtName] [varchar](200) NULL,
	[FTGhdCode] [varchar](5) NULL,
	[FTSysCode] [varchar](5) NULL,
	[FTGdtCallByName] [varchar](100) NULL,
	[FNGdtFuncLevel] [int] NULL,
	[FTGdtStaUse] [varchar](1) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FCSpwQtyMin] [numeric](18, 4) NULL,
	[FCSpwQtyMax] [numeric](18, 4) NULL,
	[FTSpwRmk] [varchar](100) NULL,
	[FTStaEdit] [varchar](2) NULL,
	[FTKbdScreen] [varchar](50) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalDTDisTmp]    Script Date: 5/8/2563 12:32:44 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalDTDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FDXddDateIns] [datetime] NOT NULL,
	[FNXddStaDis] [int] NULL,
	[FTXddDisChgTxt] [varchar](20) NULL,
	[FTXddDisChgType] [varchar](10) NULL,
	[FCXddNet] [numeric](18, 4) NULL,
	[FCXddValue] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalDTPmtTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalDTPmtTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalDTPmtTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTPmhCode] [varchar](20) NOT NULL,
	[FTXdpGrpName] [varchar](50) NOT NULL,
	[FTXsdBarCode] [varchar](25) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FCXdpQtyAll] [numeric](18, 4) NULL,
	[FCXdpNet] [numeric](18, 4) NULL,
	[FCXdpSetPrice] [numeric](18, 4) NULL,
	[FCXdpGetQtyDiv] [numeric](18, 4) NULL,
	[FCXdpGetCond] [numeric](18, 4) NULL,
	[FCXdpGetValue] [numeric](18, 4) NULL,
	[FCXdpDis] [numeric](18, 4) NULL,
	[FCXdpDisAvg] [numeric](18, 4) NULL,
	[FCXdpPoint] [numeric](18, 4) NULL,
	[FTXdpStaExceptPmt] [varchar](1) NULL,
	[FTXdpStaRcv] [varchar](1) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalDTVDTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalDTVDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalDTVDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXsdSeqNo] [int] NOT NULL,
	[FNCabSeq] [int] NULL,
	[FTXsdBarcode] [varchar](25) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FNLayRow] [bigint] NOT NULL,
	[FNLayCol] [bigint] NOT NULL,
	[FTXsvStaPayItem] [varchar](1) NULL,
	[FTWahCode] [varchar](5) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalHDCstTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalHDCstTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalHDCstTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTXshCardID] [varchar](20) NULL,
	[FTXshCardNo] [varchar](20) NULL,
	[FNXshCrTerm] [int] NULL,
	[FDXshDueDate] [datetime] NULL,
	[FDXshBillDue] [datetime] NULL,
	[FTXshCtrName] [varchar](100) NULL,
	[FDXshTnfDate] [datetime] NULL,
	[FTXshRefTnfID] [varchar](20) NULL,
	[FNXshAddrShip] [bigint] NULL,
	[FNXshAddrTax] [bigint] NULL,
	[FTXshCstName] [varchar](255) NULL,
	[FTXshCstTel] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalHDDisTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalHDDisTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalHDDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FDXhdDateIns] [datetime] NOT NULL,
	[FTXhdDisChgTxt] [varchar](20) NULL,
	[FTXhdDisChgType] [varchar](10) NULL,
	[FCXhdTotalAfDisChg] [numeric](18, 4) NULL,
	[FCXhdDisChg] [numeric](18, 4) NULL,
	[FCXhdAmt] [numeric](18, 4) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalHDTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalHDTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalHDTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FTShpCode] [varchar](5) NULL,
	[FNXshDocType] [int] NULL,
	[FDXshDocDate] [datetime] NULL,
	[FTXshCshOrCrd] [varchar](1) NULL,
	[FTXshVATInOrEx] [varchar](1) NULL,
	[FTDptCode] [varchar](5) NULL,
	[FTWahCode] [varchar](5) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTShfCode] [varchar](20) NULL,
	[FNSdtSeqNo] [int] NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTSpnCode] [varchar](20) NULL,
	[FTXshApvCode] [varchar](20) NULL,
	[FTCstCode] [varchar](20) NULL,
	[FTXshDocVatFull] [varchar](20) NULL,
	[FTXshRefExt] [varchar](20) NULL,
	[FDXshRefExtDate] [datetime] NULL,
	[FTXshRefInt] [varchar](20) NULL,
	[FDXshRefIntDate] [datetime] NULL,
	[FTXshRefAE] [varchar](20) NULL,
	[FNXshDocPrint] [int] NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXshRteFac] [numeric](18, 4) NULL,
	[FCXshTotal] [numeric](18, 4) NULL,
	[FCXshTotalNV] [numeric](18, 4) NULL,
	[FCXshTotalNoDis] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgV] [numeric](18, 4) NULL,
	[FCXshTotalB4DisChgNV] [numeric](18, 4) NULL,
	[FTXshDisChgTxt] [varchar](20) NULL,
	[FCXshDis] [numeric](18, 4) NULL,
	[FCXshChg] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgV] [numeric](18, 4) NULL,
	[FCXshTotalAfDisChgNV] [numeric](18, 4) NULL,
	[FCXshRefAEAmt] [numeric](18, 4) NULL,
	[FCXshAmtV] [numeric](18, 4) NULL,
	[FCXshAmtNV] [numeric](18, 4) NULL,
	[FCXshVat] [numeric](18, 4) NULL,
	[FCXshVatable] [numeric](18, 4) NULL,
	[FTXshWpCode] [varchar](5) NULL,
	[FCXshWpTax] [numeric](18, 4) NULL,
	[FCXshGrand] [numeric](18, 4) NULL,
	[FCXshRnd] [numeric](18, 4) NULL,
	[FTXshGndText] [varchar](200) NULL,
	[FCXshPaid] [numeric](18, 4) NULL,
	[FCXshLeft] [numeric](18, 4) NULL,
	[FTXshRmk] [varchar](200) NULL,
	[FTXshStaRefund] [varchar](1) NULL,
	[FTXshStaDoc] [varchar](1) NULL,
	[FTXshStaApv] [varchar](1) NULL,
	[FTXshStaPrcStk] [varchar](1) NULL,
	[FTXshStaPaid] [varchar](1) NULL,
	[FNXshStaDocAct] [int] NULL,
	[FNXshStaRef] [int] NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL
) ON [PRIMARY]
END
GO
/****** Object:  Table [dbo].[TVDTSalRCTmp]    Script Date: 5/8/2563 12:32:45 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TVDTSalRCTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TVDTSalRCTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXshDocNo] [varchar](20) NOT NULL,
	[FNXrcSeqNo] [int] NOT NULL,
	[FTRcvCode] [varchar](5) NULL,
	[FTRcvName] [varchar](50) NULL,
	[FTXrcRefNo1] [varchar](100) NULL,
	[FTXrcRefNo2] [varchar](100) NULL,
	[FDXrcRefDate] [datetime] NULL,
	[FTXrcRefDesc] [varchar](100) NULL,
	[FTBnkCode] [varchar](5) NULL,
	[FTRteCode] [varchar](5) NULL,
	[FCXrcRteFac] [numeric](18, 4) NULL,
	[FCXrcFrmLeftAmt] [numeric](18, 4) NULL,
	[FCXrcUsrPayAmt] [numeric](18, 4) NULL,
	[FCXrcDep] [numeric](18, 4) NULL,
	[FCXrcNet] [numeric](18, 4) NULL,
	[FCXrcChg] [numeric](18, 4) NULL,
	[FTXrcRmk] [varchar](250) NULL,
	[FTPhwCode] [varchar](30) NULL,
	[FTXrcRetDocRef] [varchar](20) NULL,
	[FTXrcStaPayOffline] [varchar](1) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](50) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](50) NULL
) ON [PRIMARY]
END
GO





/****** Object:  Table [dbo].[TRPTMnyShotOverDailyDTTmp]    Script Date: 10/8/2563 16:26:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverDailyDTTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverDailyDTTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FDShdSaleDate] [datetime] NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FCKbnAmtCash] [numeric](18, 4) NULL,
	[FCRcvPayCash] [numeric](18, 4) NULL,
	[FCKbnAmtCredit] [numeric](18, 4) NULL,
	[FCRcvPayCredit] [numeric](18, 4) NULL,
	[FCKbnAmtVouchers] [numeric](18, 4) NULL,
	[FCRcvPayVouchers] [numeric](18, 4) NULL,
	[FCKbnAmtCoupon] [numeric](18, 4) NULL,
	[FCRcvPayCoupon] [numeric](18, 4) NULL,
	[FCKbnAmtChque] [numeric](18, 4) NULL,
	[FCRcvPayChque] [numeric](18, 4) NULL,
	[FCKbnAmtPromptpay] [numeric](18, 4) NULL,
	[FCRcvPayPromptpay] [numeric](18, 4) NULL,
	[FCKbnAmtOther] [numeric](18, 4) NULL,
	[FCRcvPayOther] [numeric](18, 4) NULL,
	[FCAmtShipClose] [numeric](18, 4) NULL,
	[FCAmtSystem] [numeric](18, 4) NULL,
	[FCSvnCashIn] [numeric](18, 4) NULL,
	[FCSvnCashOut] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTMnyShotOverDailyDTTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTMnyShotOverMonthlyTmp]    Script Date: 10/8/2563 16:26:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverMonthlyTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverMonthlyTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FTYear] [varchar](4) NULL,
	[FTMonth] [varchar](2) NULL,
	[FTMonthNameTh] [varchar](100) NULL,
	[FTMonthNameEN] [varchar](100) NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FCShotOver] [numeric](18, 4) NULL,
	[FTDayD1] [numeric](18, 2) NULL,
	[FTDayD2] [numeric](18, 2) NULL,
	[FTDayD3] [numeric](18, 2) NULL,
	[FTDayD4] [numeric](18, 2) NULL,
	[FTDayD5] [numeric](18, 2) NULL,
	[FTDayD6] [numeric](18, 2) NULL,
	[FTDayD7] [numeric](18, 2) NULL,
	[FTDayD8] [numeric](18, 2) NULL,
	[FTDayD9] [numeric](18, 2) NULL,
	[FTDayD10] [numeric](18, 2) NULL,
	[FTDayD11] [numeric](18, 2) NULL,
	[FTDayD12] [numeric](18, 2) NULL,
	[FTDayD13] [numeric](18, 2) NULL,
	[FTDayD14] [numeric](18, 2) NULL,
	[FTDayD15] [numeric](18, 2) NULL,
	[FTDayD16] [numeric](18, 2) NULL,
	[FTDayD17] [numeric](18, 2) NULL,
	[FTDayD18] [numeric](18, 2) NULL,
	[FTDayD19] [numeric](18, 2) NULL,
	[FTDayD20] [numeric](18, 2) NULL,
	[FTDayD21] [numeric](18, 2) NULL,
	[FTDayD22] [numeric](18, 2) NULL,
	[FTDayD23] [numeric](18, 2) NULL,
	[FTDayD24] [numeric](18, 2) NULL,
	[FTDayD25] [numeric](18, 2) NULL,
	[FTDayD26] [numeric](18, 2) NULL,
	[FTDayD27] [numeric](18, 2) NULL,
	[FTDayD28] [numeric](18, 2) NULL,
	[FTDayD29] [numeric](18, 2) NULL,
	[FTDayD30] [numeric](18, 2) NULL,
	[FTDayD31] [numeric](18, 2) NULL,
	[FCSvnCashIn] [numeric](18, 4) NULL,
	[FCSvnCashOut] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTMnyShotOverMonthlyTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO
/****** Object:  Table [dbo].[TRPTMnyShotOverTmp]    Script Date: 10/8/2563 16:26:52 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRPTMnyShotOverTmp]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TRPTMnyShotOverTmp](
	[FTRptRowSeq] [bigint] IDENTITY(1,1) NOT NULL,
	[FNRowPartID] [bigint] NULL,
	[FTUsrSession] [varchar](255) NULL,
	[FTBchCode] [varchar](5) NULL,
	[FTBchName] [varchar](255) NULL,
	[FTPosCode] [varchar](5) NULL,
	[FTUsrCode] [varchar](20) NULL,
	[FDShdSaleDate] [datetime] NULL,
	[FCMnyOver] [numeric](18, 4) NULL,
	[FCMnyShot] [numeric](18, 4) NULL,
	[FCSvnCashIn] [numeric](18, 4) NULL,
	[FCSvnCashOut] [numeric](18, 4) NULL,
	[FTComName] [varchar](50) NULL,
	[FTRptCode] [varchar](50) NULL,
 CONSTRAINT [PK_TRPTMnyShotOverTmp] PRIMARY KEY CLUSTERED 
(
	[FTRptRowSeq] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, FILLFACTOR = 70) ON [AdaPos5_RPT_Filegroups]
) ON [AdaPos5_RPT_Filegroups]
END
GO




/*=========================================== END TEMP ===================================================*/




/****** Object:  StoredProcedure [dbo].[RPTxTopUp]    Script Date: 5/8/2563 13:03:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[RPTxTopUp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[RPTxTopUp] AS' 
END
GO
ALTER PROCEDURE [dbo].[RPTxTopUp] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptUserIdF Varchar(30),
	@ptUserIdT Varchar(30),
	@ptCrdActF Varchar(1), --สถานะบัตร
	@ptCrdActT Varchar(1),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @tRptName ชื่อรายงาน
-- @tRptName ชื่อรายงาน
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptUserIdF จากรหัสพนักงาน,
-- @ptUserIdT ถึงรหัสพนักงาน,
 --@ptCrdActF Varchar(5), --ประเภทบัตร
 --@ptCrdActT Varchar(5),
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tUserIdF Varchar(30)
	DECLARE @tUserIdT Varchar(30)
	DECLARE @tCrdActF Varchar(1) --ประเภทบัตร
	DECLARE @tCrdActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'TopUp'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tUserIdF = '2019030551'
	--SET @tUserIdT = '2019030800'
	--SET @tCrdActF = '1'
	--SET @tCrdActT = '3'
	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tUserIdF =  @ptUserIdF
	SET @tUserIdT =  @ptUserIdT
	SET @tCrdActF = @ptCrdActF
	SET @tCrdActT = @ptCrdActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	if @tCrdActF = null 
	BEGIN
		SET @tCrdActF = ''
	END
	IF @tCrdActT = null or @tCrdActF = ''
	BEGIN 
		SET @tCrdActT = @tCrdActF
	END 

	IF @tUserIdF = null
	BEGIN
		SET @tUserIdF = ''
	END

	IF @tUserIdT = null OR @tUserIdT = ''
	BEGIN
		SET @tUserIdT = @tUserIdF
	END

	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	SET @tSQL = 'INSERT INTO TFCTRptCrdTmp' 
	SET @tSQL +='('
	SET @tSQL +='FTComName,FTRptName,FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTTxnDocNoRef,FTCrdCode,FDCrdExpireDate,FTCdtRmk,FTCrdName,'
	SET @tSQL +='FTCrdStaActive,FTCrdHolderID,FTUsrName,FCTxnCrdValue,FCTxnValue,FCTxnValAftTrans,FTCtyName,FTDptName'
	SET @tSQL +=')'
	SET @tSQL +=' SELECT '''+ @nComName + '''  AS FTComName, '''+ @tRptName +'''AS FTRptName,'
	SET @tSQL +='FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTTxnDocNoRef,FTCrdCode,FDCrdExpireDate,FTCdtRmk,FTCrdName,'
	SET @tSQL +='FTCrdStaActive,FTCrdHolderID,FTUsrName,FCTxnCrdValue,FCTxnValue,FCTxnValAftTrans,FTCtyName,FTDptName'
	SET @tSQL +=' FROM'
		SET @tSQL +=' ('
		 SET @tSQL +=' SELECT A.FTTxnPosCode,A.FDTxnDocDate,A.FTTxnDocType,A.FTTxnDocNoRef,A.FTCrdCode,CRDX.FDCrdExpireDate,A.FTCdtRmk,CRDL.FTCrdName,'
		 SET @tSQL +=' CTYL.FTCtyName,DPL.FTDptName,CRD.FTCrdStaActive, CRD.FTCrdHolderID,TOPHD.FTUsrName,A.FCTxnCrdValue,A.FCTxnValue,A.FCTxnCrdValue + A.FCTxnValue AS FCTxnValAftTrans'
		 SET @tSQL +=' FROM'
			SET @tSQL +=' ('
 			 SET @tSQL +=' SELECT ISNULL(FTTxnPosCode, ''N/A'') AS FTTxnPosCode, FDTxnDocDate, FTCrdCode, FCTxnValue, '''' AS FTCdtRmk, FTTxnDocType, FTTxnDocNoRef, FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdHis AS CHIS WITH (NOLOCK)'
			 SET @tSQL += ' WHERE 1=1'

			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
			 	SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END
 
 			 IF (@tDocDateF <> '' AND @tDocDateT <> '')
 			 BEGIN
			 	SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			 END

			 SET @tSQL +=' UNION ALL'
			 SET @tSQL +=' SELECT ISNULL(CT.FTTxnPosCode, ''N/A'') AS FTTxnPosCode,CT.FDTxnDocDate,CT.FTCrdCode,CT.FCTxnValue,'''' AS FTCdtRmk, CT.FTTxnDocType,' 
			 SET @tSQL +=' CT.FTTxnDocNoRef, CT.FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdTopUp AS CT WITH (NOLOCK) INNER JOIN'
			 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS CTHD WITH (NOLOCK) ON CT.FTTxnDocNoRef = CTHD.FTCthDocNo'
			 SET @tSQL += ' WHERE 1=1'
			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
				 SET @tSQL +=' AND CT.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END

			 IF (@tDocDateF <> '' AND @tDocDateT <> '')
			 BEGIN
				 SET @tSQL +=' AND CONVERT(VARCHAR(10),CT.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			 END

			SET @tSQL +=' ) AS A LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS TOPHD WITH (NOLOCK) ON A.FTTxnDocNoRef = TOPHD.FTCthDocNo LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON A.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCardType_L AS CTYL WITH (NOLOCK) ON CRD.FTCtyCode = CTYL.FTCtyCode AND CTYL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRDX WITH (NOLOCK) ON A.FTCrdCode = CRDX.FTCrdCode'
		 SET @tSQL +=' WHERE (A.FTTxnDocType IN (''1'',''5''))'
		SET @tSQL +=' ) TopUp'
		SET @tSql += ' WHERE 1=1'
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		IF @tUserIdF <> '' AND @tUserIdT <> ''
		BEGIN
			SET @tSQL += ' AND FTCrdHolderID BETWEEN ''' + @tUserIdF + ''' AND ''' + @tUserIdT +''''
		END

		IF @tCrdActF <> '' AND @tCrdActT <> ''
		BEGIN
			SET  @tSQL += ' AND FTCrdStaActive BETWEEN '''+ @tCrdActF +''' AND '''+ @tCrdActT +''''
		END  
	--PRINT @tSQL
	execute(@tSQL)
	
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[SP_CNtAUTAutoDocNo]    Script Date: 5/8/2563 13:03:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_CNtAUTAutoDocNo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_CNtAUTAutoDocNo] AS' 
END
GO


-- =============================================
-- Author:		Kitpipat Kaewkieo
-- Create date: 28/04/2020
-- Description:	สร้างรหัสเอกสารอัตโนมัติ
--Version 1 / 28/04/2020
--Version 2 / 13/05/2020 รองรับ Master
-- =============================================
ALTER PROCEDURE [dbo].[SP_CNtAUTAutoDocNo]
	-- Add the parameters for the stored procedure here
	@ptTblName VARCHAR(30),
	@ptDocType VARCHAR(10),
	@ptBchCode VARCHAR(5),
	@ptShpCode VARCHAR(5),
	@ptPosCode VARCHAR(5),
	@pdDocDate DATETIME,
	@ptResult VARCHAR(30) OUTPUT
AS
BEGIN TRY
     --Def Setting
	 DECLARE @tDefChar VARCHAR(5)
	 DECLARE @tDefBch VARCHAR(1)
	 DECLARE @tDefPosShp VARCHAR(1)
	 DECLARE @tDefYear VARCHAR(1)
	 DECLARE @tDefMonth VARCHAR(1)
	 DECLARE @tDefDay VARCHAR(1)
	 DECLARE @tDefSep VARCHAR(1)
	 DECLARE @nMinRunning VARCHAR(1)
	 DECLARE @tDefNum VARCHAR(50)
	 
	 DECLARE @nDefStaReset VARCHAR(1)
	 
	 
	 --User Setting
	 DECLARE @tUsrFmtAll VARCHAR(100)
	 DECLARE @tUsrStaReset VARCHAR(100)
	 DECLARE @tUsrFmtReset VARCHAR(100)
	 DECLARE @nUsrNumSize INT
	 DECLARE @tSatUsrNum VARCHAR(20)
	 DECLARE @tUsrFmtPst VARCHAR(100)
	 DECLARE @tUsrChar VARCHAR(50)
	 DECLARE @tUsrStaAlwSep VARCHAR(1)
	 
	 --ตัวแปรกลาง
	 DECLARE @tFedCode VARCHAR(100) 
	 DECLARE @nStaResBch INT
	 DECLARE @nStaResDay INT
	 DECLARE @nStaResMonth INT
	 DECLARE @nStaResYear INT

	 DECLARE @tSQLMaxDoc NVARCHAR(MAX)
	         SET @tSQLMaxDoc = ''

	 DECLARE @tParamMaxDoc NVARCHAR(MAX)
	         SET @tParamMaxDoc = ''
	 
	 DECLARE @tFilterBch NVARCHAR(200)
	         SET @tFilterBch = ''

	 DECLARE @tMaxBchCode VARCHAR(20)
	 DECLARE @tLastNo VARCHAR(20)
	 DECLARE @tLastDay VARCHAR(10)
	 DECLARE @tLastMonth VARCHAR(10)
	 DECLARE @tLastYear VARCHAR(10)
	 DECLARE @tRunningNo VARCHAR(10)
	 DECLARE @tAutoFrm VARCHAR(100)
	 DECLARE @tNextDocNo VARCHAR(100)
	 DECLARE @tStartNum VARCHAR(50)
	 DECLARE @nRunningSize INT
	 DECLARE @tFTBchCode VARCHAR(50) --13/05/2020 

	 --การหาวัน-เดือน-ปีที่ต้องการ Gen Code
	 DECLARE @tSaleYear VARCHAR(10)
	 DECLARE @tSaleMonth VARCHAR(10)
	 DECLARE @tSaleDate VARCHAR(10)
	 SET @tSaleYear = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),1,4)
	 SET @tSaleMonth = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),6,2)
	 SET @tSaleDate = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),9,2)
	 
     --Get Config
	 SELECT   @tDefChar=ISNULL(AUT.FTSatDefChar,'')
	         ,@tDefBch = ISNULL(AUT.FTSatDefBch,0)
			 ,@tDefPosShp = ISNULL(AUT.FTSatDefPosShp,0)
			 ,@tDefYear = ISNULL(AUT.FTSatDefYear,0)
			 ,@tDefMonth = ISNULL(AUT.FTSatDefMonth,0)
			 ,@tDefDay = ISNULL(AUT.FTSatDefDay,0)
			 ,@tDefSep = ISNULL(AUT.FTSatDefSep,0)
			 ,@nDefStaReset = ISNULL(FTSatStaReset,0)
			 ,@tFedCode = AUT.FTSatFedCode
			 ,@nMinRunning = ISNULL(AUT.FNSatMinRunning,0)
			 ,@tDefNum = ISNULL(FTSatDefNum,1)
			 ,@tUsrFmtAll = ISNULL(TXN.FTAhmFmtAll,'')
			 ,@tUsrStaReset = ISNULL(TXN.FTAhmStaReset,0)
			 ,@tUsrFmtReset = ISNULL(TXN.FTAhmFmtReset,'')
			 ,@nUsrNumSize = ISNULL(TXN.FNAhmNumSize,5)
			 ,@tSatUsrNum = TXN.FTSatUsrNum
			 ,@tUsrFmtPst = TXN.FTAhmFmtPst
			 ,@tUsrChar = TXN.FTAhmFmtChar
			 ,@tUsrStaAlwSep = ISNULL(TXN.FTSatStaAlwSep,0)

	 FROM    TCNTAuto AUT
	 LEFT    JOIN TCNTAutoHisTxn TXN ON AUT.FTSatTblName = TXN.FTAhmTblName 
								 AND AUT.FTSatFedCode = TXN.FTAhmFedCode
								 AND AUT.FTSatStaDocType = TXN.FTSatStaDocType
	 WHERE   AUT.FTSatTblName = @ptTblName
	 AND     AUT.FTSatStaDocType = @ptDocType

	 ------------------------------------------------------------------------------------------------------------------------------------------
	 --หาเลข auto running ล่าสุด
	IF(@tUsrFmtAll <> '')
	   BEGIN
			SET @nUsrNumSize = @nUsrNumSize
	        IF(CHARINDEX('BCH', @tUsrFmtReset) <> 0)
			  BEGIN
			       SET @tFilterBch+= ' AND FTBchCode='''+@ptBchCode+''''
				   SET @tFTBchCode = 'FTBchCode' --13/05/2020
			  END
			ELSE
			  BEGIN
			       SET @tFilterBch+= ''
				   SET @tFTBchCode = '''''' --13/05/2020
			  END
	   END
	ELSE
	   BEGIN
		   SET @nUsrNumSize = LEN(@tDefNum)
	       IF(@nDefStaReset = 4)
		      BEGIN
			     SET @tFilterBch+= ' AND FTBchCode='''+@ptBchCode+''''
				 SET @tFTBchCode = 'FTBchCode' --13/05/2020
			  END
		   ELSE
		     BEGIN
			   SET @tFilterBch+= ''
			   SET @tFTBchCode = '''''' --13/05/2020
			 END
	   END

	SET @tSQLMaxDoc+= ' SELECT TOP 1 @tMaxBchCodeOUT = '+@tFTBchCode --13/05/2020
	SET @tSQLMaxDoc+= ' ,@tLastNoOUT = RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+')'
	SET @tSQLMaxDoc+= ' ,@tLastDayOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),9,2)'
	SET @tSQLMaxDoc+= ' ,@tLastMonthOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),6,2)'
	SET @tSQLMaxDoc+= ' ,@tLastYearOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),1,4)'
	SET @tSQLMaxDoc+= ' FROM '+@ptTblName
	SET @tSQLMaxDoc+= ' WHERE ISNUMERIC(RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+')) = 1 '
	SET @tSQLMaxDoc+= @tFilterBch
	SET @tSQLMaxDoc+= ' ORDER BY ROW_NUMBER() OVER(ORDER BY FDCreateOn ASC) DESC '

	--PRINT(@tSQLMaxDoc)

	SET @tParamMaxDoc+= N' @tMaxBchCodeOUT VARCHAR(20) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastNoOUT VARCHAR(20) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastDayOUT VARCHAR(10) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastMonthOUT VARCHAR(10) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastYearOUT VARCHAR(10) OUTPUT '

	EXECUTE sp_executesql @tSQLMaxDoc,
					        @tParamMaxDoc,
							@tMaxBchCodeOUT = @tMaxBchCode OUTPUT,
							@tLastNoOUT = @tLastNo OUTPUT,
							@tLastDayOUT = @tLastDay OUTPUT,
							@tLastMonthOUT = @tLastMonth OUTPUT,
							@tLastYearOUT = @tLastYear OUTPUT

	 ------------------------------------------------------------------------------------------------------------------------------------------

	 --ตรวจสอบว่ามีการกำหนดการตั้งค่าโดยผู้ใช้หรือไม่
	 IF(@tUsrFmtAll <> '')
	    BEGIN
		     --ตรวจสอบการ reset number
			 IF(@tUsrStaReset <> 0)
			    BEGIN

				    --มีการตั้งค่าให้ reset number
					SET @nStaResBch  = CHARINDEX('BCH', @tUsrFmtReset)
					SET @nStaResYear  = CHARINDEX('YYYY', @tUsrFmtReset)
					SET @nStaResMonth  = CHARINDEX('MM', @tUsrFmtReset)
					SET @nStaResDay  = CHARINDEX('DD', @tUsrFmtReset)

				END
		     ELSE
			    BEGIN
				   --ไม่มีการ reset number ใช้แบบ run ต่อเนื่อง
				    SET @nStaResBch  = 0
					SET @nStaResYear  = 0
					SET @nStaResMonth  = 0
					SET @nStaResDay  = 0

				END

			--จัด Format ตามที่ผู้ใช้ตั้งค่า
			DECLARE @nPosition INT
			DECLARE @nLen INT
			DECLARE @tFrmType varchar(8000)
			SET @tUsrFmtPst = @tUsrFmtPst + ','
			SET @nPosition = 0
			SET @nLen = 0
			SET @tAutoFrm = ''

			WHILE CHARINDEX(',', @tUsrFmtPst, @nPosition+1) > 0
				BEGIN
					SET @nLen = CHARINDEX(',', @tUsrFmtPst, @nPosition+1) - @nPosition
					SET @tFrmType = SUBSTRING(@tUsrFmtPst, @nPosition, @nLen)

					IF(@tFrmType = 'CHA')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @tUsrChar
						END
					ELSE IF(@tFrmType = 'BCH')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @ptBchCode
						END

					ELSE IF(@tFrmType = 'PSH')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @ptShpCode+@ptPosCode
						END
					
					ELSE IF(@tFrmType = 'YYYY' OR @tFrmType = 'YY')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + CONVERT(VARCHAR(4),@pdDocDate,121)
						END

					ELSE IF(@tFrmType = 'MM')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),6,2)
						END

					ELSE IF(@tFrmType = 'DD')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),9,2)
						END
					
					SET @nPosition = CHARINDEX(',', @tUsrFmtPst, @nPosition+@nLen) + 1

			END

			IF(@tUsrStaAlwSep <> 0)
			   BEGIN
			       SET @tAutoFrm = @tAutoFrm + '-'
			   END
			--จบการจัด Format

			--Set Start Number
			SET @tStartNum = @tSatUsrNum
			--SET Running Size Number
			SET @nRunningSize = @nUsrNumSize
		END
	 ELSE
	    BEGIN
		   --ใช้ค่า Def จากระบบ
		   --ตรวจสอบการ reset รหัส
		   IF(@nDefStaReset = 1) BEGIN SET @nStaResYear = @nDefStaReset  END ELSE BEGIN SET @nStaResYear = '0'  END
		   IF(@nDefStaReset = 2) BEGIN SET @nStaResMonth = @nDefStaReset END ELSE BEGIN SET @nStaResMonth = '0' END
		   IF(@nDefStaReset = 3) BEGIN SET @nStaResDay = @nDefStaReset   END ELSE BEGIN SET @nStaResDay = '0'   END
		   IF(@nDefStaReset = 4) BEGIN SET @nStaResBch = @nDefStaReset   END ELSE BEGIN SET @nStaResBch = '0'   END

		   IF(@tLastNo <> '') BEGIN SET @tLastNo = @tLastNo END ELSE BEGIN SET @tLastNo = 0 END

		   SET @nRunningSize = LEN(@tDefNum)
		   --SET @tStartNum = CONCAT(REPLICATE('0',@nRunningSize-LEN(1)),1) 
		   SET @tStartNum = @tDefNum
		   SET @tAutoFrm = ''
		   IF(@tDefChar <> '')  BEGIN SET @tAutoFrm+= @tDefChar  END
		   IF(@tDefBch <> 0)    BEGIN SET @tAutoFrm+= @ptBchCode END
		   IF(@tDefPosShp <> 0) BEGIN SET @tAutoFrm+= @ptPosCode END
		   IF(@tDefYear <> 0)  
		      BEGIN 
			        IF(@tDefYear = 'YYYY')
					   BEGIN
			                SET @tSaleYear = @tSaleYear
							SET @tLastYear = @tLastYear
					   END
					ELSE
					   BEGIN
					       SET @tSaleYear = SUBSTRING(@tSaleYear,3,2)
						   SET @tLastYear = SUBSTRING(@tLastYear,3,2)
					   END     
			        SET @tAutoFrm+=  @tSaleYear 
			  END
			IF(@tDefMonth <> 0)  BEGIN SET @tAutoFrm+= @tSaleMonth END
			IF(@tDefDay <> 0)    BEGIN SET @tAutoFrm+= @tSaleDate  END
			IF(@tDefSep <> 0)    BEGIN SET @tAutoFrm+= '-'  END

		END
     
	 -----------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามสาขา 
	IF(@nStaResBch <> 0 )
		BEGIN
		    
			IF(@tMaxBchCode <> '')
				BEGIN 
					SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo 
				 
				END
			ELSE
				BEGIN
					SET @tRunningNo = @tStartNum
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามปี
	ELSE IF(@nStaResYear <> 0)
		BEGIN
		    --PRINT('Reset ตามปี')
			--PRINT('Last Year:'+@tLastYear+'tSaleYear:'+@tSaleYear)
		    IF(@tLastYear <> '')
			    BEGIN
			        SET @tLastYear = @tLastYear
				END
			ELSE
			    BEGIN
				    SET @tLastYear = '1900'
				END

		    IF(@tLastYear <> @tSaleYear)
			    BEGIN
				    SET @tRunningNo = @tStartNum
				    SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
			ELSE
			    BEGIN
				    SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามเดือน
	ELSE IF(@nStaResMonth <> 0)
	     BEGIN
		      IF(@tLastMonth <> '')
			     BEGIN
				       SET @tLastMonth = @tLastMonth
				 END
			  ELSE
			     BEGIN
				      SET @tLastMonth = '00'
				 END
			 IF(@tLastMonth <> @tSaleMonth)
			   BEGIN
			        SET @tRunningNo = @tStartNum
				    SET @tNextDocNo = @tAutoFrm+@tRunningNo
			   END
			 ELSE
			   BEGIN
			       SET @tRunningNo = @tLastNo + 1
				   SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
				   SET @tNextDocNo = @tAutoFrm+@tRunningNo
			   END
		 END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามวัน
	ELSE IF(@nStaResDay <> 0)
		BEGIN
			IF(@tLastDay <> '')
				BEGIN
					SET @tLastDay = @tLastDay
				END
			ELSE
				BEGIN
					SET @tLastDay = '00'
				END
			IF(@tLastDay <> @tSaleDate)
				BEGIN
					SET @tRunningNo = @tStartNum
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
			ELSE
				BEGIN
					SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ใช้การ Run แบบต่อเนื่อง
	ELSE
	   BEGIN
		   IF(@tLastNo <> '')
			  BEGIN
			     SET @tRunningNo = @tLastNo + 1
			  END
			ELSE
			  BEGIN
			    SET @tRunningNo = @tStartNum
			  END

		   SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)

		   SET @tNextDocNo = @tAutoFrm+@tRunningNo
	   END
	------------------------------------------------------------------------------------------------------------------------------

	--เลขที่เอกสารที่ได้
	--PRINT(@tNextDocNo)
    SELECT @tNextDocNo AS FTXxhDocNo

END TRY
BEGIN CATCH
     return -1
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_FormSO]    Script Date: 5/8/2563 13:03:56 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_FormSO]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_FormSO] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_FormSO]
	@ptDocNo Varchar(100) ,
	@ptUsrSession Varchar(100) ,
	@ptComName Varchar(100) ,
	@ptBCH Varchar(5) ,
	@FNResult INT OUTPUT 
AS
BEGIN TRY
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlHD VARCHAR(8000)
	DECLARE @tDocNo VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(100)
	DECLARE @tComName VARCHAR(100)
	DECLARE @tBCH VARCHAR(5)
	DECLARE @tGrandText VARCHAR(8000)
	DECLARE @nSumTotal NUMERIC(18,2)
	DECLARE @nSumDiscount NUMERIC(18,2)
	DECLARE @nSumAFTotal NUMERIC(18,2)
	DECLARE @nSumVAT NUMERIC(18,2) 

	SET @tDocNo			= @ptDocNo
	SET @tUsrSession	= @ptUsrSession
	SET @tComName		= @ptComName
	SET @FNResult		= 0
	SET @tBCH			= @ptBCH

	--SELECT @tGrandText = [dbo].[udf_Num2Thai](52589.60)
	--print @tGrandText
	-------------------------------------------------------------------------------------------------

	--ลบข้อมูลก่อน DT
	DELETE FROM TARTSoDTForm WITH (ROWLOCK) WHERE FTXshDocNo =  '' + @tDocNo + '' AND FTUsrSession = '' + @tUsrSession + '' AND FTComName = '' + @tComName + '' 

	--เพิ่มข้อมูล DT
	SET @tSql  =  ' INSERT INTO TARTSoDTForm ( '
	SET @tSql  += ' FTXshDocNo , FTPdtCode , FTXsdPdtName , FTPunName , FTXsdBarCode , '
	SET @tSql  += ' FCXsdQty , FCXsdSalePrice , FCXsdAmtB4DisChg , FCXsdNet , FCXsdVatable , '
	SET @tSql  += ' FCXsdVat , FTUsrSession , FTComName )'
	SET @tSql  += '	SELECT 
						NewPrice.FTXshDocNo,
						NewPrice.FTPdtCode, 
						NewPrice.FTXsdPdtName, 
						NewPrice.FTPunName, 
						NewPrice.FTXsdBarCode,
						NewPrice.FCXsdQty,
						ISNULL(NewPrice.FCPgdPriceRet,0) AS FCXsdSalePrice,
						ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) AS FCXsdAmtB4DisChg ,
						ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg AS FCXsdNet ,
						CASE WHEN NewPrice.FTXsdVatType = 1 --มี VAT
						THEN
							(
								CASE WHEN NewPrice.FTXshVATInOrEx = 1 --รวมใน
								THEN 
									ROUND((ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg  * 100) - ((ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg  * 100) / (100 + NewPrice.FCXsdVatRate)),2)
								ELSE  --แยกนอก
									ROUND(((ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg * ( 100 + NewPrice.FCXsdVatRate)) /100 ) - ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg,2)
								END
							)
						ELSE 0 --ไม่มี VAT
						END AS FCXsdVatable ,
						CASE WHEN NewPrice.FTXsdVatType = 1 --มี VAT
							THEN
								(
									CASE WHEN NewPrice.FTXshVATInOrEx = 1 --รวมใน
									THEN 
										(ROUND((ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg  * 100) / (100 + NewPrice.FCXsdVatRate),2))
									ELSE  --แยกนอก
										ROUND(((ISNULL(NewPrice.FCXsdQty,0) * ISNULL(NewPrice.FCPgdPriceRet,0) - NewPrice.FCXsdDis + NewPrice.FCXsdChg * ( 100 + NewPrice.FCXsdVatRate)) /100 ),2)
									END
								)
							ELSE 0 --ไม่มี VAT
						END AS FCXsdVat,
						''' + @tUsrSession + ''' AS FTUsrSession,
						''' + @tComName + ''' AS FTComName
					FROM (
						SELECT 
							DT.*,
							HD.FTXshVATInOrEx,
							CASE 
							 WHEN ISNULL(PCUS.FCPgdPriceRet,0) <> 0 THEN PCUS.FCPgdPriceRet
							 WHEN ISNULL(PBCH.FCPgdPriceRet,0) <> 0 THEN PBCH.FCPgdPriceRet
							 WHEN ISNULL(PEMPTY.FCPgdPriceRet,0) <> 0 THEN PEMPTY.FCPgdPriceRet
							 ELSE 0
							END AS FCPgdPriceRet
						FROM TARTSoDT AS DT
						LEFT JOIN TARTSoHD HD ON DT.FTXshDocNo = HD.FTXshDocNo 
						LEFT JOIN (
							SELECT * FROM (
							SELECT 
								ROW_NUMBER () OVER ( PARTITION BY FTPdtCode , FTPunCode ORDER BY FDPghDStart DESC) AS FNRowPart,
								FTPdtCode , 
								FTPunCode , 
								FCPgdPriceRet 
								FROM TCNTPdtPrice4PDT WHERE  
							FDPghDStart <= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND FDPghDStop >= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND FTPplCode = ''00002''
							AND FTPdtCode IN (SELECT FTPdtCode FROM TARTSoDT WHERE FTXshDocNo = ''' + @tDocNo + ''')
							) AS PCUS 
							WHERE PCUS.FNRowPart = 1 
						) PCUS ON DT.FTPdtCode = PCUS.FTPdtCode AND DT.FTPunCode = PCUS.FTPunCode 
            
						--ราคาของสาขา
						LEFT JOIN (
							SELECT * FROM (
							SELECT 
								ROW_NUMBER () OVER ( PARTITION BY FTPdtCode , FTPunCode ORDER BY FDPghDStart DESC) AS FNRowPart,
								FTPdtCode , 
								FTPunCode , 
								FCPgdPriceRet 
								FROM TCNTPdtPrice4PDT WHERE  
							FDPghDStart <= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND FDPghDStop >= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND FTPplCode = (SELECT FTPplCode FROM TCNMBranch WHERE FTPplCode != '''' AND FTBchCode = ''' + @tBCH + ''')
							AND FTPdtCode IN (SELECT FTPdtCode FROM TARTSoDT WHERE FTXshDocNo = ''' + @tDocNo + ''')
							) AS PCUS 
							WHERE PCUS.FNRowPart = 1 
						) PBCH ON DT.FTPdtCode = PBCH.FTPdtCode AND DT.FTPunCode = PBCH.FTPunCode 
        
						--ราคาที่ไม่กำหนด PPL
						LEFT JOIN (
							SELECT * FROM (
							SELECT 
								ROW_NUMBER () OVER ( PARTITION BY FTPdtCode , FTPunCode ORDER BY FDPghDStart DESC) AS FNRowPart,
								FTPdtCode , 
								FTPunCode , 
								FCPgdPriceRet 
								FROM TCNTPdtPrice4PDT WHERE  
							FDPghDStart <= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND FDPghDStop >= CONVERT (VARCHAR(10), GETDATE(), 121)
							AND ISNULL(FTPplCode,'''') = ''''
							AND FTPdtCode IN (SELECT FTPdtCode FROM TARTSoDT WHERE FTXshDocNo = ''' + @tDocNo + ''')
							) AS PCUS 
							WHERE PCUS.FNRowPart = 1 
						) PEMPTY ON DT.FTPdtCode = PEMPTY.FTPdtCode AND DT.FTPunCode = PEMPTY.FTPunCode
						WHERE DT.FTXshDocNo = ''' + @tDocNo + '''
					) AS NewPrice '
	EXECUTE(@tSql)

	----------------------------------------------------------------------------------------------------

	--ลบข้อมูลก่อน HD
	DELETE FROM TARTSoHDForm WITH (ROWLOCK) WHERE FTXshDocNo = '' + @tDocNo + '' AND FTUsrSession = '' + @tUsrSession + '' AND FTComName = '' + @tComName + '' 

	--รวมจำนวนเงิน
	SELECT @nSumTotal		= ISNULL(SUM(FCXsdNet),0) FROM TARTSoDTForm WHERE FTXshDocNo = '' + @tDocNo + ''
	
	--ส่วนลด
	SELECT @nSumDiscount	= ISNULL(SUM(FCXshDis),0) + ISNULL(SUM(FCXshChg),0) FROM TARTSoHD WHERE FTXshDocNo = '' + @tDocNo + ''

	--ยอดภาษี
	SELECT @nSumVAT			= SUM(FCXsdVat)  FROM TARTSoDTForm WHERE FTXshDocNo = '' + @tDocNo + ''

	--ยอดรวมหลังลด/ชาร์จ ก่อน Vat	
	SET @nSumAFTotal		= (@nSumTotal - @nSumDiscount)

	--เพิ่มข้อมูล HD
	SET @tSqlHD  =  ' INSERT INTO TARTSoHDForm ( '
	SET @tSqlHD  += ' FTXshDocNo , FTCstCode , FTCstName , FTAddName , FTAddV1Village , '
	SET @tSqlHD  += ' FTAddV1No , FTAddV1Soi , FTAddV1Road , FTAddV1SubDist , FTAddV1DstCode , '
	SET @tSqlHD  += ' FTAddV1PvnCode , FTAddCountry , FTAddV1PostCode , FTAddV2Desc1 , '
	SET @tSqlHD  += ' FTAddV2Desc2 , FTAddWebsite , FTCstTel , FTCstFax , FTCstEmail , '
	SET @tSqlHD  += ' FTAddRmk , FTXshVATInOrEx , FCXshTotal , FCXshDis , FCXshTotalAfDisB4V , '
	SET @tSqlHD  += ' FCXshVat , FCXshGrand , FTXshGndText , FTXshRmk , FTUsrSession ,FTComName  )'
	SET @tSqlHD  += ' SELECT 
						HD.FTXshDocNo,
						CST.FTCstCode,
						CSTL.FTCstName,
						ADR.FTAddName,
						ADR.FTAddV1Village ,
						ADR.FTAddV1No ,
						ADR.FTAddV1Soi ,
						ADR.FTAddV1Road ,
						ADR.FTAddV1SubDist ,
						ADR.FTAddV1DstCode ,
						ADR.FTAddV1PvnCode ,
						ADR.FTAddCountry ,
						ADR.FTAddV1PostCode ,
						ADR.FTAddV2Desc1 ,
						ADR.FTAddV2Desc2 ,
						ADR.FTAddWebsite ,
						CST.FTCstTel ,
						CST.FTCstFax ,
						CST.FTCstEmail ,
						ADR.FTAddRmk ,
						HD.FTXshVATInOrEx ,
						'''+CAST(@nSumTotal AS VARCHAR(50)) +''' AS FCXshTotal ,
						HD.FCXshDis ,
						'''+CAST(@nSumAFTotal AS VARCHAR(50)) +''' AS FCXshTotalAfDisB4V,
						'''+CAST(@nSumVAT AS VARCHAR(50)) +''' AS FCXshVat ,
						CASE 
							WHEN HD.FTXshVATInOrEx = 1 THEN '+CAST((@nSumTotal - @nSumDiscount) AS VARCHAR(50))+'
							WHEN HD.FTXshVATInOrEx = 2 THEN '+CAST(((@nSumTotal - @nSumDiscount) + @nSumVAT) AS VARCHAR(50))+'
							ELSE 0
						END AS FCXshGrand ,
						CASE 
							WHEN HD.FTXshVATInOrEx = 1 THEN [dbo].[FN_CNtCurrencyToThai]('+CAST((@nSumTotal - @nSumDiscount) AS VARCHAR(50))+')
							WHEN HD.FTXshVATInOrEx = 2 THEN [dbo].[FN_CNtCurrencyToThai]('+CAST(((@nSumTotal - @nSumDiscount) + @nSumVAT) AS VARCHAR(50))+')
							ELSE ''''
						END AS FTXshGndText ,
						HD.FTXshRmk,
						'''+@tUsrSession+''' AS FTUsrSession,
						'''+@tComName+''' AS FTComName
					FROM TARTSoHD HD
					LEFT JOIN TCNMCst CST ON HD.FTCstCode = CST.FTCstCode
					LEFT JOIN TCNMCst_L CSTL ON CST.FTCstCode = CSTL.FTCstCode AND CSTL.FNLngID = 1
					LEFT JOIN TCNMCstAddress_L ADR ON ADR.FTCstCode = CST.FTCstCode AND ADR.FNLngID = 1
					WHERE HD.FTXshDocNo = '''+@tDocNo+''' '
	--print CONVERT(VARCHAR(MAX),@tSqlHD)
	EXECUTE(@tSqlHD)
END TRY
BEGIN CATCH 
	SET @FNResult= -1
END CATCH		
GO




/*============================================== STORED REPORT ===========================================================*/

/****** Object:  StoredProcedure [dbo].[SP_RPTxAdjustCashInCard]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxAdjustCashInCard]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxAdjustCashInCard] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxAdjustCashInCard] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ÀÒÉÒ
--@pnComName เครื่องคอม
--@ptRptName ชื่อรายงาน
-- @pnCrdF ¨Ò¡ºÑµÃ 
-- @pnCrdT ¶Ö§ËÁÒÂàÅ¢ºÑµÃ
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName 'AdjustCashInCard'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null
	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END


	SET @tSql1 = ' WHERE 1=1 '
	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN
		SET @tSql1 +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
		
	--print @tSql1
	--DECLARE @nComName Varchar(100)
	--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp

	SET @tSql ='INSERT INTO TFCTRptCrdTmp WITH (ROWLOCK) ' --à¾ÔèÁ¢éÍÁÙÅãËÁè·Õè Contion Å§ Temp
	SET @tSql +=' ('		
	SET @tSql +='  FTComName,FTRptName,FTTxnPosCode, FDTxnDocDate, FTCrdCode, FTCrdName, FCTxnValue, FTCdtRmk'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''',''' + @tRptName + ''',FTTxnPosCode, FDTxnDocDate, FTCrdCode, FTCrdName, FCTxnValue, FTCdtRmk'
	SET @tSql +=' FROM('
	SET @tSql +=' SELECT  A.FTTxnPosCode, A.FDTxnDocDate, A.FTTxnDocType, A.FTTxnDocNoRef, A.FTCrdCode, CRDX.FDCrdExpireDate, A.FTCdtRmk, '
	SET @tSql +=' CRDL.FTCrdName, CTYL.FTCtyName, DPL.FTDptName, CRD.FTCrdStaActive, '
	SET @tSql +=' CRD.FTCrdHolderID, TOPHD.FTUsrName, A.FCTxnCrdValue, A.FCTxnValue, A.FCTxnCrdValue + A.FCTxnValue AS FCTxnValAftTrans '
	--SET @tSql +=' ISNULL(CRDL.FNLngID, 1) AS FNLngID, ISNULL(CTYL.FNLngID, 1) AS FNCtyLngID, ISNULL(DPL.FNLngID, 1) AS FNDplLngID'
	SET @tSql +=' FROM  (SELECT ISNULL(FTTxnPosCode, ''N/A'') AS FTTxnPosCode, FDTxnDocDate, FTCrdCode, FCTxnValue, '''' AS FTCdtRmk, FTTxnDocType, FTTxnDocNoRef, FCTxnCrdValue'
	SET @tSql +=' FROM  dbo.TFNTCrdHis AS CHIS WITH (NOLOCK)'
	SET @tSql += @tSql1
	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT ISNULL(CT.FTTxnPosCode, ''N/A'') AS FTTxnPosCode, CT.FDTxnDocDate, CT.FTCrdCode, CT.FCTxnValue, '''' AS FTCdtRmk, CT.FTTxnDocType, CT.FTTxnDocNoRef, CT.FCTxnCrdValue'
	SET @tSql +=' FROM dbo.TFNTCrdTopUp AS CT WITH (NOLOCK) INNER JOIN'
	SET @tSql +=' dbo.TFNTCrdTopUpHD AS CTHD WITH (NOLOCK) ON CT.FTTxnDocNoRef = CTHD.FTCthDocNo'
	SET @tSql += @tSql1
	SET @tSql +=' ) AS A LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNTCrdTopUpHD AS TOPHD WITH (NOLOCK) ON A.FTTxnDocNoRef = TOPHD.FTCthDocNo  LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON A.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCardType_L AS CTYL WITH (NOLOCK) ON CRD.FTCtyCode = CTYL.FTCtyCode AND CTYL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard AS CRDX WITH (NOLOCK) ON A.FTCrdCode = CRDX.FTCrdCode'
	SET @tSql +=' WHERE  (A.FTTxnDocType IN (''1'', ''5''))'
	SET @tSql +=' ) CrdTopup'
	--PRINT @tSql
	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	--EXECUTE @tSqlIns
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --print @tSql
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxBnkDplTmp_Moshi]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxBnkDplTmp_Moshi]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxBnkDplTmp_Moshi] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxBnkDplTmp_Moshi]
--ALTER PROCEDURE [dbo].[SP_RPTxBnkDplTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	@ptAccNoF Varchar(20),
	@ptAccNoT Varchar(20), --เลขที่บัญชี


	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Edit 24/04/2020
	--เปลี่ยน Field FDBdhRefExtDate เป็น FDBddRefDate'
   -------------------------------------------
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ


-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tMerF Varchar(10)
	--DECLARE @tMerT Varchar(10)
	--DECLARE @tPosF Varchar(5)
	--DECLARE @tPosT Varchar(5)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)
	DECLARE @tWahOUTF Varchar(5)
	DECLARE @tWahOUTT Varchar(5)
	
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)



	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	----Pos
	--SET @tPosF  = @ptPosF 
	--SET @tPosT  = @ptPosT

	--SET @tWahF = @ptWahINF
	--SET @tWahT = @ptWahINT
	--SET @tWahOUTF = @ptWahOUTF
	--SET @tWahOUTT = @ptWahOUTT


	
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptAccNoF =null
	BEGIN
		SET @ptAccNoF = ''
	END
	IF @ptAccNoT =null OR @ptAccNoT = ''
	BEGIN
		SET @ptAccNoT = @ptAccNoF
	END

	
	

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 AND HD.FTBdhStaDoc = ''1'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	
	IF (@ptAccNoF <> '' AND @ptAccNoT <> '')
	BEGIN
		SET @tSql1 +=' AND Bkb.FTBbkAccNo BETWEEN ''' + @ptAccNoF + ''' AND ''' + @ptAccNoT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDBdhDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTBnkDplTmp_Moshi WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 

    SET @tSql = ' INSERT INTO TRPTBnkDplTmp_Moshi'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FDBdhDate,FTBdhDocNo,FTBbkCode,FTBbkAccNo ,FTBbkType,FTBddType,FDBdhRefExtDate,FCBddRefAmt'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' CONVERT(VARCHAR(10),HD.FDBdhDate,121) AS FDBdhDate,HD.FTBdhDocNo,HD.FTBbkCode, Bkb.FTBbkAccNo,'
	SET @tSql +=' CASE Bkb.FTBbkType'
		SET @tSql +=' WHEN ''1'' THEN ''ออมทรัพย์'''
		SET @tSql +=' WHEN ''2'' THEN ''กระแสรายวัน'''
		SET @tSql +=' WHEN ''3'' THEN ''ประจำ'''
	SET @tSql +=' END '
	SET @tSql +=' AS FTBbkType, '
	SET @tSql +=' CASE DT.FTBddType'
		SET @tSql +=' WHEN ''1'' THEN ''เงินสด'''
		SET @tSql +=' WHEN ''2'' THEN ''เช็ค'''
	SET @tSql +=' END'
	SET @tSql +=' AS FTBddType,'
	--24-04-2020 แจ้งเปลี่ยนชื่อ Field โดยเติ้ก
	--SET @tSql +=' HD.FDBdhRefExtDate,'
	SET @tSql +=' DT.FDBddRefDate AS FDBdhRefExtDate,'
	SET @tSql +=' DT.FCBddRefAmt'
		--Bdt.FTBdtCode,Bdt.FTBdtName
	SET @tSql +=' FROM  TFNTBnkDplHD  HD'
	SET @tSql +=' INNER JOIN TFNTBnkDplDT  DT WITH (NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTBdhDocNo = DT.FTBdhDocNo'
	SET @tSql +=' LEFT JOIN TFNMBookBank Bkb WITH (NOLOCK) ON HD.FTBbkCode = Bkb.FTBbkCode AND HD.FTBchCode = Bkb.FTBchCode AND HD.FTMerCode = Bkb.FTMerCode'
		--LEFT JOIN TFNMBnkDepType_L Bdt WITH (NOLOCK) ON HD.FTBdtCode = Bdt.FTBdtCode AND Bdt.FNLngID = 1
	--SET @tSql +=' WHERE HD.FTBdhStaDoc = ''1'''
	SET @tSql += @tSql1		
	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTBnkDplTmp_Moshi WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH			

--SELECT * FROM TFNMBookBank
--SELECT * FROM  TFNTBnkDplHD
--SELECT * FROM  TFNTBnkDplDT
--SELECT * FROM TFNMBookBank
--SELECT * FROM TFNMBookBank_L
--SELECT * FROM TFNMBank_L
--SELECT * FROM TFNMBank
--SELECT * FROM TFNMBnkDepType
--SELECT * FROM TFNMBnkDepType_L
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxBookingLocker003001010]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxBookingLocker003001010]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxBookingLocker003001010] AS' 
END
GO
-- =============================================
-- StoreName: SP_RPTxBookingLocker003001010 (รายงาน-การจองช่องฝากของ)
-- Create date: 28/11/2019 Wasin(Yoshi)
-- Description:	ดึงข้อมูลและเพิ่มข้อมูลลงตาราง TRPTRTBookingTmp
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxBookingLocker003001010]
	-- Input Parameter
	@pnLngID int,
	@ptComName varchar(100),
	@ptRptCode varchar(100),
	@ptUsrSession varchar(100),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF varchar(5),
	--@ptBchT varchar(5),
	--@ptShpF varchar(5),
	--@ptShpT varchar(5),
	--@ptPosF varchar(5),
	--@ptPosT varchar(5),
	@ptPzeF	varchar(5),
	@ptPzeT	varchar(5),
	@ptDateF varchar(10),
	@ptDateT varchar(10),
	@ptStaBK varchar(1),
	@ptStaPD varchar(50),
	-- Output Parameter
	@FNResult INT OUTPUT
AS
BEGIN TRY	
	-- Declare Parameter
	DECLARE @nLngID int 
	DECLARE @tComName varchar(100)
	DECLARE @tRptCode varchar(100)
	DECLARE @tUsrSession varchar(100)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF varchar(5)
	--DECLARE @tBchT varchar(5)
	--DECLARE @tShpF varchar(5)
	--DECLARE @tShpT varchar(5)
	--DECLARE @tPosF varchar(5)
	--DECLARE @tPosT varchar(5)
	DECLARE @tPzeF varchar(5)
	DECLARE @tPzeT varchar(5)
	DECLARE @tDateF varchar(10)
	DECLARE @tDateT varchar(10)
	DECLARE @tStaBK varchar(1)
	DECLARE @tStaPD varchar(50)

	DECLARE @tSql VARCHAR(8000)
	DECLARE @tWhereFilter VARCHAR(8000)

	-- Set Parameter 
	SET @nLngID			= @pnLngID
	SET @tComName		= @ptComName
	SET @tRptCode		= @ptRptCode
	SET @tUsrSession	= @ptUsrSession

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF			= @ptBchF
	--SET @tBchT			= @ptBchT
	--SET @tShpF			= @ptShpF
	--SET @tShpT			= @ptShpT
	--SET @tPosF			= @ptPosF
	--SET @tPosT			= @ptPosT
	SET @tPzeF			= @ptPzeF
	SET @tPzeT			= @ptPzeT
	SET @tDateF			= @ptDateF
	SET @tDateT			= @ptDateT
	SET @tStaBK			= @ptStaBK
	SET @tStaPD			= @ptStaPD

	-- Check Lang ID
	IF @nLngID = ''
	BEGIN
		SET @nLngID = 1
	END	
	-- Set ค่าให้ Parameter กรณี T เป็นค่าว่างหรือ null
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END


	-- Check Null Shop Size
	IF @tPzeF = null
	BEGIN
		SET @tPzeF = ''
	END 
	IF @tPzeT = null OR @tPzeT =''
	BEGIN
		SET @tPzeT = @tPzeF
	END 
	-- Check Null Date Booking
	IF @tDateF = null
	BEGIN
		SET @tDateF = ''
	END 
	IF @tDateT = null OR @tDateT =''
	BEGIN
		SET @tDateT = @tDateF
	END 
	-- Check Null Status Booking
	IF @tStaBK = null
	BEGIN
		SET @tStaBK = ''
	END
	-- Check Null Status Producer
	IF @tStaPD = null
	BEGIN
		SET @tStaPD = ''
	END

	-- Check Brach Where Filter
	SET @tWhereFilter		= ' WHERE 1=1'

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((BCH.FTBchCode BETWEEN '''+@tBchF+''' AND '''+@tBchT+''') OR (BCH.FTBchCode BETWEEN '''+@tBchT+''' AND '''+@tBchF+'''))'
	--END
	---- Check Shop Where Filter
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((SHP.FTShpCode BETWEEN '''+@tShpF+''' AND '''+@tShpT+''') OR (SHP.FTShpCode BETWEEN '''+@tShpT+''' AND '''+@tShpF+'''))'
	--END
	---- Check Pos Where Filter
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((BKG.FTBkgToPos BETWEEN '''+@tPosF+''' AND '''+@tPosT+''') OR (BKG.FTBkgToPos BETWEEN '''+@tPosT+''' AND '''+@tPosF+'''))'
	--END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tWhereFilter +=' AND BCH.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tWhereFilter +=' AND SHP_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tWhereFilter +=' AND SHP.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tWhereFilter += ' AND BKG.FTBkgToPos BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND BCH.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND SHP_F.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tWhereFilter +=' AND SHP.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tWhereFilter += ' AND BKG.FTBkgToPos IN (' + @ptPosL + ')'
		END		
	END

	-- Check Shop Size Where Filter
	IF (@tPzeF <> '' AND @tPzeT <> '')
	BEGIN
		SET @tWhereFilter	+= ' AND ((BKG.FTBkgToSize BETWEEN '''+@tPzeF+''' AND '''+@tPzeT+''') OR (BKG.FTBkgToSize BETWEEN '''+@tPzeT+''' AND '''+@tPzeF+'''))'
	END
	-- Check Date Booking Where Filter
	IF (@tDateF <> '' AND @tDateT <> '')
	BEGIN
		SET @tWhereFilter	+= ' AND ((CONVERT(VARCHAR(10),BKG.FDBkgToStart ,121) BETWEEN '''+@tDateF+''' AND '''+@tDateT+''') OR (CONVERT(VARCHAR(10),BKG.FDBkgToStart ,121) BETWEEN '''+@tDateT+''' AND '''+@tDateF+'''))'
	END
	-- Check Status Booking
	IF(@tStaBK <> '')
	BEGIN
		SET @tWhereFilter	+= ' AND (BKG.FTBkgStaBook = '''+@tStaBK+''')'
	END
	-- Check Status Producer
	IF(@tStaPD <> '')
	BEGIN
		SET @tWhereFilter	+= ' AND (BKG.FTBkgProducer = '''+@tStaPD+''')'
	END
	
	-- Delete Data In Temp
	DELETE FROM TRPTRTBookingTmp WITH(ROWLOCK) WHERE FTComName = ''+@tComName+'' AND FTRptCode = ''+@tRptCode+''

	--INSERT INTO TRPTRTBookingTmp
	SET @tSql	=' INSERT INTO TRPTRTBookingTmp ( '
	SET @tSql	+='	FTComName,FTRptCode,FTUsrSession,FNBkgDocID,FTUsrCode,FTUsrName,FTBkgToBch,FTBkgToBchName,FTBkgToShp,FTBkgToShpName,FTBkgToPos,FNBkgToLayNo,FTBkgToSize,FTBkgToSizeName,'
	SET @tSql	+='	FTBkgToRate,FTBkgToRateName,FDBkgToStartDate,FTBkgToStartTime,FTBkgRefCst,FTBkgRefCstLogin,FTBkgRefCstDoc,FTBkgProducer,FTBkgStaBook,FTBkgRefSale'
	SET @tSql	+=' )'
	SET @tSql	+=' SELECT '''+@tComName+''' AS FTComName,'''+@tRptCode+''' AS FTRptCode,'''+@tUsrSession+''' AS FTUsrSession,'
	SET @tSql	+='	BKG.FNBkgDocID,BKG.FTUsrCode,USR.FTUsrName,'
	SET @tSql	+='	BCH.FTBchCode,BCH.FTBchName,SHP.FTShpCode,SHP.FTShpName,BKG.FTBkgToPos,BKG.FNBkgToLayNo,BKG.FTBkgToSize,SZE.FTSizName,BKG.FTBkgToRate,RTH.FTRthName,'
	SET @tSql	+='	CONVERT(VARCHAR(10),BKG.FDBkgToStart,121) AS FDBkgDate,SUBSTRING(CONVERT(VARCHAR(19),BKG.FDBkgToStart ,121),11,9 ) AS FDBkgTime,BKG.FTBkgRefCst,'
	SET @tSql	+='	BKG.FTBkgRefCstLogin,BKG.FTBkgRefCstDoc AS FTBkgTrackingNo,BKG.FTBkgProducer,BKG.FTBkgStaBook,BKG.FTBkgRefSale'
	SET @tSql	+=' FROM TRTTBooking BKG WITH(NOLOCK)'
	SET @tSql	+=' LEFT JOIN TCNMBranch_L BCH ON BKG.FTBkgToBch = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+=' LEFT JOIN TRTMShopPos PSH	ON BKG.FTBkgToPos = PSH.FTPosCode'
	SET @tSql	+=' LEFT JOIN TCNMShop_L SHP	ON PSH.FTShpCode = SHP.FTShpCode AND SHP.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+=' LEFT JOIN TRTMShopSize_L SZE ON BKG.FTBkgToSize = SZE.FTSizCode AND SZE.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+=' LEFT JOIN TRTMPriRateHD_L RTH ON BKG.FTBkgToRate = RTH.FTRthCode AND RTH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+=' LEFT JOIN TCNMUser_L USR ON BKG.FTUsrCode = USR.FTUsrCode AND USR.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+=' LEFT JOIN TCNMCst_L CST ON BKG.FTBkgRefCst = CST.FTCstCode AND CST.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql   +=' LEFT JOIN TCNMShop SHP_F ON PSH.FTShpCode = SHP_F.FTShpCode AND BCH.FTBchCode = SHP_F.FTBchCode '
	PRINT(@tSql)
	SET @tSql	+= @tWhereFilter
	PRINT(@tSql)

	-- Execute Sql 
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTBookingTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY
BEGIN CATCH 
	SET @FNResult= -1
	PRINT @tSql
END CATCH	



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCancelBillByDate]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCancelBillByDate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCancelBillByDate] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCancelBillByDate]
--ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),



	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
  @pnVoidType int, -- 1 ยกเลิกรายการ ,  2 ยกเลิกบิล
	@FNResult INT OUTPUT 
AS
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)


	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	DECLARE @nVoidType int 

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT


	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	SET @nVoidType = @pnVoidType

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

		
	SET @tSql1 =   ' WHERE 1=1 '


	IF @nVoidType <> ''
BEGIN
	SET @tSql1 +=' AND VDT.FTVidType ='''+ CAST(@nVoidType  AS VARCHAR(10)) + ''' '
END
	
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND VDT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND VDT.FTBchCode IN (' + @ptBchL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),VDT.FDXihDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTCancelBillByDateTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
 

  SET @tSql = ' INSERT INTO TRPTCancelBillByDateTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FDXihDocDate,FTXihDocNo,FTPdtCode,FTXidPdtName,FCXidQty,FTPunName,FTRsnName,FTUsrVoidName,FTUsrAprvName '
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' VDT.FTBchCode,VDT.FDXihDocDate,VDT.FTXihDocNo,VDT.FTPdtCode,VDT.FTXidPdtName,VDT.FCXidQty,'
	SET @tSql +=' UNL.FTPunName,RSN.FTRsnName,APRV.FTUsrName AS FTUsrVoidName,APRV.FTUsrName AS FTUsrAprvName'
	SET @tSql +=' FROM'
  SET @tSql +=' TPSTVoidDT VDT'
  SET @tSql +=' LEFT JOIN TCNMPdtUnit_L UNL ON VDT.FTPunCode  = UNL.FTPunCode AND UNL.FNLngID=''' + CAST(@nLngID  AS VARCHAR(10)) + ''' '
  SET @tSql +=' LEFT JOIN TCNMUser_L    APRV ON APRV.FTUsrCode = VDT.FTCreateBy AND APRV.FNLngID='''+ CAST(@nLngID  AS VARCHAR(10)) +''' '
  SET @tSql +=' LEFT JOIN TCNMRsn_L     RSN ON RSN.FTRsnCode = VDT.FTRsnCode AND RSN.FNLngID='''+ CAST(@nLngID  AS VARCHAR(10)) +''' '
	SET @tSql += @tSql1
	SET @tSql +=' ORDER BY VDT.FDXihDocDate,VDT.FTXihDocNo,VDT.FTPdtCode'

	--PRINT @tSql

	EXECUTE(@tSql)
	--RETURN SELECT * FROM TRPTCancelBillByDateTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1

END CATCH			




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardActiveDetail]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardActiveDetail]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardActiveDetail] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardActiveDetail] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @ptRptName ชื่อรายงาน
-- @ptRptName ชื่อรายงาน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptCrdF จากร้านค้า
-- @ptCrdT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardActiveDetail'
	--SET @tBchF = '00032'
	--SET @tBchT = '00034'
	--SET @tCrdF = '555'
	--SET @tDcrT = '777'

	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardActiveDetail'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tCrdF = ''
	--SET @tCrdT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 
	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	DELETE FROM TFCTRptCrdAnalysisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	DECLARE @tTableName VARCHAR(100) 
	DECLARE @tSqlTbl nVARCHAR(Max)
	SET @tTableName ='TFCTRptTmp' + @nComName 
	--DROP TABLE TFCTRptTmpAda062 --@tTableName
	--DROP TABLE Ada062 --@tTableName
	SET @tTableName = REPLACE(@tTableName,'-','')
	PRINT @tTableName
    SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TFCTRptCrdAnalysisTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptName +''''
	EXECUTE(@tSqlTbl)

	PRINT @tSqlTbl
	SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	EXECUTE(@tSqlTbl)
	
	--SELECT * FROM #TFCTRptCrdAnalysisTmp

	SET @tSql ='INSERT INTO '+ @tTableName +' WITH(ROWLOCK)' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp #TFCTRptCrdTemp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	--SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSql +='FTBchCode, FTBchName, FTCrdCode, FTCrdName,FDTxnDocDate, FTTxnDocTypeName, FTCrdHolderID, FTTxnPosCode, FCTxnCrdValue, FTTxnDocType, FCTxnValue, FNLngID'
	SET @tSql +=') '
	SET @tSql += 'SELECT '''+ @nComName + ''' AS FTComName, '''+ @tRptName +''' AS FTRptName,'
	--SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType,''' + CAST(@nLngID  AS VARCHAR(10)) + ''', FDTxnDocDate, FCTxnValue'
	SET @tSql +='FTBchCode, FTBchName, FTCrdCode, FTCrdName,FDTxnDocDate, A.FTTxnDocTypeName, FTCrdHolderID, FTTxnPosCode, A.FCTxnCrdValue, FTTxnDocType, FCTxnValue,'
	SET @tSql +='''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
			 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,ISNULL(CRDHIS.FTBchCode,'''') AS FTBchCode,ISNULL(CRDHIS.FTBchName,'''') AS FTBchName,'
		 SET @tSql += 'CRDHIS.FTTxnDocTypeName,CRDHIS.FCTxnCrdValue'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,C.FTBchCode,Bch_L.FTBchName,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ISNULL(C.FCTxnCrdValue, 0)+ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''2'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''3'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''4'' THEN ISNULL(C.FCTxnCrdValue, 0)+ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''5'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' ELSE C.FCTxnCrdValue'
			 SET @tSql += ' END AS FCTxnCrdValue,' 
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,'''') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate,121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate,121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(CRDL.FTCrdName,'''') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ''เติมเงิน;Topup'''
				SET @tSql += ' WHEN ''2'' THEN ''ยกเลิกเติมเงิน;Cancel Topup'''
				SET @tSql += ' WHEN ''3'' THEN ''ตัดจ่าย/ขาย;Sale'''
				SET @tSql += ' WHEN ''4'' THEN ''ยกเลิกตัดจ่าย;Cancel Sale'''
				SET @tSql += ' WHEN ''5'' THEN ''แลกคืน;Pay Back'''
				SET @tSql += ' WHEN ''6'' THEN ''เบิกบัตร;Card Requisition'''
				SET @tSql += ' WHEN ''7'' THEN ''คืนบัตร;Card Return'''
				SET @tSql += ' WHEN ''8'' THEN ''โอนเงินออก'''
				SET @tSql += ' WHEN ''9'' THEN ''โอนเงินเข้า'''
				SET @tSql += ' WHEN ''10'' THEN ''ล้างบัตร;Clear Card'''
				SET @tSql += ' WHEN ''11'' THEN ''ปรับสถานะ;Card Change Status'''
				SET @tSql += ' WHEN ''12'' THEN ''บัตรใหม่;New Card'''
				SET @tSql += ' ELSE ''ไม่ระบุ;Unknown'''
			 SET @tSql += ' END AS FTTxnDocTypeName'
			 SET @tSql += ' FROM'
				SET @tSql += '('

				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdSale WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tCrdF <> '' AND @tCrdT <> '')
				BEGIN
					SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
					SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard AS CRD WITH(NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard_L AS CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMPos AS POS WITH(NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCardType_L AS CTL WITH(NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMUsrDepart_L AS DPL WITH(NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMShop_L AS SHPL WITH(NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMBranch_L AS Bch_L WITH(NOLOCK) ON C.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate,121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM TFNMCard WITH(NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate,121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate,121)'
			SET @tSql += ' ) AS CRDHIS '
			SET @tSql += ' ) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' TCNMUser_L AS USRL WITH(NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'

			IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END

	SET @tSqlIns = 'INSERT INTO TFCTRptCrdAnalysisTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
    SET @tSqlIns += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName,FDTxnDocDate, FTTxnDocTypeName, FTCrdHolderID, FTTxnPosCode, FCTxnCrdValue, FTTxnDocType, FCTxnValue, FNLngID'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName,FDTxnDocDate, FTTxnDocTypeName, FTCrdHolderID, FTTxnPosCode, FCTxnCrdValue, FTTxnDocType, FCTxnValue, '+ @tTableName + '.FNLngID'
	SET @tSqlIns +=' FROM '+ @tTableName + ' LEFT JOIN'
	SET @tSqlIns += ' TCNMUser_L AS USRL WITH(NOLOCK) ON '+ @tTableName + '.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('

	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('

	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=')R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = '+ @tTableName + '.FNTxnIDRef'

	--PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	
	SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	PRINT @tSqlTbl
	EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TFCTRptCrdAnalysisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardActiveSummary]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardActiveSummary]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardActiveSummary] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardActiveSummary] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @ptRptName ชื่อรายงาน
-- @ptRptName ชื่อรายงาน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptCrdF จากร้านค้า
-- @ptCrdT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleShopByDate'
	--SET @tBchF = '00032'
	--SET @tBchT = '00034'
	--SET @tCrdF = '2019030501'
	--SET @tCrdT = '2019030600'

	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardActiveSummary'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tCrdF = ''
	--SET @tCrdT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 
	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	DELETE FROM TFCTRptCrdAnalysisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	DECLARE @tTableName VARCHAR(100) 
	DECLARE @tSqlTbl nVARCHAR(Max)
	SET @tTableName ='TFCTRptTmp' + @nComName 
	--DROP TABLE TFCTRptTmpAda062 --@tTableName
	--DROP TABLE Ada062 --@tTableName
	SET @tTableName = REPLACE(@tTableName,'-','')
	PRINT @tTableName

    SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TFCTRptCrdAnalysisTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptName +''''
	EXECUTE(@tSqlTbl)

	SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	PRINT @tSqlTbl
	EXECUTE(@tSqlTbl)
	
	--SELECT * FROM #TFCTRptCrdAnalysisTmp

	SET @tSql ='INSERT INTO '+ @tTableName +' WITH(ROWLOCK)' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp #TFCTRptCrdTemp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	SET @tSql += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName, FTTxnDocType, FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSql +=') '--SELECT * FROM #TFCTRptCrdTmp WITH(NOLOCK)'
	SET @tSql += 'SELECT '''+ @nComName + ''' AS FTComName, '''+ @tRptName +''' AS FTRptName,'
	SET @tSql += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName, FTTxnDocType, ''' + CAST(@nLngID  AS VARCHAR(10)) + ''', FDTxnDocDate, FCTxnValue'
	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 --SET @tSql += 'CRDHIS.FTTxnDocTypeName,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
		 --SET @tSql += 'ISNULL(TOPUP.FTCreateBy,'''') + ISNULL(VOID.FTCreateBy,'''') + ISNULL(IMP.FTCreateBy,'''') + ISNULL(SHIFT.FTCreateBy,'''') AS FTUsrCreate,'
		 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,ISNULL(CRDHIS.FTBchCode,'''') AS FTBchCode,ISNULL(CRDHIS.FTBchName,'''') AS FTBchName'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,C.FTBchCode,Bch_L.FTBchName,'
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,'''') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate,121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate,121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,'''') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance'
			 SET @tSql += ' FROM'
				SET @tSql += '('

				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdSale WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tCrdF <> '' AND @tCrdT <> '')
				BEGIN
					SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
					SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard AS CRD WITH(NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard_L AS CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMPos AS POS WITH(NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCardType_L AS CTL WITH(NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMUsrDepart_L AS DPL WITH(NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMShop_L AS SHPL WITH(NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMBranch_L AS Bch_L WITH(NOLOCK) ON C.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate,121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM TFNMCard WITH(NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate,121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate,121)'
			SET @tSql += ' ) AS CRDHIS '
			SET @tSql += ' ) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' TCNMUser_L AS USRL WITH(NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'

			IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END


	--SET @tSql += ' IN TO TFCTRptCrdAnalysisTmp'
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdAnalysisTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
    SET @tSqlIns += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName, FTTxnDocType, FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns += ' FTBchCode, FTBchName, FTCrdCode, FTCrdName, FTTxnDocType, '+ @tTableName + '.FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSqlIns +=' FROM '+ @tTableName + ' LEFT JOIN'
	SET @tSqlIns += ' TCNMUser_L AS USRL WITH(NOLOCK) ON '+ @tTableName + '.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('

	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('

	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=')R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = '+ @tTableName + '.FNTxnIDRef'

	--PRINT @tSql
	EXECUTE(@tSql)

--	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	
	SET @tSqlTbl = 'DROP TABLE ' + @tTableName
	PRINT @tSqlTbl
	EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TFCTRptCrdAnalysisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --PRINT @tSqlTbl
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardBalance]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardBalance]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardBalance] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardBalance] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdStaActF Varchar(1), --สถานะบัตร
	@ptCrdStaActT Varchar(1),
	--@ptCrdTypeF Varchar(5), --ประเภทบัตร
	--@ptCrdTypeT Varchar(5),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
------------------------------------
 --Watcharakorn 
 --Create 06/06/2019
 --@pnLngID ภาษา
 --@pnComName
 --@tRptName ชื่อรายงาน
 --@@ptCrdStaActF Varchar(5), --สถานะบัตร
 --@@ptCrdStaActธ Varchar(5),
 --@ptDocDateF จากวันที่
 --@ptDocDateT ถึงวันที่
------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(Max)
	DECLARE @tSqlIns nVARCHAR(Max)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)
	--FTCtyCode
	DECLARE @tCrdStaActF Varchar(1) --ประเภทบัตร
	DECLARE @tCrdStaActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardBalance'
	--SET @tCrdStaActF = '1'
	--SET @tCrdStaActT = '3'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardBalance'
	--SET @tCrdStaActF = ''
	--SET @tCrdStaActT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdStaActF = @ptCrdStaActF
	SET @tCrdStaActT = @ptCrdStaActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(19),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(19),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tCrdStaActF = null
	BEGIN
		SET @tCrdStaActF = ''
	END		
	IF @tCrdStaActT = '' OR @tCrdStaActT = null
	BEGIN
		SET @tCrdStaActT = @tCrdStaActF
	END
		 
	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END


	SET @tSql1 = ' WHERE 1=1 '

	IF @tCrdStaActF <> '' AND @tCrdStaActT <> ''
	BEGIN
		SET @tSql1 +=' AND  CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActF + ''' AND ''' + @tCrdStaActT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
	
	print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptBalCrdTemp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	--WAITFOR DELAY '000:00:05'	

	SET @tSql ='INSERT INTO TFCTRptBalCrdTemp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,'
	SET @tSql +=' FTCrdStaActive,FNCrdBalanceQty,FCCrdBalanceValue,FNCrdInOutAdjQty,FCCrdInOutAdjValue,FNCrdSaleQty,FCCrdSaleValue,'
	SET @tSql +=' FNCrdRetQty,FNCrdRetValue,FNCrdSpendQty,FCCrdSpendValue,FNCrdExpireQty,FCCrdExpireValue,FTCrdStaActiveTH,FTCrdStaActiveEN'
	SET @tSql +=' )'--SELECT * FROM #TFCTRptCrdTmp WITH (NOLOCK)'
	SET @tSql += ' SELECT FTComName,FTRptName,'
	SET @tSql += ' TnsHis.FTCrdStaActive,SUM(TnsHis.FNCrdBalanceQty) AS FNCrdBalanceQty,SUM(TnsHis.FCCrdBalanceValue) AS FCCrdBalanceValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdInOutAdjQty) AS FNCrdInOutAdjQty,SUM(TnsHis.FCCrdInOutAdjValue) AS FCCrdInOutAdjValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdSaleQty) AS FNCrdSaleQty,SUM(TnsHis.FCCrdSaleValue) AS FCCrdSaleValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdRetQty) AS FNCrdRetQty,SUM(TnsHis.FNCrdRetValue) AS FNCrdRetValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdSpendQty) AS FNCrdSpendQty,SUM(TnsHis.FCCrdSpendValue) AS FCCrdSpendValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdExpireQty) AS FNCrdExpireQty,SUM(TnsHis.FCCrdExpireValue) AS FCCrdExpireValue,'	
	SET @tSql += ' CASE TnsHis.FTCrdStaActive '
	SET @tSql += ' WHEN ''1'' THEN ''ใช้งาน'''
	SET @tSql += ' WHEN ''2'' THEN ''ไม่ใช้งาน'''
	SET @tSql += ' WHEN ''3'' THEN ''ยกเลิก'''
	SET @tSql += ' ELSE ''สถานะไม่ถูกต้อง'''
	SET @tSql += ' END AS FTCrdStaActiveTH,'
	SET @tSql += ' CASE TnsHis.FTCrdStaActive '
	SET @tSql += ' WHEN ''1'' THEN ''Active'''
	SET @tSql += ' WHEN ''2'' THEN ''Inactive'''
	SET @tSql += ' WHEN ''3'' THEN ''Cancel'''
	SET @tSql += ' ELSE ''Invalid Status'''
	SET @tSql += ' END AS FTCrdStaActiveTH'
	SET @tSql += ' FROM'
		SET @tSql += ' ('
			SET @tSql += ' SELECT DISTINCT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,Crd.FTCrdCode,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN 1 ELSE 0 END AS FNCrdBalanceQty,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END AS FCCrdBalanceValue,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''1'' THEN 1'
				 SET @tSql += ' WHEN FTTxnDocType = ''8'' THEN -1'
				 SET @tSql += ' WHEN FTTxnDocType = ''9'' THEN 1'
				 SET @tSql += ' ELSE 0'
			SET @tSql += ' END) AS FNCrdInOutAdjQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''1'' THEN ISNULL(FCCrdValue,0)'
				 SET @tSql += ' WHEN FTTxnDocType = ''8'' THEN ISNULL(FCCrdValue,0)*-1'
				 SET @tSql += ' WHEN FTTxnDocType = ''9'' THEN ISNULL(FCCrdValue,0)'
				 SET @tSql += ' ELSE 0'
			SET @tSql += ' END) AS FCCrdInOutAdjValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN -1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN 1 '
				SET @tSql += ' ELSE 0'	
				SET @tSql += ' END) AS FNCrdSaleQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN ISNULL(FCCrdValue,0)*-1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN ISNULL(FCCrdValue,0)'
				SET @tSql += ' ELSE 0 END) AS FCCrdSaleValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''5'' THEN 1 ELSE 0	END) AS FNCrdRetQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''5'' THEN ISNULL(FCCrdValue,0) ELSE 0 END) AS FNCrdRetValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN -1'
				SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN 1'
				SET @tSql += ' ELSE 0'	
				SET @tSql += ' END) AS FNCrdSpendQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN ISNULL(FCCrdValue,0)*-1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN ISNULL(FCCrdValue,0)'
				SET @tSql += ' ELSE 0 END) AS FCCrdSpendValue,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), FDCrdExpireDate, 121) THEN 1 ELSE 0 END AS FNCrdExpireQty,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END AS FCCrdExpireValue,'

			SET @tSql += ' FTCrdStaActive'--,FDCrdExpireDate, 0 AS CardExpValue' 
			SET @tSql += ' FROM TFNMCard Crd LEFT JOIN' 
			SET @tSql += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON Crd.FTCreateBy = USRL.FTUsrCode AND USRL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
			SET @tSql += ' ('
				SET @tSql += ' SELECT FTBchCode,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
				SET @tSql += ' FROM'
					SET @tSql += ' (	SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdHis Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 

						SET @tSql += @tSql1
			 
						SET @tSql += ' UNION ALL' 
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdHisBch  Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 
						SET @tSql +=  @tSql1
					
						SET @tSql += ' UNION ALL'
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdTopUp  Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
						--SET @tSql += @tSql1

						SET @tSql += ' WHERE 1=1 '
						IF @tCrdStaActF <> '' AND @tCrdStaActT <> ''
						BEGIN
							SET @tSql +=' AND  CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActF + ''' AND ''' + @tCrdStaActT + ''''
						END

						IF (@tDocDateF <> '' AND @tDocDateT <> '')
						BEGIN
							SET @tSql +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
						END
			 
						SET @tSql += ' UNION ALL' 
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM dbo.TFNTCrdSale Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 
						SET @tSql +=  @tSql1
					SET @tSql += ' ) Tns1'
			SET @tSql += ' ) TrnHis ON Crd.FTCrdCode = TrnHis.FTCrdCode'
			SET @tSql += @tSql1 -- 26/08/2019 แทรก Condition
			SET @tSql += ' GROUP BY Crd.FTCrdCode,FTCrdStaActive,FDCrdExpireDate'
			SET @tSql += ' ,CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END'
			SET @tSql += ' ,CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END' 
		SET @tSql += ' ) TnsHis'

	SET @tSql += ' GROUP BY TnsHis.FTComName,TnsHis.FTRptName,TnsHis.FTCrdStaActive'

		--SELECT * FROM TFNMCard	
	--PRINT @tSql 
	execute(@tSql)
	

--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptBalCrdTemp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH	
	



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardBalanceNew]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardBalanceNew]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardBalanceNew] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardBalanceNew] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdStaActF Varchar(1), --สถานะบัตร
	@ptCrdStaActT Varchar(1),
	--@ptCrdTypeF Varchar(5), --ประเภทบัตร
	--@ptCrdTypeT Varchar(5),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
------------------------------------
 --Watcharakorn 
 --Create 06/06/2019
 --Edite 02/09/2019 เปลี่ยนชื่อ Store
 --@pnLngID ภาษา
 --@pnComName
 --@tRptName ชื่อรายงาน
 --@@ptCrdStaActF Varchar(5), --สถานะบัตร
 --@@ptCrdStaActธ Varchar(5),
 --@ptDocDateF จากวันที่
 --@ptDocDateT ถึงวันที่
------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(Max)
	DECLARE @tSqlIns nVARCHAR(Max)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)
	--FTCtyCode
	DECLARE @tCrdStaActF Varchar(1) --ประเภทบัตร
	DECLARE @tCrdStaActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardBalance'
	--SET @tCrdStaActF = '1'
	--SET @tCrdStaActT = '3'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardBalance'
	--SET @tCrdStaActF = ''
	--SET @tCrdStaActT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdStaActF = @ptCrdStaActF
	SET @tCrdStaActT = @ptCrdStaActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(19),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(19),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tCrdStaActF = null
	BEGIN
		SET @tCrdStaActF = ''
	END		
	IF @tCrdStaActT = '' OR @tCrdStaActT = null
	BEGIN
		SET @tCrdStaActT = @tCrdStaActF
	END
		 
	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END


	SET @tSql1 = ' WHERE 1=1 '

	IF @tCrdStaActF <> '' AND @tCrdStaActT <> ''
	BEGIN
		SET @tSql1 +=' AND  CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActF + ''' AND ''' + @tCrdStaActT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
		
	print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptBalCrdTemp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	SET @tSql ='INSERT INTO TFCTRptBalCrdTemp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,'
	SET @tSql +=' FTCrdStaActive,FNCrdBalanceQty,FCCrdBalanceValue,FNCrdInOutAdjQty,FCCrdInOutAdjValue,FNCrdSaleQty,FCCrdSaleValue,'
	SET @tSql +=' FNCrdRetQty,FNCrdRetValue,FNCrdSpendQty,FCCrdSpendValue,FNCrdExpireQty,FCCrdExpireValue,FTCrdStaActiveTH,FTCrdStaActiveEN'
	SET @tSql +=' )'--SELECT * FROM #TFCTRptCrdTmp WITH (NOLOCK)'
	SET @tSql += ' SELECT FTComName,FTRptName,'
	SET @tSql += ' TnsHis.FTCrdStaActive,SUM(TnsHis.FNCrdBalanceQty) AS FNCrdBalanceQty,SUM(TnsHis.FCCrdBalanceValue) AS FCCrdBalanceValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdInOutAdjQty) AS FNCrdInOutAdjQty,SUM(TnsHis.FCCrdInOutAdjValue) AS FCCrdInOutAdjValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdSaleQty) AS FNCrdSaleQty,SUM(TnsHis.FCCrdSaleValue) AS FCCrdSaleValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdRetQty) AS FNCrdRetQty,SUM(TnsHis.FNCrdRetValue) AS FNCrdRetValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdSpendQty) AS FNCrdSpendQty,SUM(TnsHis.FCCrdSpendValue) AS FCCrdSpendValue,'
	SET @tSql += ' SUM(TnsHis.FNCrdExpireQty) AS FNCrdExpireQty,SUM(TnsHis.FCCrdExpireValue) AS FCCrdExpireValue,'	
	SET @tSql += ' CASE TnsHis.FTCrdStaActive '
	SET @tSql += ' WHEN ''1'' THEN ''ใช้งาน'''
	SET @tSql += ' WHEN ''2'' THEN ''ไม่ใช้งาน'''
	SET @tSql += ' WHEN ''3'' THEN ''ยกเลิก'''
	SET @tSql += ' ELSE ''สถานะไม่ถูกต้อง'''
	SET @tSql += ' END AS FTCrdStaActiveTH,'
	SET @tSql += ' CASE TnsHis.FTCrdStaActive '
	SET @tSql += ' WHEN ''1'' THEN ''Active'''
	SET @tSql += ' WHEN ''2'' THEN ''Inactive'''
	SET @tSql += ' WHEN ''3'' THEN ''Cancel'''
	SET @tSql += ' ELSE ''Invalid Status'''
	SET @tSql += ' END AS FTCrdStaActiveTH'
	SET @tSql += ' FROM'
		SET @tSql += ' ('
			SET @tSql += ' SELECT DISTINCT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,Crd.FTCrdCode,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN 1 ELSE 0 END AS FNCrdBalanceQty,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END AS FCCrdBalanceValue,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''1'' THEN 1'
				 SET @tSql += ' WHEN FTTxnDocType = ''8'' THEN -1'
				 SET @tSql += ' WHEN FTTxnDocType = ''9'' THEN 1'
				 SET @tSql += ' ELSE 0'
			SET @tSql += ' END) AS FNCrdInOutAdjQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''1'' THEN ISNULL(FCCrdValue,0)'
				 SET @tSql += ' WHEN FTTxnDocType = ''8'' THEN ISNULL(FCCrdValue,0)*-1'
				 SET @tSql += ' WHEN FTTxnDocType = ''9'' THEN ISNULL(FCCrdValue,0)'
				 SET @tSql += ' ELSE 0'
			SET @tSql += ' END) AS FCCrdInOutAdjValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN -1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN 1 '
				SET @tSql += ' ELSE 0'	
				SET @tSql += ' END) AS FNCrdSaleQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN ISNULL(FCCrdValue,0)*-1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN ISNULL(FCCrdValue,0)'
				SET @tSql += ' ELSE 0 END) AS FCCrdSaleValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''5'' THEN 1 ELSE 0	END) AS FNCrdRetQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''5'' THEN ISNULL(FCCrdValue,0) ELSE 0 END) AS FNCrdRetValue,'

			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN -1'
				SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN 1'
				SET @tSql += ' ELSE 0'	
				SET @tSql += ' END) AS FNCrdSpendQty,'
			SET @tSql += ' SUM(CASE WHEN FTTxnDocType = ''3'' THEN ISNULL(FCCrdValue,0)*-1'
					 SET @tSql += ' WHEN FTTxnDocType = ''4'' THEN ISNULL(FCCrdValue,0)'
				SET @tSql += ' ELSE 0 END) AS FCCrdSpendValue,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), FDCrdExpireDate, 121) THEN 1 ELSE 0 END AS FNCrdExpireQty,'
			SET @tSql += ' CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END AS FCCrdExpireValue,'

			SET @tSql += ' FTCrdStaActive'--,FDCrdExpireDate, 0 AS CardExpValue' 
			SET @tSql += ' FROM TFNMCard Crd LEFT JOIN' 
			SET @tSql += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON Crd.FTCreateBy = USRL.FTUsrCode AND USRL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
			SET @tSql += ' ('
				SET @tSql += ' SELECT FTBchCode,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
				SET @tSql += ' FROM'
					SET @tSql += ' (	SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdHis Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 

						SET @tSql += @tSql1
			 
						SET @tSql += ' UNION ALL' 
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdHisBch  Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 
						SET @tSql +=  @tSql1
					
						SET @tSql += ' UNION ALL'
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM  dbo.TFNTCrdTopUp  Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
						--SET @tSql += @tSql1

						SET @tSql += ' WHERE 1=1 '
						IF @tCrdStaActF <> '' AND @tCrdStaActT <> ''
						BEGIN
							SET @tSql +=' AND  CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActF + ''' AND ''' + @tCrdStaActT + ''''
						END

						IF (@tDocDateF <> '' AND @tDocDateT <> '')
						BEGIN
							SET @tSql +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
						END
			 
						SET @tSql += ' UNION ALL' 
						SET @tSql += ' SELECT FTBchCode,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue'
						SET @tSql += ' FROM dbo.TFNTCrdSale Tns WITH (NOLOCK) LEFT JOIN TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode' 
						SET @tSql +=  @tSql1
					SET @tSql += ' ) Tns1'
			SET @tSql += ' ) TrnHis ON Crd.FTCrdCode = TrnHis.FTCrdCode'
			SET @tSql += @tSql1 -- 26/08/2019 แทรก Condition
			SET @tSql += ' GROUP BY Crd.FTCrdCode,FTCrdStaActive,FDCrdExpireDate'
			SET @tSql += ' ,CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) < CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END'
			SET @tSql += ' ,CASE WHEN CONVERT(VARCHAR(10), GETDATE(), 121) >= CONVERT(VARCHAR(10), Crd.FDCrdExpireDate, 121) THEN ISNULL(FCCrdValue,0) ELSE 0 END' 
		SET @tSql += ' ) TnsHis'

	SET @tSql += ' GROUP BY TnsHis.FTComName,TnsHis.FTRptName,TnsHis.FTCrdStaActive'

		--SELECT * FROM TFNMCard	
	PRINT @tSql 
	execute(@tSql)
	

--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptBalCrdTemp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH	
	



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardDetail]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardDetail]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardDetail] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardDetail] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --»ÃÐàÀ·ºÑµÃ
	@ptCrdTypeT Varchar(5),
	@ptCrdStaActiveF Varchar(1),-- Ê¶Ò¹ÐºÑµÃ	FTCrdStaActive
	@ptCrdStaActiveT Varchar(1),
	@ptStartDateF Varchar(10),	--FDCrdStartDate
	@ptStartDateT Varchar(10),
	@ptExpDateF Varchar(10),--FDCrdExpireDate
	@ptExpDateT Varchar(10),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ÀÒÉÒ
-- @pnComName ª×èÍà¤Ã×èÍ§
-- @ptRptName ª×èÍÃÒÂ§Ò¹
-- @ptCrdTypeF Varchar(5), --»ÃÐàÀ·ºÑµÃ
-- @ptCrdTypeT Varchar(5),
-- @ptCrdStaActiveF Varchar(1),-- Ê¶Ò¹ÐºÑµÃ	FTCrdStaActive
-- @ptCrdStaActiveT Varchar(1),
-- @ptStartDateF Varchar(10),	--FDCrdStartDate
-- @ptStartDateT Varchar(10),
-- @ptExpDateF Varchar(10),--FDCrdExpireDate
-- @ptExpDateT Varchar(10)
-- @pnCrdF ¨Ò¡ºÑµÃ 
-- @pnCrdT ¶Ö§ËÁÒÂàÅ¢ºÑµÃ
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)

	DECLARE @tSqlCrd nVARCHAR(Max)

	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --»ÃÐàÀ·ºÑµÃ
	DECLARE @tCrdTypeT Varchar(5)

	DECLARE @tCrdStaActiveF Varchar(1)-- Ê¶Ò¹ÐºÑµÃ	FTCrdStaActive
	DECLARE @tCrdStaActiveT Varchar(1)

	--FDCrdStartDate
	DECLARE @tStartDateF Varchar(10)
	DECLARE @tStartDateT Varchar(10)

	--FDCrdExpireDate
	DECLARE @tExpDateF Varchar(10)
	DECLARE @tExpDateT Varchar(10)


	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	
	--SET @tRptName = 'CardDetail' 

	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	
	--SET @tCrdStaActiveF = '1'
	--SET @tCrdStaActiveT = '3'

	--SET @tStartDateF = '2019-03-01'
	--SET @tStartDateT = '2019-03-31'

	--SET @tExpDateF = '2046-10-18'
	--SET @tExpDateT = '9999-12-31'


	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT
	
	SET @tCrdStaActiveF = @ptCrdStaActiveF
	SET @tCrdStaActiveT = @ptCrdStaActiveT

	SET @tStartDateF = @ptStartDateF
	SET @tStartDateT = @ptStartDateT

	SET @tExpDateF = @ptExpDateF
	SET @tExpDateT = @ptExpDateT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @FNResult= 0

	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null

	--FTCtyCode
	IF @tCrdTypeF = null
	BEGIN
		SET @tCrdTypeF = ''
	END
	IF @tCrdTypeT = null
	BEGIN
		SET @tCrdTypeT = ''
	END
	IF @tCrdTypeT = ''
	BEGIN
		SET @tCrdTypeT = @tCrdTypeF
	END
		
	--FTCrdStaActive
	IF @tCrdStaActiveF = null 
	BEGIN
		SET @tCrdStaActiveF = ''
	END
	IF @tCrdStaActiveT = null
	BEGIN
		SET @tCrdStaActiveT = ''
	END
	IF @tCrdStaActiveT = '' 
	BEGIN
		SET @tCrdStaActiveT = @tCrdStaActiveF
	END

	--FDCrdStartDate
	IF @tStartDateF = null
	BEGIN
		SET @tStartDateF = ''
	END
	IF @tStartDateT = null
	BEGIN
		SET @tStartDateT  = ''
	END
	IF @tStartDateT  = ''
	BEGIN
		SET @tStartDateT  = @tStartDateF
	END

	--FDCrdExpireDate
	IF @tExpDateF = null
	BEGIN
		SET @tExpDateF =''
	END
	IF @tExpDateT = null
	BEGIN
		SET @tExpDateT = ''
	END
	IF @tExpDateT = ''
	BEGIN
		SET @tExpDateT = @tExpDateF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	SET @tSqlCrd = ' WHERE 1=1 '
	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSqlCrd +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	IF @tCrdStaActiveF <> '' AND @tCrdStaActiveT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActiveF + ''' AND ''' + @tCrdStaActiveT + ''''
	END	


	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	IF @tStartDateF <> '' AND @tStartDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdStartDate, 121)  BETWEEN ''' + @tStartDateF + ''' AND ''' + @tStartDateT + ''''
	END

	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)
	IF @tExpDateF <> '' AND @tExpDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdExpireDate, 121) BETWEEN  ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
	END

	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN		
		SET @tSqlCrd += ' AND CRD.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END

	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp

	SET @tSql =  ' INSERT INTO TFCTRptCrdTmp'
	SET @tSql += ' ('
	SET @tSql += ' FTComName,FTRptName,FTCrdCode, FTCrdName, FTCrdHolderID, FTCtyName, FCCrdValue, FTCrdStaType, FTCrdStaActive, FDCrdExpireDate, FDCrdStartDate'
	SET @tSql += ' )'
	SET @tSql += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,'
	SET @tSql += ' Crd.FTCrdCode, Crd_L.FTCrdName, FTCrdHolderID, Cty_L.FTCtyName, ISNULL(FCCrdValue,0) AS FCCrdValue, FTCrdStaType, FTCrdStaActive, FDCrdExpireDate, FDCrdStartDate'
	SET @tSql += ' FROM TFNMCard Crd LEFT JOIN'
		 SET @tSql += ' TFNMCard_L Crd_L ON Crd.FTCrdCode = Crd_L.FTCrdCode AND Crd_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		 SET @tSql += ' TFNMCardType_L Cty_L ON Crd.FTCtyCode = Cty_L.FTCtyCode AND Cty_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += @tSqlCrd
	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''

END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	 


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardNoActive]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardNoActive]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardNoActive] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardNoActive] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --ประเภทบัตร
	@ptCrdTypeT Varchar(5),
	@ptStartDateF Varchar(10),	--FDCrdStartDate
	@ptStartDateT Varchar(10),
	@ptExpDateF Varchar(10),--FDCrdExpireDate
	@ptExpDateT Varchar(10),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ภาษา
-- @pnComName ชื่อเครื่อง
-- @ptRptName ชื่อรายงาน
-- @ptCrdTypeF Varchar(5), --ประเภทบัตร
-- @ptCrdTypeT Varchar(5),
-- @ptStartDateF Varchar(10),	--FDCrdStartDate
-- @ptStartDateT Varchar(10),
-- @ptExpDateF Varchar(10),--FDCrdExpireDate
-- @ptExpDateT Varchar(10)
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)

	DECLARE @tSqlCrd nVARCHAR(Max)

	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --ประเภทบัตร
	DECLARE @tCrdTypeT Varchar(5)	
	--FDCrdStartDate
	DECLARE @tStartDateF Varchar(10)
	DECLARE @tStartDateT Varchar(10)

	--FDCrdExpireDate
	DECLARE @tExpDateF Varchar(10)
	DECLARE @tExpDateT Varchar(10)

	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	
	--SET @tRptName = 'CardNoActive' 

	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	
	--SET @tStartDateF = '2019-03-01'
	--SET @tStartDateT = '2019-05-31'

	--SET @tExpDateF = '2046-10-18'
	--SET @tExpDateT = '9999-12-31'

	--SET @tCrdF = '2019040500'
	--SET @tCrdT = '2019050600'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT
	
	SET @tStartDateF = @ptStartDateF
	SET @tStartDateT = @ptStartDateT

	SET @tExpDateF = @ptExpDateF
	SET @tExpDateT = @ptExpDateT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT	
	SET @FNResult= 0

	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	--FTCtyCode
	IF @tCrdTypeF = null
	BEGIN
		SET @tCrdTypeF = ''
	END
	IF @tCrdTypeT = null
	BEGIN
		SET @tCrdTypeT = ''
	END
	IF @tCrdTypeT = ''
	BEGIN
		SET @tCrdTypeT = @tCrdTypeF
	END
		

	--FDCrdStartDate
	IF @tStartDateF = null
	BEGIN
		SET @tStartDateF = ''
	END
	IF @tStartDateT = null
	BEGIN
		SET @tStartDateT  = ''
	END
	IF @tStartDateT  = ''
	BEGIN
		SET @tStartDateT  = @tStartDateF
	END

	--FDCrdExpireDate
	IF @tExpDateF = null
	BEGIN
		SET @tExpDateF =''
	END
	IF @tExpDateT = null
	BEGIN
		SET @tExpDateT = ''
	END
	IF @tExpDateT = ''
	BEGIN
		SET @tExpDateT = @tExpDateF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 


	SET @tSqlCrd = ' WHERE (CRD.FTCrdStaActive <> 1)'
	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSqlCrd +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	IF @tStartDateF <> '' AND @tStartDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdStartDate, 121)  BETWEEN ''' + @tStartDateF + ''' AND ''' + @tStartDateT + ''''
	END

	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)
	IF @tExpDateF <> '' AND @tExpDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdExpireDate, 121) BETWEEN  ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
	END

	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN		
		SET @tSqlCrd += ' AND CRD.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END

	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''

	SET @tSQL  =' INSERT INTO TFCTRptCrdTmp'
	SET @tSQL +=' ('
	SET @tSQL +=' FTComName,FTRptName,FTCrdCode, FTCtyName, FTCrdName, FDCrdStartDate, FDCrdExpireDate, FCCrdValue, FTCrdStaActive'
	SET @tSQL +=' )'
	SET @tSQL +=' SELECT FTComName,FTRptName,FTCrdCode, FTCtyName, FTCrdName, FDCrdStartDate, FDCrdExpireDate, FCCrdValue, FTCrdStaActive'
	SET @tSQL +=' FROM (SELECT '''+ @nComName + '''  AS FTComName,'''+ @tRptName +'''AS FTRptName,'
	SET @tSQL +=' CRD.FTCrdCode, CRDL.FTCrdName, CRDTL.FTCtyCode, CRDTL.FTCtyName,'
	SET @tSQL +=' CONVERT(VARCHAR(10), CRD.FDCrdStartDate, 121) AS FDCrdStartDate, CONVERT(VARCHAR(10),CRD.FDCrdExpireDate, 121) AS FDCrdExpireDate,'	 
	SET @tSQL +=' CRD.FCCrdValue, CRD.FTCrdStaActive, ISNULL(CRDL.FNLngID, 1) AS FNLngID, ISNULL(CRDTL.FNLngID, 1) AS FNCtyLngID'
	SET @tSQL +=' FROM dbo.TFNMCard AS CRD WITH (NOLOCK) LEFT OUTER JOIN'
	SET @tSQL +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSQL +=' dbo.TFNMCardType_L AS CRDTL WITH (NOLOCK) ON CRD.FTCtyCode = CRDTL.FTCtyCode AND CRDTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''	
	SET @tSQL += @tSqlCrd
	SET @tSQL +=') NoAct' 
	--PRINT @tSQL 
	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	--EXECUTE @tSqlIns
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --print @tSql
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardPrinciple]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardPrinciple]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardPrinciple] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardPrinciple] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --»ÃÐàÀ·ºÑµÃ
	@ptCrdTypeT Varchar(5),
	@ptYearF Varchar(4),
	@ptYearT Varchar(4),
	@FNResult INT OUTPUT 
AS
------------------------------------
 --Watcharakorn 
 --Create 06/06/2019
 --@pnLngID ÀÒÉÒ
 --@pnComName
 --@tRptName ª×èÍÃÒÂ§Ò¹
 --@ptCrdTypeF Varchar(5), --»ÃÐàÀ·ºÑµÃ
 --@ptCrdTypeT Varchar(5),
 --@ptYearF จากปี
 --@ptYearT ถึงปี
------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns nVARCHAR(Max)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)
	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --»ÃÐàÀ·ºÑµÃ
	DECLARE @tCrdTypeT Varchar(5)
	DECLARE @tYearF Varchar(4)
	DECLARE @tYearT Varchar(4)
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardPrinciple'
	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	--SET @tYearF = '2018'
	--SET @tYearT = '2019'
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardPrinciple'
	--SET @tCrdTypeF = ''
	--SET @tCrdTypeT = ''
	--SET @tYearF = ''
	--SET @tYearT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT
	SET @tYearF = @ptYearF
	SET @tYearT = @ptYearT
	SET @FNResult= 0

	--SET @tDocDateF = CONVERT(VARCHAR(19),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(19),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null
	IF @tCrdTypeF = null
	BEGIN
		SET @tCrdTypeF = ''
	END		
	IF @tCrdTypeT = '' OR @tCrdTypeT = null
	BEGIN
		SET @tCrdTypeT = @tCrdTypeF
	END
		 
	IF @tYearF = null
	BEGIN 
		SET @tYearF = ''
	END

	IF @tYearT = null  OR @tYearT =''
	BEGIN 
		SET @tYearF = @tYearT
	END


	SET @tSql1 = ''

	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSql1 +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	IF (@tYearF <> '' AND @tYearT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tYearF + ''' AND ''' + @tYearT + ''''
	END
		
		--print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 
    SET @tSql =  ' INSERT INTO TFCTRptCrdTmp'
	SET @tSql += ' ('
    SET @tSql += ' FTComName,FTRptName,FTTxnYear, FTCtyName, FNTxnCountCard, FCCrdValue' 
	SET @tSql += ' )'
	 SET @tSql += ' SELECT FTComName,FTRptName,FTTxnYear, ISNULL(FTCtyName,'''') AS FTCtyName, FNTxnCountCard,ISNULL(FCCrdValue,0) AS FCCrdValue'
	 SET @tSql += ' FROM'
		SET @tSql += ' ('
		SET @tSql += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,'
		SET @tSql += ' DFINAL.FTTxnYear, DFINAL.FTCtyCode, DFINAL.FNTxnCountCard, CRDTL.FTCtyName, X.FCCrdValue'
		SET @tSql += ' FROM (SELECT  FTTxnYear, FTCtyCode, SUM(FNTxnCountCard) AS FNTxnCountCard'
			  SET @tSql += ' FROM('
					SET @tSql += ' SELECT CONVERT(VARCHAR(4), CRDHIS.FDTxnDocDate, 121) AS FTTxnYear, CRD.FTCtyCode, COUNT(CRDHIS.FTCrdCode) AS FNTxnCountCard'
					SET @tSql += ' FROM dbo.TFNTCrdHis AS CRDHIS WITH (NOLOCK) LEFT OUTER JOIN'
					SET @tSql += ' dbo.TFNMCard AS CRD WITH (NOLOCK) ON CRDHIS.FTCrdCode = CRD.FTCrdCode'
					SET @tSql += ' WHERE (CRD.FTCrdStaActive <> ''3'')'
					IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
					BEGIN
						SET @tSql +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
					END
					IF (@tYearF <> '' AND @tYearT <> '')
					BEGIN
						SET @tSql +=' AND CONVERT(VARCHAR(4), CRDHIS.FDTxnDocDate, 121) BETWEEN ''' + @tYearF + ''' AND ''' + @tYearT + ''''
					END

					SET @tSql += ' GROUP BY CONVERT(VARCHAR(4), CRDHIS.FDTxnDocDate, 121), CRD.FTCtyCode'

					SET @tSql += ' UNION ALL'
					SET @tSql += ' SELECT CONVERT(VARCHAR(4), CTDT.FDCreateOn, 121) AS FTTxnYear, CRD.FTCtyCode, COUNT(CTDT.FTCrdCode) AS FNTxnCountCard'
					SET @tSql += ' FROM dbo.TFNTCrdTopUpDT AS CTDT WITH (NOLOCK) LEFT OUTER JOIN dbo.TFNMCard AS CRD WITH (NOLOCK) ON CTDT.FTCrdCode = CRD.FTCrdCode'
					SET @tSql += ' WHERE (CRD.FTCrdStaActive <> ''3'')'
					IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
					BEGIN
						SET @tSql +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
					END
					IF (@tYearF <> '' AND @tYearT <> '')
					BEGIN
						SET @tSql +=' AND CONVERT(VARCHAR(4), CTDT.FDCreateOn, 121) BETWEEN ''' + @tYearF + ''' AND ''' + @tYearT + ''''
					END

					SET @tSql += ' GROUP BY CONVERT(VARCHAR(4), CTDT.FDCreateOn, 121), CRD.FTCtyCode'
				   SET @tSql += ' ) AS A'

		SET @tSql += ' GROUP BY FTTxnYear, FTCtyCode'
		SET @tSql += ' ) AS DFINAL LEFT OUTER JOIN'
		SET @tSql += ' dbo.TFNMCardType_L AS CRDTL WITH (NOLOCK) ON DFINAL.FTCtyCode = CRDTL.FTCtyCode AND CRDTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		SET @tSql += ' ('
		 SET @tSql += ' SELECT CONVERT(varchar(4), FDLastUpdOn, 121) AS FDLastUpdOn, FTCtyCode, SUM(ISNULL(FCCrdValue,0)) AS FCCrdValue'
		 SET @tSql += ' FROM dbo.TFNMCard AS CRD2 WITH (NOLOCK)'
		 SET @tSql += ' WHERE (FTCrdStaActive <> ''3'')'
		 IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
		 BEGIN
			 SET @tSql +=' AND  FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
		 END
		 IF (@tYearF <> '' AND @tYearT <> '')
		 BEGIN
			 SET @tSql +=' AND CONVERT(VARCHAR(4), FDLastUpdOn, 121) BETWEEN ''' + @tYearF + ''' AND ''' + @tYearT + ''''
		 END

		 SET @tSql += ' GROUP BY CONVERT(varchar(4), FDLastUpdOn, 121), FTCtyCode) AS X ON DFINAL.FTCtyCode = X.FTCtyCode AND DFINAL.FTTxnYear = X.FDLastUpdOn'
		SET @tSql += ' ) CardStart'
    --PRINT @tSql
	execute(@tSql)
	
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''

	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCardTimesUsed]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCardTimesUsed]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCardTimesUsed] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCardTimesUsed] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --ประเภทบัตร
	@ptCrdTypeT Varchar(5),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ภาษา
-- @pnComName ชื่อเครื่อง
-- @ptRptName ชื่อรายงาน
-- @ptCrdTypeF Varchar(5), --ประเภทบัตร
-- @ptCrdTypeT Varchar(5),
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)

	DECLARE @tSqlCrd nVARCHAR(Max)

	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --ประเภทบัตร
	DECLARE @tCrdTypeT Varchar(5)	

	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	
	--SET @tRptName = 'CardTimesUsed' 

	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	
	--SET @tCrdF = '2019040500'
	--SET @tCrdT = '2019050600'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT

	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT	
	SET @FNResult= 0

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	--FTCtyCode
	IF @tCrdTypeF = null
	BEGIN
		SET @tCrdTypeF = ''
	END
	IF @tCrdTypeT = null
	BEGIN
		SET @tCrdTypeT = ''
	END
	IF @tCrdTypeT = ''
	BEGIN
		SET @tCrdTypeT = @tCrdTypeF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 


	SET @tSqlCrd = ' WHERE 1=1'
	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSqlCrd +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN		
		SET @tSqlCrd += ' AND CRD.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END

	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''

	SET @tSQL = ' INSERT INTO TFCTRptCrdTmp(FTComName,FTRptName,TimesUsage, FTCrdCode, FTCtyName, FTCrdName, FTCrdHolderID, FTDptName, FTCrdRemark)'
	SET @tSQL +=' SELECT '''+ @nComName + '''  AS FTComName,'''+ @tRptName +'''AS FTRptName,'
	SET @tSQL +=' TimesUsage, FTCrdCode, FTCtyName, FTCrdName, FTCrdHolderID, FTDptName, FTCrdRemark'
	SET @tSQL +=' FROM'
	SET @tSQL +=' ('
	SET @tSQL +=' SELECT CRD.FTCrdCode, CRDL.FTCrdName, CTL.FTCtyCode, CTL.FTCtyName, CRD.FTCrdHolderID, DPL.FTDptName, T.TimesUsage, ''N/A'' AS FTCrdRemark'
	SET @tSQL +=' FROM dbo.TFNMCard AS CRD WITH (NOLOCK) INNER JOIN'
	SET @tSQL +=' ('
	SET @tSQL +=' SELECT FTCrdCode, SUM(FNTxnCountBill) AS TimesUsage'
	SET @tSQL +=' FROM'
	SET @tSQL +=' ('
	SET @tSQL +=' SELECT FTCrdCode, COUNT(FTTxnDocNoRef) AS FNTxnCountBill'
	SET @tSQL +=' FROM dbo.TFNTCrdSale WITH (NOLOCK)'
	SET @tSQL +=' WHERE(FTTxnDocType IN (''3'', ''4''))'
	SET @tSQL +=' GROUP BY FTCrdCode'
	SET @tSQL +=' UNION ALL'
	SET @tSQL +=' SELECT FTCrdCode, COUNT(FTTxnDocNoRef) AS FNTxnCountBill'
	SET @tSQL +=' FROM dbo.TFNTCrdHis WITH (NOLOCK)'
	SET @tSQL +=' GROUP BY FTCrdCode'
	SET @tSQL +=' ) AS A'
	SET @tSQL +=' GROUP BY FTCrdCode'
	SET @tSQL +=' ) AS T ON CRD.FTCrdCode = T.FTCrdCode LEFT OUTER JOIN'
	SET @tSQL +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSQL +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSQL +=' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSQL += @tSqlCrd
	SET @tSQL +=' ) CardTimesUsed'
	--PRINT @tSQL
	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	--EXECUTE @tSqlIns
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --print @tSql
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCheckCardUseInfo]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCheckCardUseInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCheckCardUseInfo] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCheckCardUseInfo] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptUserIdF Varchar(30),
	@ptUserIdT Varchar(30),
	@ptCrdActF Varchar(1), --สถานะบัตร
	@ptCrdActT Varchar(1),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @tRptName ชื่อรายงาน
-- @tRptName ชื่อรายงาน
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptUserIdF จากรหัสพนักงาน,
-- @ptUserIdT ถึงรหัสพนักงาน,
 --@ptCrdActF Varchar(5), --ประเภทบัตร
 --@ptCrdActT Varchar(5),
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tUserIdF Varchar(30)
	DECLARE @tUserIdT Varchar(30)
	--FTCtyCode
	DECLARE @tCrdActF Varchar(1) --ประเภทบัตร
	DECLARE @tCrdActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CheckCardUseInfo'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tUserIdF = '2019030551'
	--SET @tUserIdT = '2019030800'
	--SET @tCrdActF = '1'
	--SET @tCrdActT = '3'
	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tUserIdF =  @ptUserIdF
	SET @tUserIdT =  @ptUserIdT
	SET @tCrdActF = @ptCrdActF
	SET @tCrdActT = @ptCrdActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

		IF @nLngID = null
		BEGIN
			SET @nLngID = 1
		END	
		--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
		IF @tCrdF = null
		BEGIN
			SET @tCrdF = ''
		END 

		IF @tDocDateF = null
		BEGIN 
			SET @tDocDateF = ''
		END

		IF @tCrdT = null OR @tCrdT =''
		BEGIN
			SET @tCrdT = @tCrdF
		END 

		IF @tDocDateT = null OR @tDocDateT =''
		BEGIN 
			SET @tDocDateT = @tDocDateF
		END

		if @tCrdActF = null 
		BEGIN
			SET @tCrdActF = ''
		END
		IF @tCrdActT = null or @tCrdActF = ''
		BEGIN 
			SET @tCrdActT = @tCrdActF
		END 

		IF @tUserIdF = null
		BEGIN
			SET @tUserIdF = ''
		END

		IF @tUserIdT = null OR @tUserIdT = ''
		BEGIN
			SET @tUserIdT = @tUserIdF
		END

		SET @tSql1 = ' WHERE 1=1 '
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSql1 +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		
		--print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	 --SELECT        A.FTBchCode, A.FTTxnDocNoRef, A.FTShpCode, A.FTShpName, A.FTTxnPosCode, A.FTDptName, A.FTPosType, A.FNTxnID, A.FNTxnIDRef, A.FTTxnDocType, A.FTTxnStaOffLine, A.FTCrdCode, A.FTCtyName, 
	 --                        A.FTCtyCode, A.FTCrdHolderID, A.FTCrdStaActive, A.FDTxnDocDate, A.FDCrdExpireDate, A.FTBchCodeRef, A.FCTxnValue, A.FCTxnCrdValue, A.FCTxnCrdAftTrans, A.FTCrdName, A.FCCrdBalance, A.CardExpValue, 
	 --                        A.FTTxnDocTypeName, A.FNLngID, A.FNDplLngID, A.FNCtyLngID, A.FNShpLngID, A.FTUsrCreate, A.FTDocLastUpdBy, 
	 --                        CASE WHEN A.FTTxnDocType = 3 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 4 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 5 THEN A.FTTxnPosCode ELSE USRL.FTUsrName END AS FTDocCreateBy,
	 --                         ISNULL(USRL.FNLngID, 1) AS FNUsrLngID
    --DROP TABLE #TFCTRptCrdTemp
    SELECT * INTO #TFCTRptCrdTemp FROM TFCTRptCrdTmp WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''
	TRUNCATE TABLE #TFCTRptCrdTemp
	--SELECT * FROM #TFCTRptCrdTmp

	SET @tSql ='INSERT INTO #TFCTRptCrdTemp WITH (ROWLOCK)' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	SET @tSql +='FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSql +='FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,FNTxnIDRef,'
--	SET @tSql +='FTDocCreateBy,'
	SET @tSql +='FDTxnDocDate,FCCrdBalance,FNLngID,FCTxnValue'
	SET @tSql +=') '--SELECT * FROM #TFCTRptCrdTmp WITH (NOLOCK)'
	SET @tSql += 'SELECT '''+ @nComName + '''  AS FTComName, '''+ @tRptName +'''AS FTRptName,'
	SET @tSql += 'A.FTTxnDocType,A.FTCrdCode,A.FTCrdName,A.FTCtyName,A.FTCrdHolderID,A.FTShpCode,A.FTShpName,A.FTCrdStaActive,A.FTDptName,A.FCTxnCrdAftTrans,'
	SET @tSql += 'A.FTTxnPosCode,A.FTPosType,'''' AS FTTxnDocRefNo,A.FTTxnDocNoRef,A.FTTxnDocTypeName,A.FNTxnID,A.FNTxnIDRef,'

	SET @tSql += 'A.FDTxnDocDate,A.FCCrdBalance,''' +  CAST(@nLngID  AS VARCHAR(10)) + ''' AS FNLngID, A.FCTxnValue'
	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode, CRDHIS.FTPosType,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 SET @tSql += 'CRDHIS.FTTxnDocTypeName,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
		 SET @tSql += 'ISNULL(TOPUP.FTCreateBy,'''') + ISNULL(VOID.FTCreateBy,'''') + ISNULL(IMP.FTCreateBy,'''') + ISNULL(SHIFT.FTCreateBy,'''') AS FTUsrCreate,'
		 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,CRDHIS.FCTxnCrdAftTrans'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT  C.FTBchCode, CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ISNULL(C.FCTxnCrdValue, 0) + ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''2'' THEN ISNULL(C.FCTxnCrdValue, 0) - ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''3'' THEN ISNULL(C.FCTxnCrdValue, 0) - ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''4'' THEN ISNULL(C.FCTxnCrdValue, 0) + ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''5'' THEN ISNULL(C.FCTxnCrdValue, 0) - ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' ELSE C.FCTxnCrdValue' 
			 SET @tSql += ' END AS FCTxnCrdAftTrans,'
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,''N/A'') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'CASE POS.FTPosType'
				SET @tSql += ' WHEN ''1'' THEN ''จุดขาย/ร้านค้า;Pos/Store''' 
				SET @tSql += ' WHEN ''2'' THEN ''จุดเติมเงิน;Topup'''
				SET @tSql += ' WHEN ''3'' THEN ''จุดตรวจสอบมูลค่า;Check Point'''
				SET @tSql += ' ELSE ''ระบบหลังบ้าน;Back Office'''
			 SET @tSql += ' END AS FTPosType,C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate, 121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate, 121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,''N/A'') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ''เติมเงิน;Topup'''
				SET @tSql += ' WHEN ''2'' THEN ''ยกเลิกเติมเงิน;Cancel Topup'''
				SET @tSql += ' WHEN ''3'' THEN ''ตัดจ่าย/ขาย;Sale'''
				SET @tSql += ' WHEN ''4'' THEN ''ยกเลิกตัดจ่าย;Cancel Sale'''
				SET @tSql += ' WHEN ''5'' THEN ''แลกคืน;Pay Back'''
				SET @tSql += ' WHEN ''6'' THEN ''เบิกบัตร;Card Requisition'''
				SET @tSql += ' WHEN ''7'' THEN ''คืนบัตร;Card Return'''
				SET @tSql += ' WHEN ''8'' THEN ''โอนเงินออก'''
				SET @tSql += ' WHEN ''9'' THEN ''โอนเงินเข้า'''
				SET @tSql += ' WHEN ''10'' THEN ''ล้างบัตร;Clear Card'''
				SET @tSql += ' WHEN ''11'' THEN ''ปรับสถานะ;Card Change Status'''
				SET @tSql += ' WHEN ''12'' THEN ''บัตรใหม่;New Card'''
				SET @tSql += ' ELSE ''ไม่ระบุ;Unknown'''
			 SET @tSql += ' END AS FTTxnDocTypeName'
			 SET @tSql += ' FROM'
				SET @tSql += '('
				 SET @tSql += 'SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,FTTxnPosCode,FNTxnID,FNTxnIDRef'
				 SET @tSql += ' FROM dbo.TFNTCrdHis WITH (NOLOCK)'
				 SET @tSql += @tSql1

				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM dbo.TFNTCrdHisBch WITH (NOLOCK)'
				SET @tSql += @tSql1

				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM dbo.TFNTCrdTopUp WITH (NOLOCK)'
				SET @tSql += @tSql1
                                                              
				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM dbo.TFNTCrdSale WITH (NOLOCK)'
				SET @tSql += @tSql1

				SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' dbo.TFNMCard AS CRD WITH (NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' dbo.TCNMPos AS POS WITH (NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' dbo.TCNMShop_L AS SHPL WITH (NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate, 121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM   dbo.TFNMCard WITH (NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate, 121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate, 121)'
			SET @tSql += ' ) AS CRDHIS LEFT OUTER JOIN'
			SET @tSql += ' dbo.TFNTCrdTopUpHD AS TOPUP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = TOPUP.FTCthDocNo LEFT OUTER JOIN'
			SET @tSql += ' dbo.TFNTCrdVoidHD AS VOID WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = VOID.FTCvhDocNo LEFT OUTER JOIN'
			SET @tSql += ' dbo.TFNTCrdImpHD AS IMP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = IMP.FTCihDocNo LEFT OUTER JOIN'
			SET @tSql += ' dbo.TFNTCrdShiftHD AS SHIFT WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = SHIFT.FTCshDocNo) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'
			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END
			IF @tUserIdF <> '' AND @tUserIdT <> ''
			BEGIN
				SET @tSql += ' AND FTCrdHolderID BETWEEN ''' + @tUserIdF + ''' AND ''' + @tUserIdT +''''
			END

			IF @tCrdActF <> '' AND @tCrdActT <> ''
			BEGIN
				SET  @tSql += ' AND FTCrdStaActive BETWEEN '''+ @tCrdActF +''' AND '''+ @tCrdActT +''''
			END  

	--SET @tSql += ' IN TO TFCTRptCrdTmp1'
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
	SET @tSqlIns +='FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSqlIns +='FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,#TFCTRptCrdTemp.FNTxnIDRef,'
	SET @tSqlIns +='FTDocCreateBy,'
	SET @tSqlIns +='FDTxnDocDate,FCCrdBalance,FNLngID,FCTxnValue'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns +=' FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSqlIns +=' FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,#TFCTRptCrdTemp.FNTxnIDRef,'
	SET @tSqlIns += ' CASE FTTxnDocType' 
		SET @tSqlIns += ' WHEN ''3'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' WHEN ''4'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' WHEN ''5'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' ELSE USRL.FTUsrName'
		SET @tSqlIns += ' END AS FTDocCreateBy,'

	SET @tSqlIns +='FDTxnDocDate,FCCrdBalance,#TFCTRptCrdTemp.FNLngID, FCTxnValue'
	SET @tSqlIns +=' FROM #TFCTRptCrdTemp LEFT JOIN'
	SET @tSqlIns += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON #TFCTRptCrdTemp.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHis WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHisBch WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdTopUp WHERE ISNULL(FNTxnIDRef,'''' ) <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHis'
	SET @tSqlIns +=' WHERE 1 = 1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHisBch'
	SET @tSqlIns +=' WHERE 1 = 1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdTopUp'
	SET @tSqlIns +=' WHERE 1 = 1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1 = 1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = #TFCTRptCrdTemp.FNTxnIDRef'

	--PRINT @tSql
	execute(@tSql)

	--PRINT @tSqlIns
	execute(@tSqlIns)
	
	--PRINT @tSql
	DROP TABLE #TFCTRptCrdTemp
--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCheckPrepaid]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCheckPrepaid]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCheckPrepaid] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCheckPrepaid] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn ตวจสอบการเติมเงิน
-- Create 06/06/2019
-- @pnLngID ÀÒÉÒ
--@pnComName เครื่องคอม
--@ptRptName ชื่อรายงาน
-- @pnCrdF ¨Ò¡ºÑµÃ 
-- @pnCrdT ¶Ö§ËÁÒÂàÅ¢ºÑµÃ
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CheckPrepaid'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null
	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	--print @tSql1
	--DECLARE @nComName Varchar(100)
	--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp

	SET @tSql =' INSERT INTO TFCTRptCrdTmp'
	SET @tSql +=' ('
	 SET @tSql +=' FTComName,FTRptName,FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTCrdCode,FTCrdName,FTUsrName,FCTxnValue,FTCdtRmk'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''',''' + @tRptName + ''','
	SET @tSql +=' FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTCrdCode,FTCrdName,FTUsrName,FCTxnValue,FTCdtRmk'
	SET @tSql +=' FROM'
	   SET @tSql +=' ('
		SET @tSql +=' SELECT A.FTTxnPosCode, A.FDTxnDocDate, A.FTTxnDocType, A.FTTxnDocNoRef, A.FTCrdCode, CRDX.FDCrdExpireDate, A.FTCdtRmk,'
		SET @tSql +=' CRDL.FTCrdName, CTYL.FTCtyName, DPL.FTDptName, CRD.FTCrdStaActive, CRD.FTCrdHolderID, '
		SET @tSql +=' TOPHD.FTUsrName, A.FCTxnCrdValue, A.FCTxnValue, A.FCTxnCrdValue + A.FCTxnValue AS FCTxnValAftTrans'
		SET @tSql +=' FROM'
		   SET @tSql +=' ('
			SET @tSql +=' SELECT ISNULL(FTTxnPosCode, ''N/A'') AS FTTxnPosCode, FDTxnDocDate, FTCrdCode, FCTxnValue, '''' AS FTCdtRmk, FTTxnDocType, FTTxnDocNoRef, FCTxnCrdValue'
			SET @tSql +=' FROM dbo.TFNTCrdHis AS CHIS WITH (NOLOCK)'
			SET @tSql += ' WHERE 1=1 '
			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END

			SET @tSql +=' UNION ALL'
			SET @tSql +=' SELECT ISNULL(CT.FTTxnPosCode, ''N/A'') AS FTTxnPosCode, CT.FDTxnDocDate, CT.FTCrdCode, CT.FCTxnValue, '''' AS FTCdtRmk, CT.FTTxnDocType, CT.FTTxnDocNoRef, CT.FCTxnCrdValue'
			SET @tSql +=' FROM dbo.TFNTCrdTopUp AS CT WITH (NOLOCK) INNER JOIN'
			SET @tSql +=' dbo.TFNTCrdTopUpHD AS CTHD WITH (NOLOCK) ON CT.FTTxnDocNoRef = CTHD.FTCthDocNo'
			SET @tSql += ' WHERE 1=1'
			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND CT.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10), CT.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END

		   SET @tSql +=' ) AS A LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TFNTCrdTopUpHD AS TOPHD WITH (NOLOCK) ON A.FTTxnDocNoRef = TOPHD.FTCthDocNo LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON A.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TFNMCardType_L AS CTYL WITH (NOLOCK) ON CRD.FTCtyCode = CTYL.FTCtyCode AND CTYL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode  AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		   SET @tSql +=' dbo.TFNMCard AS CRDX WITH (NOLOCK) ON A.FTCrdCode = CRDX.FTCrdCode'
		SET @tSql +=' WHERE (A.FTTxnDocType IN (''1'', ''5''))'
	   SET @tSql +=' )ChkPrepaid' 
	--PRINT @tSql
	EXECUTE (@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCheckStatusCard]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCheckStatusCard]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCheckStatusCard] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCheckStatusCard] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --ประเภทบัตร
	@ptCrdTypeT Varchar(5),
	@ptCrdStaActiveF Varchar(1),-- สถานะบัตร	FTCrdStaActive
	@ptCrdStaActiveT Varchar(1),
	@ptStartDateF Varchar(10),	--FDCrdStartDate
	@ptStartDateT Varchar(10),
	@ptExpDateF Varchar(10),--FDCrdExpireDate
	@ptExpDateT Varchar(10),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ภาษา
-- @pnComName ชื่อเครื่อง
-- @ptRptName ชื่อรายงาน
-- @ptCrdTypeF Varchar(5), --ประเภทบัตร
-- @ptCrdTypeT Varchar(5),
-- @ptCrdStaActiveF Varchar(1),-- สถานะบัตร	FTCrdStaActive
-- @ptCrdStaActiveT Varchar(1),
-- @ptStartDateF Varchar(10),	--FDCrdStartDate
-- @ptStartDateT Varchar(10),
-- @ptExpDateF Varchar(10),--FDCrdExpireDate
-- @ptExpDateT Varchar(10)
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)

	DECLARE @tSqlCrd nVARCHAR(Max)

	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --ประเภทบัตร
	DECLARE @tCrdTypeT Varchar(5)

	DECLARE @tCrdStaActiveF Varchar(1)-- สถานะบัตร	FTCrdStaActive
	DECLARE @tCrdStaActiveT Varchar(1)

	--FDCrdStartDate
	DECLARE @tStartDateF Varchar(10)
	DECLARE @tStartDateT Varchar(10)

	--FDCrdExpireDate
	DECLARE @tExpDateF Varchar(10)
	DECLARE @tExpDateT Varchar(10)


	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)



	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	
	--SET @tRptName = 'CheckStatusCard' 

	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	
	--SET @tCrdStaActiveF = '1'
	--SET @tCrdStaActiveT = '3'

	--SET @tStartDateF = '2019-03-01'
	--SET @tStartDateT = '2019-03-31'

	--SET @tExpDateF = '2046-10-18'
	--SET @tExpDateT = '9999-12-31'


	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT
	
	SET @tCrdStaActiveF = @ptCrdStaActiveF
	SET @tCrdStaActiveT = @ptCrdStaActiveT

	SET @tStartDateF = @ptStartDateF
	SET @tStartDateT = @ptStartDateT

	SET @tExpDateF = @ptExpDateF
	SET @tExpDateT = @ptExpDateT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	--FTCtyCode
	IF @tCrdTypeF = null
	BEGIN
		SET @tCrdTypeF = ''
	END
	IF @tCrdTypeT = null
	BEGIN
		SET @tCrdTypeT = ''
	END
	IF @tCrdTypeT = ''
	BEGIN
		SET @tCrdTypeT = @tCrdTypeF
	END
		
	--FTCrdStaActive
	IF @tCrdStaActiveF = null 
	BEGIN
		SET @tCrdStaActiveF = ''
	END
	IF @tCrdStaActiveT = null
	BEGIN
		SET @tCrdStaActiveT = ''
	END
	IF @tCrdStaActiveT = '' 
	BEGIN
		SET @tCrdStaActiveT = @tCrdStaActiveF
	END

	--FDCrdStartDate
	IF @tStartDateF = null
	BEGIN
		SET @tStartDateF = ''
	END
	IF @tStartDateT = null
	BEGIN
		SET @tStartDateT  = ''
	END
	IF @tStartDateT  = ''
	BEGIN
		SET @tStartDateT  = @tStartDateF
	END

	--FDCrdExpireDate
	IF @tExpDateF = null
	BEGIN
		SET @tExpDateF =''
	END
	IF @tExpDateT = null
	BEGIN
		SET @tExpDateT = ''
	END
	IF @tExpDateT = ''
	BEGIN
		SET @tExpDateT = @tExpDateF
	END

	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END


	SET @tSqlCrd = ' WHERE 1=1 '
	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSqlCrd +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	IF @tCrdStaActiveF <> '' AND @tCrdStaActiveT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CRD.FTCrdStaActive BETWEEN ''' + @tCrdStaActiveF + ''' AND ''' + @tCrdStaActiveT + ''''
	END	


	SET @tStartDateF = CONVERT(VARCHAR(10),@tStartDateF,121)
	SET @tStartDateT = CONVERT(VARCHAR(10),@tStartDateT,121)
	IF @tStartDateF <> '' AND @tStartDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdStartDate, 121)  BETWEEN ''' + @tStartDateF + ''' AND ''' + @tStartDateT + ''''
	END

	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)
	IF @tExpDateF <> '' AND @tExpDateT <> ''
	BEGIN
		SET @tSqlCrd += ' AND CONVERT(VARCHAR(10), CRD.FDCrdExpireDate, 121) BETWEEN  ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
	END

	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN		
		SET @tSqlCrd += ' AND CRD.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlCrd +=' AND CONVERT(VARCHAR(10), CSTA.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	SET @tSql1 = ' WHERE 1=1 '
	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN
		SET @tSql1 += ' AND A.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN		
		SET @tSql2 +=' AND CONVERT(VARCHAR(10), CSTA.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
		
	--print @tSql1
	--DECLARE @nComName Varchar(100)
	--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	SET @tSql ='INSERT INTO TFCTRptCrdTmp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,FTCrdCode, FTCrdHolderID, FTCtyName, FTCrdName, FDCrdStartDate, FDCrdExpireDate, FCCrdValue, FDTxnDocDate, FTTxnPosCode '
	--SET @tSql +=' FTTxnPosCode, FTPosType, FTTxnDocRefNo, FTTxnDocNoRef, FTTxnDocTypeName, '
	--SET @tSql +=' FTDocCreateBy, FDTxnDocDate, FCCrdBalance, FNLngID, FCTxnValue'
	SET @tSql +=')'

	SET @tSql +=' SELECT '''+ @nComName + '''  AS FTComName,'''+ @tRptName +'''AS FTRptName,'
	SET @tSql +=' CRD.FTCrdCode, CRD.FTCrdHolderID, CTL.FTCtyName, CRDL.FTCrdName,'
	SET @tSql +=' CONVERT(VARCHAR(10), CRD.FDCrdStartDate, 121) AS FDCrdStartDate,'
	SET @tSql +=' CONVERT(VARCHAR(10), CRD.FDCrdExpireDate, 121) AS FDCrdExpireDate,' 
	SET @tSql +=' CRD.FCCrdValue, CSTA.FDTxnDocDate, CSTA.FTTxnPosCode'--,CRD.FTCrdStaActive

	SET @tSql +=' FROM  dbo.TFNMCard AS CRD WITH (NOLOCK) LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' (SELECT A.FTCrdCode, A.FDTxnDocDate, CASE WHEN ISNULL(HIS.FTTxnPosCode, '''') = '''' THEN SAL.FTTxnPosCode ELSE HIS.FTTxnPosCode END AS FTTxnPosCode'
	SET @tSql +=' FROM  (SELECT  FTCrdCode, MAX(FDTxnDocDate) AS FDTxnDocDate'
	SET @tSql +=' FROM  (SELECT FTCrdCode, FTTxnDocNoRef, FDTxnDocDate'
	SET @tSql +=' FROM  (SELECT FTCrdCode, MAX(FTTxnDocNoRef) AS FTTxnDocNoRef, MAX(FDTxnDocDate) AS FDTxnDocDate'
	SET @tSql +=' FROM dbo.TFNTCrdHis WITH (NOLOCK)'
	SET @tSql +=' WHERE (FTTxnDocType = ''3'')'
	SET @tSql +=' GROUP BY FTCrdCode'
	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT FTCrdCode, MAX(FTTxnDocNoRef) AS FTTxnDocNoRef, MAX(FDTxnDocDate) AS FDTxnDocDate'
	SET @tSql +=' FROM dbo.TFNTCrdSale WITH (NOLOCK)'
	SET @tSql +=' WHERE (FTTxnDocType = ''3'')'
	SET @tSql +=' GROUP BY FTCrdCode) AS B) AS C'
	SET @tSql +=' GROUP BY FTCrdCode) AS A LEFT OUTER JOIN'
	SET @tSql +=' (SELECT FTTxnPosCode, FTCrdCode, MAX(FTTxnDocNoRef) AS FTTxnDocNoRef, MAX(FDTxnDocDate) AS FDTxnDocDate'
	SET @tSql +=' FROM dbo.TFNTCrdHis AS TFNTCrdHis_1 WITH (NOLOCK)'
	SET @tSql +=' WHERE (FTTxnDocType = ''3'')'
	SET @tSql +=' GROUP BY FTCrdCode, FTTxnPosCode) AS HIS ON A.FTCrdCode = HIS.FTCrdCode AND A.FDTxnDocDate = HIS.FDTxnDocDate LEFT OUTER JOIN'
	SET @tSql +=' (SELECT FTTxnPosCode, FTCrdCode, MAX(FTTxnDocNoRef) AS FTTxnDocNoRef, MAX(FDTxnDocDate) AS FDTxnDocDate'
	SET @tSql +=' FROM dbo.TFNTCrdSale AS TFNTCrdSale_1 WITH (NOLOCK)'
	SET @tSql +=' WHERE (FTTxnDocType = ''3'')'
	SET @tSql +=' GROUP BY FTCrdCode, FTTxnPosCode) AS SAL ON A.FTCrdCode = SAL.FTCrdCode AND A.FDTxnDocDate = SAL.FDTxnDocDate'
	SET @tSql += @tSql1
	SET @tSql +=' ) AS CSTA ON CRD.FTCrdCode = CSTA.FTCrdCode'
	SET @tSql += @tSqlCrd
	--PRINT @tSql

	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	--EXECUTE @tSqlIns
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --print @tSql
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxClearCardValueForReuse]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxClearCardValueForReuse]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxClearCardValueForReuse] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxClearCardValueForReuse] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeF Varchar(5), --ประเภทบัตร
	@ptCrdTypeT Varchar(5),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
------------------------------------
 --Watcharakorn 
 --Create 06/06/2019
 --@pnLngID ภาษา
 --@pnComName
 --@tRptName ชื่อรายงาน
 --@ptCrdTypeF Varchar(5), --ประเภทบัตร
 --@ptCrdTypeT Varchar(5),
 --@pnCrdF จากบัตร 
 --@pnCrdT ถึงหมายเลขบัตร
 --@ptDocDateF จากวันที่
 --@ptDocDateT ถึงวันที่
------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns nVARCHAR(Max)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)
	--FTCtyCode
	DECLARE @tCrdTypeF Varchar(5) --ประเภทบัตร
	DECLARE @tCrdTypeT Varchar(5)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	
	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CardValueForReuse'
	--SET @tCrdTypeF = '00052'
	--SET @tCrdTypeT = '00100'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tDocDateF = '2019-05-01'
	--SET @tDocDateT = '2019-05-31'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeF = @ptCrdTypeF
	SET @tCrdTypeT = @ptCrdTypeT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

		IF @nLngID = null
		BEGIN
			SET @nLngID = 1
		END	
		--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
		IF @tCrdTypeF = null
		BEGIN
			SET @tCrdTypeF = ''
		END		
		IF @tCrdTypeT = '' OR @tCrdTypeT = null
		BEGIN
			SET @tCrdTypeT = @tCrdTypeF
		END

		IF @tCrdF = null
		BEGIN
			SET @tCrdF = ''
		END
		IF @tCrdT = null OR @tCrdT =''
		BEGIN
			SET @tCrdT = @tCrdF
		END 

		 
		IF @tDocDateF = null
		BEGIN 
			SET @tDocDateF = ''
		END

		IF @tDocDateT = null OR @tDocDateT =''
		BEGIN 
			SET @tDocDateT = @tDocDateF
		END


		SET @tSql1 = ' WHERE 1=1 '

		IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
		BEGIN
			SET @tSql1 +=' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
		END

		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSql1 +=' AND Tns.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		
		--print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
    --DROP TABLE #TFCTRptCrdTemp
	--DROP TABLE TFCTRptCrdTemp
    SELECT * INTO #TFCTRptCrdTemp FROM TFCTRptCrdTmp WHERE FTComName =   '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''
	TRUNCATE TABLE #TFCTRptCrdTemp
	--SELECT * FROM #TFCTRptCrdTmp

	SET @tSql ='INSERT INTO #TFCTRptCrdTemp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,FTTxndocType,FTCrdCode,FTCrdName,FTShpCode,FTShpName,'
	SET @tSql +=' FTTxnPosCode,' --FTPosType,
	SET @tSql +=' FTTxnDocRefNo,FTTxnDocNoRef,'--FTTxnDocTypeName,
	SET @tSql +=' FNTxnID,FNTxnIDRef,'
	SET @tSql +=' FTDocCreateBy,FDTxnDocDate,FCCrdBalance,FNLngID,FCTxnValue'
	SET @tSql +=' )'--SELECT * FROM #TFCTRptCrdTmp WITH (NOLOCK)'
	SET @tSql += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,'
	SET @tSql += ' A.FTTxnDocType,A.FTCrdCode,A.FTCrdName,A.FTShpCode,A.FTShpName,A.FTTxnPosCode,'--A.FTPosType,'
	SET @tSql += ''''' AS FTTxnDocRefNo, A.FTTxnDocNoRef,'--A.FTTxnDocTypeName,'
	SET @tSql += ' A.FNTxnID,A.FNTxnIDRef,'
	SET @tSql += ' CASE WHEN A.FTTxnDocType = 3 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 4 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 5 THEN A.FTTxnPosCode ELSE USRL.FTUsrName END AS FTDocCreateBy,'
	SET @tSql += ' A.FDTxnDocDate,'
	SET @tSql += ' A.FCCrdBalance,''' +  CAST(@nLngID  AS VARCHAR(10)) + ''' AS FNLngID, A.FCTxnValue'
	SET @tSql += ' FROM (SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode,'--CRDHIS.FTPosType,'
	SET @tSql += ' CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
	SET @tSql += ' CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
	--SET @tSql += ' CRDHIS.FTTxnDocTypeName,'
	SET @tSql += ' CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
	SET @tSql += ' ISNULL(TOPUP.FTCreateBy, '''') + ISNULL(VOID.FTCreateBy, '''') + ISNULL(IMP.FTCreateBy, '''') + ISNULL(SHIFT.FTCreateBy, '''') AS FTUsrCreate'
	SET @tSql += ' FROM (SELECT C.FTBchCode,ISNULL(C.FTTxnDocNoRef,''N/A'') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
	--SET @tSql += ' CASE WHEN POS.FTPosType = 1 THEN ''จุดขาย/ร้านค้า;Pos/Store'' WHEN POS.FTPosType = 2 THEN ''จุดเติมเงิน;Topup'' WHEN POS.FTPosType = 3 THEN ''จุดตรวจสอบมูลค่า;Check Point'' ELSE ''ระบบหลังบ้าน;Back Office'''
	--SET @tSql += ' END AS FTPosType,'
	SET @tSql += ' C.FTTxnDocType,C.FTCrdCode,'
	SET @tSql += ' CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
	SET @tSql += ' CONVERT(VARCHAR(19),C.FDTxnDocDate, 121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate, 121),''N/A'') AS FDCrdExpireDate,'
	SET @tSql += ' ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,''N/A'') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance'

	--SET @tSql += ' CASE WHEN C.FTTxnDocType = 1 THEN ''เติมเงิน;Topup'' WHEN C.FTTxnDocType = ''2'' THEN ''ยกเลิกเติมเงิน;Cancel Topup'' WHEN C.FTTxnDocType = ''3'' THEN ''ตัดจ่าย/ขาย;Sale'' WHEN C.FTTxnDocType'
	--SET @tSql += ' = ''4'' THEN ''ยกเลิกตัดจ่าย;Cancel Sale'' WHEN C.FTTxnDocType = ''5'' THEN ''แลกคืน;Pay Back'' WHEN C.FTTxnDocType = ''6'' THEN ''เบิกบัตร;Card Requisition'' WHEN C.FTTxnDocType = ''7'' THEN ''คืนบัตร;Card Return'''
	--SET @tSql += ' WHEN C.FTTxnDocType = ''8'' THEN ''โอนเงินออก'' WHEN C.FTTxnDocType = ''9'' THEN ''โอนเงินเข้า'' WHEN C.FTTxnDocType = ''10'' THEN ''ล้างบัตร;Clear Card'' WHEN C.FTTxnDocType = ''11'' THEN ''ปรับสถานะ;Card Change Status'''
	--SET @tSql += ' WHEN C.FTTxnDocType = ''12'' THEN ''บัตรใหม่;New Card'' ELSE ''ไม่ระบุ;Unknown'' END AS FTTxnDocTypeName'
	SET @tSql += ' FROM'  
	SET @tSql += ' (SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef'
	SET @tSql += ' FROM  dbo.TFNTCrdHis Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSql += ' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSql += @tSql1

	SET @tSql += ' UNION ALL'
	SET @tSql += ' SELECT FTBchCode, FTTxnDocNoRef,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef'
	SET @tSql += ' FROM  dbo.TFNTCrdHisBch  Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSql += ' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSql += @tSql1

	SET @tSql += ' UNION ALL '
	SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue, FCTxnCrdValue,FTShpCode,'
	SET @tSql += ' FTTxnPosCode ,FNTxnID,FNTxnIDRef'
	SET @tSql += ' FROM  dbo.TFNTCrdTopUp  Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSql += ' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSql += @tSql1
                                                              
	SET @tSql += ' UNION ALL'
	SET @tSql += ' SELECT FTBchCode, FTTxnDocNoRef,FTTxnDocType,Tns.FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef'
	SET @tSql += ' FROM dbo.TFNTCrdSale Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSql += ' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSql += @tSql1

	SET @tSql += ' ) AS C LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNMCard AS CRD WITH (NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMPos AS POS WITH (NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMShop_L AS SHPL WITH (NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate, 121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
	SET @tSql += ' FROM   dbo.TFNMCard WITH (NOLOCK)'
	SET @tSql += ' GROUP BY FDCrdExpireDate) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate, 121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate, 121)) AS CRDHIS LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdTopUpHD AS TOPUP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = TOPUP.FTCthDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdVoidHD AS VOID WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = VOID.FTCvhDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdImpHD AS IMP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = IMP.FTCihDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdShiftHD AS SHIFT WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = SHIFT.FTCshDocNo) AS A LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode AND USRL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' '

	
	IF @tCrdTypeF <> '' AND @tCrdTypeT <> ''
	BEGIN
		SET @tSql2 =' AND  CRD.FTCtyCode BETWEEN ''' + @tCrdTypeF + ''' AND ''' + @tCrdTypeT + ''''
	END

	IF (@tCrdF <> '' AND @tCrdT <> '')
	BEGIN
		SET @tSql2 +=' AND Tns.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql2 +=' AND CONVERT(VARCHAR(10), Tns.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
	--print @tSQL2
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdTmp ('
	SET @tSqlIns +=' FTComName,FTRptName,FDTxnDocDate, FTCrdCode, FTCrdName,FTCtyName, FCTxnValue'

	SET @tSqlIns +=' )'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,FDTxnDocDate, FTCrdCode, FTCrdName,FTCtyName, FCTxnValue'

	SET @tSqlIns +=' FROM #TFCTRptCrdTemp'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef , R2.FTTxnDocNoRef AS FTDocRef FROM ('
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHis Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	SET @tSqlIns += @tSql2
	
	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHisBch Tns WITH (NOLOCK)  LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	SET @tSqlIns += @tSql2
	
	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdTopUp Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	SET @tSqlIns += @tSql2

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	SET @tSqlIns += @tSql2

	SET @tSqlIns +=' ) R1'
	SET @tSqlIns +=' INNER JOIN ('
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID '
	SET @tSqlIns +=' FROM TFNTCrdHis Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE 1=1 '
	SET @tSqlIns += @tSql2

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHisBch Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE 1=1 '
	SET @tSqlIns += @tSql2

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdTopUp Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE 1=1 '
	SET @tSqlIns += @tSql2

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale Tns WITH (NOLOCK) LEFT JOIN'
	SET @tSqlIns +=' TFNMCard AS CRD WITH (NOLOCK) ON Tns.FTCrdCode = CRD.FTCrdCode'
	SET @tSqlIns +=' WHERE 1=1 '
	SET @tSqlIns += @tSql2
	SET @tSqlIns +=' ) R2 ON R1.FNTxnIDRef = R2.FNTxnID  ) REF ON REF.FNTxnIDRef = #TFCTRptCrdTemp.FNTxnIDRef'
	--PRINT @tSql
	--PRINT @tSqlIns
	execute(@tSql)
	execute(@tSqlIns)
	
	--PRINT @tSql
	DROP TABLE #TFCTRptCrdTemp
--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxCollectExpireCard]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxCollectExpireCard]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxCollectExpireCard] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxCollectExpireCard] 
	--@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
------------------------------------
 --Watcharakorn 
 --Create 06/06/2019
 --@pnLngID ภาษา
 --@pnComName
 --@tRptName ชื่อรายงาน
 --@ptDocDateF จากวันที่
 --@ptDocDateT ถึงวันที่
------------------------------------
BEGIN TRY

	--DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns nVARCHAR(Max)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)
	--FTCtyCode
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	
	----SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CollectExpireCard'
	--SET @tDocDateF = '2018-01-01'
	--SET @tDocDateT = '2018-12-31'
	
	----SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'CollectExpireCard'
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	--SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(19),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(19),@tDocDateT,121)

	--IF @nLngID = null
	--BEGIN
	--	SET @nLngID = 1
	--END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
		 
	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END


	SET @tSql1 = ' WHERE 1=1'

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDCrdExpireDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
	ELSE
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDCrdExpireDate, 121) < CONVERT(VARCHAR(10), GETDATE(), 121)'
		END			
	--print @tSql1
	--DECLARE @nComName Varchar(100)
	--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''  --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	SET @tSql = ' INSERT INTO TFCTRptCrdTmp' 
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,FDCrdExpireDate, FTCrdCode, FCCrdValue, FTCrdStaActive'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptName +''' AS FTRptName,'
	SET @tSql +=' FDCrdExpireDate, FTCrdCode, FCCrdValue, FTCrdStaActive'
	SET @tSql +=' FROM TFNMCard'	
	SET @tSql += @tSql1
	--PRINT @tSql 
 	EXECUTE(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailyByPdtBstQty1001004]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailyByPdtBstQty1001004]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailyByPdtBstQty1001004] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailyByPdtBstQty1001004] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@pnTop int,
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),
	@ptPdtCodeF Varchar(20),
	@ptPdtCodeT Varchar(20),
	@ptPdtChanF Varchar(30),
	@ptPdtChanT Varchar(30),
	@ptPdtTypeF Varchar(5),
	@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @pnTop Top
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPdtCodeF จากสินค้า
-- @ptPdtCodeT ถึงสินค้า
-- @ptPdtChanF จากกลุ่มสินค้า
-- @ptPdtChanT ถึงกลุ่มสินค้า
-- @ptPdtTypeF จากประเภทสินค้า
-- @ptPdtTypeT ถึงประเภท

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @nTop Int
	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tPdtCodeF Varchar(20)
	DECLARE @tPdtCodeT Varchar(20)
	DECLARE @tPdtChanF Varchar(30)
	DECLARE @tPdtChanT Varchar(30)
	DECLARE @tPdtTypeF Varchar(5)
	DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PdtBstQty1001004'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @nTop = 2
	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @nTop = 0
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @nTop = @pnTop
	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tPdtCodeF = @ptPdtCodeF 
	SET @tPdtCodeT = @ptPdtCodeT
	SET @tPdtChanF = @ptPdtChanF
	SET @tPdtChanT = @ptPdtChanT 
	SET @tPdtTypeF = @ptPdtTypeF
	SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @nTop = null 
	BEGIN
	 SET @nTop = 0
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tShpF = null
	--BEGIN
	--	SET @tShpF = ''
	--END 
	--IF @tShpT = null OR @tShpT =''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END 

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tPdtCodeF = null
	BEGIN
		SET @tPdtCodeF = ''
	END 
	IF @tPdtCodeT = null OR @tPdtCodeT =''
	BEGIN
		SET @tPdtCodeT = @tPdtCodeF
	END 

	IF @tPdtChanF = null
	BEGIN
		SET @tPdtChanF = ''
	END 
	IF @tPdtChanT = null OR @tPdtChanT =''
	BEGIN
		SET @tPdtChanT = @tPdtChanF
	END 

	IF @tPdtTypeF = null
	BEGIN
		SET @tPdtTypeF = ''
	END 
	IF @tPdtTypeT = null OR @tPdtTypeT =''
	BEGIN
		SET @tPdtTypeT = @tPdtTypeF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	END

	IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	END

	IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalDTTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	--Sale
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	IF @nTop > 0
	--BEGIN
		--SET @tSql +=' SELECT TOP('+CAST(@nTop AS VARCHAR(1000))+') '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	--END 
	--ELSE BEGIN
		SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	--END
	SET @tSql +=' 1 AS FNAppType,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' (FCXsdNetAfHD / FCXsdQty)  FCXsdSetPrice,'
	SET @tSql +=' FCXsdQty, FCXsdAmtB4DisChg, FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' FROM'
	IF @nTop > 0
	BEGIN
	SET @tSql +='	( SELECT 	TOP('+CAST(@nTop AS VARCHAR(1000))+') B.* FROM'
 END
	ELSE BEGIN
		SET @tSql +=' SELECT B.* FROM'
	END
		SET @tSql +=' (SELECT DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,'
		SET @tSql +=' ISNULL(Pun_L.FTPunName,'''') AS FTPunName,AVG(FCXsdSetPrice) FCXsdSetPrice,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END) FCXsdQty,' 
		SET @tSql +=' SUM((CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdQty,0))*-1 END) *ISNULL(FCXsdSetPrice,0) ) AS FCXsdAmtB4DisChg,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END) FCXsdDis,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END) FCXsdVat,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END) FCXsdNet,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END) FCXsdNetAfHD' 
		SET @tSql +=' FROM TPSTSalDT DT INNER JOIN TPSTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Pgp_L ON Pdt.FTPgpChain = Pgp_L.FTPgpChain AND Pgp_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = ''' +  + CAST(@nLngID  AS VARCHAR(10)) + + ''''
		SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON DT.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
		SET @tSql += @tSql1			
	SET @tSql +=' GROUP BY DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,'''')'

	SET @tSql +='	) AS B ORDER BY B.FCXsdQty DESC'

	SET @tSql +=' ) SalePdt'
	SET @tSql +='  GROUP BY FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	PRINT @tSql
	EXECUTE(@tSql)

	--Vending
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	IF @nTop > 0
	BEGIN
		SET @tSql +=' SELECT TOP('+CAST(@nTop AS VARCHAR(1000))+') '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	END 
	ELSE BEGIN
		SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	END
	SET @tSql +=' 2 AS FNAppType,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' Avg(FCXsdSetPrice) FCXsdSetPrice,'
	SET @tSql +=' FCXsdQty, FCXsdAmtB4DisChg, FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,'
		SET @tSql +=' ISNULL(Pun_L.FTPunName,'''') AS FTPunName,ISNULL(FCXsdSetPrice,0) AS FCXsdSetPrice,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END) FCXsdQty,' 
		SET @tSql +=' SUM((CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdQty,0))*-1 END) *ISNULL(FCXsdSetPrice,0) ) AS FCXsdAmtB4DisChg,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END) FCXsdDis,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END) FCXsdVat,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END) FCXsdNet,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END) FCXsdNetAfHD' 
		SET @tSql +=' FROM TVDTSalDT DT INNER JOIN TVDTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Pgp_L ON Pdt.FTPgpChain = Pgp_L.FTPgpChain AND Pgp_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = ''' +  + CAST(@nLngID  AS VARCHAR(10)) + + ''''
		SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON DT.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		--PRINT @tSql1
		SET @tSql += @tSql1			
	SET @tSql +=' GROUP BY DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,''''),ISNULL(FCXsdSetPrice,0)'
	SET @tSql +=' ) SalePdt'
	SET @tSql +='  GROUP BY FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	--PRINT @tSql
	--EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTSalDTTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailyByPdtBstVal1001025]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailyByPdtBstVal1001025]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailyByPdtBstVal1001025] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailyByPdtBstVal1001025] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@pnTop int,
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),
	@ptPdtCodeF Varchar(20),
	@ptPdtCodeT Varchar(20),
	@ptPdtChanF Varchar(30),
	@ptPdtChanT Varchar(30),
	@ptPdtTypeF Varchar(5),
	@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @pnTop Top
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPdtCodeF จากสินค้า
-- @ptPdtCodeT ถึงสินค้า
-- @ptPdtChanF จากกลุ่มสินค้า
-- @ptPdtChanT ถึงกลุ่มสินค้า
-- @ptPdtTypeF จากประเภทสินค้า
-- @ptPdtTypeT ถึงประเภท

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @nTop Int
	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tPdtCodeF Varchar(20)
	DECLARE @tPdtCodeT Varchar(20)
	DECLARE @tPdtChanF Varchar(30)
	DECLARE @tPdtChanT Varchar(30)
	DECLARE @tPdtTypeF Varchar(5)
	DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PdtBstQty1001004'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @nTop = 2
	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @nTop = 0
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @nTop = @pnTop
	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tPdtCodeF = @ptPdtCodeF 
	SET @tPdtCodeT = @ptPdtCodeT
	SET @tPdtChanF = @ptPdtChanF
	SET @tPdtChanT = @ptPdtChanT 
	SET @tPdtTypeF = @ptPdtTypeF
	SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @nTop = null 
	BEGIN
	 SET @nTop = 0
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tShpF = null
	--BEGIN
	--	SET @tShpF = ''
	--END 
	--IF @tShpT = null OR @tShpT =''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END 

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tPdtCodeF = null
	BEGIN
		SET @tPdtCodeF = ''
	END 
	IF @tPdtCodeT = null OR @tPdtCodeT =''
	BEGIN
		SET @tPdtCodeT = @tPdtCodeF
	END 

	IF @tPdtChanF = null
	BEGIN
		SET @tPdtChanF = ''
	END 
	IF @tPdtChanT = null OR @tPdtChanT =''
	BEGIN
		SET @tPdtChanT = @tPdtChanF
	END 

	IF @tPdtTypeF = null
	BEGIN
		SET @tPdtTypeF = ''
	END 
	IF @tPdtTypeT = null OR @tPdtTypeT =''
	BEGIN
		SET @tPdtTypeT = @tPdtTypeF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	END

	IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	END

	IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalDTTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	--Sale
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	IF @nTop > 0
	--BEGIN
		--SET @tSql +=' SELECT TOP('+CAST(@nTop AS VARCHAR(1000))+') '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	--END 
	--ELSE BEGIN
		SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	--END
	SET @tSql +=' 1 AS FNAppType,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' (FCXsdNetAfHD / FCXsdQty)  FCXsdSetPrice,'
	SET @tSql +=' FCXsdQty, FCXsdAmtB4DisChg, FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' FROM'
	IF @nTop > 0
	BEGIN
	SET @tSql +='	( SELECT 	TOP('+CAST(@nTop AS VARCHAR(1000))+') B.* FROM'
 END
	ELSE BEGIN
		SET @tSql +=' SELECT B.* FROM'
	END
		SET @tSql +=' (SELECT DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,'
		SET @tSql +=' ISNULL(Pun_L.FTPunName,'''') AS FTPunName,AVG(FCXsdSetPrice) FCXsdSetPrice,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END) FCXsdQty,' 
		SET @tSql +=' SUM((CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdQty,0))*-1 END) *ISNULL(FCXsdSetPrice,0) ) AS FCXsdAmtB4DisChg,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END) FCXsdDis,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END) FCXsdVat,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END) FCXsdNet,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END) FCXsdNetAfHD' 
		SET @tSql +=' FROM TPSTSalDT DT INNER JOIN TPSTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Pgp_L ON Pdt.FTPgpChain = Pgp_L.FTPgpChain AND Pgp_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = ''' +  + CAST(@nLngID  AS VARCHAR(10)) + + ''''
		SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON DT.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
		SET @tSql += @tSql1			
	SET @tSql +=' GROUP BY DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,'''')'

	SET @tSql +='	) AS B ORDER BY B.FCXsdAmtB4DisChg DESC'

	SET @tSql +=' ) SalePdt'
	SET @tSql +='  GROUP BY FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	PRINT @tSql
	EXECUTE(@tSql)

	--Vending
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdSetPrice,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	IF @nTop > 0
	BEGIN
		SET @tSql +=' SELECT TOP('+CAST(@nTop AS VARCHAR(1000))+') '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	END 
	ELSE BEGIN
		SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	END
	SET @tSql +=' 2 AS FNAppType,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' Avg(FCXsdSetPrice) FCXsdSetPrice,'
	SET @tSql +=' FCXsdQty, FCXsdAmtB4DisChg, FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,'
		SET @tSql +=' ISNULL(Pun_L.FTPunName,'''') AS FTPunName,ISNULL(FCXsdSetPrice,0) AS FCXsdSetPrice,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END) FCXsdQty,' 
		SET @tSql +=' SUM((CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdQty,0))*-1 END) *ISNULL(FCXsdSetPrice,0) ) AS FCXsdAmtB4DisChg,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END) FCXsdDis,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END) FCXsdVat,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END) FCXsdNet,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END) FCXsdNetAfHD' 
		SET @tSql +=' FROM TVDTSalDT DT INNER JOIN TVDTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Pgp_L ON Pdt.FTPgpChain = Pgp_L.FTPgpChain AND Pgp_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = ''' +  + CAST(@nLngID  AS VARCHAR(10)) + + ''''
		SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON DT.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		--PRINT @tSql1
		SET @tSql += @tSql1			
	SET @tSql +=' GROUP BY DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,''''),ISNULL(FCXsdSetPrice,0)'
	SET @tSql +=' ) SalePdt'
	SET @tSql +='  GROUP BY FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,FCXsdQty,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	--PRINT @tSql
	--EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTSalDTTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailySaleAmount]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailySaleAmount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailySaleAmount] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailySaleAmount]
--ALTER PROCEDURE [dbo].[SP_RPTxDailySaleAmount]

	@pnLngID      int,
	@ptComName    Varchar(100),
	@ptRptCode    Varchar(100),
	@ptUsrSession Varchar(255),
    @pnFilterType INT, 
	--สาขา
	@ptBchF	      Varchar(5),
	@ptBchT       Varchar(5),
	@ptBchL       VARCHAR(MAX),
	--ร้านค้า
	@ptShpF       Varchar(5),
	@ptShpT       Varchar(5),
	@ptShpL       Varchar(5),
	--เครื่องจุดขาย
	@ptPosF       Varchar(5),
	@ptPosT       Varchar(5),
    @ptPosL       VARCHAR(MAX),
	--กลุ่มธุรกิจ
	@ptMerF       Varchar(5),
	@ptMerT       Varchar(5),
	@ptMerL       VARCHAR(MAX),
	--ประเภทชำระเงิน
	@ptRcvF       VARCHAR(5), 
	@ptRcvT       VARCHAR(5),
	--วันที่
	@ptDocDateF   Varchar(10),
	@ptDocDateT   Varchar(10),

	@pnResult      INT OUTPUT 
AS
BEGIN TRY
	DECLARE @nLngID      int
	DECLARE @tComName    Varchar(100)
	DECLARE @tRptCode    Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql        VARCHAR(8000)
	DECLARE @tSql1       nVARCHAR(Max)
	DECLARE @tSql2       VARCHAR(8000)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nFilterType INT
	DECLARE @tSQL_Where_Rcv VARCHAR(MAX)

	--สาขา แบบช่วง
	DECLARE @tBchF	     Varchar(5)
	DECLARE @tBchT       Varchar(5)
	--สาขา แบบเลือก
	DECLARE @tBchL       Varchar(MAX)
    --ร้านค้า แบบช่วง
	DECLARE @tShpF       Varchar(5)
	DECLARE @tShpT       Varchar(5)
	--ร้านค้า แบบเลือก
	DECLARE @tShpL       Varchar(MAX)
	--เครื่องจุดขาย แบบช่วง
	DECLARE @tPosF       Varchar(5)
	DECLARE @tPosT       Varchar(5)
	--เครื่องจุดขาย แบบเลือก
	DECLARE @tPosL       Varchar(MAX)
	--กลุ่มธุรกิจ แบบช่วง
	DECLARE @tMerF       Varchar(5)
	DECLARE @tMerT       Varchar(5)
	--กลุ่มธุรกิจ แบบเลือก
	DECLARE @tMerL       Varchar(5)
	--ประเภทชำระเงิน
	DECLARE @tRcvF       Varchar(5)
	DECLARE @tRcvT		 Varchar(5)
	--วันที่
	DECLARE @tDocDateF   Varchar(10)
	DECLARE @tDocDateT   Varchar(10)

	DECLARE @nResult     INT   

	
-------- ประกาศตัวแปรรับ parameter ------
	SET  @nLngID		 = @pnLngID
	SET  @tComName		 = @ptComName
	SET  @tRptCode       = @ptRptCode
	SET  @tUsrSession    = @ptUsrSession
	SET  @nFilterType     = @pnFilterType

	--สาขา แบบช่วง
	SET  @tBchF			 = @ptBchF
	SET  @tBchT          = @ptBchT
	--สาขา แบบเลือก
	SET  @tBchL          = @ptBchL
	--ร้านค้า แบบช่วง
	SET  @tShpF			 = @ptShpF
	SET  @tShpT			 = @ptShpT
	--ร้านค้า แบบช่วง
	SET  @tShpL		     = @ptShpL
	--เครื่องจุดขาย แบบช่วง
	SET  @tPosF			 = @ptPosF
	SET  @tPosT			 = @ptPosT
	--เครื่องจุดขาย แบบเลือก
	SET  @tPosL          = @PtPosL
	--กลุ่มธุรกิจ แบบช่วง
	SET  @tMerF          = @ptMerF
	SET  @tMerT			 = @ptMerT
	--กลุ่มธุรกิจ แบบเลือก
	SET  @tMerL			 = @ptMerL
	--ประเภทชำระเงิน
	SET  @tRcvF			 = @ptRcvF
	SET  @tRcvT	         = @ptRcvT
	--วันที่
	SET  @tDocDateF		 = @ptDocDateF
	SET  @tDocDateT		 = @ptDocDateT

	SET  @tSQL_Filter    = ''
	SET  @tSQL_Where_Rcv = ''

	SET @nResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END

	SET @tSQL_Filter  = 'WHERE HD.FTXshStaDoc = 1'
	--SET @tSQL_Filter  = ' '
	/*===== 1: แบบช่วง ===========================================================================================================================================*/
	IF(@nFilterType = 1)
		BEGIN
		/*===== ตรวจสอบค่า Filter สาขา ช่วง ========================================*/
		--เช็ค Parameter จากสาขา
		IF(@tBchF = '' OR @tBchF = NULL)
			BEGIN 
				SET @tBchF = ''
			END
		ELSE IF(@tBchF <> '')
		   BEGIN 
			   SET @tBchF = @tBchF
		   END
		--เช็ค Parameter จากสาขา
		IF(@tBchT = '' OR @tBchT = NULL)
			BEGIN 
				SET @tBchT = ''
			END
		ELSE IF(@tBchT <> '')
		   BEGIN 
			   SET @tBchT = @tBchT
		   END
		IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

		/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ ช่วง ========================================*/
		--เช็ค Parameter จากกลุ่มธุรกิจ
		IF(@tMerF = '' OR @tMerF = NULL)
			BEGIN 
				SET @tMerF = ''
			END
		ELSE IF(@tMerF <> '')
		   BEGIN 
			   SET @tMerF = @tMerF
		   END
		--เช็ค Parameter จากสาขา
		IF(@tMerT = '' OR @tMerT = NULL)
			BEGIN 
				SET @tMerT = ''
			END
		ELSE IF(@tMerT <> '')
		   BEGIN 
			   SET @tMerT = @tMerT
		   END

		IF (@tMerF <> '' AND @tMerT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			END

		/*===== ตรวจสอบค่า Filter ร้านค้า ช่วง ========================================*/
		--เช็ค Parameter จากร้านค้า
		IF(@tShpF = '' OR @tShpF = NULL)
			BEGIN 
				SET @tShpF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tShpF = @tShpF
		   END

		 --เช็ค Parameter ถึงร้านค้า
		IF(@tShpT = '' OR @tShpT = NULL)
		   BEGIN 
			   SET @tShpT = ''
		   END
		ELSE IF(@tShpT <> '')
		   BEGIN 
			   SET @tShpT = @tShpT
		   END

		IF (@tShpF <> '' AND @tShpT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
			END
	
		/*===== ตรวจสอบค่า Filter จุดขาย ช่วง ========================================*/
		--เช็ค Parameter จากตู้
		IF(@tPosF = '' OR @tPosF = NULL)
			BEGIN 
				SET @tPosF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tPosF = @tPosF
		   END

		 --เช็ค Parameter ถึงตู้
		IF(@tPosT = '' OR @tPosT = NULL)
		   BEGIN 
			   SET @tPosT = ''
		   END
		ELSE IF(@tPosT <> '')
		   BEGIN 
			   SET @tPosT = @tPosT
		   END

		IF (@tPosF <> '' AND @tPosT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
			END
	END		

/*===== 2: แบบเลือก ===========================================================================================================================================*/
	IF(@nFilterType = 2)
		BEGIN
		/*===== ตรวจสอบค่า Filter สาขา เลือก ========================================*/
		--เช็ค Parameter สาขา
		IF(@tBchL = '' OR @tBchL = NULL)
			BEGIN 
				SET @tBchL = ''
			END
		ELSE IF(@tBchL <> '')
		   BEGIN 
			   SET @tBchL = @tBchL
		   END

		IF (@tBchL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTBchCode IN(' + @tBchL + '))'
			END

		/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ เลือก ========================================*/
		--เช็ค Parameter กลุ่มธุรกิจ
		IF(@tMerL = '' OR @tMerL = NULL)
			BEGIN 
				SET @tMerF = ''
			END
		ELSE IF(@tMerL <> '')
		   BEGIN 
			   SET @tMerL = @tMerL
		   END

		IF (@tMerL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (SHP.FTMerCode IN(' + @tMerL + '))'
			END

		/*===== ตรวจสอบค่า Filter ร้านค้า เลือก ========================================*/
		--เช็ค Parameter จากร้านค้า
		IF(@tShpL = '' OR @tShpL = NULL)
			BEGIN 
				SET @tShpL = ''
			END
		ELSE IF(@tShpL <> '')
		   BEGIN 
			   SET @tShpL = @tShpL
		   END

		IF (@tShpL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTShpCode IN(' + @tShpL + '))'
			END
	
		/*===== ตรวจสอบค่า Filter จุดขาย เลือก ========================================*/
		--เช็ค Parameter จุดขาย
		IF(@tPosL = '' OR @tPosL = NULL)
			BEGIN 
				SET @tPosL = ''
			END
		ELSE IF(@tShpL <> '')
		   BEGIN 
			   SET @tPosL = @tPosL
		   END

		IF (@tPosL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTPosCode IN(' + @tPosL + '))'
			END
	END

		/*===== ตรวจสอบค่า Filter ประเภทการชำระเงิน  ========================================*/
		--เช็ค Parameter จากประเภทการชำระเงิน
		IF(@tRcvF = '' OR @tRcvF = NULL)
			BEGIN 
				SET @tRcvF = ''
			END
		ELSE IF(@tRcvF <> '')
		   BEGIN 
			   SET @tRcvF = @tRcvF
		   END

		 --เช็ค Parameter ถึงประเภทการชำระเงิน
		IF(@tRcvT = '' OR @tRcvT = NULL)
		   BEGIN 
			   SET @tRcvT = ''
		   END
		ELSE IF(@tRcvT <> '')
		   BEGIN 
			   SET @tRcvT = @tRcvT
		   END
   
		IF (@tRcvF <> '' AND @tRcvT <> '')
			BEGIN
				SET @tSQL_Where_Rcv += ' WHERE  RC.FTRcvCode BETWEEN ''' + @tRcvF + ''' AND ''' + @tRcvT + ''' '
			END

		/*===== ตรวจสอบค่า Filter วันที่ ช่วง ========================================*/
		--เช็ค Parameter จากตู้
		IF(@tDocDateF = '' OR @tDocDateF = NULL)
			BEGIN 
				SET @tDocDateF = ''
			END
		ELSE IF(@tDocDateF <> '')
		   BEGIN 
			   SET @tDocDateF = @tDocDateF
		   END

		 --เช็ค Parameter ถึงตู้
		IF(@tDocDateT = '' OR @tDocDateT = NULL)
		   BEGIN 
			   SET @tDocDateT = ''
		   END
		ELSE IF(@tDocDateT <> '')
		   BEGIN 
			   SET @tDocDateT = @tDocDateT
		   END

	    IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSQL_Filter += '  AND FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' '
			END    
	
	--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	DELETE FROM TRPTPTTSpcSaleAmountTmp  WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	/*===== Process =======================================================================================================*/
	--เพิ่มข้อมูลลง Tmp
		SET @tSQL = ' INSERT INTO TRPTPTTSpcSaleAmountTmp 
				  (
				  FTComName,FTRptCode,FTUsrSession,
				  FDXshDocDate,FTPosCode,FTCstCode,FTXshDocNo,
				  FTPdtName,FTRcvCode,FTRcvName,
				  FTXshCardNo,FTCstCardID,
				   FTCstName,FTCstLastName,FTCstTel,FTXshRmk,FCXrcNet,FTVatCode,FTXrcRmk,FNAppType,FCXsdVatable,FCXshVat,FCXsdVat2,FCXrcGrand
				  )
			    '
		SET @tSQL += ' SELECT S.*, 
						S.FCXrcNet - ROUND(CONVERT(DECIMAL(7, 2), (S.FCXrcNet * S.FTVatCode)) / (100 + S.FTVatCode), 2) AS FCXsdVatable, 
						ROUND(CONVERT(DECIMAL(9, 2), (S.FCXrcNet * S.FTVatCode)) / (100 + S.FTVatCode), 2) AS FCXsdVat, 
						CONVERT(DECIMAL(9, 2), (S.FCXrcNet * S.FTVatCode)) / (100 + S.FTVatCode) AS FCXsdVat2,
						S.FCXrcNet AS FCXrcGrand
						FROM
					(
						SELECT	
							   ''' + @tComName + '''    AS FTComName,
						       ''' + @tRptCode + '''    AS FTRptCode,
							   ''' + @tUsrSession + ''' AS FTUsrSession,
							   FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') AS FDXshDocDate, 
							   HD.FTPosCode, 
							   HD.FTCstCode,
							   HD.FTXshDocNo, 
							   DT.FTPdtName, 
							   RC.FTRcvCode, 
							   RC.FTRcvName, 
							   HDC.FTXshCardNo, 
							   HDC.FTXshCardID, 
							   SUBSTRING(FTXshCstName,0,CHARINDEX('' '',HDC.FTXshCstName) + 1) AS FTXshCstName,	
							   REVERSE(SUBSTRING(REVERSE(HDC.FTXshCstName),0,CHARINDEX('' '',HDC.FTXshCstName))) AS FTXshCstLastName,
							   HDC.FTXshCstTel, 
							   RC.FTXrcRefNo1 AS FTXrcRmk1,
							   CASE
								   WHEN HD.FNXshDocType = 1
								   THEN RC.FCXrcNet
								   ELSE RC.FCXrcNet * -1
							   END AS FCXrcNet, 
					(
					  SELECT ISNULL(VAT.FCVatRate, 7) AS FCVatRate
							FROM TCNMComp CMP
								 INNER JOIN TCNMVatRate VAT ON CMP.FTVatCode = VAT.FTVatCode
						) AS FTVatCode, 
							   RC.FTXrcRmk AS FTXrcRmk2,
						   1 AS FNXshAppTyp
						FROM TPSTSalRC RC
							 INNER JOIN
						(
							--หาบิลที่ขายสินค้าทั่วไปเท่านั้น Pos System
							SELECT DISTINCT 
								   HD.FTCstCode AS FTCstCode,
								   HD.FTBchCode, 
								   HD.FTPosCode, 
								   HD.FTXshDocNo, 
								   HD.FNXshDocType, 
								   HD.FDXshDocDate
							FROM TPSTSalDT DT WITH(NOLOCK)
								 INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo
								 INNER JOIN TCNMShop SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode
																		AND HD.FTShpCode = SHP.FTShpCode
									 LEFT JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
										
		 '
		 SET @tSQL += @tSQL_Filter
		 SET @tSQL += ' ) HD ON RC.FTBchCode = HD.FTBchCode
			 AND RC.FTXshDocNo = HD.FTXshDocNo
			 LEFT JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo
			 LEFT JOIN TPSTSalHDCst HDC WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo
		'
		 SET @tSQL +=  @tSQL_Where_Rcv 


		 SET @tSQL += ' UNION ALL
							SELECT 
								   ''' + @tComName + '''    AS FTComName,
								   ''' + @tRptCode + '''    AS FTRptCode,
								   ''' + @tUsrSession + ''' AS FTUsrSession,
								   FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') AS FDCreateOn, 
							   HD.FTPosCode, 
							   HD.FTCstCode,
							   HD.FTXshDocNo, 
							   DT.FTPdtName, 
							   RC.FTRcvCode, 
							   RC.FTRcvName, 
							   HDC.FTXshCardNo, 
							   HDC.FTXshCardID, 
							   SUBSTRING(FTXshCstName,0,CHARINDEX('' '',HDC.FTXshCstName) + 1) AS FTXshCstName,	
							   REVERSE(SUBSTRING(REVERSE(HDC.FTXshCstName),0,CHARINDEX('' '',HDC.FTXshCstName))) AS FTXshCstLastName,
							   HDC.FTXshCstTel, 
							   RC.FTXrcRefNo1 AS FTXrcRmk1,
							   CASE
								   WHEN HD.FNXshDocType = 1
								   THEN RC.FCXrcNet
								   ELSE RC.FCXrcNet * -1
							   END AS FCXrcNet, 
						(
							SELECT ISNULL(VAT.FCVatRate, 7) AS FCVatRate
							FROM TCNMComp CMP
								 INNER JOIN TCNMVatRate VAT ON CMP.FTVatCode = VAT.FTVatCode
						) AS FTVatCode, 
							   RC.FTXrcRmk AS FTXrcRmk2,
							2 AS FNXshAppTyp
						FROM TVDTSalRC RC INNER JOIN
						(
							--หาบิลที่ขายสินค้าทั่วไปเท่านั้น VD System
							SELECT DISTINCT 
								   HD.FTCstCode,
								   HD.FTBchCode, 
								   HD.FTPosCode, 
								   HD.FTXshDocNo, 
								   HD.FNXshDocType, 
								   HD.FDXshDocDate
							FROM TVDTSalDT DT WITH(NOLOCK)
								 INNER JOIN TVDTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo
								 INNER JOIN TCNMShop SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode
																		AND HD.FTShpCode = SHP.FTShpCode
								 LEFT JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
		 '
		SET @tSQL += @tSQL_Filter
		SET @tSQL += ' ) HD ON RC.FTBchCode = HD.FTBchCode
					AND RC.FTXshDocNo = HD.FTXshDocNo
					LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode	
					LEFT JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo
					LEFT JOIN TVDTSalHDCst HDC WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo
		'
		SET @tSQL +=  @tSQL_Where_Rcv 
		
		IF @tSQL_Where_Rcv = ''
		BEGIN
			SET @tSQL +=  ' WHERE Rcv.FTFmtCode <> ''004'''
		END
		ELSE IF @tSQL_Where_Rcv <> ''
		BEGIN
			SET @tSQL +=  ' AND Rcv.FTFmtCode <> ''004'''
		END
		SET @tSQL += ' ) S
						ORDER BY S.FDXshDocDate;
		'
		/*===== End Process =======================================================================================================*/
		PRINT @tSQL
		EXECUTE(@tSQL)

		--ลบข้อมูล Initail Temp
		DELETE FROM TRPTPTTSpcSaleAmountTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNRowPartID = 99

		SET @nResult = 0
		return @nResult
	END TRY	
	BEGIN CATCH
		SET @nResult = -1
		return @nResult
	END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailySaleByInv1001001]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailySaleByInv1001001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailySaleByInv1001001] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailySaleByInv1001001] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalHDTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTSalHDTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTXshDocNo,FDXshDocDate,FCXshAmtNV,FCXshDis,FCXshVat,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTXshDocNo,FDXshDocDate,'
	SET @tSql +=' (FCXshGrand - FCXshVat - FCXshDiscount) AS FCXshValue,FCXshDiscount,FCXshVat,FCXshGrand'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT FTXshDocNo,FDXshDocDate,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0) ELSE (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0))*-1 END AS FCXshDiscount,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand'
		SET @tSql +='  FROM TPSTSalHD'
		PRINT @tSql1
		SET @tSql += @tSql1	
		SET @tSql +=' ) Sale'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTSalHDTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH		





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailySaleByInvByPdt1001002]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailySaleByInvByPdt1001002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailySaleByInvByPdt1001002] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailySaleByInvByPdt1001002] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),

	----ลูกค้า
	@ptCstF Varchar(20),
	@ptCstT Varchar(20),

	--@ptPdtCodeF Varchar(20),
	--@ptPdtCodeT Varchar(20),
	--@ptPdtChanF Varchar(30),
	--@ptPdtChanT Varchar(30),
	--@ptPdtTypeF Varchar(5),
	--@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPdtCodeF จากสินค้า
-- @ptPdtCodeT ถึงสินค้า
-- @ptPdtChanF จากกลุ่มสินค้า
-- @ptPdtChanT ถึงกลุ่มสินค้า
-- @ptPdtTypeF จากประเภทสินค้า
-- @ptPdtTypeT ถึงประเภท

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tSqlDrop VARCHAR(8000)
	DECLARE @tTblName Varchar(255)

	DECLARE @tSqlHD Varchar(8000)
	DECLARE @tSqlRC Varchar(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)

	--ลูกค้า
	DECLARE @tCstF Varchar(20)
	DECLARE @tCstT Varchar(20)

	--DECLARE @tPdtCodeF Varchar(20)
	--DECLARE @tPdtCodeT Varchar(20)
	--DECLARE @tPdtChanF Varchar(30)
	--DECLARE @tPdtChanT Varchar(30)
	--DECLARE @tPdtTypeF Varchar(5)
	--DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)



	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleByInvByPdt1001002'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT
	--สาขา
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	--ร้านค้า
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	--เครื่องจุดขาย
	SET @tPosF = @ptPosF
	SET @tPosT = @ptPosT
	--กลุ่มธุรกิจ
	SET @tMerF = @ptMerF
	SET @tMerT = @ptMerT

	SET @tCstF = @ptCstF
	SET @tCstT = @ptCstT


	--SET @tPdtCodeF  = @ptPdtCodeF 
	--SET @tPdtCodeT = @ptPdtCodeT
	--SET @tPdtChanF = @ptPdtChanF
	--SET @tPdtChanT = @ptPdtChanT 
	--SET @tPdtTypeF = @ptPdtTypeF
	--SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tCstF = null
	BEGIN
		SET @tCstF = ''
	END 
	IF @tCstT = null OR @tCstT =''
	BEGIN
		SET @tCstT = @tCstF
	END 
	--IF @tPdtCodeF = null
	--BEGIN
	--	SET @tPdtCodeF = ''
	--END 
	--IF @tPdtCodeT = null OR @tPdtCodeT =''
	--BEGIN
	--	SET @tPdtCodeT = @tPdtCodeF
	--END 

	--IF @tPdtChanF = null
	--BEGIN
	--	SET @tPdtChanF = ''
	--END 
	--IF @tPdtChanT = null OR @tPdtChanT =''
	--BEGIN
	--	SET @tPdtChanT = @tPdtChanF
	--END 

	--IF @tPdtTypeF = null
	--BEGIN
	--	SET @tPdtTypeF = ''
	--END 
	--IF @tPdtTypeT = null OR @tPdtTypeT =''
	--BEGIN
	--	SET @tPdtTypeT = @tPdtTypeF
	--END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END
	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	--SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	--SET @tSqlHD =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	--SET @tSqlRC =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSql1 =   ' '
	SET @tSqlHD =   ' '
	SET @tSqlRC =   ' '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSqlHD +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSqlRC +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSqlHD +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSql1 +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSqlRC +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSqlHD +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSqlRC +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSqlHD += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSqlRC += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSqlHD +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSqlRC +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSqlHD +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
			SET @tSql1 +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
			SET @tSqlRC +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSqlHD +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSqlRC +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSqlHD += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSqlRC += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSqlHD +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSqlRC +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--	SET @tSqlHD +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--	SET @tSqlRC +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF (@tCstF <> '' AND @tCstT <> '')
	BEGIN
		SET @tSql1 +=' AND FTCstCode BETWEEN ''' + @tCstF + ''' AND ''' + @tCstT + ''''
		SET @tSqlHD +=' AND HD.FTCstCode BETWEEN ''' + @tCstF + ''' AND ''' + @tCstT + ''''
		SET @tSqlRC +=' AND HD.FTCstCode BETWEEN ''' + @tCstF + ''' AND ''' + @tCstT + ''''
	END

	--IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	--END

	--IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	--END

	--IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	--END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlHD +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlRC +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalPdtBillTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	--SET @tTblName = 'TRPTSalPdtBillTmp'+ @nComName + ''
	--PRINT @tTblName
	----if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].''+@tTblName''')) 
	--SET @tSqlDrop = ' if exists (select * from dbo.sysobjects where name = '''+@tTblName+ ''')'--id = object_id(N'[dbo].''+@tTblName'''))' 
	--SET @tSqlDrop += ' DROP TABLE '+ @tTblName + ''
	--EXECUTE(@tSqlDrop)
	----PRINT @tSqlDrop
	-- HD Sale
	SET @tSqlIns = ' INSERT INTO TRPTSalPdtBillTmp'
	SET @tSqlIns += ' (FTComName,FTRptCode,FTUsrSession,FNAppType,FNType,FNXshDocType,FDXshDocDate,FTXshDocNo,FTXshRefInt,FTCstCode,FTCstName,FCXshVatable,FCXshVat,FCXshDis,FCXshTotalAfDis,FCXshRnd,FCXshGrand,'	
	SET @tSqlIns += ' FTPdtCode,FTPdtName, FTPunName,FCXsdQty,FCXsdSetPrice, FCXsdAmt,   FCXsdDis,  FCXsdNet,'
    SET @tSqlIns += ' FTRcvName, FTXrcRefNo1, FDXrcRefDate, FTBnkName, FCXrcNet)'	
	--SET @tSqlIns += ' INTO  '+ @tTblName + ''		
	--SET @tSqlIns += ' FROM('
	SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 1 AS FNAppType,1 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,FTXshRefInt,HD.FTCstCode,FTCstName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshVatable,0) ELSE ISNULL(FCXshVatable,0)*-1 END AS FCXshVatable,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0) ELSE (ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0))*-1 END  AS FCXshDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshTotal,0)+(ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0)) ELSE (ISNULL(FCXshTotal,0)+(ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0)))*-1 END AS FCXshTotalAfDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0)*-1 END AS FCXshRnd, '
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand,'
	SET @tSqlIns += ' '''' AS FTPdtCode,'''' AS FTPdtName,'''' AS FTPunName,0 AS FCXsdQty,0 AS FCXsdSetPrice,0 AS FCXsdAmt, 0 AS FCXsdDis, 0 AS FCXsdNet,'
	SET @tSqlIns += ' '''' AS FTRcvName,'''' AS FTXrcRefNo1,NULL AS FDXrcRefDate,'''' AS FTBnkName,0 AS FCXrcNet '
	SET @tSqlIns += ' FROM TPSTSalHD HD LEFT JOIN'
	SET @tSqlIns += ' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode  AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' ' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSqlIns +=   @tSqlHD
	--HD Vending
	SET @tSqlIns += 'UNION ALL'

    SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 2 AS FNAppType,1 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,FTXshRefInt,HD.FTCstCode,FTCstName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshVatable,0) ELSE ISNULL(FCXshVatable,0)*-1 END AS FCXshVatable,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0) ELSE (ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0))*-1 END  AS FCXshDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshTotal,0)+(ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0)) ELSE (ISNULL(FCXshTotal,0)+(ISNULL(FCXshChg,0)- ISNULL(FCXshDis,0)))*-1 END AS FCXshTotalAfDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0)*-1 END AS FCXshRnd, '
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand,'
	SET @tSqlIns += ' '''' AS FTPdtCode,'''' AS FTPdtName,'''' AS FTPunName,0 AS FCXsdQty,0 AS FCXsdSetPrice,0 AS FCXsdAmt, 0 AS FCXsdDis, 0 AS FCXsdNet,'
	SET @tSqlIns += ' '''' AS FTRcvName,'''' AS FTXrcRefNo1,NULL AS FDXrcRefDate,'''' AS FTBnkName,0 AS FCXrcNet '
	SET @tSqlIns += ' FROM TVDTSalHD HD'
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSqlIns +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
	------------
	SET @tSqlIns += ' LEFT JOIN TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode  AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' ' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1''   AND Rcv.FTFmtCode <> ''004'''
	SET @tSqlIns +=  @tSqlHD

	--SET @tSqlIns += @tSql1
	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)

	--SET @tSqlIns += ' UNION ALL'
	----DT SALE
	SET @tSqlIns = ' INSERT INTO TRPTSalPdtBillTmp'
	SET @tSqlIns += ' (FTComName,FTRptCode,FTUsrSession,FNAppType,FNType,FNXshDocType,FDXshDocDate,FTXshDocNo,FTXshRefInt,FTCstCode,FTCstName,FCXshVatable,FCXshVat,FCXshDis,FCXshTotalAfDis,FCXshRnd,FCXshGrand,'	
	SET @tSqlIns += ' FTPdtCode,FTPdtName, FTPunName,FCXsdQty,FCXsdSetPrice, FCXsdAmt,   FCXsdDis,  FCXsdNet,'
    SET @tSqlIns += ' FTRcvName, FTXrcRefNo1, FDXrcRefDate, FTBnkName, FCXrcNet)'	
	SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 1 AS FNAppType,2 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,'''' AS FTXshRefInt,HD.FTCstCode,'''' AS FTCstName,'
	SET @tSqlIns += ' 0 AS FCXshVatable,0 AS FCXshVat,0 AS FCXshDis, 0 AS FCXshTotalAfDis,0 AS FCXshRnd,0 AS FCXshGrand,'
	SET @tSqlIns += ' DT.FTPdtCode,Pdt_L.FTPdtName,Pun_L.FTPunName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdQty,0) ELSE ISNULL(FCXsdQty,0)*-1 END AS FCXsdQty,'
	SET @tSqlIns += ' ISNULL(FCXsdSetPrice,0) AS FCXsdSetPrice,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdSetPrice,0)*ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdSetPrice,0)*ISNULL(FCXsdQty,0))*-1 END AS FCXsdAmt,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  (ISNULL(FCXsdChg,0)-ISNULL(FCXsdDis,0)) ELSE (ISNULL(FCXsdChg,0)-ISNULL(FCXsdDis,0))*-1 END As FCXsdDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdNet,0) ELSE ISNULL(FCXsdNet,0)*-1 END AS FCXsdNet,'
	SET @tSqlIns += ' '''' AS FTRcvName,'''' AS FTXrcRefNo1,NULL AS FDXrcRefDate,'''' AS FTBnkName,0 AS FCXrcNet'
	SET @tSqlIns += ' FROM TPSTSalHD HD INNER JOIN TPSTSalDT DT ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo'
	SET @tSqlIns += ' LEFT JOIN TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode '
	SET @tSqlIns += ' LEFT JOIN TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSqlIns += @tSql1
	--DT Vending
	SET @tSqlIns += 'UNION ALL'
	SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 2 AS FNAppType,2 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,'''' AS FTXshRefInt,HD.FTCstCode,'''' AS FTCstName,'
	SET @tSqlIns += ' 0 AS FCXshVatable,0 AS FCXshVat,0 AS FCXshDis, 0 AS FCXshTotalAfDis,0 AS FCXshRnd,0 AS FCXshGrand,'
	SET @tSqlIns += ' DT.FTPdtCode,Pdt_L.FTPdtName,Pun_L.FTPunName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdQty,0) ELSE ISNULL(FCXsdQty,0)*-1 END AS FCXsdQty,'
	SET @tSqlIns += ' ISNULL(FCXsdSetPrice,0) AS FCXsdSetPrice,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdSetPrice,0)*ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdSetPrice,0)*ISNULL(FCXsdQty,0))*-1 END AS FCXsdAmt,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  (ISNULL(FCXsdChg,0)-ISNULL(FCXsdDis,0)) ELSE (ISNULL(FCXsdChg,0)-ISNULL(FCXsdDis,0))*-1 END As FCXsdDis,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXsdNet,0) ELSE ISNULL(FCXsdNet,0)*-1 END AS FCXsdNet,'
	SET @tSqlIns += ' '''' AS FTRcvName,'''' AS FTXrcRefNo1,NULL AS FDXrcRefDate,'''' AS FTBnkName,0 AS FCXrcNet'
	SET @tSqlIns += ' FROM TVDTSalHD HD INNER JOIN TVDTSalDT DT ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo'
	--NUI 2020-01-13
	SET @tSqlIns +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSqlIns +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
	------------
	SET @tSqlIns += ' INNER JOIN TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode '
	SET @tSqlIns += ' LEFT JOIN TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1''  AND Rcv.FTFmtCode <> ''004'''
	SET @tSqlIns += @tSql1

	PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	--SET @tSqlIns += ' UNION ALL'
	----RC
	SET @tSqlIns = ' INSERT INTO TRPTSalPdtBillTmp'
	SET @tSqlIns += ' (FTComName,FTRptCode,FTUsrSession,FNAppType,FNType,FNXshDocType,FDXshDocDate,FTXshDocNo,FTXshRefInt,FTCstCode,FTCstName,FCXshVatable,FCXshVat,FCXshDis,FCXshTotalAfDis,FCXshRnd,FCXshGrand,'	
	SET @tSqlIns += ' FTPdtCode,FTPdtName, FTPunName,FCXsdQty,FCXsdSetPrice, FCXsdAmt,   FCXsdDis,  FCXsdNet,'
    SET @tSqlIns += ' FTRcvName, FTXrcRefNo1, FDXrcRefDate, FTBnkName, FCXrcNet)'
	SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 1 AS FNAppType,3 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,'''' AS FTXshRefInt,HD.FTCstCode,'''' AS FTCstName,'
	SET @tSqlIns += ' 0 AS FCXshVatable,0 AS FCXshVat,0 AS FCXshDis, 0 AS FCXshTotalAfDis,0 AS FCXshRnd,0 AS FCXshGrand,'
	SET @tSqlIns += ' '''' AS FTPdtCode,'''' AS FTPdtName,'''' AS FTPunName,0 AS FCXsdQty,0 AS FCXsdSetPrice,0 AS FCXsdAmt, 0 AS FCXsdDis, 0 AS FCXsdNet,'
	SET @tSqlIns += ' Rcv_L.FTRcvName,ISNULL(FTXrcRefNo1,'''') AS FTXrcRefNo1, CONVERT(VARCHAR(10),FDXrcRefDate,121) AS FDXrcRefDate,ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END AS FCXrcNet'
	SET @tSqlIns += ' FROM TPSTSalHD HD INNER JOIN TPSTSalRC RC ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSqlIns += ' LEFT JOIN TFNMRcv_L Rcv_L ON RC.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSqlIns +=   @tSqlRC

	--RC Vanding
	SET @tSqlIns += 'UNION ALL'
	SET @tSqlIns += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSqlIns += ' 2 AS FNAppType,3 AS FNType,HD.FNXshDocType,CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate, HD.FTXshDocNo,'''' AS FTXshRefInt,HD.FTCstCode,'''' AS FTCstName,'
	SET @tSqlIns += ' 0 AS FCXshVatable,0 AS FCXshVat,0 AS FCXshDis, 0 AS FCXshTotalAfDis,0 AS FCXshRnd,0 AS FCXshGrand,'
	SET @tSqlIns += ' '''' AS FTPdtCode,'''' AS FTPdtName,'''' AS FTPunName,0 AS FCXsdQty,0 AS FCXsdSetPrice,0 AS FCXsdAmt, 0 AS FCXsdDis, 0 AS FCXsdNet,'
	SET @tSqlIns += ' Rcv_L.FTRcvName,ISNULL(FTXrcRefNo1,'''') AS FTXrcRefNo1, CONVERT(VARCHAR(10),FDXrcRefDate,121) AS FDXrcRefDate,ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,'
	SET @tSqlIns += ' CASE WHEN HD.FNXshDocType = ''1'' THEN  ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END AS FCXrcNet'

	SET @tSqlIns += ' FROM TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSqlIns += ' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'		
	SET @tSqlIns += ' LEFT JOIN TFNMRcv_L Rcv_L ON RC.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''' 
	SET @tSqlIns += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON HD.FTShpCode = SHP.FTShpCode AND HD.FTBchCode = SHP.FTBchCode '
	--NUI 13-01-2020 edit for cut pay cash coupon from rc
	SET @tSqlIns += ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004''' 
	SET @tSqlIns +=  @tSqlRC

	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)

	RETURN SELECT * FROM TRPTSalPdtBillTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + '' ORDER BY FTXshDocNo,FDXshDocDate--,FNType--,FNAppType,FNType--,FDXshDocDate,FTXshDocNo
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSqlIns
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDailySaleByPdt1001002]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDailySaleByPdt1001002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDailySaleByPdt1001002] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxDailySaleByPdt1001002] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN

	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@ptPdtCodeF Varchar(20),
	@ptPdtCodeT Varchar(20),
	@ptPdtChanF Varchar(30),
	@ptPdtChanT Varchar(30),
	@ptPdtTypeF Varchar(5),
	@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPdtCodeF จากสินค้า
-- @ptPdtCodeT ถึงสินค้า
-- @ptPdtChanF จากกลุ่มสินค้า
-- @ptPdtChanT ถึงกลุ่มสินค้า
-- @ptPdtTypeF จากประเภทสินค้า
-- @ptPdtTypeT ถึงประเภท

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tPdtCodeF Varchar(20)
	DECLARE @tPdtCodeT Varchar(20)
	DECLARE @tPdtChanF Varchar(30)
	DECLARE @tPdtChanT Varchar(30)
	DECLARE @tPdtTypeF Varchar(5)
	DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleByInvByPdt1001002'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tPdtCodeF  = @ptPdtCodeF 
	SET @tPdtCodeT = @ptPdtCodeT
	SET @tPdtChanF = @ptPdtChanF
	SET @tPdtChanT = @ptPdtChanT 
	SET @tPdtTypeF = @ptPdtTypeF
	SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tPdtCodeF = null
	BEGIN
		SET @tPdtCodeF = ''
	END 
	IF @tPdtCodeT = null OR @tPdtCodeT =''
	BEGIN
		SET @tPdtCodeT = @tPdtCodeF
	END 

	IF @tPdtChanF = null
	BEGIN
		SET @tPdtChanF = ''
	END 
	IF @tPdtChanT = null OR @tPdtChanT =''
	BEGIN
		SET @tPdtChanT = @tPdtChanF
	END 

	IF @tPdtTypeF = null
	BEGIN
		SET @tPdtTypeF = ''
	END 
	IF @tPdtTypeT = null OR @tPdtTypeT =''
	BEGIN
		SET @tPdtTypeT = @tPdtTypeF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND DT.FTXsdStaPdt <> ''4'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND DT.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	END

	IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	END

	IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalDTTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 --Sale
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdQty,FCXsdSetPrice,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' 1 AS FNAppType,FTBchCode,FTBchName,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' SUM(FCXsdQty) AS FCXsdQty,'
	--SET @tSql +=' SUM(FCXsdQty*FCXsdSetPrice)/SUM(FCXsdQty) AS FCXsdSetPrice,'
	SET @tSql +=' AVG(FCXsdSetPrice) AS FCXsdSetPrice,'
	SET @tSql +=' SUM(FCXsdAmtB4DisChg) AS FCXsdAmtB4DisChg,'

	--SET @tSql +=' SUM(FCXsdQty*FCXsdSetPrice) AS FCXsdAmtB4DisChg, '
	SET @tSql +=' SUM(FCXsdDis) AS FCXsdDis ,'
	SET @tSql +=' SUM(FCXsdVat) AS FCXsdVat,'
	SET @tSql +=' SUM(FCXsdNet) AS FCXsdNet,'
	SET @tSql +=' SUM(FCXsdNetAfHD) AS FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTXshDocNo,HD.FDXshDocDate,HD.FTBchCode,Bch_L.FTBchName,DT.FTPdtCode,Pdt_L.FTPdtName,Chan_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,'''') AS FTPunName,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END FCXsdQty,'
		SET @tSql +=' ISNULL(DT.FCXsdSetPrice,0) AS FCXsdSetPrice,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT. FCXsdAmtB4DisChg,0) ELSE (ISNULL(DT. FCXsdAmtB4DisChg,0))*-1 END AS FCXsdAmtB4DisChg,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END FCXsdDis,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END FCXsdVat,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END FCXsdNet,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,0) ELSE ISNULL(DT.FCXsdNetAfHD,0)*-1 END FCXsdNetAfHD'

		SET @tSql +=' FROM TPSTSalDT DT INNER JOIN TPSTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo LEFT JOIN'
		SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L WITH (NOLOCK) ON DT.FTPunCode = Pun_L.FTPunCode AND  Pun_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Chan_L WITH (NOLOCK) ON Pdt.FTPgpChain = Chan_L.FTPgpChain AND Chan_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON  HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
		PRINT @tSql1
		SET @tSql += @tSql1			
		SET @tSql +=' ) SalePdt'
	SET @tSql +=' GROUP BY FTBchCode,FTBchName,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName'
	PRINT @tSql
	EXECUTE(@tSql)

	--INSERT VD
  	SET @tSql  = ' INSERT INTO TRPTSalDTTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPdtCode,FTXsdPdtName,FTPgpChainName,FTPunName,FCXsdQty,FCXsdSetPrice,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' 2 AS FNAppType,FTBchCode,FTBchName,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName,'
	SET @tSql +=' SUM(FCXsdQty) AS FCXsdQty,'
	--SET @tSql +=' SUM(FCXsdQty*FCXsdSetPrice)/SUM(FCXsdQty) AS FCXsdSetPrice,'
	SET @tSql +=' AVG(FCXsdSetPrice) AS FCXsdSetPrice,'
	SET @tSql +=' SUM(FCXsdAmtB4DisChg) AS FCXsdAmtB4DisChg,'

	--SET @tSql +=' SUM(FCXsdQty*FCXsdSetPrice) AS FCXsdAmtB4DisChg, '
	SET @tSql +=' SUM(FCXsdDis) AS FCXsdDis ,'
	SET @tSql +=' SUM(FCXsdVat) AS FCXsdVat,'
	SET @tSql +=' SUM(FCXsdNet) AS FCXsdNet,'
	SET @tSql +=' SUM(FCXsdNetAfHD) AS FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTXshDocNo,HD.FDXshDocDate,HD.FTBchCode,Bch_L.FTBchName,DT.FTPdtCode,Pdt_L.FTPdtName,Chan_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,'''') AS FTPunName,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END FCXsdQty,'
		SET @tSql +=' ISNULL(DT.FCXsdSetPrice,0) AS FCXsdSetPrice,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT. FCXsdAmtB4DisChg,0) ELSE (ISNULL(DT. FCXsdAmtB4DisChg,0))*-1 END AS FCXsdAmtB4DisChg,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END FCXsdDis,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END FCXsdVat,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END FCXsdNet,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,0) ELSE ISNULL(DT.FCXsdNetAfHD,0)*-1 END FCXsdNetAfHD'
		SET @tSql +=' FROM TVDTSalDT DT INNER JOIN TVDTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo LEFT JOIN'
		SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L WITH (NOLOCK) ON DT.FTPunCode = Pun_L.FTPunCode AND  Pun_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Chan_L WITH (NOLOCK) ON Pdt.FTPgpChain = Chan_L.FTPgpChain AND Chan_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON  HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
		PRINT @tSql1
		SET @tSql += @tSql1			
		SET @tSql +=' ) SalePdt'
	SET @tSql +=' GROUP BY FTBchCode,FTBchName,FTPdtCode,FTPdtName,FTPgpChainName,FTPunName'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTSalDTTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDemo001]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDemo001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDemo001] AS' 
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxDemo001]  
	-- Add the parameters for the stored procedure here
	@ptBchCode varchar(5),
	@ptDocNo varchar(20)
AS
BEGIN TRY
	-- ประกาศตัวแปร
	DECLARE @tBchCode varchar(5)
	DECLARE @tDocNo varchar(20)
	DECLARE @tSQL_Filter varchar(8000)
	DECLARE @tSQL varchar(8000)

	-- ใส่ค่าให้ตัวแปร
	SET @tBchCode = @ptBchCode

	IF @tBchCode <> ''
		BEGIN
			SET @tSQL_Filter = ' AND FTBchCode = '''+@tBchCode+''' '
		END

	IF @tDocNo <> ''
		BEGIN
			SET @tSQL_Filter += ' AND FTXshDocNo = '''+@tDocNo+''' '
		END
	SET @tSQL = 'SELECT * FROM TPSTSalHD WHERE 1=1 '
	SET @tSQL += @tSQL_Filter

	EXECUTE(@tSQL)
	return 0
END TRY	

BEGIN CATCH
     return -1
END CATCH

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDepositAccordingSlotSize003001006]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDepositAccordingSlotSize003001006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDepositAccordingSlotSize003001006] AS' 
END
GO

--Create By Witsarut
--Create Date 6-12-2019
--Edit By Napat(Jame)
--Edit Date 24-12-2019
--รายงานการฝากตามขนาดช่องฝาก (DepositAccordingSlotSize)

ALTER PROCEDURE [dbo].[SP_RPTxDepositAccordingSlotSize003001006]
	-- Input Parameter
	@pnLngID int,
	@ptComName varchar(100),
	@ptRptCode varchar(100),
	@ptUsrSession varchar(100),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--ขนาดช่องฝาก(Size)
	@ptPzeF	varchar(5),
	@ptPzeT	varchar(5),
	--วันที่(Date)
	@ptDateF varchar(10),
	@ptDateT varchar(10),

	-- Output Parameter
	@FNResult INT OUTPUT

AS
BEGIN TRY
	-- Declare Parameter
	DECLARE @nLngID int 
	DECLARE @tComName varchar(100)
	DECLARE @tRptCode varchar(100)
	DECLARE @tUsrSession varchar(100)
	--สาขา(Branch)
	DECLARE @tBchF varchar(5)
	DECLARE @tBchT varchar(5)
	--กลุ่มธุรกิจ(MerChant)
	DECLARE @tMerF varchar(5)
	DECLARE @tMerT varchar(5)
	--ร้านค้า(Shop)
	DECLARE @tShpF varchar(5)
	DECLARE @tShpT varchar(5)
	--เครื่องจุดขาย(Pos)
	DECLARE @tPosF varchar(5)
	DECLARE @tPosT varchar(5)
	---ขนาดช่อง(Size)
	DECLARE @tPzeF varchar(5)
	DECLARE @tPzeT varchar(5)
	--วันที่ (Date)
	DECLARE @tDateF varchar(10)
	DECLARE @tDateT varchar(10)

	DECLARE @tSQL  varchar(8000)
	DECLARE @tWhereFilter varchar(8000)
	DECLARE @tSQL2 nVARCHAR(Max)

	-- Set Parameter
	SET @nLngID		= @pnLngID
	SET @tComName	= @ptComName
	SET @tRptCode	= @ptRptCode
	SET @tUsrSession	= @ptUsrSession
	SET @tBchF		= @ptBchF
	SET @tBchT		= @ptBchT
	SET @tMerF		= @ptMerF
	SET @tMerT		= @ptMerT
	SET @tShpF		= @ptShpF
	SET @tShpT		= @ptShpT
	SET @tPosF		= @ptPosF
	SET @tPosT		= @ptPosT
	SET @tPzeF		= @ptPzeF
	SET @tPzeT		= @ptPzeT
	SET @tDateF		= CONVERT(VARCHAR(10),@ptDateF,121)
	SET @tDateT		= CONVERT(VARCHAR(10),@ptDateT,121)

	SET @FNResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END

	-------------- ตรวจสอบค่า Filter สาขา (Branch) --------------
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END
	-------------- ตรวจสอบค่า Filter กลุ่มธุรกิจ (MerChant) --------------
	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END
	-------------- ตรวจสอบค่า Filter ร้านค้า (Shop) --------------
	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 
	-------------- ตรวจสอบค่า Filter เครื่องจุดขาย (POS) --------------
	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT =''
	BEGIN 
		SET @tPosT = @tPosF
	END
	-------------- ตรวจสอบค่า Filter ขนาด (Size) --------------
	IF @tPzeF = null
	BEGIN
		SET @tPzeF = ''
	END
	IF @tPzeT = null OR @tPzeT =''
	BEGIN
		SET @tPzeT = @tPzeF
	END
	
	 -------------- ตรวจสอบค่า Filter วันที่  (Date) --------------
	IF @tDateF = null
	BEGIN
		SET @tDateF = ''
	END 
	IF @tDateT = null OR @tDateT =''
	BEGIN
		SET @tDateT = @tDateF
	END 

	-- Check Where
	SET @tWhereFilter	= ' WHERE 1 = 1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tWhereFilter += ' AND SHP_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tWhereFilter += ' AND SHP_F.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tWhereFilter += ' AND SIZ.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	--------- ตรวจสอบค่าสำหรับ Filter Branch --------
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tWhereFilter +=' AND SIZ.FTBchCode BETWEEN '''+ @tBchF +''' AND '''+ @tBchT +''' '
	--END

	--------- ตรวจสอบค่าสำหรับ Filter Shop --------
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tWhereFilter += ' AND SIZ.FTShpCode BETWEEN '''+ @tShpF +''' AND '''+ @tShpT +''''
	--END

	--------- ตรวจสอบค่าสำหรับ Filter Pos --------
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN 
	--	SET @tWhereFilter += ' AND SIZ.FTPosCode BETWEEN '''+ @tPosF +''' AND '''+ @tPosT +''''
	--END

	------- ตรวจสอบค่าสำหรับ Filter Pze --------
	IF (@tPzeF <> '' AND @tPzeT <> '')
	BEGIN
		SET @tWhereFilter += ' AND SIZ.FTSizCode BETWEEN '''+ @tPzeF +''' AND '''+ @tPzeT +''''
	END

	-------------- ตรวจสอบค่า Filter วันที่  (Date) --------------
	IF (@tDateF <> '' AND @tDateT <> '')
	BEGIN	
		SET @tWhereFilter	= ' AND CONVERT(VARCHAR(10),XHD.FDXshDocDate,121) BETWEEN '''+ @tDateF +''' AND '''+ @tDateT +''' '
	END

	------- ลบข้อมูลใน Temp -------
	DELETE FROM TRPTRTDepositAccordingSlotSizeTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	------- เพิ่มข้อมูลใน Temp -------
	SET @tSQL =' INSERT INTO TRPTRTDepositAccordingSlotSizeTmp ('
	SET @tSQL +=' FTComName,FTRptCode,FTUsrSession,FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTSizCode,FTSizName,FNXshQTYBill,FTXshDepositTime,FCXshGrand'
	SET @tSQL +=' )'
	SET @tSQL +=' SELECT '''+@tComName+''' AS FTComName,'''+@tRptCode+''' AS FTRptCode,'''+@tUsrSession+''' AS FTUsrSession,'
	SET @tSQL +=' SIZ.FTBchCode,BCH.FTBchName,SIZ.FTShpCode,SHP.FTShpName,SIZ.FTPosCode,SIZ.FTSizCode,SIZ.FTSizName, '
	SET @tSQL +=' ISNULL(SRT.FNXshQTYBill,0) AS FNXshQTYBill,ISNULL(SRT.FTXshDepositTime,0) AS FTXshDepositTime,ISNULL(FCXshGrand,0) AS FCXshGrand'
	SET @tSQL +=' FROM ('
	SET @tSQL +=' SELECT DISTINCT BSH.FTBchCode,BSH.FTShpCode,BSH.FTPosCode,SZE.FTSizCode,SZE.FTSizName'
	SET @tSQL +=' FROM  TRTMShopLayout SHL WITH(NOLOCK)'
	SET @tSQL +=' INNER JOIN TRTMShopSize_L SZE WITH(NOLOCK) ON SHL.FTPzeCode = SZE.FTSizCode AND SZE.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL +=' CROSS JOIN ('
	SET @tSQL +=' SELECT  DISTINCT SHD.FTBchCode,SDT.FTShpCode,SHD.FTPosCode'
	SET @tSQL +=' FROM  TRTTSalHD SHD WITH(NOLOCK) '
	SET @tSQL +=' INNER JOIN TRTTSalDT SDT WITH(NOLOCK) ON SHD.FTXshDocNo = SDT.FTXshDocNo'
	SET @tSQL   +=' ) BSH ) SIZ'
	SET @tSQL +=' LEFT JOIN('
	SET @tSQL +=' SELECT XHD.FTBchCode,XDT.FTShpCode,XHD.FTPosCode,XDT.FTPzeCode,'
	SET @tSQL +=' COUNT(XHD.FTXshDocNo) AS FNXshQTYBill,'
	SET @tSQL +=' SUM('
	SET @tSQL +=' CASE WHEN ISNULL(XHD.FDXshDocDate,'''') = '''' THEN'
	SET @tSQL +=' CAST(ROUND(DATEDIFF(MINUTE , XHD.FDXshDocDate,GETDATE()) / 60 + (DATEDIFF(MINUTE , XHD.FDXshDocDate,GETDATE()) % 60) / 100.0,2,1) AS DECIMAL(18,2))'
	SET @tSQL +=' ELSE'
	SET @tSQL +=' CAST(ROUND(DATEDIFF(MINUTE , XHD.FDXshDocDate,XHD.FDXshDatePick) / 60 + (DATEDIFF(MINUTE , XHD.FDXshDocDate,XHD.FDXshDatePick) % 60) / 100.0,2,1) AS DECIMAL(18,2))'
	SET @tSQL +=' END ) /  COUNT(XHD.FTXshDocNo) AS FTXshDepositTime,'
	SET @tSQL +=' SUM(XHD.FCXshGrand) AS FCXshGrand'
	SET @tSQL +=' FROM TRTTSALHD XHD WITH(NOLOCK)'
	SET @tSQL +=' INNER JOIN TRTTSALDT XDT WITH(NOLOCK) ON XHD.FTXshDocNo = XDT.FTXshDocNo '
	SET @tSQL +=' INNER JOIN TCNMShop SHP ON XDT.FTShpCode = SHP.FTShpCode '
	SET @tSQL +=' WHERE XHD.FTXshStaDoc = 1'
	SET @tSQL +=' GROUP BY  XHD.FTBchCode,XDT.FTShpCode,XHD.FTPosCode,XDT.FTPzeCode'
	SET @tSQL +=' ) SRT ON SIZ.FTBchCode = SRT.FTBchCode AND SIZ.FTShpCode = SRT.FTShpCode AND SIZ.FTPosCode = SRT.FTPosCode AND SIZ.FTSizCode = SRT.FTPzeCode'
	SET @tSQL +=' LEFT JOIN TCNMBranch_L BCH ON SIZ.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL +=' LEFT JOIN TCNMShop_L SHP ON SIZ.FTShpCode = SHP.FTShpCode AND SHP.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL +=' LEFT JOIN TCNMShop SHP_F ON SIZ.FTBchCode = SHP_F.FTBchCode AND SIZ.FTShpCode = SHP_F.FTShpCode '
	SET @tSQL += @tWhereFilter

	PRINT @tSQL
	EXECUTE(@tSQL)
	RETURN SELECT * FROM TRPTRTDepositAccordingSlotSizeTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY
BEGIN CATCH
	SET @FNResult= -1
	PRINT @tSQL
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDepositsNotPicked003001013]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDepositsNotPicked003001013]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDepositsNotPicked003001013] AS' 
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxDepositsNotPicked003001013]

	@pnLngID      int,
	@ptComName    Varchar(100),
	@ptRptCode    Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF	      Varchar(5),
	--@ptBchT       Varchar(5),
	--@ptShpF       Varchar(5),
	--@ptShpT       Varchar(5),
	--@ptPosF       Varchar(5),
	--@ptPosT       Varchar(5),

	@ptLayNoF     Varchar(3),
	@ptLayNoT     Varchar(3),

	@ptDocDateF   Varchar(10),
	@ptDocDateT   Varchar(10),

	@FNResult INT OUTPUT 

AS
--------------------------------------
-- Saharat(Golf) 
-- Create 29/11/2019
-- Temp name  -
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPosF จากรหัสเครื่องจุดขาย
-- @ptPosT ถึงรหัสเครื่องจุดขาย
-- @ptLayNoF  จากช่อง
-- @ptLayNoT  ถึงช่อง

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่

--------------------------------------
BEGIN TRY
	DECLARE @nLngID      int
	DECLARE @tComName    Varchar(100)
	DECLARE @tRptCode    Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--DECLARE @tBchF	     Varchar(5)
	--DECLARE @tBchT       Varchar(5)
	--DECLARE @tShpF       Varchar(5)
	--DECLARE @tShpT       Varchar(5)
	--DECLARE @tPosF       Varchar(5)
	--DECLARE @tPosT       Varchar(5)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tLayNoF     Varchar(3)
	DECLARE @tLayNoT     Varchar(3)

	DECLARE @tDocDateF   Varchar(10)
	DECLARE @tDocDateT   Varchar(10)

-------- ประกาศตัวแปรรับ parameter ------

	SET  @nLngID		 = @pnLngID
	SET  @tComName		 = @ptComName
	SET  @tRptCode       = @ptRptCode
	SET  @tUsrSession    = @ptUsrSession

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET  @tBchF			 = @ptBchF
	--SET  @tBchT          = @ptBchT
	--SET  @tShpF			 = @ptShpF
	--SET  @tShpT			 = @ptShpT
	--SET  @tPosF			 = @ptPosF
	--SET  @tPosT			 = @ptPosT
	SET  @tLayNoF		 = @ptLayNoF
	SET  @tLayNoT		 = @ptLayNoT
	
	SET  @tDocDateF		 = @ptDocDateF
	SET  @tDocDateT		 = @ptDocDateT

	SET @FNResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END
----- Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null  --------
	
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END

	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tShpF = null
	--BEGIN 
	--	SET @tShpF = ''
	--END 
	
	--IF @tShpT = null OR @tShpT = ''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END

	--IF @tPosF = null
	--BEGIN
	--	SET @tPosF = ''
	--END 

	--IF @tPosT = null OR @tPosT = ''
	--BEGIN
	--	SET @tPosT = @tPosF
 --   END
	
	IF @tLayNoF = null
	BEGIN
		SET @tLayNoF = ''
	END 

	IF @tLayNoT = null OR @tLayNoT = '' 
	BEGIN
		SET @tLayNoT = @tLayNoF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END 

	IF @tDocDateT = null OR @tDocDateT = ''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END 

	SET @tSql1	 = ' WHERE 1=1'
	SET @tSql1	+= ' AND  FTXshStaDoc = 1'
	SET @tSql1	+= ' AND  ISNULL(SHD.FDXshDatePick,'''') = '''' '
	
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND SHD.FTBchCode BETWEEN '''+ @tBchF +''' AND '''+ @tBchT +''' '
	--END

	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 += ' AND PSH.FTShpCode BETWEEN '''+ @tShpF +''' AND '''+ @tShpT +''''
 --   END
	
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN 
	--	SET @tSql1 += ' AND SHD.FTPosCode BETWEEN '''+ @tPosF +''' AND '''+ @tPosT +''''
	--END 

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND SHP_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND PSH.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND SHD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND SHP_F.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND PSH.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END
	
	IF (@tLayNoF <> '' AND @tLayNoT <> '')
	BEGIN
		SET @tSql1 += ' AND DSL.FNXsdLayNo BETWEEN '''+ @tLayNoF + ''' AND '''+ @tLayNoT +''''
	END
	
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN	
		SET @tSql1 += ' AND CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '''+ @tDocDateF +''' AND '''+ @tDocDateT +''' '
	END


	
	--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
    DELETE FROM TRPTRTDepositsNotPickedTmp WHERE FTComName =  '' + @tComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	
	--INSERT Temp
  	SET @tSql  =' INSERT INTO TRPTRTDepositsNotPickedTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='	FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTXshDocNo,FDXshDocDate,FDXshDocTime,FNXsdLayNo,FTPzeCode,FTSizName,FTRthCode,FTRthName,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FTXshFrmLoginName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' SHD.FTBchCode,BCH.FTBchName,PSH.FTShpCode,SHL.FTShpName,SHD.FTPosCode,SHD.FTXshDocNo,CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) AS FDXshDocDate,SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),11,6) AS FDXshDocTime,'
	SET @tSql +=' DSL.FNXsdLayNo,SDT.FTPzeCode,SIZ.FTSizName,SDT.FTRthCode,RTE.FTRthName,SHD.FTXshRefExt,SHD.FTXshFrmLogin,SHD.FTXshToLogin,'
	SET @tSql +=' CASE WHEN  ISNULL(SHD.FTCryCode,'''') = '''' THEN CST.FTCstName ELSE MAN.FTManName END AS FTXshFrmLoginName'

	SET @tSql +=' FROM   TRTTSalHD SHD WITH (NOLOCK)'
	SET @tSql +=' INNER JOIN TRTTSalDTSL DSL WITH (NOLOCK)     ON SHD.FTXshDocNo = DSL.FTXshDocNo'
	SET @tSql +=' INNER JOIN TRTTSalDT SDT WITH (NOLOCK)       ON SDT.FTXshDocNo = DSL.FTXshDocNo'
	SET @tSql +=' INNER JOIN TRTMPriRateHD_L RTE WITH (NOLOCK) ON SDT.FTRthCode = RTE.FTRthCode AND RTE.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT  JOIN TRTMShopSize_L SIZ WITH (NOLOCK)  ON SDT.FTPzeCode = SIZ.FTSizCode AND SIZ.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT  JOIN TCNMBranch_L BCH WITH (NOLOCK)    ON SHD.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT  JOIN TRTMShopPos PSH WITH (NOLOCK)     ON SHD.FTPosCode = PSH.FTPosCode '
	SET @tSql +=' LEFT  JOIN TCNMShop_L SHL WITH (NOLOCK)      ON PSH.FTShpCode = SHL.FTShpCode AND SHL.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '	
	SET @tSql +=' LEFT  JOIN TCNMCourieLogin CUL WITH (NOLOCK) ON SHD.FTXshFrmLogin = CUL.FTManLogin AND SHD.FTCryCode = CUL.FTCryCode '
	SET @tSql +=' LEFT  JOIN TCNMCourieMan_L MAN WITH (NOLOCK) ON CUL.FTManCardID = MAN.FTManCardID AND CUL.FTCryCode = MAN.FTCryCode AND MAN.FNLngID ='''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT  JOIN TCNMCstLogin CSL WITH (NOLOCK)    ON SHD.FTXshFrmLogin = CSL.FTCstLogin '
	SET @tSql +=' LEFT  JOIN TCNMCst_L CST WITH (NOLOCK)       ON CSL.FTCstCode = CST.FTCstCode AND CST.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT  JOIN TCNMShop SHP_F WITH(NOLOCK)       ON PSH.FTShpCode = SHP_F.FTShpCode AND SHD.FTBchCode = SHP_F.FTShpCode '

	PRINT @tSql1
	SET @tSql += @tSql1	
	PRINT @tSql

	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTDepositsNotPickedTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY
BEGIN CATCH
	SET @FNResult = -1
	RETURN @FNResult
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxDetailReceiveDeposit003001015]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxDetailReceiveDeposit003001015]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxDetailReceiveDeposit003001015] AS' 
END
GO
-- =============================================
-- Author:		Napat
-- Create date: 06/12/2019
-- Description:	รายงาน การรับ-ฝากแบบละเอียด
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxDetailReceiveDeposit003001015]
	@pnLngID INT, 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT
AS
BEGIN TRY

	DECLARE @tSQL VARCHAR(8000)
	DECLARE @tSQL_Filter VARCHAR(8000)

	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--สาขา
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	--ร้านค้า
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	--เครื่องจุดขาย
	SET @tPosF = @ptPosF
	SET @tPosT = @ptPosT
	--กลุ่มธุรกิจ
	SET @tMerF = @ptMerF
	SET @tMerT = @ptMerT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''
	SET @tSQL = ''

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND PSH.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND SHD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_Filter +=' AND PSH.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_Filter += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND ( (CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTRTDetailReceiveDepositTmp WITH(ROWLOCK) WHERE FTComName = '' +@tComName+'' AND FTRptCode = ''+@tRptCode+'' AND FTUsrSession = ''+@tUsrSession+''

	SET @tSQL  = 'INSERT INTO TRPTRTDetailReceiveDepositTmp (FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTXshDocNo,'
	SET @tSQL += 'FDXshDocDate,FTXshDocTime,FNXsdLayNo,FTPzeCode,FTSizName,FTRthCode,FTRthName,FTXshRefExt,'
	SET @tSQL += 'FTXshFrmLogin,FTXshFrmLoginName,FTXshToLogin,FTXshToLoginName,FDXshDatePick,FTXshTimePick,FTComName,FTRptCode,FTUsrSession)'

	SET @tSQL += ' SELECT SHD.FTBchCode,BCH.FTBchName,PSH.FTShpCode,SHL.FTShpName,SHD.FTPosCode,SHD.FTXshDocNo,'
	SET @tSQL += 'CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) AS FDXshDocDate, SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),11,6) AS FDXshDocTime,'
	SET @tSQL += 'DSL.FNXsdLayNo,SDT.FTPzeCode,SIZ.FTSizName,SDT.FTRthCode,RTE.FTRthName,SHD.FTXshRefExt,SHD.FTXshFrmLogin,'
	SET @tSQL += 'CASE WHEN ISNULL(SHD.FTCryCode,'''') = '''' THEN CST.FTCstName ELSE MAN.FTManName END AS FTXshFrmLoginName,'
	SET @tSQL += 'SHD.FTXshToLogin,ISNULL(SHC.FTXshCstName,'''') AS FTXshToLoginName,'
	SET @tSQL += 'CONVERT(VARCHAR(10),SHD.FDXshDatePick,121) AS FDXshDatePick,'
	SET @tSQL += 'SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDatePick,121),11,6) AS FDXshTimePick,'
	SET @tSQL += ' '''+@tComName+''' AS FTComName, '''+@tRptCode+''' AS FTRptCode, '''+@tUsrSession+''' AS FTUsrSession'
	SET @tSQL += ' FROM TRTTSalHD SHD WITH (NOLOCK)'
	SET @tSQL += ' INNER JOIN TRTTSalDTSL DSL WITH (NOLOCK)     ON SHD.FTXshDocNo = DSL.FTXshDocNo'
	SET @tSQL += ' INNER JOIN TRTTSalDT SDT WITH (NOLOCK)       ON SDT.FTXshDocNo = DSL.FTXshDocNo'
	SET @tSQL += ' INNER JOIN TRTMPriRateHD_L RTE WITH (NOLOCK) ON SDT.FTRthCode = RTE.FTRthCode AND RTE.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TRTMShopSize_L SIZ WITH (NOLOCK)  ON SDT.FTPzeCode = SIZ.FTSizCode AND SIZ.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TCNMBranch_L BCH WITH (NOLOCK)    ON SHD.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TRTMShopPos PSH WITH (NOLOCK)     ON SHD.FTPosCode = PSH.FTPosCode '
	SET @tSQL += ' LEFT  JOIN TCNMShop_L SHL WITH (NOLOCK)      ON PSH.FTShpCode = SHL.FTShpCode AND SHL.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TCNMCourieLogin CUL WITH (NOLOCK) ON SHD.FTXshFrmLogin = CUL.FTManLogin AND SHD.FTCryCode = CUL.FTCryCode '
	SET @tSQL += ' LEFT  JOIN TCNMCourieMan_L MAN WITH (NOLOCK) ON CUL.FTManCardID = MAN.FTManCardID AND CUL.FTCryCode = MAN.FTCryCode AND MAN.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TCNMCstLogin CSL WITH (NOLOCK)    ON SHD.FTXshFrmLogin = CSL.FTCstLogin '
	SET @tSQL += ' LEFT  JOIN TCNMCst_L CST WITH (NOLOCK)       ON CSL.FTCstCode = CST.FTCstCode AND CST.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT  JOIN TCNMShop SHP WITH (NOLOCK)		ON PSH.FTShpCode = SHP.FTShpCode AND SHD.FTBchCode = SHP.FTBchCode '
	SET @tSQL += ' LEFT  JOIN TRTTPayDT PDT WITH(NOLOCK)	    ON SHD.FTXshDocNo = PDT.FTXsdRefDocNo '
	SET @tSQL += ' LEFT  JOIN TRTTPayRC PRC WITH(NOLOCK)        ON PDT.FTXshDocNo = PRC.FTXshDocNo '
	SET @tSQL += ' LEFT  JOIN TPSTSalHDCst SHC WITH(NOLOCK)     ON PRC.FTXrcRefNo1 = SHC.FTXshDocNo '
	SET @tSQL += ' WHERE FTXshStaDoc = 1 '
	
	SET @tSQL += @tSQL_Filter

	PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	return @FNResult

END TRY
BEGIN CATCH
    SET @FNResult = -1
	return @FNResult
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxHisChgStaLocker003001001]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxHisChgStaLocker003001001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxHisChgStaLocker003001001] AS' 
END
GO
-- =============================================
-- Author:		Napat(Jame)
-- Create date: 11/12/2562
-- Description:	ประวัติการเปลี่ยนสถานะช่องฝาก
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxHisChgStaLocker003001001]
	@pnLngID INT, 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),
	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(8000)
	DECLARE @tSQL_Filter VARCHAR(8000)

	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''
	SET @tSQL = ''

	/*===== ตรวจสอบค่า Filter ========================================*/

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	/*===== แทนค่า Filter ========================================*/

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND AMH.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND AMH.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND AMH.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND AMH.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_Filter +=' AND AMH.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_Filter += ' AND AMH.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND ( (CONVERT(VARCHAR(10),AMH.FDHisDateTime,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),AMH.FDHisDateTime,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTRTHisChgStaLockerTmp WITH(ROWLOCK) WHERE FTComName = '' +@tComName+'' AND FTRptCode = ''+@tRptCode+'' AND FTUsrSession = ''+@tUsrSession+''
	
	SET @tSQL += 'INSERT INTO TRPTRTHisChgStaLockerTmp (FTBchCode,FTBchName,FTShpCode,FTShpName,'
    SET @tSQL += 'FTPosCode,FDXshActionDate,FTXshActionTime,FNHisLayNo,FTLayStaUse,FTRsnName,FTHisUsrCode,FTUsrName,'
	SET @tSQL += 'FTComName,FTRptCode,FTUsrSession) '

	SET @tSQL += 'SELECT AMH.FTBchCode,BCH.FTBchName,AMH.FTShpCode,SHP_L.FTShpName,AMH.FTPosCode,'
	SET @tSQL += 'CONVERT(VARCHAR(10),AMH.FDHisDateTime,121) AS FDXshActionDate,'
	SET @tSQL += 'SUBSTRING(CONVERT(VARCHAR(19),AMH.FDHisDateTime,121),11,6) AS FDXshActionTime,'
	SET @tSQL += 'AMH.FNHisLayNo,AMH.FTLayStaUse,RNS.FTRsnName,AMH.FTHisUsrCode,USR.FTUsrName,'
	SET @tSQL += ' '''+@tComName+''' AS FTComName, '''+@tRptCode+''' AS FTRptCode, '''+@tUsrSession+''' AS FTUsrSession'
	SET @tSQL += ' FROM TRTTAdminHis AMH WITH(NOLOCK) '
	SET @tSQL += ' LEFT JOIN TCNMBranch_L BCH WITH(NOLOCK) ON AMH.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT JOIN TCNMShop_L SHP_L WITH(NOLOCK) ON AMH.FTBchCode = SHP_L.FTBchCode AND AMH.FTShpCode = SHP_L.FTShpCode AND SHP_L.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT JOIN TCNMUser_L USR WITH(NOLOCK)   ON AMH.FTHisUsrCode = USR.FTUsrCode AND USR.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT JOIN TCNMRsn_L RNS WITH(NOLOCK)    ON AMH.FTHisRsnCode = RNS.FTRsnCode AND RNS.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSQL += ' LEFT JOIN TCNMShop SHP WITH (NOLOCK)	   ON AMH.FTBchCode = SHP.FTBchCode AND AMH.FTShpCode = SHP.FTShpCode '
	SET @tSQL += ' WHERE AMH.FTHisType = ''2'' '

	SET @tSQL += @tSQL_Filter

	PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	return @FNResult
END TRY
BEGIN CATCH
    SET @FNResult = -1
	return @FNResult
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLKChgStaLocker3001001]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLKChgStaLocker3001001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLKChgStaLocker3001001] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxLKChgStaLocker3001001]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ
-- @ptPosF จากตู้ 
-- @ptPosT ถึงตู้
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)



	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'StockChecking2002002'
	--SET @tUsrSession = '001'
	--SET @tMerF = '00050'
	--SET @tMerT = '002'
	--SET @tPosF = '00001'
	--SET @tPosT = '00011'

	--SET @tShpF = '00001'
	--SET @tShpT = '00027'


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tMerF =@ptMerF
	SET @tMerT = @ptMerT
	SET @tPosF = @ptPosF
	SET @tPosT = @ptPosT
	
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END 
	IF @tPosT = null OR @tPosT =''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF (@tMerF <> '' AND @tMerT <> '')
	BEGIN
		SET @tSql1 +=' AND SLy.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND His.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END


	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND His.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),His.FDHisDateTime,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTAdminHisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
   	SET @tSql = ' INSERT INTO TRPTAdminHisTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTPosCode,FDHisDateTime,FTRakName,FNHisLayNo,FTLayStaUse,FTHisRsnName,FTHisUsrName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' His.FTBchCode,His.FTPosCode,His.FDHisDateTime,Rak_L.FTRakName,His.FNHisLayNo,ISNULL(His.FTLayStaUse,'''') AS FTLayStaUse,Rns_L.FTRsnName,Usr_L.FTUsrName'
	SET @tSql +=' FROM TRTTAdminHis His WITH (NOLOCK) INNER JOIN' 
		 SET @tSql +=' TRTMShopLayout SLy WITH (NOLOCK) ON His.FTBchCode = Sly.FTBchCode AND His.FTShpCode = Sly.FTShpCode AND His.FNHisLayNo = Sly.FNLayNo INNER JOIN'
		 SET @tSql +=' TRTMShopRack_L Rak_L WITH (NOLOCK) ON Sly.FTRakCode = Rak_L.FTRakCode AND Rak_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		 SET @tSql +=' TCNMRsn_L Rns_L WITH (NOLOCK) ON His.FTHisRsnCode = Rns_L.FTRsnCode AND Rns_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' INNER JOIN'
		 SET @tSql +=' TCNMUser_L Usr_L WITH (NOLOCK)  ON His.FTHisUsrCode = Usr_L.FTUsrCode AND Usr_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += @tSql1
	--SET @tSql +=' ORDER BY His.FDHisDateTime'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTAdminHisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLKRTByTransport3001004]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLKRTByTransport3001004]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLKRTByTransport3001004] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxLKRTByTransport3001004] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptTspF Varchar(20), --Transport F
	@ptTspT Varchar(20), --Transport T
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession

-- @ptTspF จากบริษัทขนส่ง
-- @ptTspT ถึงบริษัทขนส่ง

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

   DECLARE @tTspF Varchar(20)
	DECLARE @tTspT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @ptTspF ='00001' --จากบริษัทขนส่ง
	--SET @ptTspT = '00019'--ถึงบริษัทขนส่ง

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @ptTspF ='00001' --จากบริษัทขนส่ง
	--SET @ptTspT = '00019'--ถึงบริษัทขนส่ง


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tTspF =@ptTspF --จากจากบริษัทขนส่ง
	SET @tTspT =@ptTspT--ถึงถึงบริษัทขนส่ง
	
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tTspF = null
	BEGIN 
		SET @tTspF = ''
	END
	IF @tTspT = null OR @tTspT =''
	BEGIN 
		SET @tTspT = @tTspF
	END


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tTspF <> '' AND @tTspT <> '')
	BEGIN
		SET @tSql1 +=' AND FTCryCode BETWEEN ''' + @tTspF + ''' AND ''' + @tTspT + ''''
	END
		


	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTRTSalHDTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTRTSalHDTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTPosCode,FTXshFrmLogin,FTXshDocNo,FDXshDocDate,FDXshDatePick,FTXshToLogin,FTXshStaPaid,FCXshPrePaid '
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	SET @tSql +=' FTPosCode,FTXshFrmLogin, FTXshDocNo,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,FDXshDatePick,FTXshToLogin,FTXshStaPaid,FCXshPrePaid'
	SET @tSql +=' FROM TRTTSalHD'
	SET @tSql += @tSql1
	PRINT @tSql 
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTSalHDTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLKVat3001003]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLKVat3001003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLKVat3001003] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxLKVat3001003] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptMerF Varchar(10),
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession

-- @ptMerF จากผู้ประกอบการ
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tMerF Varchar(10)
	DECLARE @tShpF Varchar(5)
	DECLARE @tShpT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @ptMerF ='001'-- จากผู้ประกอบการ
	--SET @ptShpF ='00001' --จากร้านค้า
	--SET @ptShpT = '00019'--ถึงร้านค้า

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @ptMerF =''-- จากผู้ประกอบการ
	--SET @ptShpF ='' --จากร้านค้า
	--SET @ptShpT = ''--ถึงร้านค้า


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tMerF =@ptMerF-- จากผู้ประกอบการ
	SET @tShpF =@ptShpF --จากร้านค้า
	SET @tShpT =@ptShpT--ถึงร้านค้า


	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END

	IF @tShpF = null
	BEGIN 
		SET @tShpF = ''
	END
	IF @tShpT = null OR @tShpT =''
	BEGIN 
		SET @tShpT = @tShpF
	END


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tMerF <> '')
	BEGIN
		SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerF + ''''
	END

	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND SL.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END
		


	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTRTTaxHDTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTRTTaxHDTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FDXshdocDate,FTXshDocNo,FTPosCode,FTXshDocRef,FTCstName,FTCstTaxNo,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,FTXshDocNo,FTPosCode,FTXshRefInt,FTCstName,FTCstTaxNo,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand'
	SET @tSql +=' FROM'	
			SET @tSql +=' (SELECT HD.FTBchCode,HD.FDXshdocDate,HD.FTPosCode,HD.FTXshDocNo,ISNULL(HD.FTXshRefInt,'''') FTXshRefInt,Cst_L.FTCstName,Cst.FTCstTaxNo,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0))*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END AS FCXshAmtNV,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand'
			SET @tSql +=' FROM TRTTSalHD HD WITH(NOLOCK) INNER JOIN'
					  SET @tSql +=' TRTTSalDTSL SL WITH(NOLOCK) ON HD.FTBchCode = SL.FTBchCode AND HD.FTXshDocNo = SL.FTXshDocNo LEFT JOIN'
					  SET @tSql +=' TCNMShop Shp WITH(NOLOCK) ON SL.FTBchCode = Shp.FTBchCode AND SL.FTShpCode = Shp.FTShpCode LEFT JOIN'
		 			  SET @tSql +=' TCNMCst Cst WITH(NOLOCK) ON HD.FTCstCode = Cst.FTCstCode LEFT JOIN'
					  SET @tSql +=' TCNMCst_L Cst_L WITH(NOLOCK) ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql +=@tSql1
			SET @tSql +=' ) SalVat'    
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTTaxHDTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	

--SELECT * FROM TRPTPSTaxHDTmp



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLocker_DetailDepositAmount_003001011]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLocker_DetailDepositAmount_003001011]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLocker_DetailDepositAmount_003001011] AS' 
END
GO
-- =============================================
-- Author:		Piya
-- Create date: 29/11/2019
-- Description:	รายงานยอดฝากแบบละเอียด
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxLocker_DetailDepositAmount_003001011]
	@pnLngID INT , 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),
	--ช่อง
	@ptLayNoF VARCHAR(10),
	@ptLayNoT VARCHAR(10),
	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT	
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(MAX)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	--ช่อง
	DECLARE @tLayNoF VARCHAR(10)
	DECLARE @tLayNoT VARCHAR(10)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT
	--ช่อง
	SET @tLayNoF = @ptLayNoF
	SET @tLayNoT = @ptLayNoT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''

	/*===== ตรวจสอบค่า Filter ========================================*/

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND PSH.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND SHD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_Filter +=' AND PSH.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_Filter += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	----เช็ค Parameter จากสาขา
	--IF(@tBchF = '' OR @tBchF = NULL)
	--	BEGIN 
	--		SET @tBchF = ''
	--    END
	--ELSE IF(@tBchF <> '')
	--   BEGIN 
	--	   SET @tBchF = @tBchF
	--   END

 --    --เช็ค Parameter ถึงสาขา
	--IF(@tBchT = '' OR @tBchT = NULL)
	--   BEGIN 
	--	   SET @tBchT = ''
	--   END
	--ELSE IF(@tBchT <> '')
	--   BEGIN 
	--	   SET @tBchT = @tBchT
	--   END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--	BEGIN
	--		SET @tSQL_Filter += ' AND  ( (SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') OR (SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') ) '
	--	END

	--/*===== ตรวจสอบค่า Filter ร้านค้า ========================================*/
	----เช็ค Parameter จากร้านค้า
	--IF(@tShpF = '' OR @tShpF = NULL)
	--	BEGIN 
	--		SET @tShpF = ''
	--    END
	--ELSE IF(@tShpF <> '')
	--   BEGIN 
	--	   SET @tShpF = @tShpF
	--   END

 --    --เช็ค Parameter ถึงร้านค้า
	--IF(@tShpT = '' OR @tShpT = NULL)
	--   BEGIN 
	--	   SET @tShpT = ''
	--   END
	--ELSE IF(@tShpT <> '')
	--   BEGIN 
	--	   SET @tShpT = @tShpT
	--   END

	--IF (@tShpF <> '' AND @tShpT <> '')
	--	BEGIN
	--		SET @tSQL_Filter += ' AND  ( (PSH.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''') OR (PSH.FTShpCode BETWEEN ''' + @tShpT + ''' AND ''' + @tShpF + ''') )'
	--	END
	
	--/*===== ตรวจสอบค่า Filter ตู้ ========================================*/
	----เช็ค Parameter จากตู้
	--IF(@tPosCodeF = '' OR @tPosCodeF = NULL)
	--	BEGIN 
	--		SET @tPosCodeF = ''
	--    END
	--ELSE IF(@tShpF <> '')
	--   BEGIN 
	--	   SET @tPosCodeF = @tPosCodeF
	--   END

 --    --เช็ค Parameter ถึงตู้
	--IF(@tPosCodeT = '' OR @tPosCodeT = NULL)
	--   BEGIN 
	--	   SET @tPosCodeT = ''
	--   END
	--ELSE IF(@tPosCodeT <> '')
	--   BEGIN 
	--	   SET @tPosCodeT = @tPosCodeT
	--   END

	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSQL_Filter += ' AND  ( (SHD.FTPosCode BETWEEN ''' + @tPosCodeF + ''' AND ''' + @tPosCodeT + ''') OR (SHD.FTPosCode BETWEEN ''' + @tPosCodeT + ''' AND ''' + @tPosCodeF + ''') )'
	--	END

	/*===== ตรวจสอบค่า Filter ช่อง ========================================*/
	--เช็ค Parameter จากช่อง
	IF(@tLayNoF = '' OR @tLayNoF = NULL)
		BEGIN 
			SET @tLayNoF = ''
	    END
	ELSE IF(@tLayNoF <> '')
	   BEGIN 
		   SET @tLayNoF = @tLayNoF
	   END

     --เช็ค Parameter ถึงช่อง
	IF(@tLayNoT = '' OR @tLayNoT = NULL)
	   BEGIN 
		   SET @tLayNoT = ''
	   END
	ELSE IF(@tLayNoT <> '')
	   BEGIN 
		   SET @tLayNoT = @tLayNoT
	   END

	IF (@tLayNoF <> '' AND @tLayNoT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND  ( (DSL.FNXsdLayNo BETWEEN ''' + @tLayNoF + ''' AND ''' + @tLayNoT + ''') OR (DSL.FNXsdLayNo BETWEEN ''' + @tLayNoT + ''' AND ''' + @tLayNoF + ''') )'
		END

	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND ( (CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTLockerDetailDepositAmountTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSQL = '
		INSERT INTO TRPTLockerDetailDepositAmountTmp 
		(FTComName,FTRptCode,FTUsrSession,FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTXshDocNo,FDXshDocDate,FTXshDocTime,FNXsdLayNo,FTPzeCode,FTSizName,FTRthCode,FTRthName,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FDXshDatePick,FDXshTimePick,FTXshSpendTime,FCXshGrand)
	'

	--select FDXshDatePick,FDXshDocDate,* from TRTTSalHD
	--รายงาน - ยอดฝากแบบละเอียด
	SET @tSQL += '
		SELECT 
			'''+@tComName+''' AS FTComName,
			'''+@tRptCode+''' AS FTRptCode,
			'''+@tUsrSession+''' AS FTUsrSession,
			SHD.FTBchCode,
			BCH.FTBchName,
			PSH.FTShpCode,
			SHL.FTShpName,
			SHD.FTPosCode,
			SHD.FTXshDocNo,
			CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) AS FDXshDocDate,
			SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),11,6) AS FTXshDocTime,
			DSL.FNXsdLayNo,
			SDT.FTPzeCode,
			SIZ.FTSizName,
			SDT.FTRthCode,
			RTE.FTRthName,
			SHD.FTXshRefExt,
			SHD.FTXshFrmLogin,
			--CASE WHEN  ISNULL(SHD.FTCryCode,'''') = '''' THEN CST.FTCstName ELSE MAN.FTManName END AS FTXshFrmLoginName,
			SHD.FTXshToLogin,
			CONVERT(VARCHAR(10),SHD.FDXshDatePick,121) AS FDXshDatePick,
			SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDatePick,121),11,6) AS FDXshTimePick,
			CAST(ROUND(DATEDIFF(MINUTE , SHD.FDXshDocDate,SHD.FDXshDatePick) / 60 + (DATEDIFF(MINUTE , SHD.FDXshDocDate,SHD.FDXshDatePick) % 60) / 100.0,2,1) AS DECIMAL(18,2)) AS FTXshSpendTime,
			SHD.FCXshGrand
		FROM TRTTSalHD SHD WITH (NOLOCK)

		INNER JOIN TRTTSalDTSL DSL WITH (NOLOCK) ON SHD.FTXshDocNo = DSL.FTXshDocNo
		INNER JOIN TRTTSalDT SDT WITH (NOLOCK) ON SDT.FTXshDocNo = DSL.FTXshDocNo
		INNER JOIN TRTMPriRateHD_L RTE WITH (NOLOCK) ON SDT.FTRthCode = RTE.FTRthCode AND RTE.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''

		LEFT JOIN TRTMShopSize_L SIZ WITH (NOLOCK) ON SDT.FTPzeCode = SIZ.FTSizCode AND SIZ.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
		LEFT JOIN TCNMBranch_L BCH WITH (NOLOCK) ON SHD.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
		LEFT JOIN TRTMShopPos PSH WITH (NOLOCK) ON SHD.FTPosCode = PSH.FTPosCode 
		LEFT JOIN TCNMShop_L SHL WITH (NOLOCK) ON PSH.FTShpCode = SHL.FTShpCode AND SHL.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +''' 
		LEFT JOIN TCNMCourieLogin CUL WITH (NOLOCK) ON SHD.FTXshFrmLogin = CUL.FTManLogin AND SHD.FTCryCode = CUL.FTCryCode
		LEFT JOIN TCNMCourieMan_L MAN WITH (NOLOCK) ON CUL.FTManCardID = MAN.FTManCardID AND CUL.FTCryCode = MAN.FTCryCode AND MAN.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
		LEFT JOIN TCNMCstLogin CSL WITH (NOLOCK) ON SHD.FTXshFrmLogin = CSL.FTCstLogin
		LEFT JOIN TCNMCst_L CST WITH (NOLOCK) ON CSL.FTCstCode = CST.FTCstCode AND CST.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
		LEFT JOIN TCNMShop SHP WITH (NOLOCK) ON SHD.FTBchCode = SHP.FTBchCode AND PSH.FTShpCode = SHP.FTShpCode

		WHERE SHD.FTXshStaDoc = 1
		AND ISNULL(SHD.FDXshDatePick,'''') <> ''''
		AND SHD.FTXshStaPaid = 3

		/*AND CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN ''2019-09-01'' AND ''2019-11-30''
		AND SHD.FTBchCode BETWEEN ''00002'' AND ''00002''
		AND PSH.FTShpCode BETWEEN ''00003'' AND ''00003''
		AND SHD.FTPosCode BETWEEN ''00004'' AND ''00004''
		AND DSL.FNXsdLayNo BETWEEN ''1'' AND ''24''*/
	'

	SET @tSQL += @tSQL_Filter

	PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	return @FNResult
END TRY	
BEGIN CATCH

    SET @FNResult = -1
	return @FNResult

END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLocker_Payment_003001016]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLocker_Payment_003001016]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLocker_Payment_003001016] AS' 
END
GO
-- =============================================
-- StoreName: SP_RPTxLocker_Payment_003001016 (รายงาน - การชำระเงิน)
-- Create date: 09/12/2019 Wasin(Yoshi)
-- Description:	ดึงข้อมูลและเพิ่มข้อมูลลงตาราง TRPTRTLockerPaymentTmp
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxLocker_Payment_003001016]
	-- Input Parameter
	@pnLngID		int,
	@ptComName		varchar(100),
	@ptRptCode		varchar(100),
	@ptUsrSession	varchar(100),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF			varchar(5),
	--@ptBchT			varchar(5),
	@ptCstF			varchar(5),
	@ptCstT			varchar(5),
	@ptDateF		varchar(10),
	@ptDateT		varchar(10),
	-- Output Parameter
	@FNResult		int output
AS
BEGIN TRY
	-- Declare Parameter
	DECLARE @nLngID			int 
	DECLARE @tComName		varchar(100)
	DECLARE @tRptCode		varchar(100)
	DECLARE @tUsrSession	varchar(100)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF			varchar(5)
	--DECLARE @tBchT			varchar(5)
	DECLARE @tCstF			varchar(5)
	DECLARE @tCstT			varchar(5)
	DECLARE @tDateF			varchar(10)
	DECLARE @tDateT			varchar(10)
	DECLARE @tSql			varchar(8000)
	DECLARE @tWhereFilter1	  varchar(8000)
	DECLARE @tWhereFilter2    varchar(8000)
	DECLARE @tWhereFilterOUT  varchar(8000)

	-- Set Parameter 
	SET @nLngID			= @pnLngID
	SET @tComName		= @ptComName
	SET @tRptCode		= @ptRptCode
	SET @tUsrSession	= @ptUsrSession

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF			= @ptBchF
	--SET @tBchT			= @ptBchT
	SET @tCstF			= @ptCstF
	SET @tCstT			= @ptCstT
	SET @tDateF			= @ptDateF
	SET @tDateT			= @ptDateT

	-- Check Lang ID
	IF @nLngID	= ''
	BEGIN
		SET @nLngID	= 1
	END

	-- Set ค่าให้ Parameter กรณี T เป็นค่าว่างหรือ null
	-- Check Null Branch
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END
	-- Check Null Customer
	IF @tCstF = null
	BEGIN
		SET @tCstF = ''
	END
	IF @tCstT = null OR @tCstT = ''
	BEGIN
		SET @tCstT = @tCstF
	END
	-- Check Null Doc Date
	IF @tDateF = null
	BEGIN
		SET @tDateF = ''
	END
	IF @tDateT = null OR @tDateT = ''
	BEGIN
		SET @tDateT = @tDateF
	END


	SET @tWhereFilter1		 = ' WHERE PHD.FTXshStaDoc = 1 '
	SET @tWhereFilter2		 = ' WHERE 1=1 '
	SET @tWhereFilterOUT	 = ' WHERE 1=1 '
	
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tWhereFilter1 += ' AND PRC.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
			SET @tWhereFilter2 += ' AND PDT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tWhereFilter1 += ' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''' '
			SET @tWhereFilter2 += ' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''' '
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tWhereFilter1 += ' AND SDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
			SET @tWhereFilter2 += ' AND SDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tWhereFilter1 += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
			SET @tWhereFilter2 += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
		END		
	END
	
	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tWhereFilter1 +=' AND PRC.FTBchCode IN (' + @ptBchL + ')'
			SET @tWhereFilter2 +=' AND PDT.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tWhereFilter1 +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
			SET @tWhereFilter2 +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tWhereFilter1 +=' AND SDT.FTShpCode IN (' + @ptShpL + ')'
			SET @tWhereFilter2 +=' AND SDT.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tWhereFilter1 += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
			SET @tWhereFilter2 += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	-- Check Branch Where Filter
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tWhereFilterOUT	+= ' AND ((A.FTBchCode BETWEEN '''+@tBchF+''' AND '''+@tBchT+''') OR (A.FTBchCode BETWEEN '''+@tBchT+''' AND '''+@tBchF+'''))'
	--END

	-- Check Customer Where Filter
	IF (@tCstF <> '' AND @tCstT <> '')
	BEGIN
		SET @tWhereFilterOUT	+= ' AND ((A.FTCstCode BETWEEN '''+@tCstF+''' AND '''+@tCstT+''') OR (A.FTCstCode BETWEEN '''+@tCstT+''' AND '''+@tCstF+'''))'
	END

	-- Check Date Where Filter
	IF (@tDateF <> '' AND @tDateT <> '')
	BEGIN
		SET @tWhereFilterOUT	+= ' AND ((CONVERT(VARCHAR(10),A.FDXrcDocDate,121) BETWEEN '''+@tDateF+''' AND '''+@tDateT+''') OR (CONVERT(VARCHAR(10),A.FDXrcDocDate,121) BETWEEN '''+@tDateT+''' AND '''+@tDateF+'''))'
	END

	-- Delete Data In Temp
	DELETE FROM TRPTRTLockerPaymentTmp WITH(ROWLOCK) WHERE FTComName = ''+@tComName+'' AND FTRptCode = ''+@tRptCode+''

	--INSERT INTO TRPTRTBookingTmp
	SET @tSql	 = ' INSERT INTO TRPTRTLockerPaymentTmp ('
	SET @tSql	+= '	FTComName,FTRptCode,FTUsrSession,FTBchCode,FTXrcDocNo,FTXshDocType,FDXrcDocDate,FTCstCode,FTCstName,FCXrcNet,FCXrcDis,FCXrcGrand,'
	SET @tSql	+= '	FTXsdRefDocNo,FTXsdDocDate,FCXsdNet,FCXsdPayB4,FCXsdRefPaid,FCXsdGrand,FCXsdLeft'
	SET @tSql	+= ' )'
	SET @tSql	+= ' SELECT '''+@tComName+''' AS FTComName,'''+@tRptCode+''' AS FTRptCode,'''+@tUsrSession+''' AS FTUsrSession , A.* FROM ('
	SET @tSql	+= '	SELECT'
	SET @tSql	+= '		PRC.FTBchCode AS FTBchCode,PRC.FTXshDocNo AS FTXrcDocNo,''1'' AS FTXshDocType,CONVERT(VARCHAR(10),PRC.FDXrcRefDate,121) AS FDXrcDocDate,PHD.FTCstCode,CST.FTCstName,'	
	SET @tSql	+= '		PRC.FCXrcNet,0 AS FCXrcDis,PRC.FCXrcNet AS FCXrcGrand,'''' AS FTXsdRefDocNo,'''' AS FTXsdDocDate,0 AS FCXsdNet,0 AS FCXsdPayB4,0 AS FCXsdRefPaid,0 AS FCXsdGrand,0 AS FCXsdLeft'
	SET @tSql	+= '	FROM   TRTTPayRC PRC WITH(NOLOCK)'
	SET @tSql	+= '	LEFT JOIN TRTTPayHD PHD WITH(NOLOCK) ON PRC.FTXshDocNo = PHD.FTXshDocNo'
	SET @tSql	+= '	LEFT JOIN TCNMCst_L CST WITH(NOLOCK) ON PHD.FTCstCode = CST.FTCstCode AND CST.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql   += '	LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTXsdRefDocNo,FTBchCode FROM TRTTPayDT WITH(NOLOCK)) PDT ON PRC.FTBchCode = PDT.FTBchCode AND PRC.FTXshDocNo = PDT.FTXshDocNo '
	SET @tSql   += '	LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTPosCode,FTBchCode FROM TRTTSalHD WITH(NOLOCK)) SHD ON PRC.FTBchCode = SHD.FTBchCode AND PDT.FTXsdRefDocNo = SHD.FTXshDocNo '
	SET @tSql   += '	LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTShpCode,FTBchCode FROM TRTTSalDT WITH(NOLOCK)) SDT ON PRC.FTBchCode = SDT.FTBchCode AND PDT.FTXsdRefDocNo = SDT.FTXshDocNo '
	SET @tSql   += '	LEFT JOIN TCNMShop  SHP ON PRC.FTBchCode = SHP.FTBchCode AND SDT.FTShpCode = SHP.FTShpCode '
	SET @tSql	+= @tWhereFilter1
	SET @tSql	+= '	UNION ALL'
	SET @tSql	+= '	SELECT'
	SET @tSql	+= '		PDT.FTBchCode AS FTBchCode,PDT.FTXshDocNo AS FTXrcDocNo,2 AS FTXshDocType,CONVERT(VARCHAR(10),PDT.FDLastUpdOn,121) AS FDXrcDocDate,'''' AS FTCstCode,'''' AS FTCstName,'
	SET @tSql	+= '		0 AS FCXrcNet, 0 AS FCXrcDis, 0 AS FCXrcGrand,PDT.FTXsdRefDocNo AS FTXsdRefDocNo,CONVERT(VARCHAR(10),PDT.FDXsdRefDocDate,121) AS FTXsdDocDate,PDT.FCXsdRefGrand AS FCXsdNet,'
	SET @tSql	+= '		SUM (PDT.FCXsdRefPaid) OVER (PARTITION BY PDT.FTXsdRefDocNo  ORDER BY PDT.FTXshDocNo ) - PDT.FCXsdRefPaid AS FCXsdPayB4,PDT.FCXsdRefPaid AS FCXsdRefPaid, PDT.FCXsdRefPaid AS FCXsdGrand,'
	SET @tSql	+= '		PDT.FCXsdRefGrand - ((SUM (PDT.FCXsdRefPaid) OVER (PARTITION BY PDT.FTXsdRefDocNo  ORDER BY PDT.FTXshDocNo ) - PDT.FCXsdRefPaid)+FCXsdRefPaid) AS FCXsdLeft'
	SET @tSql	+= '	FROM TRTTPayDT PDT WITH(NOLOCK)'
	SET @tSql	+= '	LEFT JOIN TRTTPayHD PHD  ON PHD.FTXshDocNo = PDT.FTXshDocNo '
	SET @tSql	+= '	LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTPosCode,FTBchCode FROM TRTTSalHD WITH(NOLOCK)) SHD ON PDT.FTBchCode = SHD.FTBchCode AND PDT.FTXsdRefDocNo = SHD.FTXshDocNo'
	SET @tSql	+= '	LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTShpCode,FTBchCode FROM TRTTSalDT WITH(NOLOCK)) SDT ON PDT.FTBchCode = SDT.FTBchCode AND PDT.FTXsdRefDocNo = SDT.FTXshDocNo'
	SET @tSql	+= '	LEFT JOIN TCNMShop  SHP ON PDT.FTBchCode = SHP.FTBchCode AND SDT.FTShpCode = SHP.FTShpCode '
	SET @tSql	+= @tWhereFilter2
	SET @tSql   += ' ) A '
	SET @tSql   += @tWhereFilterOUT
	SET @tSql	+= ' ORDER BY A.FTBchCode ASC,A.FTXrcDocNo ASC,A.FTXshDocType ASC,A.FDXrcDocDate ASC'
	PRINT(@tSql)
	-- Execute Sql 
	EXECUTE(@tSql)
	SET @FNResult	= 0
	RETURN SELECT * FROM TRPTRTLockerPaymentTmp WITH(NOLOCK) WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY
BEGIN CATCH
	SET @FNResult	= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxLocker_PaymentByBill_003001012]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxLocker_PaymentByBill_003001012]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxLocker_PaymentByBill_003001012] AS' 
END
GO
-- =============================================
-- Author:		Piya
-- Create date: 03/12/2019
-- Description:	รายงาน การชำระเงิน ตามบิล
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxLocker_PaymentByBill_003001012]
	@pnLngID INT , 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--ลูกค้า
	@ptCstF VARCHAR(20),
	@ptCstT VARCHAR(20),
	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT	
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(MAX)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @tSQL_FilterDateA VARCHAR(MAX)
	DECLARE @tSQL_FilterDateB VARCHAR(MAX)
	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	
	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--ลูกค้า
	DECLARE @tCstF VARCHAR(20)
	DECLARE @tCstT VARCHAR(20)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--ลูกค้า
	SET @tCstF = @ptCstF
	SET @tCstT = @ptCstT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''
	SET @tSQL_FilterDateA = ''
	SET @tSQL_FilterDateB = ''

	/*===== ตรวจสอบค่า Filter ========================================*/
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_FilterDateA +=' AND PDT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSQL_FilterDateB +=' AND PDT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQL_FilterDateA +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSQL_FilterDateB +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_FilterDateA +=' AND SDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSQL_FilterDateB +=' AND SDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_FilterDateA += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSQL_FilterDateB += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_FilterDateA +=' AND PDT.FTBchCode IN (' + @ptBchL + ')'
			SET @tSQL_FilterDateB +=' AND PDT.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQL_FilterDateA +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
			SET @tSQL_FilterDateB +=' AND SHP.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_FilterDateA +=' AND SDT.FTShpCode IN (' + @ptShpL + ')'
			SET @tSQL_FilterDateB +=' AND SDT.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_FilterDateA += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSQL_FilterDateB += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	/*===== ตรวจสอบค่า Filter ลูกค้า ========================================*/
	--เช็ค Parameter จากลูกค้า
	IF(@tCstF = '' OR @tCstF = NULL)
		BEGIN 
			SET @tCstF = ''
	    END
	ELSE IF(@tCstF <> '')
	   BEGIN 
		   SET @tCstF = @tCstF
	   END

     --เช็ค Parameter ถึงลูกค้า
	IF(@tCstT = '' OR @tCstT = NULL)
	   BEGIN 
		   SET @tCstT = ''
	   END
	ELSE IF(@tCstT <> '')
	   BEGIN 
		   SET @tCstT = @tCstT
	   END

	IF (@tCstF <> '' AND @tCstT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND  ( (A.FTCstCode BETWEEN ''' + @tCstF + ''' AND ''' + @tCstT + ''') OR (A.FTCstCode BETWEEN ''' + @tCstT + ''' AND ''' + @tCstF + ''') )'
		END

	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_FilterDateA += ' AND ( (CONVERT(VARCHAR(10),FDLastUpdOn,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),FDLastUpdOn,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
			SET @tSQL_FilterDateB += ' AND ( (CONVERT(VARCHAR(10),PDT.FDLastUpdOn,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),PDT.FDLastUpdOn,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTLockerPaymentByBillTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSQL = '
		INSERT INTO TRPTLockerPaymentByBillTmp 
		(FTComName,FTRptCode,FTUsrSession,FTBchCode,FTXshDocNo,FTXshDocType,FTXshRefInt,FDXshDocDate,FCXshGrand,FCXdtPay,FCXshLeft,FTXrcDocNo,FDXrcDocDate,FTCstCode,FTCstName,FCXrcNet,FCXrcDis,FCXrcGrand,FCXrcLeft)
	'

	--SELECT * FROM TRTTPayDT PDT 
	--ORDER BY FTXsdRefDocNo

	SET @tSQL += '
		SELECT 
			'''+@tComName+''' AS FTComName,
			'''+@tRptCode+''' AS FTRptCode,
			'''+@tUsrSession+''' AS FTUsrSession,
			A.FTBchCode,
			A.FTXshDocNo,
			A.FTXshDocType,
			A.FTXshRefInt,
			A.FDXshDocDate,
			A.FCXshGrand,
			A.FCXdtPay,
			A.FCXshLeft,
			A.FTXrcDocNo,
			A.FDXrcDocDate,
			A.FTCstCode,
			A.FTCstName,
			A.FCXrcNet,
			A.FCXrcDis,
			A.FCXrcGrand,
			A.FCXrcLeft
		FROM(
			SELECT 
				DISTINCT SHD.FTBchCode,
				SHD.FTXshDocNo,
				''1'' AS FTXshDocType,
				SHD.FTXshRefInt,
				CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) AS FDXshDocDate,
				SHD.FCXshGrand,
				PRC.FCXdtPay,
				SHD.FCXshGrand - PRC.FCXdtPay AS FCXshLeft,
				'''' AS FTXrcDocNo,
				NULL AS FDXrcDocDate,
				SHD.FTCstCode AS FTCstCode,
				ISNULL(SHC.FTXshCstName,'''') AS FTCstName,
				0 AS FCXrcNet,
				0 AS FCXrcDis,
				0 AS FCXrcGrand,
				0 AS FCXrcLeft
			FROM TRTTPayDT PDT WITH(NOLOCK) 
			INNER JOIN TRTTSalHD SHD WITH(NOLOCK) ON SHD.FTXshDocNo = PDT.FTXsdRefDocNo
			INNER JOIN (
				SELECT PDT.FTXsdRefDocNo AS FTXsdRefDocNo ,SUM(PDT.FCXsdRefPaid) AS FCXdtPay 
				FROM TRTTPayDT PDT WITH(NOLOCK)
				LEFT JOIN TRTTSalHD SHD WITH(NOLOCK) ON PDT.FTXsdRefDocNo = SHD.FTXshDocNo
				LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTShpCode FROM TRTTSalDT WITH(NOLOCK)) SDT ON PDT.FTXsdRefDocNo = SDT.FTXshDocNo
				LEFT JOIN TCNMShop SHP WITH(NOLOCK) ON SDT.FTShpCode = SHP.FTShpCode AND PDT.FTBchCode = SHP.FTBchCode
				WHERE 1=1
	'

	SET @tSQL += @tSQL_FilterDateA

	SET @tSQL += '
				/*AND CONVERT(VARCHAR(10),FDLastUpdOn,121) BETWEEN ''2019-10-08'' AND ''2019-10-08''*/
				GROUP BY PDT.FTXsdRefDocNo 
			) PRC ON SHD.FTXshDocNo = PRC.FTXsdRefDocNo
			LEFT  JOIN TRTTPayRC PRC_F WITH(NOLOCK)        ON PDT.FTXshDocNo = PRC_F.FTXshDocNo
			LEFT  JOIN TPSTSalHDCst SHC WITH(NOLOCK)       ON PRC_F.FTXrcRefNo1 = SHC.FTXshDocNo

			UNION ALL

			SELECT 
				PDT.FTBchCode,
				PDT.FTXsdRefDocNo,
				''2'' AS FTXshDocType,
				NULL AS FTXshRefInt,
				CONVERT(VARCHAR(10),PDT.FDXsdRefDocDate,121) AS FDXshDocDate,
				PDT.FCXsdRefGrand,
				0 AS FCXdtPay,
				0 AS FCXshLeft,
				PDT.FTXshDocNo AS FTXrcDocNo,
				CONVERT(VARCHAR(10),PHD.FDXshDocDate,121) AS FDXshDocDate,
				PHD.FTXshCardNo AS FTCstCode,
				ISNULL(SHC.FTXshCstName,'''') AS FTCstName,
				PDT.FCXsdRefPaid,
				0 AS FCXrcDis,
				PDT.FCXsdRefPaid AS FCXrcGrand,
				PDT.FCXsdRefGrand - (PDT.FCXsdRefPaid+(SUM (PDT.FCXsdRefPaid) OVER (PARTITION BY PDT.FTXsdRefDocNo  ORDER BY PDT.FTXshDocNo ) - PDT.FCXsdRefPaid )) AS FCXrcLeft
			FROM TRTTPayDT PDT WITH(NOLOCK) 
			LEFT JOIN TRTTSalHD SHD WITH(NOLOCK) ON PDT.FTXsdRefDocNo = SHD.FTXshDocNo
			LEFT JOIN TRTTPayHD PHD WITH(NOLOCK) ON PDT.FTXshDocNo = PHD.FTXshDocNo
			LEFT JOIN (SELECT DISTINCT FTXshDocNo,FTShpCode FROM TRTTSalDT WITH(NOLOCK)) SDT ON PDT.FTXsdRefDocNo = SDT.FTXshDocNo
			LEFT JOIN TCNMShop SHP WITH(NOLOCK) ON SDT.FTShpCode = SHP.FTShpCode AND PDT.FTBchCode = SHP.FTBchCode
			LEFT JOIN TRTTPayRC PRC WITH(NOLOCK)          ON PDT.FTXshDocNo = PRC.FTXshDocNo
			LEFT JOIN TPSTSalHDCst SHC WITH(NOLOCK)       ON PRC.FTXrcRefNo1 = SHC.FTXshDocNo
			WHERE 1=1
	'

	SET @tSQL += @tSQL_FilterDateB

	SET @tSQL += '
			/*AND CONVERT(VARCHAR(10),PDT.FDLastUpdOn,121) BETWEEN ''2019-10-08'' AND ''2019-10-08''*/
		) A
		WHERE 1=1 
		/*AND A.FTBchCode BETWEEN ''00001'' AND ''00002''
		AND A.FTCstCode BETWEEN ''AR00001'' AND ''AR00001''
		ORDER BY A.FTXshDocNo,A.FTXrcDocNo,A.FTXshDocType*/
	'

	SET @tSQL += @tSQL_Filter

	PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	return @FNResult
END TRY	
BEGIN CATCH

    SET @FNResult = -1
	return @FNResult

END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverDailyDTTmp]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverDailyDTTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverDailyDTTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverDailyDTTmp]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
--รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
-- Temp name  TRPTMnyShotOverTmp_Moshi

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGINTRPTMnyShotOverDailyDTTmp
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),ShotOver.FDShdSaleDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTMnyShotOverDailyDTTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 

    SET @tSql = 'INSERT INTO TRPTMnyShotOverDailyDTTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode ,FDShdSaleDate,FCMnyOver,FCMnyShot,FCSvnCashIn,FCSvnCashOut,'
	SET @tSql +=' FCKbnAmtCash,FCRcvPayCash,FCKbnAmtCredit,FCRcvPayCredit,FCKbnAmtVouchers,FCRcvPayVouchers,FCKbnAmtCoupon,FCRcvPayCoupon,FCKbnAmtChque,FCRcvPayChque,FCKbnAmtPromptpay,'
	SET @tSql +=' FCRcvPayPromptpay,FCKbnAmtOther,FCRcvPayOther,FCAmtShipClose,FCAmtSystem'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver > 0 THEN FCShotOver ELSE 0 END) AS FCMnyOver,' 
    SET @tSql +=' SUM(CASE WHEN FCShotOver < 0 THEN FCShotOver ELSE 0 END) AS FCMnyShot,' 			 
  	SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,'  /*--เงินเข้า*/
	SET @tSql +=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,' /* --เงินออก*/
    SET @tSql +=' SUM(ISNULL(FCKbnAmt, 0)) AS FCKbnAmtCash,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0)) AS FCRcvPayCash,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtCredit, 0)) AS FCKbnAmtCredit,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCredit, 0)) AS FCRcvPayCredit,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtVouchers, 0)) AS FCKbnAmtVouchers,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayVouchers, 0)) AS FCRcvPayVouchers,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtCoupon, 0)) AS FCKbnAmtCoupon,'
    SET @tSql +=' SUM(ISNULL(FCRcvPayCoupon, 0)) AS FCRcvPayCoupon,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtChque, 0)) AS FCKbnAmtChque,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayChque, 0)) AS FCRcvPayChque,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtPromptpay, 0)) AS FCKbnAmtPromptpay,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayPromptpay, 0)) AS FCRcvPayPromptpay,'
    SET @tSql +=' SUM(ISNULL(FCKbnAmtOther, 0)) AS FCKbnAmtOther,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayOther, 0)) AS FCRcvPayOther,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmt, 0) + ISNULL(FCKbnAmtCredit, 0) + ISNULL(FCKbnAmtVouchers, 0) + ISNULL(FCKbnAmtCoupon, 0) + ISNULL(FCKbnAmtChque, 0) + ISNULL(FCKbnAmtPromptpay, 0) + ISNULL(FCKbnAmtOther, 0)) AS FCAmtShipClose,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0) + ISNULL(FCRcvPayCredit, 0) + ISNULL(FCRcvPayVouchers, 0)  + ISNULL(FCKbnAmtCoupon, 0) + ISNULL(FCKbnAmtChque, 0) + ISNULL(FCKbnAmtPromptpay, 0) + ISNULL(FCKbnAmtOther, 0)) AS FCAmtSystem'
SET @tSql +=' FROM'
SET @tSql +=' ('
SET @tSql +=' SELECT Shif.FTBchCode,'
        SET @tSql +=' Bch_L.FTBchName,' 
        SET @tSql +=' Shif.FTPosCode,' 
        SET @tSql +=' FTUsrCode,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSaleDate, 121) AS FDShdSaleDate,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignIn, 121) AS FDShdSignIn,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignOut, 121) AS FDShdSignOut,' 
		SET @tSql +=' SUM(ISNULL(FCKbnAmt,0)) AS FCKbnAmt,'
        SET @tSql +=' (((SUM(ISNULL(FCKbnAmt, 0))+(SUM(ISNULL(FCKbnAmtCredit, 0)) + SUM(ISNULL(FCKbnAmtVouchers, 0)) + SUM(ISNULL(FCKbnAmtCoupon, 0)) + SUM(ISNULL(FCKbnAmtChque, 0)) + SUM(ISNULL(FCKbnAmtPromptpay, 0)) + SUM (ISNULL(FCKbnAmtOther, 0))) + SUM(ISNULL(FCSvnCashOut, 0))) - (SUM (ISNULL(FCRcvPayCash, 0)) + SUM (ISNULL(FCRcvPayCredit, 0)) + SUM (ISNULL(FCRcvPayVouchers, 0)) + SUM (ISNULL(FCRcvPayCoupon, 0)) + SUM (ISNULL(FCRcvPayChque, 0)) + SUM(ISNULL(FCRcvPayPromptpay, 0)) + SUM(ISNULL(FCRcvPayOther, 0)))) - SUM(ISNULL(FCSvnCashIn, 0))) AS FCShotOver,'  
   		SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,'  /*--เงินเข้า*/
		SET @tSql +=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'  /*--เงินออก*/
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCash, 0)) AS FCKbnAmtCash,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0)) AS FCRcvPayCash,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCredit, 0)) AS FCKbnAmtCredit,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCredit, 0)) AS FCRcvPayCredit,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtVouchers, 0)) AS FCKbnAmtVouchers,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayVouchers, 0)) AS FCRcvPayVouchers,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCoupon, 0)) AS FCKbnAmtCoupon,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCoupon, 0)) AS FCRcvPayCoupon,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtChque, 0)) AS FCKbnAmtChque,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayChque, 0)) AS FCRcvPayChque,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtPromptpay, 0)) AS FCKbnAmtPromptpay,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayPromptpay, 0)) AS FCRcvPayPromptpay,'
        SET @tSql +=' SUM(ISNULL(FCKbnAmtOther, 0)) AS FCKbnAmtOther,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayOther, 0)) AS FCRcvPayOther'
SET @tSql +=' FROM TPSTShiftHD Shif WITH(NOLOCK)'
    SET @tSql +=' LEFT JOIN'
SET @tSql +=' ('
    SET @tSql +=' SELECT FTBchCode,FTPosCode,FTShfCode,' 
            SET @tSql +=' SUM(CASE FTEvnCode WHEN ''001'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashIn,'  /*--เงินเข้า*/
            SET @tSql +=' SUM(CASE FTEvnCode WHEN ''002'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashOut'  /*--เงินออก*/
    SET @tSql +=' FROM TPSTShiftEvent WITH(NOLOCK)'
    SET @tSql +=' WHERE FTEvnCode IN(''001'', ''002'')'
    SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
SET @tSql +=' ) AmtPay ON Shif.FTBchCode = AmtPay.FTBchCode'
            SET @tSql +=' AND Shif.FTPosCode = AmtPay.FTPosCode'
            SET @tSql +=' AND Shif.FTShfCode = AmtPay.FTShfCode'
    SET @tSql2 =' LEFT JOIN'
SET @tSql2 +=' ('
    SET @tSql2 +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
            SET @tSql2 +=' SUM(ISNULL(KRcv.FCKbnAmt, 0)) AS FCKbnAmt'
    SET @tSql2 +=' FROM TPSTShiftSKeyBN KRcv'
	/*-- INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = KRcv.FTShfCode*/
	/*--WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03'' */
    SET @tSql2 +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
SET @tSql2 +=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode'
            SET @tSql2 +=' AND Shif.FTPosCode = KeyBank.FTPosCode'
            SET @tSql2 +=' AND Shif.FTShfCode = KeyBank.FTShfCode'
SET @tSql2 +=' LEFT JOIN'
SET @tSql2 +=' ('
    SET @tSql2 +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
			SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCash,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCredit,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtVouchers,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCoupon,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtChque,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtPromptpay,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'', ''013'', ''002'', ''008'', ''004'', ''003'') THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtOther'
    SET @tSql2 +=' FROM TPSTShiftSKeyRcv KRcv'
        SET @tSql2 +=' LEFT JOIN TFNMRcv Rcv ON KRcv.FTRcvCode = Rcv.FTRcvCode'
		/*--INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = KRcv.FTShfCode*/
		/*--WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03''*/ 
    SET @tSql2 +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
SET @tSql2 +=' ) KeyINPay ON Shif.FTBchCode = KeyINPay.FTBchCode'
                SET @tSql2 +=' AND Shif.FTPosCode = KeyINPay.FTPosCode'
                SET @tSql2 +=' AND Shif.FTShfCode = KeyINPay.FTShfCode'
SET @tSql2 +=' LEFT JOIN'
SET @tSql2 +=' ('
    SET @tSql2 +=' SELECT SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCash,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCredit,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayVouchers,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCoupon,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayChque,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayPromptpay,' 
            SET @tSql2 +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'',''013'',''002'',''008'',''004'',''003'') THEN' 
				SET @tSql2 +=' CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayOther'
    SET @tSql2 +=' FROM TPSTShiftSSumRcv SysRcv WITH(NOLOCK)'
        SET @tSql2 +=' LEFT JOIN TFNMRcv Rcv ON SysRcv.FTRcvCode = Rcv.FTRcvCode'
		/*INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = SysRcv.FTShfCode*/
		/*WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03'' */
    SET @tSql2 +=' GROUP BY SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode'
SET @tSql2 +=' ) SysAmtPay ON Shif.FTBchCode = SysAmtPay.FTBchCode'
              SET @tSql2 +=' AND Shif.FTPosCode = SysAmtPay.FTPosCode'
              SET @tSql2 +=' AND Shif.FTShfCode = SysAmtPay.FTShfCode'
    SET @tSql2 +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode'
                  SET @tSql2 +=' AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
SET @tSql2 +=' WHERE ISNULL(FTShdUsrClosed, '''') <> '''''
SET @tSql2 +=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,' 
        SET @tSql2 +=' CONVERT(VARCHAR(10), FDShdSaleDate, 121),' 
        SET @tSql2 +=' CONVERT(VARCHAR(10), FDShdSignIn, 121),' 
        SET @tSql2 +=' CONVERT(VARCHAR(10), FDShdSignOut, 121)'
SET @tSql2 +=' ) ShotOver'
	SET @tSql2 += @tSql1		
	SET @tSql2 += ' GROUP BY FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate'								
						
--= ''' + CAST(@nLngID  AS VARCHAR(10)) + '''

	--PRINT @tSql
	--PRINT @tSql2
	EXECUTE(@tSql+@tSql2)
	RETURN SELECT * FROM TRPTMnyShotOverDailyDTTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH			


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverDailyDTTmp_Moshi]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverDailyDTTmp_Moshi]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverDailyDTTmp_Moshi] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverDailyDTTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
--รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
-- Temp name  TRPTMnyShotOverTmp_Moshi

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGINTRPTMnyShotOverDailyDTTmp
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),ShotOver.FDShdSaleDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTMnyShotOverDailyDTTmp_Moshi WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 

    SET @tSql = 'INSERT INTO TRPTMnyShotOverDailyDTTmp_Moshi'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode ,FDShdSaleDate,FCMnyOver,FCMnyShot,FCSvnCashIn,FCSvnCashOut,'
	SET @tSql +=' FCKbnAmtCash,FCRcvPayCash,FCKbnAmtCredit,FCRcvPayCredit,FCKbnAmtVouchers,FCRcvPayVouchers,FCKbnAmtCoupon,FCRcvPayCoupon,FCKbnAmtChque,FCRcvPayChque,FCKbnAmtPromptpay,'
	SET @tSql +=' FCRcvPayPromptpay,FCKbnAmtOther,FCRcvPayOther,FCAmtShipClose,FCAmtSystem'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver > 0 THEN FCShotOver ELSE 0 END) AS FCMnyOver,' 
    SET @tSql +=' SUM(CASE WHEN FCShotOver < 0 THEN FCShotOver ELSE 0 END) AS FCMnyShot,' 			 
  	SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,'  /*--เงินเข้า*/
	SET @tSql +=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,' /* --เงินออก*/
    SET @tSql +=' SUM(ISNULL(FCKbnAmt, 0)) AS FCKbnAmtCash,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0)) AS FCRcvPayCash,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtCredit, 0)) AS FCKbnAmtCredit,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCredit, 0)) AS FCRcvPayCredit,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtVouchers, 0)) AS FCKbnAmtVouchers,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayVouchers, 0)) AS FCRcvPayVouchers,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtCoupon, 0)) AS FCKbnAmtCoupon,'
    SET @tSql +=' SUM(ISNULL(FCRcvPayCoupon, 0)) AS FCRcvPayCoupon,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtChque, 0)) AS FCKbnAmtChque,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayChque, 0)) AS FCRcvPayChque,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmtPromptpay, 0)) AS FCKbnAmtPromptpay,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayPromptpay, 0)) AS FCRcvPayPromptpay,'
    SET @tSql +=' SUM(ISNULL(FCKbnAmtOther, 0)) AS FCKbnAmtOther,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayOther, 0)) AS FCRcvPayOther,' 
    SET @tSql +=' SUM(ISNULL(FCKbnAmt, 0) + ISNULL(FCKbnAmtCredit, 0) + ISNULL(FCKbnAmtVouchers, 0) + ISNULL(FCKbnAmtCoupon, 0) + ISNULL(FCKbnAmtChque, 0) + ISNULL(FCKbnAmtPromptpay, 0) + ISNULL(FCKbnAmtOther, 0)) AS FCAmtShipClose,' 
    SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0) + ISNULL(FCRcvPayCredit, 0) + ISNULL(FCRcvPayVouchers, 0)  + ISNULL(FCKbnAmtCoupon, 0) + ISNULL(FCKbnAmtChque, 0) + ISNULL(FCKbnAmtPromptpay, 0) + ISNULL(FCKbnAmtOther, 0)) AS FCAmtSystem'
SET @tSql +=' FROM'
SET @tSql +=' ('
SET @tSql +=' SELECT Shif.FTBchCode,'
        SET @tSql +=' Bch_L.FTBchName,' 
        SET @tSql +=' Shif.FTPosCode,' 
        SET @tSql +=' FTUsrCode,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSaleDate, 121) AS FDShdSaleDate,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignIn, 121) AS FDShdSignIn,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignOut, 121) AS FDShdSignOut,'
		SET @tSql +=' SUM(ISNULL(FCKbnAmt,0)) AS FCKbnAmt,'
        SET @tSql +=' SUM(ISNULL(FCKbnAmt, 0)) - SUM(ISNULL(FCRcvPayCash, 0))  AS FCShotOver,' 
   		SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,'  /*--เงินเข้า*/
		SET @tSql +=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'  /*--เงินออก*/
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCash, 0)) AS FCKbnAmtCash,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCash, 0)) AS FCRcvPayCash,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCredit, 0)) AS FCKbnAmtCredit,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCredit, 0)) AS FCRcvPayCredit,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtVouchers, 0)) AS FCKbnAmtVouchers,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayVouchers, 0)) AS FCRcvPayVouchers,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtCoupon, 0)) AS FCKbnAmtCoupon,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayCoupon, 0)) AS FCRcvPayCoupon,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtChque, 0)) AS FCKbnAmtChque,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayChque, 0)) AS FCRcvPayChque,' 
        SET @tSql +=' SUM(ISNULL(FCKbnAmtPromptpay, 0)) AS FCKbnAmtPromptpay,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayPromptpay, 0)) AS FCRcvPayPromptpay,'
        SET @tSql +=' SUM(ISNULL(FCKbnAmtOther, 0)) AS FCKbnAmtOther,' 
        SET @tSql +=' SUM(ISNULL(FCRcvPayOther, 0)) AS FCRcvPayOther'
SET @tSql +=' FROM TPSTShiftHD Shif WITH(NOLOCK)'
    SET @tSql +=' LEFT JOIN'
SET @tSql +=' ('
    SET @tSql +=' SELECT FTBchCode,FTPosCode,FTShfCode,' 
            SET @tSql +=' SUM(CASE FTEvnCode WHEN ''001'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashIn,'  /*--เงินเข้า*/
            SET @tSql +=' SUM(CASE FTEvnCode WHEN ''002'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashOut'  /*--เงินออก*/
    SET @tSql +=' FROM TPSTShiftEvent WITH(NOLOCK)'
    SET @tSql +=' WHERE FTEvnCode IN(''001'', ''002'')'
    SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
SET @tSql +=' ) AmtPay ON Shif.FTBchCode = AmtPay.FTBchCode'
            SET @tSql +=' AND Shif.FTPosCode = AmtPay.FTPosCode'
            SET @tSql +=' AND Shif.FTShfCode = AmtPay.FTShfCode'
    SET @tSql +=' LEFT JOIN'
SET @tSql +=' ('
    SET @tSql +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
            SET @tSql +=' SUM(ISNULL(KRcv.FCKbnAmt, 0)) AS FCKbnAmt'
    SET @tSql +=' FROM TPSTShiftSKeyBN KRcv'
	/*-- INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = KRcv.FTShfCode*/
	/*--WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03'' */
    SET @tSql +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
SET @tSql +=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode'
            SET @tSql +=' AND Shif.FTPosCode = KeyBank.FTPosCode'
            SET @tSql +=' AND Shif.FTShfCode = KeyBank.FTShfCode'
SET @tSql +=' LEFT JOIN'
SET @tSql +=' ('
    SET @tSql +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
			SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCash,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCredit,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtVouchers,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCoupon,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtChque,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtPromptpay,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'', ''013'', ''002'', ''008'', ''004'', ''003'') THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtOther'
    SET @tSql +=' FROM TPSTShiftSKeyRcv KRcv'
        SET @tSql +=' LEFT JOIN TFNMRcv Rcv ON KRcv.FTRcvCode = Rcv.FTRcvCode'
		/*--INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = KRcv.FTShfCode*/
		/*--WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03''*/ 
    SET @tSql +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
SET @tSql +=' ) KeyINPay ON Shif.FTBchCode = KeyINPay.FTBchCode'
                SET @tSql +=' AND Shif.FTPosCode = KeyINPay.FTPosCode'
                SET @tSql +=' AND Shif.FTShfCode = KeyINPay.FTShfCode'
SET @tSql +=' LEFT JOIN'
SET @tSql +=' ('
    SET @tSql +=' SELECT SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCash,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCredit,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayVouchers,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCoupon,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayChque,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayPromptpay,' 
            SET @tSql +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'',''013'',''002'',''008'',''004'',''003'') THEN' 
				SET @tSql +=' CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayOther'
    SET @tSql +=' FROM TPSTShiftSSumRcv SysRcv WITH(NOLOCK)'
        SET @tSql +=' LEFT JOIN TFNMRcv Rcv ON SysRcv.FTRcvCode = Rcv.FTRcvCode'
		/*INNER JOIN TPSTShiftHD ShfHD ON ShfHD.FTShfCode = SysRcv.FTShfCode*/
		/*WHERE CONVERT(VARCHAR(10),ShfHD.FDShdSaleDate,121) = ''2020-03-03'' */
    SET @tSql +=' GROUP BY SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode'
SET @tSql +=' ) SysAmtPay ON Shif.FTBchCode = SysAmtPay.FTBchCode'
              SET @tSql +=' AND Shif.FTPosCode = SysAmtPay.FTPosCode'
              SET @tSql +=' AND Shif.FTShfCode = SysAmtPay.FTShfCode'
    SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode'
                  SET @tSql +=' AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
SET @tSql +=' WHERE ISNULL(FTShdUsrClosed, '''') <> '''''
SET @tSql +=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSaleDate, 121),' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignIn, 121),' 
        SET @tSql +=' CONVERT(VARCHAR(10), FDShdSignOut, 121)'
SET @tSql +=' ) ShotOver'
	SET @tSql += @tSql1		
	SET @tSql += ' GROUP BY FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate'								
						
--= ''' + CAST(@nLngID  AS VARCHAR(10)) + '''

	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTMnyShotOverDailyDTTmp_Moshi WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH			

--SELECT * FROM TFNMBookBank
--SELECT * FROM  TFNTBnkDplHD
--SELECT * FROM  TFNTBnkDplDT
--SELECT * FROM TFNMBookBank
--SELECT * FROM TFNMBookBank_L
--SELECT * FROM TFNMBank_L
--SELECT * FROM TFNMBank
--SELECT * FROM TFNMBnkDepType
--SELECT * FROM TFNMBnkDepType_L
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverMonthlyTmp]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverMonthlyTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverMonthlyTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverMonthlyTmp]
@pnLngID      INT, 
@pnComName    VARCHAR(100), 
@ptRptCode    VARCHAR(100), 
@ptUsrSession VARCHAR(255), 
@pnFilterType INT, --1 BETWEEN 2 IN
--สาขา
@ptBchL       VARCHAR(8000), --สาขา Condition IN
@ptBchF       VARCHAR(5), 
@ptBchT       VARCHAR(5),

--Pos
@ptPosL       VARCHAR(8000), --เครื่องขาย Condition IN
@ptPosF       VARCHAR(10), 
@ptPosT       VARCHAR(10),

--Cashier
@ptUsrL       VARCHAR(8000), --Cashier Condition IN
@ptUsrF       VARCHAR(10), 
@ptUsrT       VARCHAR(10), 
--@ptDocDateF   VARCHAR(10), 
--@ptDocDateT   VARCHAR(10), 
@ptYear       VARCHAR(4), 
@ptMonth       VARCHAR(2), 
@FNResult     INT OUTPUT
AS
    --------------------------------------
    -- Watcharakorn 
	-- Edit 27/04/2020
	-- Chage Procedure  Name SP_RPTxMnyShotOverMonthlyTmp_Moshi --> SP_RPTxMnyShotOverMonthlyTmp
	-- Chang Temp Name TRPTMnyShotOverMonthlyTmp_Moshi --> TRPTMnyShotOverMonthlyTmp
    -- Create 10/07/2019
    --รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
    -- Temp name  TRPTMnyShotOverTmp_Moshi
    --------------------------------------
    BEGIN TRY
        DECLARE @nLngID INT;
        DECLARE @nComName VARCHAR(100);
        DECLARE @tRptCode VARCHAR(100);
        DECLARE @tUsrSession VARCHAR(255);
        DECLARE @tSql VARCHAR(8000);
				DECLARE @tSql2 VARCHAR(8000);
      	DECLARE @tSql3 VARCHAR(8000);
        DECLARE @tSql1 VARCHAR(MAX);

        --Branch Code
        DECLARE @tBchF VARCHAR(5);
        DECLARE @tBchT VARCHAR(5);
        --Cashier
        DECLARE @tUsrF VARCHAR(10);
        DECLARE @tUsrT VARCHAR(10);
        --Pos Code
        DECLARE @tPosF VARCHAR(20);
        DECLARE @tPosT VARCHAR(20);
        DECLARE @tDocDateF VARCHAR(10);
        DECLARE @tDocDateT VARCHAR(10);
        SET @nLngID = @pnLngID;
        SET @nComName = @pnComName;
        SET @tUsrSession = @ptUsrSession;
        SET @tRptCode = @ptRptCode;

        --Branch
        SET @tBchF = @ptBchF;
        SET @tBchT = @ptBchT;
        --Pos
        SET @tPosF = @ptPosF;
        SET @tPosT = @ptPosT;
        --Cashier
        SET @tUsrF = @ptUsrF;
        SET @tUsrT = @ptUsrT;
        --SET @tDocDateF = @ptDocDateF;
        --SET @tDocDateT = @ptDocDateT;
        SET @FNResult = 0;
        SET @tDocDateF = CONVERT(VARCHAR(10), @tDocDateF, 121);
        SET @tDocDateT = CONVERT(VARCHAR(10), @tDocDateT, 121);
        IF @nLngID = NULL
            BEGIN
                SET @nLngID = 1;
        END;
        IF @ptBchL = NULL
            BEGIN
                SET @ptBchL = '';
        END;
        IF @tBchF = NULL
            BEGIN
                SET @tBchF = '';
        END;
        IF @tBchT = NULL
           OR @tBchT = ''
            BEGIN
                SET @tBchT = @tBchF;
        END;
        IF @ptPosL = NULL
            BEGIN
                SET @ptPosL = '';
        END;
        IF @tPosF = NULL
            BEGIN
                SET @tPosF = '';
        END;
        IF @tPosT = NULL
           OR @tPosT = ''
            BEGIN
                SET @tPosT = @tPosF;
        END;
        IF @ptUsrL = NULL
            BEGIN
                SET @ptUsrL = '';
        END;
        IF @tUsrF = NULL
            BEGIN
                SET @tUsrF = '';
        END;
        IF @tUsrT = NULL
           OR @tUsrT = ''
            BEGIN
                SET @tUsrT = @tUsrF;
        END;
        IF @ptYear = NULL
            BEGIN
                SET @ptYear = '';
        END;

        IF @ptMonth = NULL
        BEGIN
                SET @ptMonth = '';
        END;

        SET @tSql1 = ' WHERE 1=1 ';
        IF @pnFilterType = '1'
            BEGIN
                IF(@tBchF <> ''
                   AND @tBchT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + '''';
                END;
                IF(@tPosF <> ''
                   AND @tPosT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + '''';
                END;
                IF(@tUsrF <> ''
                   AND @tUsrT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + '''';
                END;

                --IF (@tPosF <> '' AND @tPosT <> '')
                --BEGIN
                --	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
                --END		

        END;
        IF @pnFilterType = '2'
            BEGIN
                IF(@ptBchL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')';
                END;
                IF(@ptPosL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')';
                END;
                IF(@ptUsrL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')';
                END;

                --IF (@ptPosL <> '')
                --BEGIN
                --	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
                --END		
        END;
        IF(@ptMonth <> '')
            BEGIN
                SET @tSql1+=' AND FORMAT(ShotOver.FDShdSaleDate, ''MM'') = FORMAT(' + @ptMonth +',''00'')';
        END;

        IF(@ptYear <> '')
            BEGIN
                SET @tSql1+=' AND FORMAT(ShotOver.FDShdSaleDate, ''yyyy'') = FORMAT(' + @ptYear +',''0000'')';
        END;


        DELETE FROM TRPTMnyShotOverMonthlyTmp WITH(ROWLOCK)
        WHERE FTComName = '' + @nComName + ''
              AND FTRptCode = '' + @tRptCode + ''
              AND FTUsrSession = '' + @tUsrSession + '';


        SET @tSql = ' INSERT INTO TRPTMnyShotOverMonthlyTmp';
        SET @tSql+=' (FTComName,FTRptCode,FTUsrSession,';
        SET @tSql+=' FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql+=' FTUsrCode ,FTMonth,FTMonthNameTh,FTMonthNameEN,FTYear,FCMnyOver,FCMnyShot,';
        SET @tSql+=' FCSvnCashIn,FCSvnCashOut,FCShotOver,FTDayD1,FTDayD2,FTDayD3,FTDayD4,FTDayD5,FTDayD6,FTDayD7,FTDayD8,FTDayD9,FTDayD10,FTDayD11,FTDayD12,';
        SET @tSql+=' FTDayD13,FTDayD14,FTDayD15,FTDayD16,FTDayD17,FTDayD18,FTDayD19,FTDayD20,FTDayD21,FTDayD22,FTDayD23,';
        SET @tSql+=' FTDayD24,FTDayD25,FTDayD26,FTDayD27,FTDayD28,FTDayD29,FTDayD30,FTDayD31';
        SET @tSql+=' )';
        SET @tSql+=' SELECT ''' + @nComName + ''' AS FTComName,''' + @tRptCode + ''' AS FTRptCode, ''' + @tUsrSession + ''' AS FTUsrSession,';
        SET @tSql+=' FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql+=' FTUsrCode,FORMAT(FDShdSaleDate, ''MM'') AS FTMonth,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''th-TH'') AS FTMonthNameTh,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''en-US'') AS FTMonthNameEN,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''yyyy'') AS FTYear,';
        SET @tSql+=' SUM(CASE WHEN FCShotOver > 0 THEN FCShotOver ELSE 0 END) AS FCMnyOver,';
        SET @tSql+=' SUM(CASE WHEN FCShotOver < 0 THEN FCShotOver ELSE 0 END) AS FCMnyShot,';
        SET @tSql+=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,' 
        SET @tSql+=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'
		SET @tSql+=' SUM(ISNULL(FCShotOver,0)) AS FCShotOver,'
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''01'' THEN FCShotOver ELSE 0 END) AS FTDayD1,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''02'' THEN FCShotOver ELSE 0 END) AS FTDayD2,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''03'' THEN FCShotOver ELSE 0 END) AS FTDayD3,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''04'' THEN FCShotOver ELSE 0 END) AS FTDayD4,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''05'' THEN FCShotOver ELSE 0 END) AS FTDayD5,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''06'' THEN FCShotOver ELSE 0 END) AS FTDayD6,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''07'' THEN FCShotOver ELSE 0 END) AS FTDayD7,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''08'' THEN FCShotOver ELSE 0 END) AS FTDayD8,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''09'' THEN FCShotOver ELSE 0 END) AS FTDayD9,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''10'' THEN FCShotOver ELSE 0 END) AS FTDayD10,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''11'' THEN FCShotOver ELSE 0 END) AS FTDayD11,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''12'' THEN FCShotOver ELSE 0 END) AS FTDayD12,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''13'' THEN FCShotOver ELSE 0 END) AS FTDayD13,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''14'' THEN FCShotOver ELSE 0 END) AS FTDayD14,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''15'' THEN FCShotOver ELSE 0 END) AS FTDayD15,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''16'' THEN FCShotOver ELSE 0 END) AS FTDayD16,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''17'' THEN FCShotOver ELSE 0 END) AS FTDayD17,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''18'' THEN FCShotOver ELSE 0 END) AS FTDayD18,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''19'' THEN FCShotOver ELSE 0 END) AS FTDayD19,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''20'' THEN FCShotOver ELSE 0 END) AS FTDayD20,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''21'' THEN FCShotOver ELSE 0 END) AS FTDayD21,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''22'' THEN FCShotOver ELSE 0 END) AS FTDayD22,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''23'' THEN FCShotOver ELSE 0 END) AS FTDayD23,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''24'' THEN FCShotOver ELSE 0 END) AS FTDayD24,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''25'' THEN FCShotOver ELSE 0 END) AS FTDayD25,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''26'' THEN FCShotOver ELSE 0 END) AS FTDayD26,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''27'' THEN FCShotOver ELSE 0 END) AS FTDayD27,';
        SET @tSql2=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''28'' THEN FCShotOver ELSE 0 END) AS FTDayD28,';
        SET @tSql2+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''29'' THEN FCShotOver ELSE 0 END) AS FTDayD29,';
        SET @tSql2+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''30'' THEN FCShotOver ELSE 0 END) AS FTDayD30,';
        SET @tSql2+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''31'' THEN FCShotOver ELSE 0 END) AS FTDayD31';
        SET @tSql2+=' FROM';
        SET @tSql2+=' (SELECT Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,FDShdSaleDate AS FDShdSaleDate,CONVERT(Varchar(10),FDShdSignIn,121) AS FDShdSignIn,';
		SET @tSql2+=' CONVERT(Varchar(10),FDShdSignOut,121) AS FDShdSignOut,';
        --SET @tSql+=' SUM(ISNULL(PayAmt.FCRcvPayAmt,0) - (ISNULL(AmtPay.FCSvnAmt,0)+ISNULL(KeyBank.FCKbnAmt,0))) AS FCShotOver';
        SET @tSql2+=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,' 
        SET @tSql2+=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'
		 SET @tSql2 +=' (((SUM(ISNULL(FCKbnAmt, 0))+(SUM(ISNULL(FCKbnAmtCredit, 0)) + SUM(ISNULL(FCKbnAmtVouchers, 0)) + SUM(ISNULL(FCKbnAmtCoupon, 0)) + SUM(ISNULL(FCKbnAmtChque, 0)) + SUM(ISNULL(FCKbnAmtPromptpay, 0)) + SUM (ISNULL(FCKbnAmtOther, 0))) + SUM(ISNULL(FCSvnCashOut, 0))) - (SUM (ISNULL(FCRcvPayCash, 0)) + SUM (ISNULL(FCRcvPayCredit, 0)) + SUM (ISNULL(FCRcvPayVouchers, 0)) + SUM (ISNULL(FCRcvPayCoupon, 0)) + SUM (ISNULL(FCRcvPayChque, 0)) + SUM(ISNULL(FCRcvPayPromptpay, 0)) + SUM(ISNULL(FCRcvPayOther, 0)))) - SUM(ISNULL(FCSvnCashIn, 0))) AS FCShotOver'  
		
        SET @tSql2+=' FROM TPSTShiftHD Shif WITH (NOLOCK)';
		SET @tSql2+=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,';
                   SET @tSql2+=' SUM(CASE FTEvnCode WHEN ''001'' THEN ISNULL(FCSvnAmt,0) ELSE 0 END) AS FCSvnCashIn,'  --เงินเข้า
                   SET @tSql2+=' SUM(CASE FTEvnCode WHEN ''002'' THEN ISNULL(FCSvnAmt,0) ELSE 0 END) AS FCSvnCashOut'  --เงินออก
				   SET @tSql2+=' FROM TPSTShiftEvent WITH (NOLOCK)';
				   SET @tSql2+=' WHERE FTEvnCode IN (''001'',''002'')';
				   SET @tSql2+=' GROUP BY FTBchCode,FTPosCode,FTShfCode';
				 SET @tSql2+=' ) AmtPay ON  Shif.FTBchCode = AmtPay.FTBchCode AND Shif.FTPosCode = AmtPay.FTPosCode AND Shif.FTShfCode = AmtPay.FTShfCode';
        SET @tSql2+=' LEFT JOIN (SELECT KRcv.FTBchCode,' 
					SET @tSql2+=' KRcv.FTPosCode,' 
					SET @tSql2+=' KRcv.FTShfCode,' 
					SET @tSql2+=' SUM(ISNULL(KRcv.FCKbnAmt, 0)) AS FCKbnAmt'
					SET @tSql2+=' FROM TPSTShiftSKeyBn KRcv'
					SET @tSql2+=' GROUP BY FTBchCode, '
					SET @tSql2+=' FTPosCode,' 
					SET @tSql2+=' FTShfCode'
        SET @tSql2+=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode AND Shif.FTPosCode = KeyBank.FTPosCode AND Shif.FTShfCode = KeyBank.FTShfCode';


	      SET @tSql2 +=' LEFT JOIN'
        SET @tSql2 +=' ('
        SET @tSql2 +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
	      SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCash,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCredit,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtVouchers,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCoupon,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtChque,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtPromptpay,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'', ''013'', ''002'', ''008'', ''004'', ''003'') THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtOther'
        SET @tSql2 +=' FROM TPSTShiftSKeyRcv KRcv'
        SET @tSql2 +=' LEFT JOIN TFNMRcv Rcv ON KRcv.FTRcvCode = Rcv.FTRcvCode'
        SET @tSql2 +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
        SET @tSql2 +=' ) KeyINPay ON Shif.FTBchCode = KeyINPay.FTBchCode'
        SET @tSql2 +=' AND Shif.FTPosCode = KeyINPay.FTPosCode'
        SET @tSql2 +=' AND Shif.FTShfCode = KeyINPay.FTShfCode'

SET @tSql2 +=' LEFT JOIN'
SET @tSql2 +='('
         SET @tSql2 +=' SELECT SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCash,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCredit,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayVouchers,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCoupon,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayChque,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayPromptpay,'
             SET @tSql3 =' SUM(CASE WHEN FTFmtCode NOT IN(''001'',''013'',''002'',''008'',''004'',''003'') THEN'
				 SET @tSql3 +=' CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayOther'
    SET @tSql3 +=' FROM TPSTShiftSSumRcv SysRcv WITH(NOLOCK)'
         SET @tSql3 +=' LEFT JOIN TFNMRcv Rcv ON SysRcv.FTRcvCode = Rcv.FTRcvCode'

    SET @tSql3 +=' GROUP BY SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode'
 SET @tSql3 +=' ) SysAmtPay ON Shif.FTBchCode = SysAmtPay.FTBchCode'
               SET @tSql3 +=' AND Shif.FTPosCode = SysAmtPay.FTPosCode'
               SET @tSql3 +=' AND Shif.FTShfCode = SysAmtPay.FTShfCode'


        SET @tSql3+=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID AS VARCHAR(10)) + '''';
        SET @tSql3+=' WHERE ISNULL(FTShdUsrClosed,'''') <> ''''';
        SET @tSql3+=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,FDShdSaleDate ,CONVERT(Varchar(10),FDShdSignIn,121) ,';
        SET @tSql3+=' CONVERT(Varchar(10),FDShdSignOut,121) ';
        SET @tSql3+=' ) ShotOver';
        SET @tSql3+=@tSql1;
        SET @tSql3+=' GROUP BY FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql3+=' FTUsrCode,'
		SET @tSql3+=' FORMAT(FDShdSaleDate, ''MM''),' 
        SET @tSql3+=' FORMAT(FDShdSaleDate, ''MMMM'', ''th-TH''),' 
        SET @tSql3+=' FORMAT(FDShdSaleDate, ''MMMM'', ''en-US''),' 
        SET @tSql3+=' FORMAT(FDShdSaleDate, ''yyyy'')';
        --SET @tSql+=' ORDER BY FDShdSaleDate,FTPosCode';
        --PRINT @tSql;
        --PRINT @tSql2;
				--PRINT @tSql3;

        EXECUTE (@tSql+@tSql2+@tSql3);
        RETURN SELECT *
               FROM TRPTMnyShotOverMonthlyTmp_Moshi
               WHERE FTComName = '' + @nComName + ''
                     AND FTRptCode = '' + @tRptCode + ''
                     AND FTUsrSession = '' + @tUsrSession + '';
    END TRY
    BEGIN CATCH
        SET @FNResult = -1;
        --PRINT @tSql
    END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverMonthlyTmp_Moshi]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverMonthlyTmp_Moshi]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverMonthlyTmp_Moshi] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverMonthlyTmp_Moshi] 
@pnLngID      INT, 
@pnComName    VARCHAR(100), 
@ptRptCode    VARCHAR(100), 
@ptUsrSession VARCHAR(255), 
@pnFilterType INT, --1 BETWEEN 2 IN
--สาขา
@ptBchL       VARCHAR(8000), --สาขา Condition IN
@ptBchF       VARCHAR(5), 
@ptBchT       VARCHAR(5),

--Pos
@ptPosL       VARCHAR(8000), --เครื่องขาย Condition IN
@ptPosF       VARCHAR(10), 
@ptPosT       VARCHAR(10),

--Cashier
@ptUsrL       VARCHAR(8000), --Cashier Condition IN
@ptUsrF       VARCHAR(10), 
@ptUsrT       VARCHAR(10), 
--@ptDocDateF   VARCHAR(10), 
--@ptDocDateT   VARCHAR(10), 
@ptYear       VARCHAR(4), 
@ptMonth       VARCHAR(2), 
@FNResult     INT OUTPUT
AS
    --------------------------------------
    -- Watcharakorn 
	-- Edit 27/04/2020
	-- Chage Procedure  Name SP_RPTxMnyShotOverMonthlyTmp_Moshi --> SP_RPTxMnyShotOverMonthlyTmp
	-- Chang Temp Name TRPTMnyShotOverMonthlyTmp_Moshi --> TRPTMnyShotOverMonthlyTmp
    -- Create 10/07/2019
    --รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
    -- Temp name  TRPTMnyShotOverTmp_Moshi
    --------------------------------------
    BEGIN TRY
        DECLARE @nLngID INT;
        DECLARE @nComName VARCHAR(100);
        DECLARE @tRptCode VARCHAR(100);
        DECLARE @tUsrSession VARCHAR(255);
        DECLARE @tSql VARCHAR(8000);
        DECLARE @tSql1 VARCHAR(MAX);

        --Branch Code
        DECLARE @tBchF VARCHAR(5);
        DECLARE @tBchT VARCHAR(5);
        --Cashier
        DECLARE @tUsrF VARCHAR(10);
        DECLARE @tUsrT VARCHAR(10);
        --Pos Code
        DECLARE @tPosF VARCHAR(20);
        DECLARE @tPosT VARCHAR(20);
        DECLARE @tDocDateF VARCHAR(10);
        DECLARE @tDocDateT VARCHAR(10);
        SET @nLngID = @pnLngID;
        SET @nComName = @pnComName;
        SET @tUsrSession = @ptUsrSession;
        SET @tRptCode = @ptRptCode;

        --Branch
        SET @tBchF = @ptBchF;
        SET @tBchT = @ptBchT;
        --Pos
        SET @tPosF = @ptPosF;
        SET @tPosT = @ptPosT;
        --Cashier
        SET @tUsrF = @ptUsrF;
        SET @tUsrT = @ptUsrT;
        --SET @tDocDateF = @ptDocDateF;
        --SET @tDocDateT = @ptDocDateT;
        SET @FNResult = 0;
        SET @tDocDateF = CONVERT(VARCHAR(10), @tDocDateF, 121);
        SET @tDocDateT = CONVERT(VARCHAR(10), @tDocDateT, 121);
        IF @nLngID = NULL
            BEGIN
                SET @nLngID = 1;
        END;
        IF @ptBchL = NULL
            BEGIN
                SET @ptBchL = '';
        END;
        IF @tBchF = NULL
            BEGIN
                SET @tBchF = '';
        END;
        IF @tBchT = NULL
           OR @tBchT = ''
            BEGIN
                SET @tBchT = @tBchF;
        END;
        IF @ptPosL = NULL
            BEGIN
                SET @ptPosL = '';
        END;
        IF @tPosF = NULL
            BEGIN
                SET @tPosF = '';
        END;
        IF @tPosT = NULL
           OR @tPosT = ''
            BEGIN
                SET @tPosT = @tPosF;
        END;
        IF @ptUsrL = NULL
            BEGIN
                SET @ptUsrL = '';
        END;
        IF @tUsrF = NULL
            BEGIN
                SET @tUsrF = '';
        END;
        IF @tUsrT = NULL
           OR @tUsrT = ''
            BEGIN
                SET @tUsrT = @tUsrF;
        END;
        IF @ptYear = NULL
            BEGIN
                SET @ptYear = '';
        END;

        IF @ptMonth = NULL
        BEGIN
                SET @ptMonth = '';
        END;

        SET @tSql1 = ' WHERE 1=1 ';
        IF @pnFilterType = '1'
            BEGIN
                IF(@tBchF <> ''
                   AND @tBchT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + '''';
                END;
                IF(@tPosF <> ''
                   AND @tPosT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + '''';
                END;
                IF(@tUsrF <> ''
                   AND @tUsrT <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + '''';
                END;

                --IF (@tPosF <> '' AND @tPosT <> '')
                --BEGIN
                --	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
                --END		

        END;
        IF @pnFilterType = '2'
            BEGIN
                IF(@ptBchL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')';
                END;
                IF(@ptPosL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')';
                END;
                IF(@ptUsrL <> '')
                    BEGIN
                        SET @tSql1+=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')';
                END;

                --IF (@ptPosL <> '')
                --BEGIN
                --	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
                --END		
        END;
        IF(@ptMonth <> '')
            BEGIN
                SET @tSql1+=' AND FORMAT(ShotOver.FDShdSaleDate, ''MM'') = FORMAT(' + @ptMonth +',''00'')';
        END;

        IF(@ptYear <> '')
            BEGIN
                SET @tSql1+=' AND FORMAT(ShotOver.FDShdSaleDate, ''yyyy'') = FORMAT(' + @ptYear +',''0000'')';
        END;


        DELETE FROM TRPTMnyShotOverMonthlyTmp_Moshi WITH(ROWLOCK)
        WHERE FTComName = '' + @nComName + ''
              AND FTRptCode = '' + @tRptCode + ''
              AND FTUsrSession = '' + @tUsrSession + '';--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp


        SET @tSql = ' INSERT INTO TRPTMnyShotOverMonthlyTmp_Moshi';
        SET @tSql+=' (FTComName,FTRptCode,FTUsrSession,';
        SET @tSql+=' FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql+=' FTUsrCode ,FTMonth,FTMonthNameTh,FTMonthNameEN,FTYear,FCMnyOver,FCMnyShot,';
        SET @tSql+=' FCSvnCashIn,FCSvnCashOut,FCShotOver,FTDayD1,FTDayD2,FTDayD3,FTDayD4,FTDayD5,FTDayD6,FTDayD7,FTDayD8,FTDayD9,FTDayD10,FTDayD11,FTDayD12,';
        SET @tSql+=' FTDayD13,FTDayD14,FTDayD15,FTDayD16,FTDayD17,FTDayD18,FTDayD19,FTDayD20,FTDayD21,FTDayD22,FTDayD23,';
        SET @tSql+=' FTDayD24,FTDayD25,FTDayD26,FTDayD27,FTDayD28,FTDayD29,FTDayD30,FTDayD31';
        SET @tSql+=' )';
        SET @tSql+=' SELECT ''' + @nComName + ''' AS FTComName,''' + @tRptCode + ''' AS FTRptCode, ''' + @tUsrSession + ''' AS FTUsrSession,';
        SET @tSql+=' FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql+=' FTUsrCode,FORMAT(FDShdSaleDate, ''MM'') AS FTMonth,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''th-TH'') AS FTMonthNameTh,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''en-US'') AS FTMonthNameEN,';
		SET @tSql+=' FORMAT(FDShdSaleDate, ''yyyy'') AS FTYear,';
        SET @tSql+=' CASE WHEN SUM(ISNULL(FCShotOver,0)) > 0 THEN SUM(ISNULL(FCShotOver,0)) ELSE 0 END AS FCMnyOver,';
        SET @tSql+=' CASE WHEN SUM(ISNULL(FCShotOver,0)) < 0 THEN SUM(ISNULL(FCShotOver,0)) ELSE 0 END AS FCMnyShot,';
        SET @tSql+=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,' 
        SET @tSql+=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'
		SET @tSql+=' SUM(ISNULL(FCShotOver,0)) AS FCShotOver,'
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''01'' THEN FCShotOver ELSE 0 END) AS FTDayD1,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''02'' THEN FCShotOver ELSE 0 END) AS FTDayD2,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''03'' THEN FCShotOver ELSE 0 END) AS FTDayD3,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''04'' THEN FCShotOver ELSE 0 END) AS FTDayD4,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''05'' THEN FCShotOver ELSE 0 END) AS FTDayD5,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''06'' THEN FCShotOver ELSE 0 END) AS FTDayD6,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''07'' THEN FCShotOver ELSE 0 END) AS FTDayD7,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''08'' THEN FCShotOver ELSE 0 END) AS FTDayD8,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''09'' THEN FCShotOver ELSE 0 END) AS FTDayD9,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''10'' THEN FCShotOver ELSE 0 END) AS FTDayD10,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''11'' THEN FCShotOver ELSE 0 END) AS FTDayD11,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''12'' THEN FCShotOver ELSE 0 END) AS FTDayD12,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''13'' THEN FCShotOver ELSE 0 END) AS FTDayD13,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''14'' THEN FCShotOver ELSE 0 END) AS FTDayD14,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''15'' THEN FCShotOver ELSE 0 END) AS FTDayD15,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''16'' THEN FCShotOver ELSE 0 END) AS FTDayD16,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''17'' THEN FCShotOver ELSE 0 END) AS FTDayD17,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''18'' THEN FCShotOver ELSE 0 END) AS FTDayD18,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''19'' THEN FCShotOver ELSE 0 END) AS FTDayD19,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''20'' THEN FCShotOver ELSE 0 END) AS FTDayD20,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''21'' THEN FCShotOver ELSE 0 END) AS FTDayD21,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''22'' THEN FCShotOver ELSE 0 END) AS FTDayD22,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''23'' THEN FCShotOver ELSE 0 END) AS FTDayD23,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''24'' THEN FCShotOver ELSE 0 END) AS FTDayD24,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''25'' THEN FCShotOver ELSE 0 END) AS FTDayD25,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''26'' THEN FCShotOver ELSE 0 END) AS FTDayD26,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''27'' THEN FCShotOver ELSE 0 END) AS FTDayD27,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''28'' THEN FCShotOver ELSE 0 END) AS FTDayD28,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''29'' THEN FCShotOver ELSE 0 END) AS FTDayD29,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''30'' THEN FCShotOver ELSE 0 END) AS FTDayD30,';
        SET @tSql+=' SUM(CASE WHEN RIGHT(CONVERT(char(10), FDShdSaleDate,121),2) = ''31'' THEN FCShotOver ELSE 0 END) AS FTDayD31';
        SET @tSql+=' FROM';
        SET @tSql+=' (SELECT Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,FDShdSaleDate AS FDShdSaleDate,CONVERT(Varchar(10),FDShdSignIn,121) AS FDShdSignIn,';
		SET @tSql+=' CONVERT(Varchar(10),FDShdSignOut,121) AS FDShdSignOut,';
        --SET @tSql+=' SUM(ISNULL(PayAmt.FCRcvPayAmt,0) - (ISNULL(AmtPay.FCSvnAmt,0)+ISNULL(KeyBank.FCKbnAmt,0))) AS FCShotOver';
        SET @tSql+=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn,' 
        SET @tSql+=' SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut,'
		SET @tSql+=' SUM(ISNULL(KeyBank.FCKbnAmt, 0)) - SUM(ISNULL(PayAmt.FCRcvPayAmt, 0)) AS FCShotOver'
        SET @tSql+=' FROM TPSTShiftHD Shif WITH (NOLOCK)';
		SET @tSql+=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,';
                   SET @tSql+=' SUM(CASE FTEvnCode WHEN ''001'' THEN ISNULL(FCSvnAmt,0) ELSE 0 END) AS FCSvnCashIn,'  --เงินเข้า
                   SET @tSql+=' SUM(CASE FTEvnCode WHEN ''002'' THEN ISNULL(FCSvnAmt,0) ELSE 0 END) AS FCSvnCashOut'  --เงินออก
				   SET @tSql+=' FROM TPSTShiftEvent WITH (NOLOCK)';
				   SET @tSql+=' WHERE FTEvnCode IN (''001'',''002'')';
				   SET @tSql+=' GROUP BY FTBchCode,FTPosCode,FTShfCode';
				 SET @tSql+=' ) AmtPay ON  Shif.FTBchCode = AmtPay.FTBchCode AND Shif.FTPosCode = AmtPay.FTPosCode AND Shif.FTShfCode = AmtPay.FTShfCode';
        SET @tSql+=' LEFT JOIN (SELECT KRcv.FTBchCode,' 
					SET @tSql+=' KRcv.FTPosCode,' 
					SET @tSql+=' KRcv.FTShfCode,' 
					SET @tSql+=' SUM(ISNULL(KRcv.FCKbnAmt, 0)) AS FCKbnAmt'
					SET @tSql+=' FROM TPSTShiftSKeyBn KRcv'
					SET @tSql+=' GROUP BY FTBchCode, '
					SET @tSql+=' FTPosCode,' 
					SET @tSql+=' FTShfCode'
        SET @tSql+=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode AND Shif.FTPosCode = KeyBank.FTPosCode AND Shif.FTShfCode = KeyBank.FTShfCode';
        SET @tSql+=' LEFT JOIN (SELECT ShfRcv.FTBchCode,ShfRcv.FTPosCode,ShfRcv.FTShfCode,'; --Pay Form System
				   SET @tSql+=' SUM(CASE FTRcvDocType';
				   SET @tSql+=' WHEN ''1'' THEN ISNULL(FCRcvPayAmt,0)';
				   SET @tSql+=' WHEN ''9'' THEN ISNULL(FCRcvPayAmt,0)*-1';
				   SET @tSql+=' END';
					  SET @tSql+=' ) AS FCRcvPayAmt';
				   SET @tSql+=' FROM TPSTShiftSSumRcv ShfRcv WITH (NOLOCK)'
				   SET @tSql+=' INNER JOIN TFNMRcv Rcv WITH(NOLOCK) ON ShfRcv.FTRcvCode = Rcv.FTRcvCode' 
				   SET @tSql+=' WHERE FTFmtCode = ''001'''
				   SET @tSql+=' GROUP BY ShfRcv.FTBchCode,ShfRcv.FTPosCode,ShfRcv.FTShfCode'
				 SET @tSql+=' )  PayAmt ON Shif.FTBchCode = PayAmt.FTBchCode AND Shif.FTPosCode = PayAmt.FTPosCode AND Shif.FTShfCode = PayAmt.FTShfCode';
        SET @tSql+=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID AS VARCHAR(10)) + '''';
        SET @tSql+=' WHERE ISNULL(FTShdUsrClosed,'''') <> ''''';
        SET @tSql+=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,FDShdSaleDate ,CONVERT(Varchar(10),FDShdSignIn,121) ,';
        SET @tSql+=' CONVERT(Varchar(10),FDShdSignOut,121) ';
        SET @tSql+=' ) ShotOver';
        SET @tSql+=@tSql1;
        SET @tSql+=' GROUP BY FTBchCode,FTBchName,'--FTPosCode,
		SET @tSql+=' FTUsrCode,'
		SET @tSql+=' FORMAT(FDShdSaleDate, ''MM''),' 
        SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''th-TH''),' 
        SET @tSql+=' FORMAT(FDShdSaleDate, ''MMMM'', ''en-US''),' 
        SET @tSql+=' FORMAT(FDShdSaleDate, ''yyyy'')';
        --SET @tSql+=' ORDER BY FDShdSaleDate,FTPosCode';
        PRINT @tSql;
        EXECUTE (@tSql);
        RETURN SELECT *
               FROM TRPTMnyShotOverMonthlyTmp_Moshi
               WHERE FTComName = '' + @nComName + ''
                     AND FTRptCode = '' + @tRptCode + ''
                     AND FTUsrSession = '' + @tUsrSession + '';
    END TRY
    BEGIN CATCH
        SET @FNResult = -1;
        --PRINT @tSql
    END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverTmp]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp]
--ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
--Last Update 07/06/2020
-- Create 10/07/2019
--รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
-- Temp name  TRPTMnyShotOverTmp

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),ShotOver.FDShdSaleDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTMnyShotOverTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 

    SET @tSql = ' INSERT INTO TRPTMnyShotOverTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode ,FDShdSaleDate,FCMnyOver,FCMnyShot,FCSvnCashIn,FCSvnCashOut'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver > 0 THEN FCShotOver ELSE 0 END) AS FCMnyOver,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver < 0 THEN FCShotOver ELSE 0 END) AS FCMnyShot,'
	 --2020-04-23 Add CashIN, CashOut
	SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn ,SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,CONVERT(Varchar(10),FDShdSaleDate,121) AS FDShdSaleDate,CONVERT(Varchar(10),FDShdSignIn,121) AS FDShdSignIn,'
		 SET @tSql +=' CONVERT(Varchar(10),FDShdSignOut,121) AS FDShdSignOut,'
		 --SET @tSql +=' SUM(ISNULL(KeyBank.FCKbnAmt, 0) - ISNULL(PayAmt.FCRcvPayAmt, 0)) AS FCShotOver,'
    SET @tSql +=' (((SUM(ISNULL(FCKbnAmt, 0))+(SUM(ISNULL(FCKbnAmtCredit, 0)) + SUM(ISNULL(FCKbnAmtVouchers, 0)) + SUM(ISNULL(FCKbnAmtCoupon, 0)) + SUM(ISNULL(FCKbnAmtChque, 0)) + SUM(ISNULL(FCKbnAmtPromptpay, 0)) + SUM (ISNULL(FCKbnAmtOther, 0))) + SUM(ISNULL(FCSvnCashOut, 0))) - (SUM (ISNULL(FCRcvPayCash, 0)) + SUM (ISNULL(FCRcvPayCredit, 0)) + SUM (ISNULL(FCRcvPayVouchers, 0)) + SUM (ISNULL(FCRcvPayCoupon, 0)) + SUM (ISNULL(FCRcvPayChque, 0)) + SUM(ISNULL(FCRcvPayPromptpay, 0)) + SUM(ISNULL(FCRcvPayOther, 0)))) - SUM(ISNULL(FCSvnCashIn, 0))) AS FCShotOver,'  
		 --2020-04-23 Add CashIN, CashOut
		 SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn ,SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut'
		 SET @tSql +=' FROM TPSTShiftHD Shif WITH (NOLOCK)'
 			SET @tSql +=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,' --Money IN, OUT
                        SET @tSql +=' SUM(CASE FTEvnCode WHEN ''001'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashIn,'  --เงินเข้า
                        SET @tSql +=' SUM(CASE FTEvnCode WHEN ''002'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashOut'  --เงินออก
						SET @tSql +=' FROM TPSTShiftEvent WITH (NOLOCK)'
						SET @tSql +=' WHERE FTEvnCode IN (''001'',''002'')'
						SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
    				  SET @tSql +=' ) AmtPay ON  Shif.FTBchCode = AmtPay.FTBchCode AND Shif.FTPosCode = AmtPay.FTPosCode AND Shif.FTShfCode = AmtPay.FTShfCode'
			SET @tSql +=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,' --Key Sub 
					   SET @tSql +=' SUM(ISNULL(FCKbnAmt,0)) AS FCKbnAmt'
					   SET @tSql +=' FROM TPSTShiftSKeyBN WITH (NOLOCK)'
					   SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
					  SET @tSql +=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode AND Shif.FTPosCode = KeyBank.FTPosCode AND Shif.FTShfCode = KeyBank.FTShfCode'
						
	      SET @tSql2 =' LEFT JOIN'
        SET @tSql2 +=' ('
        SET @tSql2 +=' SELECT KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode,'
	      SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCash,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCredit,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtVouchers,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtCoupon,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtChque,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtPromptpay,'
        SET @tSql2 +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'', ''013'', ''002'', ''008'', ''004'', ''003'') THEN ISNULL(KRcv.FCRcvPayAmt, 0) ELSE 0 END) AS FCKbnAmtOther'
        SET @tSql2 +=' FROM TPSTShiftSKeyRcv KRcv'
        SET @tSql2 +=' LEFT JOIN TFNMRcv Rcv ON KRcv.FTRcvCode = Rcv.FTRcvCode'
        SET @tSql2 +=' GROUP BY KRcv.FTBchCode,KRcv.FTPosCode,KRcv.FTShfCode'
        SET @tSql2 +=' ) KeyINPay ON Shif.FTBchCode = KeyINPay.FTBchCode'
        SET @tSql2 +=' AND Shif.FTPosCode = KeyINPay.FTPosCode'
        SET @tSql2 +=' AND Shif.FTShfCode = KeyINPay.FTShfCode'

SET @tSql2 +=' LEFT JOIN'
SET @tSql2 +='('
         SET @tSql2 +=' SELECT SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''001'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCash,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''002'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCredit,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''008'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayVouchers,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''004'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayCoupon,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''003'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayChque,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode = ''013'' THEN CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayPromptpay,'
             SET @tSql2 +=' SUM(CASE WHEN FTFmtCode NOT IN(''001'',''013'',''002'',''008'',''004'',''003'') THEN'
				 SET @tSql2 +=' CASE FTRcvDocType WHEN ''1'' THEN FCRcvPayAmt WHEN ''9'' THEN FCRcvPayAmt * -1 END ELSE 0 END) AS FCRcvPayOther'
    SET @tSql2 +=' FROM TPSTShiftSSumRcv SysRcv WITH(NOLOCK)'
         SET @tSql2 +=' LEFT JOIN TFNMRcv Rcv ON SysRcv.FTRcvCode = Rcv.FTRcvCode'

    SET @tSql2 +=' GROUP BY SysRcv.FTBchCode,SysRcv.FTPosCode,SysRcv.FTShfCode'
 SET @tSql2 +=' ) SysAmtPay ON Shif.FTBchCode = SysAmtPay.FTBchCode'
               SET @tSql2 +=' AND Shif.FTPosCode = SysAmtPay.FTPosCode'
               SET @tSql2 +=' AND Shif.FTShfCode = SysAmtPay.FTShfCode'

 		 SET @tSql2 +=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
		 SET @tSql2 +=' WHERE ISNULL(FTShdUsrClosed,'''') <> '''''
		 SET @tSql2 +=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,CONVERT(Varchar(10),FDShdSaleDate,121) ,CONVERT(Varchar(10),FDShdSignIn,121) ,'
		 SET @tSql2 +=' CONVERT(Varchar(10),FDShdSignOut,121) '
		SET @tSql2 +=' ) ShotOver'
	SET @tSql2 += @tSql1		
	SET @tSql2 +=' GROUP BY FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate'
	SET @tSql2 +=' ORDER BY FDShdSaleDate,FTPosCode'

	--PRINT @tSql
--PRINT @tSql2
	EXECUTE(@tSql+@tSql2)
	RETURN SELECT * FROM TRPTMnyShotOverTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1

END CATCH			



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxMnyShotOverTmp_Moshi]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxMnyShotOverTmp_Moshi]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi]
--ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
--รายงาน - ยอดเงินขาด/เงินเกิน ของแคชเชียรฺ์
-- Temp name  TRPTMnyShotOverTmp_Moshi

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND ShotOver.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),ShotOver.FDShdSaleDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTMnyShotOverTmp_Moshi WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 

    SET @tSql = ' INSERT INTO TRPTMnyShotOverTmp_Moshi'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode ,FDShdSaleDate,FCMnyOver,FCMnyShot,FCSvnCashIn,FCSvnCashOut'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver > 0 THEN FCShotOver ELSE 0 END) AS FCMnyOver,'
	SET @tSql +=' SUM(CASE WHEN FCShotOver < 0 THEN FCShotOver ELSE 0 END) AS FCMnyShot,'
	 --2020-04-23 Add CashIN, CashOut
	SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn ,SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,CONVERT(Varchar(10),FDShdSaleDate,121) AS FDShdSaleDate,CONVERT(Varchar(10),FDShdSignIn,121) AS FDShdSignIn,'
		 SET @tSql +=' CONVERT(Varchar(10),FDShdSignOut,121) AS FDShdSignOut,'
		 SET @tSql +=' SUM(ISNULL(KeyBank.FCKbnAmt, 0) - ISNULL(PayAmt.FCRcvPayAmt, 0)) AS FCShotOver,'
		 --2020-04-23 Add CashIN, CashOut
		 SET @tSql +=' SUM(ISNULL(FCSvnCashIn,0)) AS FCSvnCashIn ,SUM(ISNULL(FCSvnCashOut,0)) AS FCSvnCashOut'
		 SET @tSql +=' FROM TPSTShiftHD Shif WITH (NOLOCK)'
 			SET @tSql +=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,' --Money IN, OUT
                        SET @tSql +=' SUM(CASE FTEvnCode WHEN ''001'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashIn,'  --เงินเข้า
                        SET @tSql +=' SUM(CASE FTEvnCode WHEN ''002'' THEN FCSvnAmt ELSE 0 END) AS FCSvnCashOut'  --เงินออก
						SET @tSql +=' FROM TPSTShiftEvent WITH (NOLOCK)'
						SET @tSql +=' WHERE FTEvnCode IN (''001'',''002'')'
						SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
    				  SET @tSql +=' ) AmtPay ON  Shif.FTBchCode = AmtPay.FTBchCode AND Shif.FTPosCode = AmtPay.FTPosCode AND Shif.FTShfCode = AmtPay.FTShfCode'
			SET @tSql +=' LEFT JOIN (SELECT FTBchCode,FTPosCode,FTShfCode,' --Key Sub 
					   SET @tSql +=' SUM(ISNULL(FCKbnAmt,0)) AS FCKbnAmt'
					   SET @tSql +=' FROM TPSTShiftSKeyBN WITH (NOLOCK)'
					   SET @tSql +=' GROUP BY FTBchCode,FTPosCode,FTShfCode'
					  SET @tSql +=' ) KeyBank ON Shif.FTBchCode = KeyBank.FTBchCode AND Shif.FTPosCode = KeyBank.FTPosCode AND Shif.FTShfCode = KeyBank.FTShfCode'
			SET @tSql +=' LEFT JOIN (SELECT Shf.FTBchCode,Shf.FTPosCode,Shf.FTShfCode,' --Pay Form System
					   SET @tSql +=' SUM(CASE Shf.FTRcvDocType'
						   SET @tSql +=' WHEN ''1'' THEN Shf.FCRcvPayAmt'
						   SET @tSql +=' WHEN ''9'' THEN Shf.FCRcvPayAmt*-1'
						   SET @tSql +=' END'
						  SET @tSql +=' ) AS FCRcvPayAmt'
					   SET @tSql +=' FROM TPSTShiftSSumRcv Shf WITH (NOLOCK)'
					   --2020-04-23 ตรวจสอบเฉพาะเงินสด
					   SET @tSql +=' INNER JOIN TFNMRcv Rcv WITH(NOLOCK) ON Shf.FTRcvCode = Rcv.FTRcvCode' 
					   SET @tSql +=' WHERE Rcv.FTFmtCode = ''001'''
					   SET @tSql +=' GROUP BY Shf.FTBchCode,Shf.FTPosCode,Shf.FTShfCode'
					  SET @tSql +=' )  PayAmt ON Shif.FTBchCode = PayAmt.FTBchCode AND Shif.FTPosCode = PayAmt.FTPosCode AND Shif.FTShfCode = PayAmt.FTShfCode'
 		 SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH (NOLOCK) ON Shif.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
		 SET @tSql +=' WHERE ISNULL(FTShdUsrClosed,'''') <> '''''
		 SET @tSql +=' GROUP BY Shif.FTBchCode,Bch_L.FTBchName,Shif.FTPosCode,FTUsrCode,CONVERT(Varchar(10),FDShdSaleDate,121) ,CONVERT(Varchar(10),FDShdSignIn,121) ,'
		 SET @tSql +=' CONVERT(Varchar(10),FDShdSignOut,121) '
		SET @tSql +=' ) ShotOver'
	SET @tSql += @tSql1		
	SET @tSql +=' GROUP BY FTBchCode,FTBchName,FTPosCode,FTUsrCode,FDShdSaleDate'
	SET @tSql +=' ORDER BY FDShdSaleDate,FTPosCode'

	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTMnyShotOverTmp_Moshi WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1

END CATCH			

--SELECT * FROM TFNMBookBank
--SELECT * FROM  TFNTBnkDplHD
--SELECT * FROM  TFNTBnkDplDT
--SELECT * FROM TFNMBookBank
--SELECT * FROM TFNMBookBank_L
--SELECT * FROM TFNMBank_L
--SELECT * FROM TFNMBank
--SELECT * FROM TFNMBnkDepType
--SELECT * FROM TFNMBnkDepType_L
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxOpenLockerHisAdmin003001002]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxOpenLockerHisAdmin003001002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxOpenLockerHisAdmin003001002] AS' 
END
GO
-- =============================================
-- StoreName: SP_RPTxOpenLockerHisAdmin003001002 (รายงาน-การจองช่องฝากของ)
-- Create date: 03/12/2019 Wasin(Yoshi)
-- Description:	ดึงข้อมูลและเพิ่มข้อมูลลงตาราง TRPTRTOpenLockerHisAdminTmp
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxOpenLockerHisAdmin003001002] 
	-- Input Parameter
	@pnLngID int,
	@ptComName varchar(100),
	@ptRptCode varchar(100),
	@ptUsrSession varchar(100),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF varchar(5),
	--@ptBchT varchar(5),
	--@ptShpF varchar(5),
	--@ptShpT varchar(5),
	--@ptPosF varchar(5),
	--@ptPosT varchar(5),
	@ptDateF varchar(10),
	@ptDateT varchar(10),
	-- Output Parameter
	@FNResult INT OUTPUT
AS
BEGIN TRY
	-- Declare Parameter
	DECLARE @nLngID int 
	DECLARE @tComName varchar(100)
	DECLARE @tRptCode varchar(100)
	DECLARE @tUsrSession varchar(100)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF varchar(5)
	--DECLARE @tBchT varchar(5)
	--DECLARE @tShpF varchar(5)
	--DECLARE @tShpT varchar(5)
	--DECLARE @tPosF varchar(5)
	--DECLARE @tPosT varchar(5)
	DECLARE @tDateF varchar(10)
	DECLARE @tDateT varchar(10)
	DECLARE @tSql varchar(8000)
	DECLARE @tWhereFilter varchar(8000)

	-- Set Parameter
	SET @nLngID			= @pnLngID
	SET @tComName		= @ptComName
	SET @tRptCode		= @ptRptCode
	SET @tUsrSession	= @ptUsrSession

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF			= @ptBchF
	--SET @tBchT			= @ptBchT
	--SET @tShpF			= @ptShpF
	--SET @tShpT			= @ptShpT
	--SET @tPosF			= @ptPosF
	--SET @tPosT			= @ptPosT
	SET @tDateF			= @ptDateF
	SET @tDateT			= @ptDateT

	-- Check Lang ID
	IF @nLngID = ''
	BEGIN
		SET @nLngID = 1
	END

	-- Set ค่าให้ Parameter กรณี Parameter เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	-- Check Null Date
	IF @tDateF = null
	BEGIN
		SET @tDateF = ''
	END
	IF @tDateT = null OR @tDateT =''
	BEGIN
		SET @tDateT = @tDateF
	END

	-- Check Where Filter
	SET @tWhereFilter	= ' WHERE 1=1'


	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tWhereFilter +=' AND HIS.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tWhereFilter +=' AND Shp_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tWhereFilter +=' AND HIS.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tWhereFilter += ' AND HIS.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND HIS.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND Shp_F.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tWhereFilter +=' AND HIS.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tWhereFilter += ' AND HIS.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	---- Check Brach Where Filter
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((HIS.FTBchCode BETWEEN '''+@tBchF+''' AND '''+@tBchT+''') OR (HIS.FTBchCode BETWEEN '''+@tBchT+''' AND '''+@tBchF+'''))'
	--END

	---- Check Shop Where Filter
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((HIS.FTShpCode BETWEEN '''+@tShpF+''' AND '''+@tShpT+''') OR (HIS.FTShpCode BETWEEN '''+@tShpT+''' AND '''+@tShpF+'''))'
	--END

	---- Check Pos Where Filter
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN
	--	SET @tWhereFilter	+= ' AND ((HIS.FTPosCode BETWEEN '''+@tPosF+''' AND '''+@tPosT+''') OR (HIS.FTPosCode BETWEEN '''+@tPosT+''' AND '''+@tPosF+'''))'
	--END

	-- Check Date Where Filter
	IF (@tDateF <> '' AND @tDateT <> '')
	BEGIN
		SET @tWhereFilter	+= ' AND ((CONVERT(VARCHAR(10),HIS.FDHisDateTime,121) BETWEEN '''+@tDateF+''' AND '''+@tDateT+''') OR (CONVERT(VARCHAR(10),HIS.FDHisDateTime,121) BETWEEN '''+@tDateT+''' AND '''+@tDateF+'''))'
	END

	-- Delete Data In Temp
	DELETE FROM TRPTRTOpenLockerHisAdminTmp WHERE FTComName = ''+@tComName+'' AND FTRptCode = ''+@tRptCode+''

	-- INSERT INTO TRPTRTOpenLockerHisAdminTmp
	SET @tSql	 = ' INSERT INTO TRPTRTOpenLockerHisAdminTmp (FTComName,FTRptCode,FTUsrSession,FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FDHisDate,FTHisTime,FNHisLayNo,FTRsnCode,FTRsnName,FTUsrCode,FTUsrName)'
	SET @tSql	+= ' SELECT '''+@tComName+''' AS FTComName,'''+@tRptCode+''' AS FTRptCode,'''+@tUsrSession+''' AS FTUsrSession,'
	SET @tSql	+= ' HIS.FTBchCode,BCH.FTBchName,HIS.FTShpCode,SHP.FTShpName,HIS.FTPosCode,CONVERT(VARCHAR(10),HIS.FDHisDateTime,121) AS FDHisDate,SUBSTRING(CONVERT(VARCHAR(19),HIS.FDHisDateTime,121),11,6) AS FDHisDate,'
	SET @tSql	+= ' HIS.FNHisLayNo,HIS.FTHisRsnCode,RSN.FTRsnName,USR.FTUsrCode,USR.FTUsrName'
	SET @tSql	+= ' FROM TRTTAdminHis HIS WITH (NOLOCK)'
	SET @tSql	+= ' LEFT JOIN  TCNMRsn_L RSN WITH (NOLOCK) ON HIS.FTHisRsnCode = RSN.FTRsnCode AND RSN.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+= ' LEFT JOIN  TCNMUser_L USR WITH (NOLOCK)  ON HIS.FTHisUsrCode = USR.FTUsrCode AND USR.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+= ' LEFT JOIN  TCNMBranch_L BCH WITH (NOLOCK) ON  HIS.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql	+= ' LEFT JOIN  TCNMShop_L SHP WITH (NOLOCK) ON HIS.FTShpCode = SHP.FTShpCode AND SHP.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
	SET @tSql   += ' LEFT JOIN  TCNMShop Shp_F WITH (NOLOCK) ON HIS.FTBchCode = Shp_F.FTBchCode AND HIS.FTShpCode = Shp_F.FTShpCode '
	PRINT @tWhereFilter
	SET @tSql	+= @tWhereFilter
	PRINT @tSql
	-- Execute Sql 
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTRTOpenLockerHisAdminTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''

END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPaymentDET1001005]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPaymentDET1001005]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPaymentDET1001005] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPaymentDET1001005]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@ptRcvF Varchar(5),
	@ptRcvT Varchar(5),
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1001005'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1001005'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tRcvF = @ptRcvF
	SET @tRcvT = @ptRcvT

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tShpF = null
	--BEGIN
	--	SET @tShpF = ''
	--END 
	--IF @tShpT = null OR @tShpT =''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END 

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' '

	SET @tSql2 =   ' WHERE 1=1 '

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSql2 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''

		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSql2 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSql2 +=' AND CONVERT(VARCHAR(10),HD.FDShdSaleDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalRCTmp  WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	--09/04/2020 เคลียร์ สถานะ การส่งเงิน
	DELETE FROM TRPTSalShiftTmp WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	--Sale
	SET @tSql  = ' INSERT INTO TRPTSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FNXshDocType,FTRcvCode,FTFmtCode, FTXrcRefNo1,FTBnkName,FTShpCode,FDXrcRefDate,FCXrcNet,FTBnkCode,FTXshDocNo,FTRcvName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' 1 As FNAppType,HD.FNXshDocType,RC.FTRcvCode,Rcv.FTFmtCode, RC.FTXrcRefNo1,' 
	SET @tSql +=' ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,' 
	SET @tSql +=' HD.FTShpCode,CONVERT(VARCHAR(10), FDXshDocDate, 121)  AS FDXrcRefDate,'--Shop
	SET @tSql +=' CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END AS FCXrcNet,' 
	SET @tSql +=' RC.FTBnkCode,' 
	--SET @tSql +=' HD.FCXshGrand,' 
	--SET @tSql +=' HD.FNXshDocType,'
	SET @tSql  +=' HD.FTXshDocNo,' 
	--SET @tSql  +=' RC.FDXrcRefDate,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM   (TPSTSalHD HD INNER JOIN TPSTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo AND HD.FTBchCode = RC.FTBchCode) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode '
	SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode' 
	SET @tSql  +=' WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTFmtCode <> ''001'''
	SET @tSql += @tSql1	

	SET @tSql  +=' UNION ALL' --เงินสด
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql  +=' 1 As FNAppType,'''' AS FNXshDocType,Rcv.FTRcvCode, '''' AS FTFmtCode, '''' AS FTXrcRefNo1,'''' AS  FTBnkName,'
	SET @tSql  +=' HD.FTShpCode,CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXrcRefDate,'--Shop
	SET @tSql  +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXrcNet,'
	SET @tSql  +=' '''' AS FTBnkCode,' 
	--SET @tSql  +=' SUM(HD.FCXshGrand) AS FCXshGrand,' 
	SET @tSql  +=' '''' AS FTXshDocNo,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM  TPSTSalHD HD  WITH (NOLOCK)'
	SET @tSql  +=' INNER JOIN TPSTSalRC RC  WITH (NOLOCK) ON HD.FTXshDocNo=RC.FTXshDocNo AND HD.FTBchCode = RC.FTBchCode' 
	SET @tSql  +=' LEFT JOIN TFNMRcv Rcv WITH (NOLOCK) ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L  WITH (NOLOCK) ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql  +=' LEFT JOIN TCNMCst Cst  WITH (NOLOCK) ON HD.FTCstCode = Cst.FTCstCode' 
	SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql  +=' WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND Rcv.FTFmtCode = ''001'''
	SET @tSql += @tSql1	
	SET @tSql  +=' GROUP BY Rcv.FTRcvCode,HD.FTShpCode,CONVERT(VARCHAR(10),HD.FDXshDocDate,121),Rcv_L.FTRcvName'
	----PRINT @tSql1
	--SET @tSql += @tSql1	

	----PRINT @tSql1
	--SET @tSql += @tSql1	
	PRINT @tSql
	EXECUTE(@tSql)

	--Vending
	SET @tSql  = ' INSERT INTO TRPTSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FNXshDocType,FTRcvCode,FTFmtCode, FTXrcRefNo1,FTBnkName,FTShpCode,FDXrcRefDate,FCXrcNet,FTBnkCode,FTXshDocNo,FTRcvName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' 2 As FNAppType,HD.FNXshDocType,RC.FTRcvCode,Rcv.FTFmtCode, RC.FTXrcRefNo1,' 
	SET @tSql +=' ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,' 
	SET @tSql +=' HD.FTShpCode,HD.FDXshDocDate AS FDXrcRefDate,'--Shop
	SET @tSql +=' CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END AS FCXrcNet,' 
	SET @tSql +=' RC.FTBnkCode,' 
	--SET @tSql +=' HD.FCXshGrand,' 
	--SET @tSql +=' HD.FNXshDocType,'
	SET @tSql  +=' HD.FTXshDocNo,' 
	--SET @tSql  +=' RC.FDXrcRefDate,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM   (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo AND HD.FTBchCode = RC.FTBchCode) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode '
	SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode' 
	SET @tSql  +=' WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004'''
	PRINT @tSql
	EXECUTE(@tSql)

	--Print '100000'
	--NUI 09/04/2020 บันทึก สถานะ การส่งเงิน (การปิดกะ)
	SET @tSql  = ' INSERT INTO TRPTSalShiftTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FTBchCode,FDShdSaleDate,FTShdStaCloseShif'
	SET @tSql +=' )'
	SET @tSql +=' SELECT DISTINCT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' HD.FTBchCode,CONVERT(VARCHAR(10),HD.FDShdSaleDate,121) AS FDShdSaleDate,'
	SET @tSql +=' CASE ISNULL(FTShdStaCloseShif0,'''') +''''+ ISNULL(FTShdStaCloseShif1,'''') '
		SET @tSql +=' WHEN ''0'' THEN ''0'''
		SET @tSql +=' WHEN ''1'' THEN ''1'''
		SET @tSql +=' WHEN ''01'' THEN ''0'''
	SET @tSql +=' END'
	SET @tSql +=' AS FTShdStaCloseShif'
	SET @tSql +=' FROM TPSTShiftHD HD LEFT JOIN'
	SET @tSql +=' ('
	  SET @tSql +=' SELECT DISTINCT FTBchCode,CONVERT(VARCHAR(10),FDShdSaleDate,121) AS FDShdSaleDate,'
	  SET @tSql +=' CASE WHEN ISNULL(FDShdSignOut,'''') = '''' THEN ''0'' ELSE ''1'' END AS FTShdStaCloseShif0'
	  SET @tSql +=' FROM TPSTShiftHD '
	  SET @tSql +=' WHERE (CASE WHEN ISNULL(FDShdSignOut,'''') = '''' THEN ''0'' ELSE ''1'' END)  = ''0'''
	SET @tSql +=' ) Shf0 ON HD.FTBchCode = Shf0.FTBchCode AND HD.FDShdSaleDate = Shf0.FDShdSaleDate'
	SET @tSql +=' LEFT JOIN'
	SET @tSql +=' ('
	  SET @tSql +=' SELECT DISTINCT FTBchCode,CONVERT(VARCHAR(10),FDShdSaleDate,121) AS FDShdSaleDate,'
	  SET @tSql +=' CASE WHEN ISNULL(FDShdSignOut,'''') = '''' THEN ''0'' ELSE ''1'' END AS FTShdStaCloseShif1'
	  SET @tSql +=' FROM TPSTShiftHD'
	  SET @tSql +=' WHERE (CASE WHEN ISNULL(FDShdSignOut,'''') = '''' THEN ''0'' ELSE ''1'' END)  = ''1'''
	SET @tSql +=' ) Shf1 ON HD.FTBchCode = Shf1.FTBchCode AND HD.FDShdSaleDate = Shf1.FDShdSaleDate '
	SET @tSql += @tSql2
	--Print '50'
	PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	
	--SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	--PRINT @tSqlTbl
	--EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TRPTSalRCTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	ORDER BY FTFmtCode,FNXshDocType ASC,FDXrcRefDate,FTXrcRefNo1
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH	

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPaymentDET1002003]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPaymentDET1002003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPaymentDET1002003] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPaymentDET1002003] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptRcvF Varchar(5),
	@ptRcvT Varchar(5),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1002003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1001005'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tRcvF = @ptRcvF
	SET @tRcvT = @ptRcvT

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDSalRCTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	--DECLARE @tTableName VARCHAR(100) 
	--DECLARE @tSqlTbl nVARCHAR(Max)
	--SET @tTableName ='TRPTSalRCTmp' + @nComName 
	----DROP TABLE TRPTSalRCTmpAda062 --@tTableName
	----DROP TABLE Ada062 --@tTableName
	--SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
 --   SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TRPTSalRCTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptCode +''' AND FTUsrSession = ''' + @tUsrSession + ''''
	--EXECUTE(@tSqlTbl)

	--PRINT @tSqlTbl
	--SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	--EXECUTE(@tSqlTbl)

	SET @tSql  = ' INSERT INTO TRPTVDSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FTRcvCode, FTXrcRefNo1,FTBnkName,FTShpCode,FDXrcRefDate,FCXrcNet,FTBnkCode,FTXshDocNo,FTRcvName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' RC.FTRcvCode, RC.FTXrcRefNo1,' 
	SET @tSql +=' ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,' 
	SET @tSql +=' FTShpCode,HD.FDXshDocDate AS FDXrcRefDate,'--Shop
	SET @tSql +=' CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END,' 
	SET @tSql +=' RC.FTBnkCode,' 
	--SET @tSql +=' HD.FCXshGrand,' 
	--SET @tSql +=' HD.FNXshDocType,'
	SET @tSql  +=' HD.FTXshDocNo,' 
	--SET @tSql  +=' RC.FDXrcRefDate,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM   (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'
	PRINT @tSql1
	SET @tSql += @tSql1	
	PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	
	--SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	--PRINT @tSqlTbl
	--EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TRPTVDSalRCTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH		

			--SELECT * FROM TPSTSalHD





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPaymentDET2001003]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPaymentDET2001003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPaymentDET2001003] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPaymentDET2001003] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptRcvF Varchar(5),
	@ptRcvT Varchar(5),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1002003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentDET1001005'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tRcvF = @ptRcvF
	SET @tRcvT = @ptRcvT

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDSalRCTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	--DECLARE @tTableName VARCHAR(100) 
	--DECLARE @tSqlTbl nVARCHAR(Max)
	--SET @tTableName ='TRPTSalRCTmp' + @nComName 
	----DROP TABLE TRPTSalRCTmpAda062 --@tTableName
	----DROP TABLE Ada062 --@tTableName
	--SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
 --   SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TRPTSalRCTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptCode +''' AND FTUsrSession = ''' + @tUsrSession + ''''
	--EXECUTE(@tSqlTbl)

	--PRINT @tSqlTbl
	--SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	--EXECUTE(@tSqlTbl)

	SET @tSql  = ' INSERT INTO TRPTVDSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FTRcvCode, FTXrcRefNo1,FTBnkName,FTShpCode,FDXrcRefDate,FCXrcNet,FTBnkCode,FTXshDocNo,FTRcvName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' RC.FTRcvCode, RC.FTXrcRefNo1,' 
	SET @tSql +=' ISNULL(Bnk_L.FTBnkName,'''') AS FTBnkName,' 
	SET @tSql +=' FTShpCode,HD.FDXshDocDate AS FDXrcRefDate,'--Shop
	SET @tSql +=' CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END,' 
	SET @tSql +=' RC.FTBnkCode,' 
	--SET @tSql +=' HD.FCXshGrand,' 
	--SET @tSql +=' HD.FNXshDocType,'
	SET @tSql  +=' HD.FTXshDocNo,' 
	--SET @tSql  +=' RC.FDXrcRefDate,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM   (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'
	PRINT @tSql1
	SET @tSql += @tSql1	
	PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	
	--SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	--PRINT @tSqlTbl
	--EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TRPTVDSalRCTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH		

			--SELECT * FROM TPSTSalHD





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPaymentSum1001003]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPaymentSum1001003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPaymentSum1001003] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPaymentSum1001003] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@ptRcvF Varchar(5),
	@ptRcvT Varchar(5),
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tRcvF = @ptRcvF
	SET @tRcvT = @ptRcvT

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalRCTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	--DECLARE @tTableName VARCHAR(100) 
	--DECLARE @tSqlTbl nVARCHAR(Max)
	--SET @tTableName ='TRPTSalRCTmp' + @nComName 
	----DROP TABLE TRPTSalRCTmpAda062 --@tTableName
	----DROP TABLE Ada062 --@tTableName
	--SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
 --   SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TRPTSalRCTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptCode +''' AND FTUsrSession = ''' + @tUsrSession + ''''
	--EXECUTE(@tSqlTbl)

	--PRINT @tSqlTbl
	--SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	--EXECUTE(@tSqlTbl)

	--Sale FNAppType = 1 
	SET @tSql  = ' INSERT INTO TRPTSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FTRcvCode,FTFmtCode,FCXrcNet,FTRcvName,FTBnkCode,FTBnkName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' 1 AS FNAppType,RC.FTRcvCode,Rcv.FTFmtCode,' 
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXrcNet,' 
	SET @tSql  +=' Rcv_L.FTRcvName,RC.FTBnkCode,FTBnkName'
	SET @tSql  +=' FROM   (TPSTSalHD HD INNER JOIN TPSTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'
	SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
	PRINT @tSql1
	SET @tSql += @tSql1	
	SET @tSql  +=' GROUP BY RC.FTRcvCode,Rcv.FTFmtCode,Rcv_L.FTRcvName,RC.FTBnkCode,FTBnkName'
	PRINT @tSql
	EXECUTE(@tSql)

--Vending FNAppType = 2 
	SET @tSql  = ' INSERT INTO TRPTSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FTRcvCode,FTFmtCode,FCXrcNet,FTRcvName,FTBnkCode,FTBnkName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' 2 AS FNAppType,RC.FTRcvCode,Rcv.FTFmtCode,' 
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXrcNet,' 
	SET @tSql  +=' Rcv_L.FTRcvName,RC.FTBnkCode,FTBnkName'
	SET @tSql  +=' FROM   (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode '
	SET @tSql  +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode ' 
	PRINT @tSql1
	SET @tSql += @tSql1	
	SET @tSql  +=' GROUP BY RC.FTRcvCode,Rcv.FTFmtCode,Rcv_L.FTRcvName,RC.FTBnkCode,FTBnkName'
	PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	
	--SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	--PRINT @tSqlTbl
	--EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TRPTSalRCTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + '' ORDER BY FNAppType,FTRcvCode
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH		

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPaymentSum2001002]    Script Date: 10/8/2563 15:39:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPaymentSum2001002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPaymentSum2001002] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPaymentSum2001002]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptRcvF Varchar(5),
	@ptRcvT Varchar(5),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001002'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001002'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tRcvF = @ptRcvF
	SET @tRcvT = @ptRcvT

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDSalRCTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
   
	--DECLARE @tTableName VARCHAR(100) 
	--DECLARE @tSqlTbl nVARCHAR(Max)
	--SET @tTableName ='TRPTSalRCTmp' + @nComName 
	----DROP TABLE TRPTSalRCTmpAda062 --@tTableName
	----DROP TABLE Ada062 --@tTableName
	--SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
 --   SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TRPTSalRCTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptCode +''' AND FTUsrSession = ''' + @tUsrSession + ''''
	--EXECUTE(@tSqlTbl)

	--PRINT @tSqlTbl
	--SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	--EXECUTE(@tSqlTbl)

	SET @tSql  = ' INSERT INTO TRPTVDSalRCTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTRcvCode, '
	SET @tSql +=' FCXrcNet,'
	SET @tSql +=' FTRcvName'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' RC.FTRcvCode, ' 
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXrcNet,' 
	SET @tSql  +=' Rcv_L.FTRcvName'
	SET @tSql  +=' FROM   (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
	SET @tSql  +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
	SET @tSql  +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
	SET @tSql  +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'	
	PRINT @tSql1
	SET @tSql += @tSql1	
	SET @tSql  +=' GROUP BY RC.FTRcvCode,Rcv_L.FTRcvName'
	PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	
	--SET @tSqlTbl = 'DROP TABLE ' + @tTableName 
	--PRINT @tSqlTbl
	--EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TRPTVDSalRCTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH		

			--SELECT * FROM TPSTSalHD





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPointByCst]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPointByCst]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPointByCst] AS' 
END
GO



ALTER PROCEDURE [dbo].[SP_RPTxPointByCst]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN

	--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

	--ลูกค้า
	@ptCstCodeF Varchar(30),
	@ptCstCodeT Varchar(30),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------

BEGIN TRY
	DECLARE @nLngID int
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Cst Code
	DECLARE @tCstCodeF Varchar(30)
	DECLARE @tCstCodeT Varchar(30)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT

	--Cst
	SET @tCstCodeF  = @ptCstCodeF
	SET @tCstCodeT  = @ptCstCodeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END

	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 '

	IF (@pnFilterType = '1')
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END
	END

	IF (@pnFilterType = '2')
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND SHD.FTBchCode IN (' + @ptBchL + ')'
		END
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),SAL.FDTxnRefDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	IF (@tCstCodeF <> '' AND @tCstCodeT <> '')
	BEGIN
		SET @tSql1 += ' AND SAL.FTMemCode BETWEEN ''' + @tCstCodeF + ''' AND ''' + @tCstCodeT + ''''
	END

	DELETE FROM TRPTPointByCstTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSql = ' INSERT INTO TRPTPointByCstTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTMemCode,FTCstName,FDCstApply,FDCstCrdExpire,FCTxnPntGet,FCTxnPntUsed,FCTxnPntBal '
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' P.FTMemCode,CST.FTCstName,'
	SET @tSql +=' CONVERT(VARCHAR(10),CRD.FDCstApply,121) AS FDCstApply,'
	SET @tSql +=' CONVERT(VARCHAR(10),CRD.FDCstCrdExpire,121) AS FDCstCrdExpire,'
	SET @tSql +=' P.FCTxnPntBillQty AS FCTxnPntGet,'
	SET @tSql +=' ISNULL(R.FCTxnPntBillQty, 0) AS FCTxnPntUsed,'
	SET @tSql +=' P.FCTxnPntBillQty - ISNULL(R.FCTxnPntBillQty, 0) AS FCTxnPntBal'
	SET @tSql +=' FROM'
	SET @tSql +=' ('
	SET @tSql +=' SELECT SAL.FTMemCode,'
	SET @tSql +=' SUM(CASE WHEN SAL.FTTxnPntDocType = 1 THEN SAL.FCTxnPntBillQty ELSE SAL.FCTxnPntBillQty * -1 END) AS FCTxnPntBillQty'
	SET @tSql +=' FROM TCNTMemTxnSale SAL'
	SET @tSql +=' LEFT JOIN TPSTSalHD SHD ON SAL.FTTxnRefDoc = SHD.FTXshDocNo'
	SET @tSql += @tSql1
	SET @tSql +=' GROUP BY SAL.FTMemCode'
	SET @tSql +=' ) P'
	SET @tSql +=' LEFT JOIN'
	SET @tSql +=' ('
	SET @tSql +=' SELECT RED.FTMemCode,'
	SET @tSql +=' SUM(CASE WHEN RED.FTRedPntDocType = 1 THEN RED.FCRedPntBillQty ELSE RED.FCRedPntBillQty * -1 END) AS FCTxnPntBillQty'
	SET @tSql +=' FROM TCNTMemTxnRedeem RED'
	SET @tSql +=' LEFT JOIN TPSTSalHD SHD ON RED.FTRedRefDoc = SHD.FTXshDocNo'
	SET @tSql += @tSql1
	SET @tSql +=' GROUP BY RED.FTMemCode'
	SET @tSql +=' ) R ON P.FTMemCode = R.FTMemCode'
	SET @tSql +=' LEFT JOIN TCNMCst_L CST ON CST.FTCstCode = P.FTMemCode AND CST.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT JOIN TCNMCstCard CRD ON CST.FTCstCode = CRD.FTCstCode'

	PRINT @tSql
	
	EXECUTE(@tSql)
	--RETURN SELECT * FROM TRPTPointByCstTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1

END CATCH	
GO


/****** Object:  StoredProcedure [dbo].[SP_RPTxSalByCst]    Script Date: 13/8/2563 11:42:46 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalByCst]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalByCst] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSalByCst]
--ALTER PROCEDURE [dbo].[SP_RPTxMnyShotOverTmp_Moshi]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--จุดขาย
	@ptPosL Varchar(8000), --จุดขาย Condition IN
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),

--ลูกค้า
	@ptCstCodeF Varchar(30),
	@ptCstCodeT Varchar(30),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Pos Code
	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)

	--Cst Code
	DECLARE @tCstCodeF Varchar(30)
	DECLARE @tCstCodeT Varchar(30)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)


	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Branch
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT

	--Branch
	SET @tCstCodeF  = @ptCstCodeF
	SET @tCstCodeT  = @ptCstCodeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)



	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

		
	SET @tSql1 =   ' '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		

	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	IF (@tCstCodeF <> '' AND @tCstCodeT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTCstCode BETWEEN ''' + @tCstCodeF + ''' AND ''' + @tCstCodeT + ''''
		END		


	DELETE FROM TRPTSalByCstTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
 

  SET @tSql = ' INSERT INTO TRPTSalByCstTmp'
	SET @tSql +=' (FTUsrSession,FTComName,FTRptCode,'
	SET @tSql +=' FTCstCode,FTCstName,FCXshTotal,FCXshDis,FCXshGrand '
	SET @tSql +=' )'

	SET @tSql +='SELECT '''+ @tUsrSession +''' AS FTUsrSession ,'''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode , S.* FROM ('
	SET @tSql +='SELECT  ISNULL(HD.FTCstCode,''N/A'') AS FTCstCode'
	SET @tSql +=',ISNULL(CST.FTCstName,''ลูกค้าทั่วไป'') AS FTCstName'
	SET @tSql += ',SUM(CASE WHEN HD.FNXshDocType = 1 THEN  HD.FCXshTotal ELSE HD.FCXshTotal * -1 END) AS  FCXshTotal'
	SET @tSql +=',SUM(CASE WHEN HD.FNXshDocType = 1 THEN  HD.FCXshDis ELSE HD.FCXshDis * -1 END) AS  FCXshDis'
	SET @tSql +=',SUM(CASE WHEN HD.FNXshDocType = 1 THEN  HD.FCXshGrand ELSE HD.FCXshGrand * -1 END) AS  FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMCst_L CST ON HD.FTCstCode = CST.FTCstCode AND CST.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' WHERE HD.FTXshStaDoc = 1 '
	SET @tSql += @tSql1
	SET @tSql +=' GROUP BY HD.FTCstCode,CST.FTCstName ) S'
  SET @tSql += ' ORDER BY 	s.FTCstCode ASC'
	PRINT @tSql

	EXECUTE(@tSql)
	--RETURN SELECT * FROM TRPTCancelBillByDateTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1

END CATCH		



GO



/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSalByProfitByLoss]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSalByProfitByLoss]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSalByProfitByLoss] AS' 
END
GO

ALTER PROCEDURE [dbo].[SP_RPTxPSSalByProfitByLoss]

	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	----สาขา
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),

	----ร้านค้า
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),

	----เครื่องจุดขาย
	--@ptPosCodeF Varchar(20),
	--@ptPosCodeT Varchar(20),

	--กลุ่มสินค้า
	@ptChainCodeF Varchar(10),
	@ptChainCodeT Varchar(10),

	--สินค้า
	@ptProductCodeF Varchar(10),
	@ptProductCodeT Varchar(10),

	--วันที่
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
	
AS
BEGIN TRY

    DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tRptCode Varchar(100)

	DECLARE @tSQLINS VARCHAR(8000)
	DECLARE @tSQLFilterIN VARCHAR(MAX)
	DECLARE @tSQLFilterOUT VARCHAR(MAX)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	
	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)

	--DECLARE @tShpF Varchar(5)
	--DECLARE @tShpT Varchar(5)

	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	DECLARE @tChainCodeF Varchar(30)
	DECLARE @tChainCodeT Varchar(30)

	DECLARE @tProductCodeF Varchar(10)
	DECLARE @tProductCodeT Varchar(10)

	--SET VALUE TO VAL
	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	----BRANCH PARAMETER
	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT

	----SHOP PARAMETER
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	----POS PARAMETER
	--SET @tPosCodeF = @ptPosCodeF
	--SET @tPosCodeT = @ptPosCodeT

	--DOCDATE PARAMETER
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	--CHAIN PARAMETER
	SET @tChainCodeF = @ptChainCodeF
	SET @tChainCodeT = @ptChainCodeT

	--สินค้า
	SET @tProductCodeF = @ptProductCodeF
	SET @tProductCodeT = @ptProductCodeT

	--SET FILTER IN
	SET @tSQLFilterIN = ''

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	----FILTER BRANCH CHECK BRANCHFROM AND BRANCHTO IS FILTERED
	--IF (@tBchF <> '' AND @tBchT <> '')
	--	BEGIN
	--		SET @tSQLFilterIN += ' AND   SHD.FTBchCode BETWEEN '''+@tBchF+''' AND '''+@tBchT+''''
	--	END
 --   ELSE 
	--	BEGIN
	--		SET @tSQLFilterIN += ' '
	--	END

	----FILTER SHOP CHECK SHOPFROM AND SHOPTO IS FILTERED
	--IF (@tShpF <> '' AND @tShpT <> '')
	--	BEGIN
	--		SET @tSQLFilterIN += ' AND   SHD.FTShpCode BETWEEN '''+@tShpF+''' AND '''+@tShpT+''''
	--	END
 --   ELSE 
	--	BEGIN
	--		SET @tSQLFilterIN += ' '
	--	END

	----FILTER POS CHECK POSFROM AND POSTO IS FILTERED
	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSQLFilterIN += ' AND SHD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--	END
 --   ELSE 
	--	BEGIN
	--		SET @tSQLFilterIN += ' '
	--	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQLFilterIN +=' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQLFilterIN +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQLFilterIN +=' AND SHD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQLFilterIN +=' AND SHD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQLFilterIN +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQLFilterIN +=' AND SHD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND SHD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	--FILTER CHAIN CHECK PRODUCT FROM AND PRODUCT TO IS FILTERED
	IF (@tProductCodeF <> '' AND @tProductCodeT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND SDT.FTPdtCode BETWEEN '''+@tProductCodeF+''' AND '''+@tProductCodeT+''' '
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ''
		END

	--FILTER DOCDATE CHECK DOCDATEFROM AND DOCDATETO IS FILTERED
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '''+@tDocDateF+''' AND '''+@tDocDateT+''' '
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ' '
		END

	--SET FILTER OUT
	SET @tSQLFilterOUT = ''

	--FILTER CHAIN CHECK CHAINFROM AND CHAINTO IS FILTERED
	IF (@tChainCodeF <> '' AND @tChainCodeT <> '')
		BEGIN
			SET @tSQLFilterOUT += ' AND SALE.FTPgpChainName BETWEEN '''+@tChainCodeF+''' AND '''+@tChainCodeT+''' '
		END
    ELSE 
		BEGIN
			SET @tSQLFilterOUT += ''
		END

	
	--DELTE OLD DATA FROM TEMP TABLE
	DELETE FROM TRPTPSTSaleProfitTmp  WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
    
	--Sale
	SET @tSQLINS = '  INSERT INTO TRPTPSTSaleProfitTmp(FTComName,FTRptCode,FTUsrSession,FNAppType,FTPdtCode,FTPdtName,FTChainName,FCXsdSaleQty,FCPdtCost,FCXshGrand,FCXsdProfit,'

	SET @tSQLINS += ' FCXsdProfitPercent, FCXsdSalePercent )'
	SET @tSQLINS += ' SELECT FTComName,FTRptCode,FTUsrSession, FNAppType,FTPdtCode,  FTPdtName,  FTPgpChainName, FCXsdQty,FCPdtCost,FCXsdNetAfHD,FCXsdProfit,
			CASE WHEN FCPdtCost = 0 THEN 
				0 
			ELSE
				SUM((FCXsdProfit/FCPdtCost)*100) 
			END AS FCXsdCostPercent,
			CASE WHEN FCXsdNetAfHD = 0 THEN 
				0 
			ELSE
				SUM((FCXsdProfit/FCXsdNetAfHD)*100) END 
			AS FCXsdSalePercent
			FROM(
	        SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,	
            1 AS FNAppType,SALE.FTPdtCode,  SALE.FTPdtName,  SALE.FTPgpChainName, 
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCXsdQty,0)  ELSE ISNULL(SALE.FCXsdQty,0)*-1 END) AS FCXsdQty,  
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCPdtCostAVGEX,0) ELSE (ISNULL(SALE.FCPdtCostAVGEX,0))* -1  END) AS FCPdtCost,  
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCXsdNetAfHD,0) ELSE ISNULL(SALE.FCXsdNetAfHD,0)*-1 END) AS FCXsdNetAfHD,  
			SUM(CASE WHEN FNxshDocType = 1 THEN 
				ISNULL(SALE.FCXsdNetAfHD,0) - ISNULL(SALE.FCPdtCostAVGEX,0) 
			ELSE 
			   (ISNULL(SALE.FCXsdNetAfHD,0) - ISNULL(SALE.FCPdtCostAVGEX,0))*-1 
			END
			) AS FCXsdProfit  

			FROM 
			( SELECT SHD.FNXshDocType,SDT.FTPdtCode,PDT_L.FTPdtName,ISNULL(PDG_L.FTPgpChainName,''N/A'') AS  FTPgpChainName,
			  SUM(SDT.FCXsdCostEx) AS FCPdtCostAVGEX , 
			  SUM(SDT.FCXsdQty) AS FCXsdQty,
			  SUM(SDT.FCXsdNetAfHD) AS FCXsdNetAfHD  
			  FROM TPSTSalDT SDT  LEFT JOIN TPSTSalHD SHD ON SDT.FTXshDocNo = SHD.FTXshDocNo  LEFT JOIN TCNMPdt PDT ON SDT.FTPdtCode = PDT.FTPdtCode  LEFT JOIN TCNMPdt_L PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode AND 
			 PDT_L.FNLngID = ''1'' LEFT JOIN TCNMPdtGrp_L PDG_L ON PDT.FTPgpChain = PDG_L.FTPgpChain  
			 LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON SHD.FTBchCode = Shp.FTBchCode AND SHD.FTShpCode = Shp.FTShpCode '

			SET @tSQLINS += ' WHERE 1=1 AND FTXshStaDoc <> ''3'' AND SDT.FTXsdStaPdt <> ''4'''
		    SET @tSQLINS += @tSQLFilterIN
		    SET @tSQLINS += ' GROUP BY SHD.FNXshDocType,SDT.FTPdtCode,PDT_L.FTPdtName,PDG_L.FTPgpChainName '

	        SET @tSQLINS += ' ) SALE '           

	--Condition
    SET @tSQLINS += ' WHERE 1 = 1 '	
	SET @tSQLINS += @tSQLFilterOUT
	SET @tSQLINS += ' GROUP BY SALE.FTPdtCode,  SALE.FTPdtName,  SALE.FTPgpChainName'
	SET @tSQLINS += ' ) Test'	
	SET @tSQLINS += ' GROUP BY FTComName,FTRptCode,FTUsrSession, FNAppType,FTPdtCode,  FTPdtName,  FTPgpChainName, FCXsdQty,FCPdtCost,FCXsdNetAfHD,FCXsdProfit'				
	PRINT @tSQLINS
	EXECUTE(@tSQLINS)

--	----Vending
	SET @tSQLINS = '  INSERT INTO TRPTPSTSaleProfitTmp(FTComName,FTRptCode,FTUsrSession,FNAppType,FTPdtCode,FTPdtName,FTChainName,FCXsdSaleQty,FCPdtCost,FCXshGrand,FCXsdProfit,'
	SET @tSQLINS += ' FCXsdProfitPercent, FCXsdSalePercent )'
	SET @tSQLINS += ' SELECT FTComName,FTRptCode,FTUsrSession, FNAppType,FTPdtCode,  FTPdtName,  FTPgpChainName, FCXsdQty,FCPdtCost,FCXsdNetAfHD,FCXsdProfit,
			CASE WHEN FCPdtCost = 0 THEN 
				0 
			ELSE
				SUM((FCXsdProfit/FCPdtCost)*100) 
			END AS FCXsdCostPercent,
			CASE WHEN FCXsdNetAfHD = 0 THEN 
				0 
			ELSE
				SUM((FCXsdProfit/FCXsdNetAfHD)*100) END 
			AS FCXsdSalePercent
			FROM(
	        SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,	
            2 AS FNAppType,SALE.FTPdtCode,  SALE.FTPdtName,  SALE.FTPgpChainName, 
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCXsdQty,0)  ELSE ISNULL(SALE.FCXsdQty,0)*-1 END) AS FCXsdQty,  
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCPdtCostAVGEX,0) ELSE (ISNULL(SALE.FCPdtCostAVGEX,0))* -1  END) AS FCPdtCost,  
			SUM(CASE WHEN FNxshDocType = 1 THEN ISNULL(SALE.FCXsdNetAfHD,0) ELSE ISNULL(SALE.FCXsdNetAfHD,0)*-1 END) AS FCXsdNetAfHD,  
			SUM(CASE WHEN FNxshDocType = 1 THEN 
				ISNULL(SALE.FCXsdNetAfHD,0) - ISNULL(SALE.FCPdtCostAVGEX,0) 
			ELSE 
			   (ISNULL(SALE.FCXsdNetAfHD,0) - ISNULL(SALE.FCPdtCostAVGEX,0))*-1 
			END
			) AS FCXsdProfit  

			FROM 
			( SELECT SHD.FNXshDocType,SDT.FTPdtCode,PDT_L.FTPdtName,ISNULL(PDG_L.FTPgpChainName,''N/A'') AS  FTPgpChainName,
			  SUM(SDT.FCXsdCostEx) AS FCPdtCostAVGEX , 
			  SUM(SDT.FCXsdQty) AS FCXsdQty,
			  SUM(SDT.FCXsdNetAfHD) AS FCXsdNetAfHD  
			  FROM TVDTSalDT SDT  LEFT JOIN TVDTSalHD SHD ON SDT.FTXshDocNo = SHD.FTXshDocNo  LEFT JOIN TCNMPdt PDT ON SDT.FTPdtCode = PDT.FTPdtCode  LEFT JOIN TCNMPdt_L PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode AND 
			 PDT_L.FNLngID = ''1'' LEFT JOIN TCNMPdtGrp_L PDG_L ON PDT.FTPgpChain = PDG_L.FTPgpChain  
			 LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON SHD.FTBchCode = Shp.FTBchCode AND SHD.FTShpCode = Shp.FTShpCode '

			SET @tSQLINS += ' WHERE 1=1 AND FTXshStaDoc <> ''3'' AND SDT.FTXsdStaPdt <> ''4'''
		    SET @tSQLINS += @tSQLFilterIN
		    SET @tSQLINS += ' GROUP BY SHD.FNXshDocType,SDT.FTPdtCode,PDT_L.FTPdtName,PDG_L.FTPgpChainName '

	        SET @tSQLINS += ' ) SALE '

            
	--Condition
    SET @tSQLINS += ' WHERE 1 = 1 '	
	SET @tSQLINS += @tSQLFilterOUT
	SET @tSQLINS += ' GROUP BY SALE.FTPdtCode,  SALE.FTPdtName,  SALE.FTPgpChainName'
	SET @tSQLINS += ' ) Test'	
	SET @tSQLINS += ' GROUP BY FTComName,FTRptCode,FTUsrSession, FNAppType,FTPdtCode,  FTPdtName,  FTPgpChainName, FCXsdQty,FCPdtCost,FCXsdNetAfHD,FCXsdProfit'				
	PRINT @tSQLINS
	EXECUTE(@tSQLINS)	

	--FILTER BY CONDITION (tSQLFilterOUT)
   -- AND SALE.FTPgpChainName BETWEEN 'N/A' AND 'N/A'


    SET @FNResult = 0
	return @FNResult

END TRY

BEGIN CATCH 

    SET @FNResult = -1
	return @FNResult

END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSaleByCashierAndPos001001022]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSaleByCashierAndPos001001022]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSaleByCashierAndPos001001022] AS' 
END
GO
-- =============================================
-- Author:		Piya
-- Create date: 19/06/2020
-- Description:	รายงาน ยอดขายตามแคชเชียร์ - ตามเครื่องจุดขาย
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxPSSaleByCashierAndPos001001022]
	@pnLngID INT , 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	@pnFilterType INT, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL VARCHAR(8000), --กรณี Condition IN
	@ptBchF VARCHAR(5),
	@ptBchT VARCHAR(5),
	--Merchant
	@ptMerL VARCHAR(8000), --กรณี Condition IN
	@ptMerF VARCHAR(10),
	@ptMerT VARCHAR(10),
	--Shop Code
	@ptShpL VARCHAR(8000), --กรณี Condition IN
	@ptShpF VARCHAR(10),
	@ptShpT VARCHAR(10),
	--เครื่องจุดขาย
	@ptPosL VARCHAR(8000), --กรณี Condition IN
	@ptPosF VARCHAR(20),
	@ptPosT VARCHAR(20),
	--แคชเชียร์
	--@ptUsrL VARCHAR(8000), --กรณี Condition IN
	@ptUsrF VARCHAR(20),
	@ptUsrT VARCHAR(20),
	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT	
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(MAX)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	--Branch Code
	DECLARE @tBchF VARCHAR(5)
	DECLARE @tBchT VARCHAR(5)
	--Merchant
	DECLARE @tMerF VARCHAR(10)
	DECLARE @tMerT VARCHAR(10)
	--Shop Code
	DECLARE @tShpF VARCHAR(10)
	DECLARE @tShpT VARCHAR(10)
	--Pos Code
	DECLARE @tPosF VARCHAR(20)
	DECLARE @tPosT VARCHAR(20)
	--Cashier
	DECLARE @tUsrF VARCHAR(20)
	DECLARE @tUsrT VARCHAR(20)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF 
	SET @tUsrT  = @ptUsrT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''

	/*===== ตรวจสอบค่า Filter ========================================*/

	IF @ptBchL = null OR @ptBchL = ''
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null OR @tBchF = ''
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL = null OR @ptMerL = ''
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF = null OR @tMerF = ''
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL = null OR @ptShpL = ''
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF = null OR @tShpF = ''
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT = null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null OR @tPosF = ''
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tUsrF = null OR @tUsrF = ''
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT = null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_Filter += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tUsrF <> '' AND @tUsrT <> '')
	BEGIN
		SET @tSQL_Filter += ' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
	END

	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND ( (CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTSalByCashierAndPosTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSQL = '
		INSERT INTO TRPTSalByCashierAndPosTmp 
		(FTComName,FTRptCode,FTUsrSession,FTBchCode,FTPosCode,FTUsrCode,FTUsrName,FNXshBillQty,FCXshNet,FCXshReturn,FCXshDis,FCXshGrand,FCXrcCash,FCXrcCredit,FCXrcCheque,FCXrcCashCpn,FCXrcVoucher,FCXrcCashCrd,FCXrcOther,FCXrcTotal)
	'

	SET @tSQL += '
		SELECT 
			'''+@tComName+''' AS FTComName,
			'''+@tRptCode+''' AS FTRptCode,
			'''+@tUsrSession+''' AS FTUsrSession,
			SAL.FTBchCode,
			SAL.FTPosCode,
			SAL.FTUsrCode,
			SAL.FTUsrName,
			SAL.FNXshBillQty,
			SAL.FCXshNet,
			SAL.FCXshReturn,
			SAL.FCXshDis,
			SAL.FCXshGrand,
			RCV.FCXrcCash,
			RCV.FCXrcCredit,
			RCV.FCXrcCheque,
			RCV.FCXrcCashCpn,
			RCV.FCXrcVoucher,
			RCV.FCXrcCashCrd,
		  RCV.FCXrcOther,
			RCV.FCXrcCash+RCV.FCXrcCredit+RCV.FCXrcCheque+RCV.FCXrcCashCpn+RCV.FCXrcVoucher+RCV.FCXrcCashCrd+RCV.FCXrcOther AS FCXrcTotal
		FROM (
			SELECT  
				HD.FTBchCode,
				HD.FTPosCode,
				HD.FTUsrCode,
				USRL.FTUsrName,
				COUNT(FTXshDocNo) AS FNXshBillQty,
				SUM(CASE WHEN FNXshDocType = 1 THEN FCXshGrand ELSE FCXshGrand * - 1 END ) AS FCXshNet,
				SUM(CASE WHEN FNXshDocType = 9 THEN FCXshGrand ELSE 0 END ) AS FCXshReturn,
				SUM(CASE WHEN FNXshDocType = 1 THEN FCXshDis ELSE FCXshDis * -1  END ) AS FCXshDis,
				SUM(CASE WHEN FNXshDocType = 1 THEN FCXshGrand ELSE FCXshGrand * - 1 END ) AS FCXshGrand
			FROM TPSTSalHD HD WITH(NOLOCK)
			LEFT JOIN TCNMUser_L USRL WITH(NOLOCK) ON USRL.FTUsrCode = HD.FTUsrCode AND USRL.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
			WHERE HD.FTXshStaDoc = ''1'' '
			--Where parameter ต่างๆได้ที่นี่
			SET @tSQL += @tSQL_Filter
			SET @tSQL += ' GROUP BY HD.FTBchCode, HD.FTPosCode, HD.FTUsrCode, USRL.FTUsrName 
		) SAL

		INNER JOIN (
			SELECT 
				HD.FTBchCode,
				HD.FTPosCode, 
				HD.FTUsrCode, 
				USRL.FTUsrName,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''001''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcCash,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''002''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcCredit,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''003''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcCheque,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''004''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcCashCpn,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''008''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcVoucher,
				SUM(CASE
					WHEN Rcv.FTFmtCode = ''011''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcCashCrd,
				SUM(CASE
					WHEN Rcv.FTFmtCode <> ''011'' AND Rcv.FTFmtCode <> ''008'' AND Rcv.FTFmtCode <> ''004'' AND Rcv.FTFmtCode <> ''003'' AND Rcv.FTFmtCode <> ''002'' AND Rcv.FTFmtCode <> ''001''
					THEN CASE WHEN FNXshDocType = 1 THEN FCXrcNet ELSE FCXrcNet * - 1 END 
					ELSE 0
				END) AS FCXrcOther
			FROM TPSTSalRC RC WITH(NOLOCK)
			INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON(RC.FTXshDocNo = HD.FTXshDocNo AND RC.FTBchCode = HD.FTBchCode)
			LEFT JOIN TFNMRcv Rcv WITH (NOLOCK) ON RC.FTRcvCode=Rcv.FTRcvCode
			LEFT JOIN TCNMUser_L USRL WITH(NOLOCK) ON USRL.FTUsrCode = HD.FTUsrCode AND USRL.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
			WHERE HD.FTXshStaDoc = ''1'' '
			--Where parameter ต่างๆได้ที่นี่
			SET @tSQL += @tSQL_Filter
			SET @tSQL += ' GROUP BY HD.FTBchCode, HD.FTPosCode, HD.FTUsrCode, USRL.FTUsrName
		) RCV 
		ON SAL.FTBchCode = RCV.FTBchCode AND SAL.FTPosCode = RCV.FTPosCode AND SAL.FTUsrCode = RCV.FTUsrCode '

	PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	RETURN @FNResult
END TRY	
BEGIN CATCH

    SET @FNResult = -1
	RETURN @FNResult

END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSaleDailyTmp09]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSaleDailyTmp09]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSaleDailyTmp09] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSaleDailyTmp09] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	--เครื่องจุดขาย
	@ptPosCodeL Varchar(8000), --กรณี Condition IN
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	--@ptMonth nVarchar(2),
	--@ptYear nVarchar(4),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)

	DECLARE @tPosCodeF Varchar(20)
	DECLARE @tPosCodeT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--DECLARE @tMonth nVarchar(2)
	--DECLARE @tYEar nVarchar(4)

	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop Code
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosCodeF  = @ptPosCodeF 
	SET @tPosCodeT = @ptPosCodeT 

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	--SET @tMonth = @ptMonth
	--SET @tYear = @ptYear

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @ptPosCodeL = null
	BEGIN
		SET @ptPosCodeL = ''
	END

	IF @tPosCodeF = null
	BEGIN
		SET @tPosCodeF = ''
	END

	IF @tPosCodeT = null OR @tPosCodeT = ''
	BEGIN
		SET @tPosCodeT = @tPosCodeF
	END



	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosCodeL <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosCodeL + ')'
		END		
	END

	IF @tDocDateF ='' OR @tDocDateT = ''
	BEGIN
		SET @tDocDateF =  CONVERT(VARCHAR, FORMAT(GETDATE(), 'yyyy') + '-' + FORMAT(GETDATE(), 'MM') + '-01',23)
		SET @tDocDateT =  EOMONTH(@tDocDateF)
		--SET @dDATE1 = 
		--SET @dDATE2 =@tDocDateT		
	END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DECLARE @dDATE1 DATE
	DECLARE @dDATE2 DATE
	--PRINT @tDocDateF
	--PRINT @tDocDateT

	SET @dDATE1 =@tDocDateF
	SET @dDATE2 =@tDocDateT

	DELETE FROM TRPTPTTSpcPSSaleDailyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	WHILE(@dDATE1<=@dDATE2)
	Begin
		--PRINT @dDATE1
		INSERT INTO TRPTPTTSpcPSSaleDailyTmp (FTComName,FTRptCode,FTUsrSession,FDXshDocDate)
		--SELECT DISTINCT 'Ada062' AS FTComName,'PSSaleDailyTmp09' AS FTRptCode, '001' AS FTUsrSession,@dDATE1 AS FDXshDocDate,FTBchCode
		SELECT DISTINCT '' + @nComName + '' AS FTComName,'' + @tRptCode + '' AS FTRptCode, '' + @tUsrSession + '' AS FTUsrSession,@dDATE1 AS FDXshDocDate--,FTBchCode
		FROM TPSTSalHD

 		set @dDATE1 = DATEADD(dd,1,@dDATE1)
		 --SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,
	END

	SET @tSql  = ' UPDATE TRPTPTTSpcPSSaleDailyTmp'
	SET @tSql  += ' SET'
		SET @tSql  += ' FNcshCountBill = Sal.FNcshCountBill,'
		SET @tSql  += ' FCXsdGrandTotal = Sal.FCXsdGrandTotal,'
		SET @tSql  += ' FCXshCashCoupon = Sal.FCXshCashCoupon,'
		SET @tSql  += ' FCXshAmtAFDisc = Sal.FCXshAmtAFDisc,'
		SET @tSql  += ' FCXsdVatable = Sal.FCXsdVatable,'
		SET @tSql  += ' FCXsdVat = Sal.FCXsdVat,'
		SET @tSql  += ' FCXshAllInOne = Sal.FCXshAllInOne,'
		SET @tSql  += ' FCXshElocker = Sal.FCXshElocker,'
		SET @tSql  += ' FCXshDoctor = Sal.FCXshDoctor,'
		SET @tSql  += ' FCXshTelemedi=Sal.FCXshTelemedi'

	SET @tSql  += ' FROM '
	SET @tSql  += ' ( '
			SET @tSql  += ' SELECT CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate, COUNT(HD.FTXshDocNo) AS FNcshCountBill,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END) AS FCXsdGrandTotal,'
			SET @tSql  += ' SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshCashCoupon,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END)-SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshAmtAFDisc,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVatable,0) ELSE ISNULL(HD.FCXshVatable,0)*-1 END) AS FCXsdVatable,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVat,0) ELSE ISNULL(HD.FCXshVat,0)*-1 END) AS FCXsdVat,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshAllInOne,0)) AS FCXshAllInOne,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshElocker,0)) AS FCXshElocker,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshDoctor,0)) AS FCXshDoctor,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshTelemedi,0)) AS FCXshTelemedi'

			SET @tSql  += ' FROM TPSTSalHD HD WITH(NOLOCK) LEFT JOIN'
				SET @tSql += ' (' --RC
					SET @tSql  += ' SELECT HD.FTBchCode,HD.FTXshDocNo,CONVERT(VARCHAR(10),RC.FDCreateOn,121) AS FDXshDocDate,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXshCashCoupon'
					SET @tSql  += ' FROM TPSTSalRC RC WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK)	ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
					SET @tSql  += ' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	
					SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					SET @tSql  += ' WHERE RcvFmt_L.FTFmtCode = ''004'' AND HD.FTXshStaDoc = ''1''' 
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY HD.FTBchCode,HD.FTXshDocNo,CONVERT(VARCHAR(10),RC.FDCreateOn,121)'
				SET @tSql  += ' ) Cou ON HD.FTBchCode = Cou.FTBchCode AND HD.FTXshDocNo = Cou.FTXshDocNo'
				SET @tSql  += ' INNER JOIN'
				SET @tSql  += ' (' --Pdt
					SET @tSql  += ' SELECT DT.FTBchCode,DT.FTXshDocNo,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshAllInOne,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshElocker,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshDoctor,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshTelemedi'
					SET @tSql  += ' FROM TPSTSalDT DT WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' INNER JOIN TCNMPdt Pdt WITH(NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode'
					SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					SET @tSql  += ' WHERE FTXsdStaPdt <> ''4'' AND HD.FTXshStaDoc = ''1''  AND PDT.FTPdtForSystem IN (''1'',''4'') AND Pdt.FTPdtType = ''2'' AND DT.FTPdtCode IN (''0018'',''0017'',''00052'',''00051'')'
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY DT.FTBchCode,DT.FTXshDocNo'
				SET @tSql  += ' ) SalDT ON HD.FTBchCode = SalDT.FTBchCode AND HD.FTXshDocNo = SalDT.FTXshDocNo'
				SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
				SET @tSql  += ' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql  += ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''
			SET @tSql += ' GROUP  BY CONVERT(VARCHAR(10),HD.FDXshDocDate,121)'
		SET @tSql  += ' ) Sal '
		SET @tSql  += ' WHERE TRPTPTTSpcPSSaleDailyTmp.FDXshDocDate = Sal.FDXshDocDate' --AND TRPTPTTSpcPSSaleDailyTmp.FTBchCode = Sal.FTBchCode'	
		--IF @pnFilterType = '1'
		--BEGIN
		--	IF (@tBchF <> '' AND @tBchT <> '')
		--	BEGIN
		--		SET @tSql +=' AND Sal.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		--	END
		--END

		--IF @pnFilterType = '2'
		--BEGIN
		--	IF (@ptBchL <> '' )
		--	BEGIN
		--		SET @tSql +=' AND Sal.FTBchCode IN (''' + @ptBchL + ''')'
		--	END
		--END


		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql +=' AND CONVERT(VARCHAR(10),Sal.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END

	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPTTSpcPSSaleDailyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
	--PRINT '211111'
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSaleMonthlyTmp11]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSaleMonthlyTmp11]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSaleMonthlyTmp11] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSaleMonthlyTmp11] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	--เครื่องจุดขาย
	@ptPosCodeL Varchar(8000), --กรณี Condition IN
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	@ptMonth nVarchar(2),
	@ptMonthT nVarchar(2),
	@ptYear nVarchar(4),

	--@ptDocDateF Varchar(10),
	--@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)

	DECLARE @tPosCodeF Varchar(20)
	DECLARE @tPosCodeT Varchar(20)

	--DECLARE @tDocDateF Varchar(10)
	--DECLARE @tDocDateT Varchar(10)
	DECLARE @tMonth nVarchar(2)
	DECLARE @tYEar nVarchar(4)

	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop Code
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosCodeF  = @ptPosCodeF 
	SET @tPosCodeT = @ptPosCodeT 

	--SET @tDocDateF = @ptDocDateF
	--SET @tDocDateT = @ptDocDateT
	SET @tMonth = @ptMonth
	--SET @tMonth = @ptMonthT
	SET @tYear = @ptYear

	SET @FNResult= 0

	--SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @ptPosCodeL = null
	BEGIN
		SET @ptPosCodeL = ''
	END

	IF @tPosCodeF = null
	BEGIN
		SET @tPosCodeF = ''
	END

	IF @tPosCodeT = null OR @tPosCodeT = ''
	BEGIN
		SET @tPosCodeT = @tPosCodeF
	END


	IF @tMonth = null
	BEGIN 
		SET @tMonth = ''
	END

	IF @ptMonthT = null
	BEGIN 
		SET @ptMonthT = ''
	END

	IF @tYear = null
	BEGIN
		SET @tYear = ''
	END
	--IF @tDocDateF = null
	--BEGIN 
	--	SET @tDocDateF = ''
	--END

	--IF @tDocDateT = null OR @tDocDateT =''
	--BEGIN 
	--	SET @tDocDateT = @tDocDateF
	--END

	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosCodeL <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosCodeL + ')'
		END		
	END


	--IF (@tDocDateF <> '' AND @tDocDateT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	--END
	IF (@ptMonth <> '' AND @ptMonthT <> '' )
	BEGIN
		SET @tSql1 +=' AND MONTH(HD.FDXshDocDate) BETWEEN ''' + @ptMonth + ''' AND  ''' + @ptMonthT + ''' '
	END

		IF (@tYear <> 0 )
	BEGIN
		SET @tSql1 +=' AND YEAR(HD.FDXshDocDate) = ''' + @tYear + ''''
	END



	DECLARE @dDATE1 DATE
	DECLARE @dDATE2 DATE
	DECLARE @dDATEF DATETIME
	DECLARE @tTblName Varchar(50)
	DECLARE @tSQLTmp Varchar(8000)
	DECLARE @tSQLTunc Varchar(8000)
	SET @dDATE1 =  CONVERT(VARCHAR, @tYear + '-' + @ptMonth + '-01',23)
	SET @dDATE2 =  CONVERT(VARCHAR, @tYear + '-' + @ptMonthT + '-01',23)
	--SELECT @dDATEF = DATEADD(month, DATEDIFF(month, 0, @dDATE1), 0)

    SELECT @dDATE2 = EOMONTH(@dDATE2)
	--SELECT @dDATEF = CONVERT(nVARCHAR,@dDATEF,121)
	--PRINT @dDATEF
	--PRINT EOMONTH(@dDATE2)
	--PRINT @dDATE1
	--PRINT @dDATE2
	
	DELETE FROM TRPTPTTSpcPSSaleMonthlyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	
	WHILE(@dDATE1<=@dDATE2)
	Begin
		--PRINT @dDATE1
		--SET @dDATEOld =@dDATE1

		INSERT INTO TRPTPTTSpcPSSaleMonthlyTmp (FNAppType,FTComName,FTRptCode,FTUsrSession,FDXshDocDate,FNSaleMonthly,FNSaleYear)
		--SELECT DISTINCT 'Ada062' AS FTComName,'PSSaleDailyTmp09' AS FTRptCode, '001' AS FTUsrSession,@dDATE1 AS FDXshDocDate,FTBchCode
		SELECT '1' AS FNAppType,  @nComName  AS FTComName, @tRptCode  AS FTRptCode,  @tUsrSession AS FTUsrSession,@dDATE1 AS FDXshDocDate,
		--DATEPART(WEEK,CONVERT(VARCHAR(10),@dDATE1,23))  -	DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,@dDATE1), 0))+ 1 AS FNSaleWeekly	
		 DATEPART(mm,@dDATE1) AS FNSaleMonthly,DATEPART(yyyy,@dDATE1) AS FNSaleYear

		set @dDATE1 = DATEADD(dd,1,@dDATE1)

 	
	END

	DELETE FROM TRPTPTTSpcPSSaleMonthlyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType = 2

	INSERT INTO TRPTPTTSpcPSSaleMonthlyTmp (FNAppType,FTComName,FTRptCode,FTUsrSession,FNSaleMonthly,FNSaleYear)
	SELECT DISTINCT 2 AS FNAppType,FTComName,FTRptCode,FTUsrSession,FNSaleMonthly,FNSaleYear 
	FROM TRPTPTTSpcPSSaleMonthlyTmp
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType = 1

	SET @tSql  = ' UPDATE TRPTPTTSpcPSSaleMonthlyTmp'
	SET @tSql  += ' SET'
		SET @tSql  += ' FNAppType = Sal.FNAppType,FNSaleMonthly = Sal.FNSaleMonthly,FNSaleYear =Sal.FNSaleYear,'
		SET @tSql  += ' FNcshCountBill = Sal.FNcshCountBill,'
		SET @tSql  += ' FCXsdGrandTotal = Sal.FCXsdGrandTotal,'
		SET @tSql  += ' FCXshCashCoupon = Sal.FCXshCashCoupon,'
		SET @tSql  += ' FCXshAmtAFDisc = Sal.FCXshAmtAFDisc,'
		SET @tSql  += ' FCXsdVatable = Sal.FCXsdVatable,'
		SET @tSql  += ' FCXsdVat = Sal.FCXsdVat,'
		SET @tSql  += ' FCXshAllInOne = Sal.FCXshAllInOne,'
		SET @tSql  += ' FCXshElocker = Sal.FCXshElocker,'
		SET @tSql  += ' FCXshDoctor = Sal.FCXshDoctor,'
		SET @tSql  += ' FCXshTelemedi=Sal.FCXshTelemedi'

	SET @tSql  += ' FROM '
	SET @tSql  += ' ( '
			SET @tSql  += ' SELECT '''+@nComName+''' AS FTComName,''2'' AS FNAppType,'
			SET @tSql  += ' DATEPART(mm,FDXshDocDate) AS FNSaleMonthly,DATEPART(yyyy,FDXshDocDate) AS FNSaleYear,'
			--DATEPART(WEEK, FDXshDocDate)  -   DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1 AS FNSaleWeekly, 
			SET @tSql  += ' COUNT(HD.FTXshDocNo) AS FNcshCountBill,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END) AS FCXsdGrandTotal,'
			SET @tSql  += ' SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshCashCoupon,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END)-SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshAmtAFDisc,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVatable,0) ELSE ISNULL(HD.FCXshVatable,0)*-1 END) AS FCXsdVatable,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVat,0) ELSE ISNULL(HD.FCXshVat,0)*-1 END) AS FCXsdVat,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshAllInOne,0)) AS FCXshAllInOne,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshElocker,0)) AS FCXshElocker,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshDoctor,0)) AS FCXshDoctor,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshTelemedi,0)) AS FCXshTelemedi'

			SET @tSql  += ' FROM TPSTSalHD HD WITH(NOLOCK) LEFT JOIN'
				SET @tSql += ' (' --RC
					SET @tSql  += ' SELECT HD.FTBchCode,HD.FTXshDocNo,DATEPART(mm,FDXshDocDate) AS FNSaleMonthly,DATEPART(yyyy,FDXshDocDate) AS FNSaleYear,'
					--DATEPART(WEEK, FDXshDocDate)  -   DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1 AS FNSaleWeekly,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXshCashCoupon'
					SET @tSql  += ' FROM TPSTSalRC RC WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK)	ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
					SET @tSql  += ' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	
					SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					SET @tSql  += ' WHERE RcvFmt_L.FTFmtCode = ''004'' AND HD.FTXshStaDoc = ''1''' 
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY HD.FTBchCode,HD.FTXshDocNo,DATEPART(mm,FDXshDocDate) ,DATEPART(yyyy,FDXshDocDate) '
					--DATEPART(WEEK, FDXshDocDate)  -   DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1'
				SET @tSql  += ' ) Cou ON HD.FTBchCode = Cou.FTBchCode AND HD.FTXshDocNo = Cou.FTXshDocNo'
				SET @tSql  += ' INNER JOIN'
				SET @tSql  += ' (' --Pdt
					SET @tSql  += ' SELECT DT.FTBchCode,DT.FTXshDocNo,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshAllInOne,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshElocker,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshDoctor,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshTelemedi'
					SET @tSql  += ' FROM TPSTSalDT DT WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' INNER JOIN TCNMPdt Pdt WITH(NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode'
					SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					--14/01/2020 FTPdtForSystem add type 4 for condition
					SET @tSql  += ' WHERE FTXsdStaPdt <> ''4'' AND HD.FTXshStaDoc = ''1''  AND PDT.FTPdtForSystem IN (''1'',''4'') AND Pdt.FTPdtType = ''2'' AND DT.FTPdtCode IN (''0018'',''0017'',''00052'',''00051'')'
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY DT.FTBchCode,DT.FTXshDocNo'
				SET @tSql  += ' ) SalDT ON HD.FTBchCode = SalDT.FTBchCode AND HD.FTXshDocNo = SalDT.FTXshDocNo'
				SET @tSql  += ' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
				SET @tSql  += ' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql  += ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''
			SET @tSql += ' GROUP  BY HD.FTBchCode,Bch_L.FTBchName,DATEPART(mm,FDXshDocDate) ,DATEPART(yyyy,FDXshDocDate)'
			--DATEPART(WEEK, FDXshDocDate)  -   DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1'
		SET @tSql  += ' ) Sal '
		SET @tSql  += ' WHERE TRPTPTTSpcPSSaleMonthlyTmp.FNSaleMonthly = Sal.FNSaleMonthly AND TRPTPTTSpcPSSaleMonthlyTmp.FNSaleYear = Sal.FNSaleYear AND TRPTPTTSpcPSSaleMonthlyTmp.FTComName = Sal.FTComName' -- AND TRPTPTTSpcPSSaleMonthlyTmp.FTBchCode = Sal.FTBchCode'	

	--PRINT @tSql
	EXECUTE(@tSql)
	
	DELETE FROM TRPTPTTSpcPSSaleMonthlyTmp
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType= 1  OR (FNAppType = 2 AND  ISNULL(CONVERT(VARCHAR(10),FDXshDocDate,121),'')  <> '' ) --or FDXshDocDate  <> null

	RETURN SELECT * FROM TRPTPTTSpcPSSaleMonthlyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
	--PRINT 'Error'
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSalePosService001003006]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSalePosService001003006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSalePosService001003006] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSalePosService001003006]
--ALTER PROCEDURE [dbo].[SP_RPTxPSSalePosService001003006]
  @pnLngID AS int ,
  @ptComName AS varchar(100) ,
  @ptRptCode AS varchar(100),
  @ptUsrSession AS varchar(255) ,
  @pnFilterType AS int ,
	--สาขา
  @ptBchF AS varchar(5) ,
  @ptBchT AS varchar(5) ,
  @ptBchL AS varchar(8000) ,
	--กลุ่มธุกิจ
  @ptMerF AS varchar(10) ,
  @ptMerT AS varchar(10) ,
	@ptMerL AS varchar(8000) ,

	--ร้าน
  @ptShpF AS varchar(10) ,
  @ptShpT AS varchar(10) ,
	@ptShpL AS varchar(8000) ,

	--จุดขาย
	@ptPosF AS varchar(20),
	@ptPosT AS varchar(20),
	@ptPosL AS varchar(8000) ,

	--ประเภทการชำระเงิน
	@ptRcvF AS varchar(20),
	@ptRcvT AS varchar(20),

	--วันที่เอกสาร
  @ptDocDateF AS varchar(10) ,
  @ptDocDateT AS varchar(10) ,

  @FNResult INT OUTPUT
AS
--------------------------------------
-- Nattakit 
-- Create 19/12/2019
-- Temp name  TRPTCRSalPosSrvTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @nFilterType Varchar(1)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)


	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tBchL Varchar(8000)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tMerL Varchar(8000)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	DECLARE @tShpL Varchar(8000)

	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)
	DECLARE @tPosL Varchar(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

-------------------------------------

	SET @nLngID = @pnLngID
	SET @nComName = @ptComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode
  SET @nFilterType = @pnFilterType
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tBchL = @ptBchL
	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	SET @tMerL =@ptMerL
	--Shop Code
	SET @tShpF =@ptShpF
	SET @tShpT = @ptShpT
	SET @tShpL = @ptShpL

	SET @tPosF  = @ptPosF
	SET @tPosT = @ptPosT 
	SET @tPosL  = @ptPosL

	SET @tRcvF  = @ptRcvF
	SET @tRcvT = @ptRcvT 


	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	--SET @tMonth = @ptMonth
	--SET @tYear = @ptYear

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END

	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END



	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END

	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END


	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''

	IF (@nFilterType=1)
	BEGIN

				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END

				IF (@tMerF <> '' AND @tMerT <> '')
				BEGIN
					SET @tSql1 +=' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
				END

				IF (@tShpF <> '' AND @tShpT <> '')
				BEGIN
					SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
				END

				IF (@tPosF <> '' AND @tPosT <> '')
					BEGIN
						SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosF+''' AND '''+@tPosT+''''
					END		
			

				IF (@tRcvF <> '' AND @tRcvT <> '')
					BEGIN
						SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+@tRcvF+''' AND '''+@tRcvT+''''
					END	
	END

ELSE
	BEGIN
				
					IF(@tBchL <> '')
						BEGIN	
							SET @tSql1 +=' AND HD.FTBchCode IN('+@tBchL+') '
						END

					IF(@tMerL <> '')
						BEGIN	
							SET @tSql1 +=' AND SHP.FTMerCode IN('+@tMerL+') '
						END

					IF(@tShpL <> '')
						BEGIN	
							SET @tSql1 +=' AND HD.FTShpCode IN('+@tShpL+') '
						END

					IF(@tPosL <> '')
						BEGIN	
							SET @tSql1 +=' AND HD.FTPosCode IN('+@tPosL+') '
						END
			

	END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql1 +=' AND FORMAT(HD.FDXshDocDate,''yyyy-MM-dd'') BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END

	--PRINT @tSql1

	DELETE FROM TRPTSpcSalPosSrvTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

 SET @tSql = ' INSERT INTO TRPTSpcSalPosSrvTmp' 
 SET @tSql +=' ('
 SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
 SET @tSql +=' FDXshDocDate,FTPosCode,FTXshDocNo,FTPdtName,FTRcvCode,FTRcvName,FTXshCardNo,FTCstCode,FTXshCardID,FTXshCstName,FTXshCstTel,FTXrcRmk1,'
 SET @tSql +=' FCXrcNet,FTVatCode,FTXrcRmk2,FCXsdVatable,FCXsdVat,FCXrcGrand'
 SET @tSql +=' )'
 SET @tSql +=' SELECT ''' + @nComName + ''' AS FTComName,'''+@tRptCode+''' AS FTRptCode, '''+@tUsrSession+''' AS FTUsrSession,'
 SET @tSql +='	S.*,S.FCXrcNet - ROUND(CONVERT(DECIMAL(7,2),(S.FCXrcNet * S.FTVatCode))/(100+S.FTVatCode),2) AS FCXsdVatable,ROUND(CONVERT(DECIMAL(7,2),(S.FCXrcNet * S.FTVatCode))/(100+S.FTVatCode),2) AS FCXsdVat,S.FCXrcNet AS FCXrcGrand '
 SET @tSql +=' FROM ( SELECT FORMAT(HD.FDXshDocDate,''yyyy-MM-dd'') AS FDXshDocDate,HD.FTPosCode,HD.FTXshDocNo,DT.FTPdtName,RC.FTRcvCode,RC.FTRcvName,HDC.FTXshCardNo,HD.FTCstCode,HDC.FTXshCardID,HDC.FTXshCstName,HDC.FTXshCstTel,RC.FTXrcRefNo1 AS FTXrcRmk1,'
 SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  RC.FCXrcNet ELSE RC.FCXrcNet * -1 END AS FCXrcNet,'
 SET @tSql +=' (SELECT ISNULL(VAT.FCVatRate,7) AS FCVatRate FROM TCNMComp CMP INNER JOIN TCNMVatRate VAT ON CMP.FTVatCode = VAT.FTVatCode) AS FTVatCode,'
 SET @tSql +='  RC.FTXrcRmk AS FTXrcRmk2'
 SET @tSql +=' FROM TPSTSalRC RC'
 SET @tSql +=' INNER JOIN'
 SET @tSql +=' ('
 SET @tSql +=' SELECT DISTINCT HD.FTBchCode,HD.FTPosCode,HD.FTXshDocNo,HD.FNXshDocType,HD.FDXshDocDate,HD.FTCstCode FROM TPSTSalDT DT WITH(NOLOCK) '
 SET @tSql +=' INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo '
 --SET @tSql +=' LEFT  JOIN TCNMShop SHP WITH(NOLOCK) ON   HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode '
 SET @tSql +=' INNER JOIN TPSTSalRC RC WITH(NOLOCK) ON DT.FTXshDocNo = RC.FTXshDocNo'
 SET @tSql +=' INNER JOIN ('
 SET @tSql +=' SELECT PDT.* FROM ('
 SET @tSql +=' SELECT SPDT.FTPdtCode,SPDT.FTPdtType,SPDT.FTPdtForSystem,PDTL.FTPdtName'
 SET @tSql +=' FROM TCNMPdt SPDT WITH(NOLOCK)'
 SET @tSql +=' LEFT JOIN TCNMPdt_L PDTL ON SPDT.FTPdtCode = PDTL.FTPdtCode AND PDTL.FNLngID = 1'
 SET @tSql +=' ) PDT WHERE PDT.FTPdtType = 2 AND PDT.FTPdtForSystem IN (1,4)'
 SET @tSql +=' ) PDT ON DT.FTPdtCode = PDT.FTPdtCode'
 SET @tSql +=' LEFT JOIN TPSTSalHDCst HDC ON HD.FTXshDocNo = HDC.FTXshDocNo'
 SET @tSql +=' INNER JOIN TCNMShop SHP ON HD.FTShpCode = SHP.FTShpCode'
 --SET @tSql +=' ) PDT ON DT.FTPdtCode = PDT.FTPdtCode'
 SET @tSql +=' WHERE HD.FTXshStaDoc = 1'
 SET @tSql += @tSql1
 SET @tSql +=' ) HD ON   RC.FTBchCode = HD.FTBchCode'
 SET @tSql +=' AND RC.FTXshDocNo = HD.FTXshDocNo '
 SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo'
 SET @tSql +=' LEFT  JOIN TPSTSalHDCst HDC  WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo '
 --SET @tSql +=' UNION ALL'
 --SET @tSql +=' SELECT FORMAT(HD.FDXshDocDate,''yyyy-MM-dd'') AS FDCreateOn,HD.FTPosCode,HD.FTXshDocNo,DT.FTPdtName,RC.FTRcvCode,RC.FTRcvName,HDC.FTXshCardNo,HDC.FTXshCardID,'
 --SET @tSql +=' HDC.FTXshCstName,HDC.FTXshCstTel,RC.FTXrcRefNo1 AS FTXrcRmk1,'
 --SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  RC.FCXrcNet ELSE RC.FCXrcNet * -1 END AS FCXrcNet,'
 --SET @tSql +=' (SELECT ISNULL(VAT.FCVatRate,7) AS FCVatRate FROM TCNMComp CMP INNER JOIN TCNMVatRate VAT ON CMP.FTVatCode = VAT.FTVatCode) AS FTVatCode,'
 --SET @tSql +=' RC.FTXrcRmk AS FTXrcRmk2'
 --SET @tSql +=' FROM TVDTSalRC RC'
 --SET @tSql +=' INNER JOIN('
 --SET @tSql +=' SELECT  DISTINCT HD.FTBchCode,HD.FTPosCode,HD.FTXshDocNo,HD.FNXshDocType,HD.FDXshDocDate FROM TVDTSalDT DT WITH(NOLOCK) INNER JOIN TVDTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo'
 --SET @tSql +=' LEFT  JOIN TCNMShop SHP WITH(NOLOCK) ON   HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode'
 --SET @tSql +=' INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode'
 --SET @tSql +=' WHERE HD.FTXshStaDoc = 1'
 --SET @tSql += @tSql1
 --SET @tSql +=' ) HD ON   RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo '
 --SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo' 
 --SET @tSql +=' LEFT  JOIN TVDTSalHDCst HDC  WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo '
 SET @tSql +=' ) S ORDER BY S.FDXshDocDate'

 --PRINT @tSql


 EXECUTE(@tSql)

 RETURN SELECT * FROM TRPTSpcSalPosSrvTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ FTRptCode +''
 
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
	--PRINT '211111'
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSaleWeeklyTmp10]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSaleWeeklyTmp10]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSaleWeeklyTmp10] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSaleWeeklyTmp10] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	--เครื่องจุดขาย
	@ptPosCodeL Varchar(8000), --กรณี Condition IN
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	@ptMonth nVarchar(2),
	@ptYear nVarchar(4),

	--@ptDocDateF Varchar(10),
	--@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)

	DECLARE @tPosCodeF Varchar(20)
	DECLARE @tPosCodeT Varchar(20)

	--DECLARE @tDocDateF Varchar(10)
	--DECLARE @tDocDateT Varchar(10)
	DECLARE @tMonth nVarchar(2)
	DECLARE @tYEar nVarchar(4)

	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop Code
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosCodeF  = @ptPosCodeF 
	SET @tPosCodeT = @ptPosCodeT 

	--SET @tDocDateF = @ptDocDateF
	--SET @tDocDateT = @ptDocDateT
	SET @tMonth = @ptMonth
	SET @tYear = @ptYear

	SET @FNResult= 0

	--SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @ptPosCodeL = null
	BEGIN
		SET @ptPosCodeL = ''
	END

	IF @tPosCodeF = null
	BEGIN
		SET @tPosCodeF = ''
	END

	IF @tPosCodeT = null OR @tPosCodeT = ''
	BEGIN
		SET @tPosCodeT = @tPosCodeF
	END


	IF @tMonth = null
	BEGIN 
		SET @tMonth = ''
	END

	IF @tYear = null
	BEGIN
		SET @tYear = ''
	END
	--IF @tDocDateF = null
	--BEGIN 
	--	SET @tDocDateF = ''
	--END

	--IF @tDocDateT = null OR @tDocDateT =''
	--BEGIN 
	--	SET @tDocDateT = @tDocDateF
	--END

	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosCodeF + ''' AND ''' + @tPosCodeT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (''' + @ptBchL + ''')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (''' + @ptMerL + ''')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (''' + @ptShpL + ''')'
		END

		IF (@ptPosCodeL <> '')
			BEGIN
				SET @tSql1 += ' AND HD.FTPosCode IN (''' + @ptPosCodeL + ''')'
		END		
	END


	--IF (@tDocDateF <> '' AND @tDocDateT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	--END
	SET @tMonth = CASE @tMonth
	WHEN '1' THEN '01'
	WHEN '2' THEN '02'
	WHEN '3' THEN '03'
	WHEN '4' THEN '04'
	WHEN '5' THEN '05'
	WHEN '6' THEN '06'
	WHEN '7' THEN '07'
	WHEN '8' THEN '08'
	WHEN '9' THEN '09'
	ELSE @tMonth		
	END 

	IF (@tMonth <> '' )
	BEGIN
		SET @tSql1 +=' AND MONTH(HD.FDXshDocDate) = ''' + @tMonth + ''''
	END

		IF (@tYear <> 0 )
	BEGIN
		SET @tSql1 +=' AND YEAR(HD.FDXshDocDate) = ''' + @tYear + ''''
	END



	DECLARE @dDATE1 DATE
	DECLARE @dDATE2 DATE
	DECLARE @dDATEF DATETIME
	DECLARE @tTblName Varchar(50)
	DECLARE @tSQLTmp Varchar(8000)
	DECLARE @tSQLTunc Varchar(8000)
	--DECLARE @tMonth Varchar(50)
	--DECLARE @tYear Varchar(50)
	--SET @tMonth = '11'
	--SET @tYear = '2019'
	--DECLARE @tSql Varchar(50)

	--PRINT @tDocDateF
	--PRINT @tDocDateT

	SET @dDATE1 =  CONVERT(VARCHAR, @tYear + '-' + @tMonth + '-01',23)
	SELECT @dDATEF = DATEADD(month, DATEDIFF(month, 0, @dDATE1), 0)

    SELECT @dDATE2 = EOMONTH(@dDATE1)
	SELECT @dDATEF = CONVERT(nVARCHAR,@dDATEF,121)
	--PRINT @dDATEF
	--PRINT @dDATE1
	--PRINT @dDATE2
	
	DELETE FROM TRPTPTTSpcPSSaleWeeklyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	
	WHILE(@dDATE1<=@dDATE2)
	Begin
		--PRINT @dDATE1
		--SET @dDATEOld =@dDATE1

		INSERT INTO TRPTPTTSpcPSSaleWeeklyTmp (FNAppType,FTComName,FTRptCode,FTUsrSession,FDXshDocDate,FNSaleWeekly)
		--SELECT DISTINCT 'Ada062' AS FTComName,'PSSaleDailyTmp09' AS FTRptCode, '001' AS FTUsrSession,@dDATE1 AS FDXshDocDate,FTBchCode
		SELECT '1' AS FNAppType,  @nComName  AS FTComName, @tRptCode  AS FTRptCode,  @tUsrSession AS FTUsrSession,@dDATE1 AS FDXshDocDate,
		DATEPART(WEEK,CONVERT(VARCHAR(10),@dDATE1,23))  -	DATEPART(WEEK,DATEADD(MM, DATEDIFF(MM,0,@dDATE1), 0))+ 1 AS FNSaleWeekly	

		set @dDATE1 = DATEADD(dd,1,@dDATE1)

 	
	END

	DELETE FROM TRPTPTTSpcPSSaleWeeklyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType = 2

	INSERT INTO TRPTPTTSpcPSSaleWeeklyTmp (FNAppType,FTComName,FTRptCode,FTUsrSession,FNSaleWeekly )
	SELECT DISTINCT 2 AS FNAppType,FTComName,FTRptCode,FTUsrSession,FNSaleWeekly 
	FROM TRPTPTTSpcPSSaleWeeklyTmp
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType = 1

	SET @tSql  = ' UPDATE TRPTPTTSpcPSSaleWeeklyTmp'
	SET @tSql  += ' SET'
		SET @tSql  += ' FNAppType = Sal.FNAppType,FNSaleWeekly = Sal.FNSaleWeekly,'
		SET @tSql  += ' FNcshCountBill = Sal.FNcshCountBill,'
		SET @tSql  += ' FCXsdGrandTotal = Sal.FCXsdGrandTotal,'
		SET @tSql  += ' FCXshCashCoupon = Sal.FCXshCashCoupon,'
		SET @tSql  += ' FCXshAmtAFDisc = Sal.FCXshAmtAFDisc,'
		SET @tSql  += ' FCXsdVatable = Sal.FCXsdVatable,'
		SET @tSql  += ' FCXsdVat = Sal.FCXsdVat,'
		SET @tSql  += ' FCXshAllInOne = Sal.FCXshAllInOne,'
		SET @tSql  += ' FCXshElocker = Sal.FCXshElocker,'
		SET @tSql  += ' FCXshDoctor = Sal.FCXshDoctor,'
		SET @tSql  += ' FCXshTelemedi=Sal.FCXshTelemedi'

	SET @tSql  += ' FROM '
	SET @tSql  += ' ('
			SET @tSql  += ' SELECT '''+@nComName+''' AS FTComName,''2'' AS FNAppType,DATEPART(WEEK,FDXshDocDate)-DATEPART(WEEK,DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+1 AS FNSaleWeekly, COUNT(HD.FTXshDocNo) AS FNcshCountBill,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END) AS FCXsdGrandTotal,'
			SET @tSql  += ' SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshCashCoupon,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshGrand,0) ELSE ISNULL(HD.FCXshGrand,0)*-1 END)-SUM(ISNULL(Cou.FCXshCashCoupon,0)) AS FCXshAmtAFDisc,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVatable,0) ELSE ISNULL(HD.FCXshVatable,0)*-1 END) AS FCXsdVatable,'
			SET @tSql  += ' SUM(CASE WHEN FNXshDocType = ''1'' THEN ISNULL(HD.FCXshVat,0) ELSE ISNULL(HD.FCXshVat,0)*-1 END) AS FCXsdVat,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshAllInOne,0)) AS FCXshAllInOne,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshElocker,0)) AS FCXshElocker,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshDoctor,0)) AS FCXshDoctor,'
			SET @tSql  += ' SUM(ISNULL(SalDT.FCXshTelemedi,0)) AS FCXshTelemedi'

			SET @tSql  += ' FROM TPSTSalHD HD WITH(NOLOCK) LEFT JOIN'
				SET @tSql += ' (' --RC
					SET @tSql  += ' SELECT HD.FTBchCode,HD.FTXshDocNo,DATEPART(WEEK,FDXshDocDate)-DATEPART(WEEK,DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1 AS FNSaleWeekly,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXshCashCoupon'
					SET @tSql  += ' FROM TPSTSalRC RC WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK)	ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
					SET @tSql  += ' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	
					SET @tSql  += ' LEFT JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					SET @tSql  += ' WHERE RcvFmt_L.FTFmtCode = ''004'' AND HD.FTXshStaDoc = ''1''' 
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY HD.FTBchCode,HD.FTXshDocNo,DATEPART(WEEK,FDXshDocDate)-DATEPART(WEEK,DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate), 0))+ 1'
				SET @tSql  += ' )Cou ON HD.FTBchCode = Cou.FTBchCode AND HD.FTXshDocNo = Cou.FTXshDocNo'
				SET @tSql  += ' INNER JOIN'
				SET @tSql  += ' (' --Pdt
					SET @tSql  += ' SELECT DT.FTBchCode,DT.FTXshDocNo,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0018'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshAllInOne,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''0017'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshElocker,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00052'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshDoctor,'
					SET @tSql  += ' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END ELSE (CASE WHEN DT.FTPdtCode= ''00051'' THEN ISNULL(DT.FCXsdNetAfHD,0) ELSE 0 END)*-1 END) AS FCXshTelemedi'
					SET @tSql  += ' FROM TPSTSalDT DT WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo'
					SET @tSql  += ' INNER JOIN TCNMPdt Pdt WITH(NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode'
					SET @tSql  += ' LEFT JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
					--14/01/2020 FTPdtForSystem add type 4 for condition 
					SET @tSql  += ' WHERE FTXsdStaPdt <> ''4'' AND HD.FTXshStaDoc = ''1'' AND PDT.FTPdtForSystem IN (''1'',''4'') AND Pdt.FTPdtType = ''2'' AND DT.FTPdtCode IN (''0018'',''0017'',''00052'',''00051'')'
					SET @tSql  +=  @tSql1
					SET @tSql  += ' GROUP BY DT.FTBchCode,DT.FTXshDocNo'
				SET @tSql  += ' ) SalDT ON HD.FTBchCode = SalDT.FTBchCode AND HD.FTXshDocNo = SalDT.FTXshDocNo'
				SET @tSql  += ' LEFT JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode'
				SET @tSql  += ' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql  += ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''
			SET @tSql += ' GROUP BY HD.FTBchCode,Bch_L.FTBchName,DATEPART(WEEK,FDXshDocDate)-DATEPART(WEEK,DATEADD(MM, DATEDIFF(MM,0,FDXshDocDate),0))+ 1'
		SET @tSql  += ' )Sal '
		SET @tSql  += ' WHERE TRPTPTTSpcPSSaleWeeklyTmp.FNSaleWeekly = Sal.FNSaleWeekly AND TRPTPTTSpcPSSaleWeeklyTmp.FTComName = Sal.FTComName' -- AND TRPTPTTSpcPSSaleWeeklyTmp.FTBchCode = Sal.FTBchCode'	

	--PRINT @tSql
	EXECUTE(@tSql)
	
	DELETE FROM TRPTPTTSpcPSSaleWeeklyTmp
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNAppType= '1'

	DELETE FROM TRPTPTTSpcPSSaleWeeklyTmp
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND (FNAppType = 2 AND  ISNULL(CONVERT(VARCHAR(10),FDXshDocDate,121),'')  <> '' ) --or FDXshDocDate  <> null

	RETURN SELECT * FROM TRPTPTTSpcPSSaleWeeklyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	PRINT @tSql
	--PRINT 'Error'
END CATCH	
--SELECT * FROM TRPTPSTaxHDTmp
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSDailyVat1001006]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSDailyVat1001006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSDailyVat1001006] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSDailyVat1001006] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	--เครื่องจุดขาย
	@ptPosCodeL Varchar(8000), --กรณี Condition IN
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	--20-12-2019
	--ประเภทชำระเงิน
	@ptPayF Varchar(3),
	@ptPayT Varchar(3),

	--NUI 08-01-2020
	@ptDocDateF Varchar(10),
	--@ptDocDateT Varchar(10),
	--@ptMonth nVarchar(2),
	--@ptYear nVarchar(4),

	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)

	DECLARE @tPosCodeF Varchar(20)
	DECLARE @tPosCodeT Varchar(20)

	--DECLARE @tMonth nVarchar(2)
	--DECLARE @tYEar nVarchar(4)
	--NUI 08-01-2020
	DECLARE @tDocDateF Varchar(10)
	--DECLARE @tDocDateT Varchar(10)

	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop Code
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosCodeF  = @ptPosCodeF 
	SET @tPosCodeT = @ptPosCodeT 

	--SET @tMonth = @ptMonth
	--SET @tYear = @ptYear
	SET @tDocDateF = @ptDocDateF
	--SET @tDocDateT = @ptDocDateT

	SET @FNResult= 0
	--NUI 08-01-2020
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	--Branch
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END
	-------

	---Merchant
	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END
	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 
	----------------
	
	--SHOP
	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END
	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 
	------------------

	--Pos
	IF @ptPosCodeL = null
	BEGIN
		SET @ptPosCodeL = ''
	END
	IF @tPosCodeF = null
	BEGIN
		SET @tPosCodeF = ''
	END

	IF @tPosCodeT = null OR @tPosCodeT = ''
	BEGIN
		SET @tPosCodeT = @tPosCodeF
	END
	-----------------------------------

	IF @ptPayF = null
	BEGIN
		SET @ptPayF = ''
	END

	IF @ptPayT = null OR @ptPayT = ''
	BEGIN
		SET @ptPayT = @ptPayF
	END
	--NUI 08-01-2020
	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END	
	--IF @tMonth = null
	--BEGIN 
	--	SET @tMonth = ''
	--END

	--IF @tYear = null
	--BEGIN
	--	SET @tYear = ''
	--END

	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosCodeL <>'')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN ('+@ptPosCodeL+ ')'
		END		
	END
	--NUI 08-01-2020
	IF (@tDocDateF <> '' )
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) = ''' + @tDocDateF + ''''
	END

	--IF (@tDocDateF <> '' AND @tDocDateT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	--END

	--IF (@tMonth <> '' )
	--BEGIN
	--	SET @tSql1 +=' AND MONTH(HD.FDXshDocDate) = ''' + @tMonth + ''''
	--END

	--	IF (@tYear <> 0 )
	--BEGIN
	--	SET @tSql1 +=' AND YEAR(FDXshDocDate) = ''' + @tYear + ''''
	--END

	--PRINT  @tSql1
	DELETE FROM TRPTPSTaxDailyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	--sale
 	SET @tSql  = ' INSERT INTO TRPTPSTaxDailyTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName, FTCstLastName, FTCstIdCard,FCXsdVatable,FCXsdVat'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName,FTCstLastName,FTCstIdCard,'
	--SET @tSql +=' ROUND(FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVatable,'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVatable,'
	--SET @tSql +=' ROUND(((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVat'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVat'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT 1 AS FNAppType,'
		SET @tSql +='  (SELECT ISNULL(VRate.FCVatRate,7) AS FCVatRate FROM TCNMComp Cmp WITH(NOLOCK) INNER JOIN TCNMVatRate VRate WITH(NOLOCK) ON Cmp.FTVatCode = VRate.FTVatCode) AS FTVatCode,'
		SET @tSql +=' HD.FTBchCode,Bch_L.FTBchName, HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'--Pay2.FTRcvCode,
		SET @tSql +='  CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,HD.FTXshDocNo,DT.FTPdtName,' --DT.FTPdtCode,Pdt_L.FTPdtName,'
		SET @tSql +='  HD.FTCstCode,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END AS FTCstName,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END AS FTCstLastName,' 
		SET @tSql +=' HDCst.FTXshCardID AS FTCstIdCard, SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXrcNet' 	
		SET @tSql +=' FROM TPSTSalRC RC WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo' --LEFT JOIN
		SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo'
		SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
		SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMPOS POS WITH(NOLOCK) ON HD.FTPosCode = Pos.FTPosCode' 
		SET @tSql +=' LEFT JOIN TCNMCst Cst WITH(NOLOCK) ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSql +=' LEFT JOIN TPSTSalHDCst HDCst WITH(NOLOCK) ON HD.FTXshDocNo = HDCst.FTXshDocNo' 
		SET @tSql +=' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode' 
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' WHERE HD.FTXshStaDoc = ''1'' '
		SET @tSql += @tSql1
		SET @tSql +=' GROUP BY HD.FTBchCode,FTBchName,HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'
		SET @tSql +=' CONVERT(VARCHAR(10),FDXshDocDate,121) ,HD.FTXshDocNo,' --DT.FTPdtCode,'
		SET @tSql +=' DT.FTPdtName,'
		SET @tSql +=' HD.FTCstCode,'
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END,' 
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END,' 
			SET @tSql +=' HDCst.FTXshCardID' 
		SET @tSql +=' ) RC'
		IF (@ptPayF <> '' AND @ptPayT <> '')
		BEGIN
			SET @tSql += ' WHERE RC.FTRcvCode BETWEEN ''' + @ptPayF + ''' AND ''' + @ptPayT + ''''
		END	
		

	-- SET @tSql +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	--SET @tSql +=' TCNMBranch_L Bch_L ON VDVat.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''				 

	--PRINT  @tSql
	EXECUTE(@tSql)

	--Insert VD
	SET @tSql  = ' INSERT INTO TRPTPSTaxDailyTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName, FTCstLastName, FTCstIdCard,FCXsdVatable,FCXsdVat'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName,FTCstLastName,FTCstIdCard,'
	--SET @tSql +=' ROUND(FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVatable,'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVatable,'
	--SET @tSql +=' ROUND(((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVat'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVat'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT 2 AS FNAppType,'
		SET @tSql +='  (SELECT ISNULL(VRate.FCVatRate,7) AS FCVatRate FROM TCNMComp Cmp WITH(NOLOCK) INNER JOIN TCNMVatRate VRate WITH(NOLOCK) ON Cmp.FTVatCode = VRate.FTVatCode) AS FTVatCode,'
		SET @tSql +=' HD.FTBchCode,Bch_L.FTBchName, HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'--Pay2.FTRcvCode,
		SET @tSql +='  CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,HD.FTXshDocNo,DT.FTPdtName,' --DT.FTPdtCode,Pdt_L.FTPdtName,'
		SET @tSql +='  HD.FTCstCode,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END AS FTCstName,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END AS FTCstLastName,' 
		SET @tSql +=' HDCst.FTXshCardID AS FTCstIdCard, SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXrcNet' 	
		SET @tSql +=' FROM TVDTSalRC RC WITH(NOLOCK) INNER JOIN TVDTSalHD HD WITH(NOLOCK) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo' --LEFT JOIN
		SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo'
		SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
		SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMPOS POS WITH(NOLOCK) ON HD.FTPosCode = Pos.FTPosCode' 
		SET @tSql +=' LEFT JOIN TCNMCst Cst WITH(NOLOCK) ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSql +=' LEFT JOIN TVDTSalHDCst HDCst WITH(NOLOCK) ON HD.FTXshDocNo = HDCst.FTXshDocNo' 
		SET @tSql +=' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode' 
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' WHERE HD.FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004''  '
		SET @tSql += @tSql1
		SET @tSql +=' GROUP BY HD.FTBchCode,FTBchName,HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'
		SET @tSql +=' CONVERT(VARCHAR(10),FDXshDocDate,121) ,HD.FTXshDocNo,' --DT.FTPdtCode,'
		SET @tSql +=' DT.FTPdtName,'
		SET @tSql +=' HD.FTCstCode,'
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END,' 
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END,' 
			SET @tSql +=' HDCst.FTXshCardID' 
		SET @tSql +=' ) RC'
		IF (@ptPayF <> '' AND @ptPayT <> '')
		BEGIN
			SET @tSql += ' WHERE RC.FTRcvCode BETWEEN ''' + @ptPayF + ''' AND ''' + @ptPayT + ''''
		END			 
			
	PRINT  @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPSTaxDailyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
	--PRINT '211111'
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSMonthlyVat07]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSMonthlyVat07]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSMonthlyVat07] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSMonthlyVat07] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),

	--เครื่องจุดขาย
	@ptPosCodeL Varchar(8000), --กรณี Condition IN
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	--20-12-2019
	--ประเภทชำระเงิน
	@ptPayF Varchar(3),
	@ptPayT Varchar(3),

	--@ptMonth nVarchar(2),
	--@ptYear nVarchar(4),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)

	DECLARE @tPosCodeF Varchar(20)
	DECLARE @tPosCodeT Varchar(20)

	--DECLARE @tMonth nVarchar(2)
	--DECLARE @tYEar nVarchar(4)

	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop Code
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosCodeF  = @ptPosCodeF 
	SET @tPosCodeT = @ptPosCodeT 

	--SET @tMonth = @ptMonth
	--SET @tYear = @ptYear

	SET @FNResult= 0

	SET @ptDocDateF = CONVERT(VARCHAR(10),@ptDocDateF,121)
	SET @ptDocDateT = CONVERT(VARCHAR(10),@ptDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	--Branch
	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END
	-------

	---Merchant
	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END
	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 
	----------------
	
	--SHOP
	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END
	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END 
	------------------

	--Pos
	IF @ptPosCodeL = null
	BEGIN
		SET @ptPosCodeL = ''
	END
	IF @tPosCodeF = null
	BEGIN
		SET @tPosCodeF = ''
	END

	IF @tPosCodeT = null OR @tPosCodeT = ''
	BEGIN
		SET @tPosCodeT = @tPosCodeF
	END
	-----------------------------------

	IF @ptPayF = null
	BEGIN
		SET @ptPayF = ''
	END

	IF @ptPayT = null OR @ptPayT = ''
	BEGIN
		SET @ptPayT = @ptPayF
	END


	IF @ptDocDateF = null
	BEGIN 
		SET @ptDocDateF = ''
	END

	IF @ptDocDateT = null OR @ptDocDateT =''
	BEGIN 
		SET @ptDocDateT = @ptDocDateF
	END
		
	--IF @tMonth = null
	--BEGIN 
	--	SET @tMonth = ''
	--END

	--IF @tYear = null
	--BEGIN
	--	SET @tYear = ''
	--END

	SET @tSql1 =   ' '-- WHERE 1=1 AND HD.FTXshStaDoc = ''1'' AND FTXsdStaPdt <> ''4'''
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosCodeL <>'')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN ('+@ptPosCodeL+')'
		END		
	END

	IF (@ptDocDateF <> '' AND @ptDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @ptDocDateF + ''' AND ''' + @ptDocDateT + ''''
	END

	--IF (@tMonth <> '' )
	--BEGIN
	--	SET @tSql1 +=' AND MONTH(HD.FDXshDocDate) = ''' + @tMonth + ''''
	--END

	--	IF (@tYear <> 0 )
	--BEGIN
	--	SET @tSql1 +=' AND YEAR(FDXshDocDate) = ''' + @tYear + ''''
	--END

	--PRINT @tSql1
	DELETE FROM TRPTPSTaxMonthlyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	--sale
 	SET @tSql  = ' INSERT INTO TRPTPSTaxMonthlyTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName, FTCstLastName, FTCstIdCard,FCXsdVatable,FCXsdVat'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName,FTCstLastName,FTCstIdCard,'
	--SET @tSql +=' ROUND(FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVatable,'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVatable,'
	--SET @tSql +=' ROUND(((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVat'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVat'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT 1 AS FNAppType,'
		SET @tSql +='  (SELECT ISNULL(VRate.FCVatRate,7) AS FCVatRate FROM TCNMComp Cmp WITH(NOLOCK) INNER JOIN TCNMVatRate VRate WITH(NOLOCK) ON Cmp.FTVatCode = VRate.FTVatCode) AS FTVatCode,'
		SET @tSql +=' HD.FTBchCode,Bch_L.FTBchName, HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'--Pay2.FTRcvCode,
		SET @tSql +='  CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,HD.FTXshDocNo,DT.FTPdtName,' --DT.FTPdtCode,Pdt_L.FTPdtName,'
		SET @tSql +='  HD.FTCstCode,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END AS FTCstName,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END AS FTCstLastName,' 
		SET @tSql +=' HDCst.FTXshCardID AS FTCstIdCard, SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXrcNet' 	
		SET @tSql +=' FROM TPSTSalRC RC WITH(NOLOCK) INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo' --LEFT JOIN
		SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo'
		SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
		SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMPOS POS WITH(NOLOCK) ON HD.FTPosCode = Pos.FTPosCode' 
		SET @tSql +=' LEFT JOIN TCNMCst Cst WITH(NOLOCK) ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSql +=' LEFT JOIN TPSTSalHDCst HDCst WITH(NOLOCK) ON HD.FTXshDocNo = HDCst.FTXshDocNo' 
		SET @tSql +=' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode' 
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' WHERE HD.FTXshStaDoc = ''1'''
		SET @tSql += @tSql1
		SET @tSql +=' GROUP BY HD.FTBchCode,FTBchName,HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'
		SET @tSql +=' CONVERT(VARCHAR(10),FDXshDocDate,121) ,HD.FTXshDocNo,' --DT.FTPdtCode,'
		SET @tSql +=' DT.FTPdtName,'
		SET @tSql +=' HD.FTCstCode,'
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END,' 
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END,' 
			SET @tSql +=' HDCst.FTXshCardID' 
		SET @tSql +=' ) RC'
		IF (@ptPayF <> '' AND @ptPayT <> '')
		BEGIN
			SET @tSql += ' WHERE RC.FTRcvCode BETWEEN ''' + @ptPayF + ''' AND ''' + @ptPayT + ''''
		END	
  

	-- SET @tSql +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	--SET @tSql +=' TCNMBranch_L Bch_L ON VDVat.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''				 

	--PRINT @tSql
	EXECUTE(@tSql)

	--Insert VD
	SET @tSql  = ' INSERT INTO TRPTPSTaxMonthlyTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName, FTCstLastName, FTCstIdCard,FCXsdVatable,FCXsdVat'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FNAppType,FTBchCode,FTBchName,FTPosCode,FTRcvCode,FTFmtCode,FTFmtName,FDXshDocDate,FTXshDocNo,FTPdtName,FTCstCode,FTCstName,FTCstLastName,FTCstIdCard,'
	--SET @tSql +=' ROUND(FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVatable,'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),FCXrcNet-((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVatable,'
	--SET @tSql +=' ROUND(((FCXrcNet*FTVatCode)/(100+FTVatCode)),2) AS FCXsdVat'
	SET @tSql +=' ROUND(CONVERT(DECIMAL(31,2),((FCXrcNet*FTVatCode)/(100+FTVatCode))),2) AS FCXsdVat'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT 2 AS FNAppType,'
		SET @tSql +='  (SELECT ISNULL(VRate.FCVatRate,7) AS FCVatRate FROM TCNMComp Cmp WITH(NOLOCK) INNER JOIN TCNMVatRate VRate WITH(NOLOCK) ON Cmp.FTVatCode = VRate.FTVatCode) AS FTVatCode,'
		SET @tSql +=' HD.FTBchCode,Bch_L.FTBchName, HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'--Pay2.FTRcvCode,
		SET @tSql +='  CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,HD.FTXshDocNo,DT.FTPdtName,' --DT.FTPdtCode,Pdt_L.FTPdtName,'
		SET @tSql +='  HD.FTCstCode,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END AS FTCstName,' 
		SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END AS FTCstLastName,' 
		SET @tSql +=' HDCst.FTXshCardID AS FTCstIdCard, SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0)*-1 END) AS FCXrcNet' 	
		SET @tSql +=' FROM TVDTSalRC RC WITH(NOLOCK) INNER JOIN TVDTSalHD HD WITH(NOLOCK) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo' --LEFT JOIN
		SET @tSql +=' INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo'
		SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
		SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFmt_L WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFmt_L.FTFmtCode AND RcvFmt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' LEFT JOIN TCNMPOS POS WITH(NOLOCK) ON HD.FTPosCode = Pos.FTPosCode' 
		SET @tSql +=' LEFT JOIN TCNMCst Cst WITH(NOLOCK) ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSql +=' LEFT JOIN TVDTSalHDCst HDCst WITH(NOLOCK) ON HD.FTXshDocNo = HDCst.FTXshDocNo' 
		SET @tSql +=' INNER JOIN TCNMShop Shp WITH(NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode' 
		SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSql +=' WHERE HD.FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004'' '
		SET @tSql += @tSql1
		SET @tSql +=' GROUP BY HD.FTBchCode,FTBchName,HD.FTPosCode,Rcv.FTRcvCode,Rcv.FTFmtCode,RcvFmt_L.FTFmtName,'
		SET @tSql +=' CONVERT(VARCHAR(10),FDXshDocDate,121) ,HD.FTXshDocNo,' --DT.FTPdtCode,'
		SET @tSql +=' DT.FTPdtName,'
		SET @tSql +=' HD.FTCstCode,'
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN HDCst.FTXshCstName ELSE RTRIM(LEFT(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName))) END,' 
			SET @tSql +=' CASE WHEN CHARINDEX('' '',HDCst.FTXshCstName) = 0 THEN '''' ELSE SUBSTRING(HDCst.FTXshCstName,CHARINDEX('' '',HDCst.FTXshCstName),LEN(HDCst.FTXshCstName)) END,' 
			SET @tSql +=' HDCst.FTXshCardID' 
		SET @tSql +=' ) RC'
		IF (@ptPayF <> '' AND @ptPayT <> '')
		BEGIN
			SET @tSql += ' WHERE RC.FTRcvCode BETWEEN ''' + @ptPayF + ''' AND ''' + @ptPayT + ''''
		END			 

	--PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPSTaxMonthlyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
	--PRINT '211111'
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSVat1001006]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSVat1001006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSVat1001006] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSVat1001006] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),
	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	----เครื่องจุดขาย
	--@ptPosCodeF Varchar(20),
	--@ptPosCodeT Varchar(20),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)

	--DECLARE @tPosCodeF Varchar(20)
	--DECLARE @tPosCodeT Varchar(20)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT

	--SET @tPosCodeF  = @ptPosCodeF 
	--SET @tPosCodeT = @ptPosCodeT 

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tPosCodeF = null
	--BEGIN
	--	SET @tPosCodeF = ''
	--END

	--IF @tPosCodeT = null OR @tPosCodeT = ''
	--BEGIN
	--	SET @tPosCodeT = @tPosCodeF
	--END

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	--SET @tSqlSal =  ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	--SET @tSqlVD =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END

	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--	END		

	SET @tSql1 = ' '
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTPSTaxHDTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTPSTaxHDTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FDXshdocDate,FTXshDocNo,FTPosCode,FTXshDocRef,FTCstCode,FTCstName,FTCstTaxNo,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal,'
	--*NUI 2019-11-14
	SET @tSql +=' FNAppType,FTPosRegNo,FTCstBchCode,FTCstBusiness,FTEstablishment'
	-------------
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' SalVat.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,FTXshDocNo,FTPosCode,FTXshRefInt,FTCstCode,FTCstName,FTCstTaxNo,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand,'
	--*NUI 2019-11-14
	SET @tSql +=' FNAppType,FTPosRegNo,FTCstBchCode,FTCstBusiness,FTEstablishment'
	SET @tSql +=' FROM'	
			SET @tSql +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,FTXshDocNo,ISNULL(FTXshRefInt,'''') FTXshRefInt,HD.FTCstCode,Cst_L.FTCstName,Cst.FTCstTaxNo,'
			--NUI10-04-2020
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END AS FCXshAmtNV,'
			--NUI10-04-2020
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END AS FCXshGrand,'
			--*NUI 2019-11-14
			SET @tSql +=' 1 AS FNAppType,POS.FTPosRegNo,Cst.FTCstBchCode,Cst.FTCstBusiness,'
			SET @tSql +=' CASE WHEN ISNULL(Cst.FTCstBusiness,'''') <> ''1'' THEN '''' ELSE CASE WHEN FTCstBchHQ = ''2'' THEN ''Branch / '' + FTCstBchCode  ELSE ''Head Office'' END  END AS FTEstablishment'
			SET @tSql +=' FROM TPSTSalHD HD LEFT JOIN'
		 			  SET @tSql +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode LEFT JOIN'
					  SET @tSql +=' TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode LEFT JOIN'
					  SET @tSql +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
					  SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
					  SET @tSql +=' WHERE 1=1 AND FTXshStaDoc = ''1'''			  			
			SET @tSql += @tSql1			
			SET @tSql +=' ) SalVat LEFT JOIN '    
	SET @tSql +=' TCNMBranch_L Bch_L ON SalVat.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
		
	SET @TSQL += ' UNION'

	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' SalVat.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,FTXshDocNo,FTPosCode,FTXshRefInt,FTCstCode,FTCstName,FTCstTaxNo,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand,'
	--*NUI 2019-11-14
	SET @tSql +=' FNAppType,FTPosRegNo,FTCstBchCode,FTCstBusiness,FTEstablishment'
	SET @tSql +=' FROM'	
			SET @tSql +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,HD.FTXshDocNo,ISNULL(FTXshRefInt,'''') FTXshRefInt,HD.FTCstCode,Cst_L.FTCstName,Cst.FTCstTaxNo,'
			--NUI10-04-2020
			--SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVatable,0) ELSE ISNULL(FCXshVatable,0)*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END AS FCXshAmtNV,'
			--NUI10-04-2020
			--SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand,'
			--SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END AS FCXshGrand,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0))*-1 END AS FCXshGrand,'
			--*NUI 2019-11-14
			SET @tSql +=' 2 AS FNAppType,POS.FTPosRegNo,Cst.FTCstBchCode,Cst.FTCstBusiness,'
			SET @tSql +=' CASE WHEN ISNULL(Cst.FTCstBusiness,'''') <> ''1'' THEN '''' ELSE CASE WHEN FTCstBchHQ = ''2'' THEN ''Branch / '' + FTCstBchCode  ELSE ''Head Office'' END  END AS FTEstablishment'
			SET @tSql +=' FROM TVDTSalHD HD' 
			--NUI 2020-01-06
			SET @tSql +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
			SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
			------------
		 			  SET @tSql +=' LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode LEFT JOIN'
					  SET @tSql +=' TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode LEFT JOIN'
					  SET @tSql +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
					  SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
					  SET @tSql +=' WHERE 1=1 AND FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004'''
			SET @tSql +=  @tSql1
			SET @tSql +=' ) SalVat LEFT JOIN '    
	SET @tSql +=' TCNMBranch_L Bch_L ON SalVat.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''					 

	--PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPSTaxHDTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	

--SELECT * FROM TRPTPSTaxHDTmp
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSVatByDate1001007]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSVatByDate1001007]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSVatByDate1001007] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSVatByDate1001007] 
--ALTER PROCEDURE [dbo].[SP_RPTxPSSVatByDate1001007] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	----เครื่องจุดขาย
	--@ptPosCodeF Varchar(20),
	--@ptPosCodeT Varchar(20),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlDrop VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSqlSale VARCHAR(8000)
	DECLARE @tTblName Varchar(255)
	DECLARE @tSqlS Varchar(255)
	DECLARE @tSqlR Varchar(255)
	DECLARE @tSql2 VARCHAR(255)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)

	--DECLARE @tPosCodeF Varchar(20)
	--DECLARE @tPosCodeT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT

	--SET @tPosCodeF  = @ptPosCodeF 
	--SET @tPosCodeT = @ptPosCodeT 

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tPosCodeF = null
	--BEGIN
	--	SET @tPosCodeF = ''
	--END

	--IF @tPosCodeT = null OR @tPosCodeT = ''
	--BEGIN
	--	SET @tPosCodeT = @tPosCodeF
	--END



	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql2 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSqlS =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FNXshDocType = ''1'''
	SET @tSqlR =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FNXshDocType = ''9'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSqlR +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSql2 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSqlS +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSqlR +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSql2 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSqlR +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSql2 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSqlS += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSqlR += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSql2 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSqlS +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSqlR +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSql2 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSqlS +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
			SET @tSqlR +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
			SET @tSql2 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSqlR +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSql2 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSqlS += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSqlR += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSql2 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN

	--	SET @tSqlS +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSqlR +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSql2 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END

	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSql2 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--		SET @tSqlS += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--		SET @tSqlR += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--	END		

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql2 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlS +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlR +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTPSTaxHDDateTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	--SET @tTblName = 'TRPTPSTaxTmp'+ @nComName + ''

	----if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].''+@tTblName''')) 
	--SET @tSqlDrop = ' if exists (select * from dbo.sysobjects where name = '''+@tTblName+ ''')'--id = object_id(N'[dbo].''+@tTblName'''))' 
	--SET @tSqlDrop += ' DROP TABLE '+ @tTblName + ''
	----PRINT @tSqlDrop
	--EXECUTE(@tSqlDrop)

	--PRINT @tTblName 

	SET @tSqlSale  = ' INSERT INTO TRPTPSTaxHDDateTmp '
	SET @tSqlSale +=' ('
	SET @tSqlSale +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSqlSale +=' FTBchCode,FTBchName,FDXshdocDate,FTPosCode,FTXshDocNoSale,FTXshDocNoRefun,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal,'
	--*NUI 2019-11-14
	SET @tSqlSale +=' FNAppType,FTPosRegNo'
	-----------
	SET @tSqlSale +=' )'
 	SET @tSqlSale +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSqlSale +=' vAT.FTBchCode,Vat.FTBchName,Vat.FDXshdocDate,Vat.FTPosCode,ISNULL(FTXshDocNoSale,'''') AS FTXshDocNoSale,ISNULL(FTXshDocNoRefun,'''') AS FTXshDocNoRefun,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand, FNAppType,FTPosRegNo'
	--SET @tSqlSale +=' INTO  '+ @tTblName + ''
	SET @tSqlSale +=' FROM('
 	 SET @tSqlSale +=' SELECT HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
	 --SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END) AS FCXshVat,'
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END) AS FCXshAmtNV,' 
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END) AS FCXshGrand,' 
 	 SET @tSqlSale +=' 1 AS FNAppType,POS.FTPosRegNo'--,Cst.FTCstBchCode,Cst.FTCstBusiness 
	 SET @tSqlSale +=' FROM TPSTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
	  SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
	 SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	 
	 SET @tSqlSale +=' LEFT JOIN TCNMBranch_L Bch_L ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	 SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
	 SET @tSqlSale += @tSql2	
	 SET @tSqlSale +=' GROUP BY HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode,POS.FTPosRegNo'
	SET @tSqlSale +=' ) Vat LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
		SET @tSqlSale +=' MIN(FTXshDocNo) + ''-'' + MAX(FTXshDocNo) AS FTXshDocNoSale'
		SET @tSqlSale +=' FROM TPSTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		 SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
		SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlS
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode) Sale ON Vat.FTBchCode = Sale.FTBchCode AND Vat.FDXshdocDate = Sale.FDXshdocDate AND Vat.FTPosCode = Sale.FTPosCode '
		SET @tSqlSale +=' LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
		SET @tSqlSale +=' MIN(FTXshDocNo) + ''-'' + MAX(FTXshDocNo) AS FTXshDocNoRefun'
		SET @tSqlSale +=' FROM TPSTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		 SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
		SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlR
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode) Ret ON Vat.FTBchCode = Ret.FTBchCode AND Vat.FDXshdocDate = Ret.FDXshdocDate AND Vat.FTPosCode = Ret.FTPosCode'	
	--PRINT @tSqlSale
	EXECUTE(@tSqlSale)

	--Vending
	SET @tSqlSale  = ' INSERT INTO TRPTPSTaxHDDateTmp '
	SET @tSqlSale +=' ('
	SET @tSqlSale +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSqlSale +=' FTBchCode,FTBchName,FDXshdocDate,FTPosCode,FTXshDocNoSale,FTXshDocNoRefun,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal,'
	--*NUI 2019-11-14
	SET @tSqlSale +=' FNAppType,FTPosRegNo'
	-----------
	SET @tSqlSale +=' )'
 	SET @tSqlSale +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSqlSale +=' vAT.FTBchCode,Vat.FTBchName,Vat.FDXshdocDate,Vat.FTPosCode,ISNULL(FTXshDocNoSale,'''') AS FTXshDocNoSale,ISNULL(FTXshDocNoRefun,'''') AS FTXshDocNoRefun,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand, FNAppType,FTPosRegNo'
	--SET @tSqlSale +=' INTO  '+ @tTblName + ''
	SET @tSqlSale +=' FROM('
 	 SET @tSqlSale +=' SELECT HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
	 --SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END) AS FCXshVat,'
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END) AS FCXshAmtNV,' 
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END) AS FCXshGrand,' 
 	 SET @tSqlSale +=' 2 AS FNAppType,POS.FTPosRegNo'--,Cst.FTCstBchCode,Cst.FTCstBusiness 
	 SET @tSqlSale +=' FROM TVDTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
	  SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode ' 
	--NUI 2020-01-07
	SET @tSqlSale +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSqlSale +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
	------------
	 SET @tSqlSale +=' LEFT JOIN TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	 
	 SET @tSqlSale +=' LEFT JOIN TCNMBranch_L Bch_L ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	 SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
	 SET @tSqlSale += @tSql2	
	 SET @tSqlSale += ' AND Rcv.FTFmtCode <> ''004'''
	 SET @tSqlSale +=' GROUP BY HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode,POS.FTPosRegNo'
	SET @tSqlSale +=' ) Vat LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
		SET @tSqlSale +=' MIN(HD.FTXshDocNo) + ''-'' + MAX(HD.FTXshDocNo) AS FTXshDocNoSale'
		SET @tSqlSale +=' FROM TVDTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		 SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode ' 
		--NUI 2020-01-07
		SET @tSqlSale +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
		SET @tSqlSale +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
		------------
	    SET @tSqlSale +=' LEFT JOIN TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlS
		SET @tSqlSale += ' AND Rcv.FTFmtCode <> ''004'''
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode) Sale ON Vat.FTBchCode = Sale.FTBchCode AND Vat.FDXshdocDate = Sale.FDXshdocDate AND Vat.FTPosCode = Sale.FTPosCode '
		SET @tSqlSale +=' LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,'
		SET @tSqlSale +=' MIN(HD.FTXshDocNo) + ''-'' + MAX(HD.FTXshDocNo) AS FTXshDocNoRefun'
		SET @tSqlSale +=' FROM TVDTSalHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		 SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode ' 
		--NUI 2020-01-07
		SET @tSqlSale +=' INNER JOIN TVDTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
		SET @tSqlSale +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'			
		------------
		 SET @tSqlSale +=' LEFT JOIN TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlR
		SET @tSqlSale += ' AND Rcv.FTFmtCode <> ''004'''
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121),HD.FTPosCode) Ret ON Vat.FTBchCode = Ret.FTBchCode AND Vat.FDXshdocDate = Ret.FDXshdocDate AND Vat.FTPosCode = Ret.FTPosCode'	
	--PRINT @tSqlSale
	EXECUTE(@tSqlSale)

	RETURN SELECT * FROM TRPTPSTaxHDDateTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession 

	--SET @tSqlDrop += 'DROP TABLE '+ @tTblName + ''
	----PRINT @tSqlDrop
	--EXECUTE(@tSqlDrop)
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSVatByDateFull]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSVatByDateFull]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSVatByDateFull] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSVatByDateFull] 
--ALTER PROCEDURE [dbo].[SP_RPTxPSSVatByDate1001007] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF Varchar(5),
	--@ptBchT Varchar(5),
	----เครื่องจุดขาย
	--@ptPosCodeF Varchar(20),
	--@ptPosCodeT Varchar(20),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Last Update 04/06/2020 แก้ไขเรื่อง บันทึกรายงานไม่ต้องแยกเครื่องจุดขาย
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlDrop VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(8000)
	DECLARE @tSqlSale VARCHAR(8000)
	DECLARE @tTblName Varchar(255)
	DECLARE @tSqlS Varchar(255)
	DECLARE @tSqlR Varchar(255)
	DECLARE @tSql2 VARCHAR(255)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)

	--DECLARE @tPosCodeF Varchar(20)
	--DECLARE @tPosCodeT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT

	--SET @tPosCodeF  = @ptPosCodeF 
	--SET @tPosCodeT = @ptPosCodeT 

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tPosCodeF = null
	--BEGIN
	--	SET @tPosCodeF = ''
	--END

	--IF @tPosCodeT = null OR @tPosCodeT = ''
	--BEGIN
	--	SET @tPosCodeT = @tPosCodeF
	--END



	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql2 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	SET @tSqlS =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FNXshDocType = ''4'''
	SET @tSqlR =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND FNXshDocType = ''5'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSqlR +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSql2 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSqlS +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSqlR +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			SET @tSql2 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSqlR +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			SET @tSql2 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSqlS += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSqlR += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSql2 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSqlS +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSqlR +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			SET @tSql2 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSqlS +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
			SET @tSqlR +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
			SET @tSql2 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSqlS +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSqlR +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			SET @tSql2 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSqlS += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSqlR += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
			SET @tSql2 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN

	--	SET @tSqlS +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSqlR +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--	SET @tSql2 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END

	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSql2 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--		SET @tSqlS += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--		SET @tSqlR += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--	END		

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql2 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlS +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlR +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTPSTTaxDateFullTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	--SET @tTblName = 'TRPTPSTaxTmp'+ @nComName + ''

	----if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].''+@tTblName''')) 
	--SET @tSqlDrop = ' if exists (select * from dbo.sysobjects where name = '''+@tTblName+ ''')'--id = object_id(N'[dbo].''+@tTblName'''))' 
	--SET @tSqlDrop += ' DROP TABLE '+ @tTblName + ''
	----PRINT @tSqlDrop
	--EXECUTE(@tSqlDrop)

	--PRINT @tTblName 

	SET @tSqlSale  = ' INSERT INTO TRPTPSTTaxDateFullTmp '
	SET @tSqlSale +=' ('
	SET @tSqlSale +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSqlSale +=' FTBchCode,FTBchName,FDXshdocDate,FTPosCode,FTXshDocNoSale,FTXshDocNoRefun,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal,'
	--*NUI 2019-11-14
	SET @tSqlSale +=' FNAppType,FTPosRegNo'
	-----------
	SET @tSqlSale +=' )'
 	SET @tSqlSale +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSqlSale +=' vAT.FTBchCode,Vat.FTBchName,Vat.FDXshdocDate,'''' AS FTPosCode,ISNULL(FTXshDocNoSale,'''') AS FTXshDocNoSale,ISNULL(FTXshDocNoRefun,'''') AS FTXshDocNoRefun,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand, FNAppType,'''' AS FTPosRegNo'
	--SET @tSqlSale +=' INTO  '+ @tTblName + ''
	SET @tSqlSale +=' FROM('
 	 SET @tSqlSale +=' SELECT HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,'--HD.FTPosCode,'
	 --SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''1'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''4'' THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END) AS FCXshValue, '
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''4'' THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END) AS FCXshVat,'
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''4'' THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END) AS FCXshAmtNV,' 
	 SET @tSqlSale +=' SUM(CASE WHEN HD.FNXshDocType = ''4'' THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END) AS FCXshGrand,' 
 	 SET @tSqlSale +=' 1 AS FNAppType'--POS.FTPosRegNo'--,Cst.FTCstBchCode,Cst.FTCstBusiness 
	 SET @tSqlSale +=' FROM TPSTTaxHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
	 SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
	 SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''	 
	 SET @tSqlSale +=' LEFT JOIN TCNMBranch_L Bch_L ON HD.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	 SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
	 SET @tSqlSale += @tSql2	
	 SET @tSqlSale +=' GROUP BY HD.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121)'--,HD.FTPosCode,'--POS.FTPosRegNo'
	SET @tSqlSale +=' ) Vat LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,'--HD.FTPosCode,'
		SET @tSqlSale +=' MIN(FTXshDocNo) + ''-'' + MAX(FTXshDocNo) AS FTXshDocNoSale'
		SET @tSqlSale +=' FROM TPSTTaxHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
		SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlS
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121)) Sale ON Vat.FTBchCode = Sale.FTBchCode AND Vat.FDXshdocDate = Sale.FDXshdocDate'-- AND Vat.FTPosCode = Sale.FTPosCode '
		SET @tSqlSale +=' LEFT JOIN'
		SET @tSqlSale +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,'--HD.FTPosCode,'
		SET @tSqlSale +=' MIN(FTXshDocNo) + ''-'' + MAX(FTXshDocNo) AS FTXshDocNoRefun'
		SET @tSqlSale +=' FROM TPSTTaxHD HD LEFT JOIN TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode' 
		SET @tSqlSale +=' LEFT JOIN TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode  LEFT JOIN' 
		SET @tSqlSale +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		SET @tSqlSale +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
		SET @tSqlSale += @tSqlR
		SET @tSqlSale +=' GROUP BY HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121)) Ret ON Vat.FTBchCode = Ret.FTBchCode AND Vat.FDXshdocDate = Ret.FDXshdocDate'-- AND Vat.FTPosCode = Ret.FTPosCode'	
	--PRINT @tSqlSale
	EXECUTE(@tSqlSale)


	RETURN SELECT * FROM TRPTPSTTaxDateFullTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession 

	--SET @tSqlDrop += 'DROP TABLE '+ @tTblName + ''
	----PRINT @tSqlDrop
	--EXECUTE(@tSqlDrop)
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSSVatFull]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSSVatFull]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSSVatFull] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSSVatFull] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
	--DECLARE @tPosCodeF Varchar(30)
	--DECLARE @tPosCodeT Varchar(30)
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	
	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END
	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END

	--IF @tPosCodeF = null
	--BEGIN
	--	SET @tPosCodeF = ''
	--END

	--IF @tPosCodeT = null OR @tPosCodeT = ''
	--BEGIN
	--	SET @tPosCodeT = @tPosCodeF
	--END

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	--SET @tSqlSal =  ' WHERE 1=1 AND FTXshStaDoc = ''1'''
	--SET @tSqlVD =   ' WHERE 1=1 AND FTXshStaDoc = ''1'' AND Rcv.FTFmtCode <> ''004'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END

	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--	BEGIN
	--		SET @tSql1 += ' AND HD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
	--	END		

	SET @tSql1 = ' '
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTPSTaxHDFullTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTPSTaxHDFullTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName,FDXshdocDate,FTXshDocNo,FTPosCode,FTXshDocRef,FTCstCode,FTCstName,FTCstTaxNo,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal,'
	--*NUI 2019-11-14
	SET @tSql +=' FNAppType,FTPosRegNo,FTCstBchCode,FTCstBusiness,FTEstablishment'
	-------------
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' SalVat.FTBchCode,FTBchName,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,FTXshDocNo,FTPosCode,FTXshRefInt,FTCstCode,FTCstName,FTCstTaxNo,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand,'
	--*NUI 2019-11-14
	SET @tSql +=' FNAppType,FTPosRegNo,FTCstBchCode,FTCstBusiness,FTEstablishment'
	SET @tSql +=' FROM'	
			SET @tSql +=' (SELECT HD.FTBchCode,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshdocDate,HD.FTPosCode,FTXshDocNo,ISNULL(FTXshRefExt,'''') FTXshRefInt,HD.FTCstCode,Cst_L.FTCstName,Cst.FTCstTaxNo,'
			--NUI10-04-2020
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 4 THEN ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0) ELSE (ISNULL(FCXshVatable,0)-ISNULL(FCXshAmtNV,0))*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 4 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 4 THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END AS FCXshAmtNV,'
			--NUI10-04-2020
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 4 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshRnd,0))*-1 END AS FCXshGrand,'
			--*NUI 2019-11-14
			SET @tSql +=' 1 AS FNAppType,POS.FTPosRegNo,Cst.FTCstBchCode,Cst.FTCstBusiness,'
			SET @tSql +=' CASE WHEN ISNULL(Cst.FTCstBusiness,'''') <> ''1'' THEN '''' ELSE CASE WHEN FTCstBchHQ = ''1'' THEN ''Head Office'' ELSE ''Branch / '' + FTCstBchCode  END  END AS FTEstablishment'
			SET @tSql +=' FROM TPSTTaxHD HD LEFT JOIN'
		 			  SET @tSql +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode LEFT JOIN'
					  SET @tSql +=' TCNMPOS POS ON HD.FTPosCode = Pos.FTPosCode AND HD.FTBchCode = Pos.FTBchCode LEFT JOIN'
					  SET @tSql +=' TCNMCst_L Cst_L ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
					  SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode '
					  SET @tSql +=' WHERE 1=1 AND FTXshStaDoc = ''1'''			  			
			SET @tSql += @tSql1			
			SET @tSql +=' ) SalVat LEFT JOIN '    
	SET @tSql +=' TCNMBranch_L Bch_L ON SalVat.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
			 

	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPSTaxHDFullTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	

--SELECT * FROM TRPTPSTaxHDTmp
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSVDDailySale]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSVDDailySale]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSVDDailySale] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSVDDailySale]
--ALTER PROCEDURE [dbo].[SP_RPTxPSVDDailySale]
	-- Add the parameters for the stored procedure here
	@pnLngID AS int ,
	@ptComName AS varchar(100) ,
	@ptRptCode AS varchar(100),
	@ptUsrSession AS varchar(255) ,
	@pnFilterType AS int ,

	--สาขา
	@ptBchF AS varchar(5) ,
	@ptBchT AS varchar(5) ,
	@ptBchL AS varchar(8000) ,

	--กลุ่มธุกิจ
	@ptMerF AS varchar(10) ,
	@ptMerT AS varchar(10) ,
	@ptMerL AS varchar(8000) ,

	--ร้าน
	@ptShpF AS varchar(10) ,
	@ptShpT AS varchar(10) ,
	@ptShpL AS varchar(8000) ,

	--จุดขาย
	@ptPosF AS varchar(20),
	@ptPosT AS varchar(20),
	@ptPosL AS varchar(8000) ,

	@pdDateF VARCHAR(10), 
	@pdDateT VARCHAR(10),

	@FNResult INT OUTPUT

AS 
	BEGIN TRY
				DECLARE @nLngID int 
				DECLARE @nFilterType Varchar(1)
				DECLARE @tSql VARCHAR(8000)
				DECLARE @tSqlFilter VARCHAR(8000)
				DECLARE @tSqlDel VARCHAR(8000)
				
				--สาขา
				DECLARE @tBchF Varchar(5)
				DECLARE @tBchT Varchar(5)
				DECLARE @tBchL Varchar(8000)

				--กลุ่มธุกิจ
				DECLARE @tMerF Varchar(10)
				DECLARE @tMerT Varchar(10)
				DECLARE @tMerL Varchar(8000)

				--ร้าน
				DECLARE @tShpF Varchar(10)
				DECLARE @tShpT Varchar(10)
				DECLARE @tShpL Varchar(8000)
				
				--จุดขาย
				DECLARE @tPosF Varchar(20)
				DECLARE @tPosT Varchar(20)
				DECLARE @tPosL Varchar(8000)

				DECLARE @dDATE1 DATE;
				DECLARE @dDATE2 DATE;
				DECLARE @dDATEFrom VARCHAR(10)
				DECLARE @dDATETo VARCHAR(10)
				DECLARE @tComName VARCHAR(255)
				DECLARE @tRptCode VARCHAR(50)
				DECLARE @tUsrSession VARCHAR(8000)
				
				-------------------------------------

				SET @nLngID		 = @pnLngID
				SET @nFilterType = @pnFilterType

				--สาขา
				SET @tBchF = @ptBchF
				SET @tBchT = @ptBchT
				SET @tBchL = @ptBchL

				--กลุ่มธุกิจ
				SET @tMerF = @ptMerF
				SET @tMerT = @ptMerT
				SET @tMerL = @ptMerL

				--ร้านค้า
				SET @tShpF = @ptShpF
				SET @tShpT = @ptShpT
				SET @tShpL = @ptShpL

				--จุดขาย
				SET @tPosF = @ptPosF
				SET @tPosT = @ptPosT 
				SET @tPosL = @ptPosL

				SET @dDATE1		 = @pdDateF;
				SET @dDATE2		 = @pdDateT;
				SET @tComName	 = @ptComName
				SET @tUsrSession = @ptUsrSession
				SET @tRptCode	 = @ptRptCode
				SET @FNResult	 = 0

				SET @dDATE1		= CONVERT(VARCHAR(10),@pdDateF,121)
				SET @dDATE2		= CONVERT(VARCHAR(10),@pdDateT,121)
				SET @dDATEFrom	= CONVERT(VARCHAR(10),@pdDateF,121)
				SET @dDATETo	= CONVERT(VARCHAR(10),@pdDateT,121)
				
				-------------------------------------

				IF @nLngID = null
				BEGIN
					SET @nLngID = 1
				END	
				
				--สาขา
				IF @tBchF = null
				BEGIN
					SET @tBchF = ''
				END
				IF @tBchT = null OR @tBchT = ''
				BEGIN
					SET @tBchT = @tBchF
				END
				
				--กลุ่มธุกิจ
				IF @tMerF =null
				BEGIN
					SET @tMerF = ''
				END
				IF @tMerT =null OR @tMerT = ''
				BEGIN
					SET @tMerT = @tMerF
				END 
				
				--ร้านค้า
				IF @tShpF =null
				BEGIN
					SET @tShpF = ''
				END
				IF @tShpT =null OR @tShpT = ''
				BEGIN
					SET @tShpT = @tShpF
				END 
				
				--จุดขาย
				IF @tPosF = null
				BEGIN
					SET @tPosF = ''
				END
				IF @tPosT = null OR @tPosT = ''
				BEGIN
					SET @tPosT = @tPosF
				END
				
				--วันที่
				IF @dDATE1 = null OR @dDATE1 =''
				BEGIN 
					SET @dDATE1 = FORMAT(getdate() , 'yyyy-MM-dd')
				END

				IF @dDATE2 = null OR @dDATE2 =''
				BEGIN 
					SET @dDATE2 = FORMAT(getdate() , 'yyyy-MM-dd')
				END

				--วันที่
				IF @dDATEFrom = null OR @dDATEFrom =''
				BEGIN 
					SET @dDATEFrom	= FORMAT(getdate() , 'yyyy-MM-dd')
				END

				IF @dDATETo = null OR @dDATETo =''
				BEGIN 
					SET @dDATETo	= FORMAT(getdate() , 'yyyy-MM-dd')
				END

				--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
				DELETE FROM TRPTPTTSpcPSVDDailySaleTmp WITH(ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

				--สร้างวันที่ตาม Filter ที่เลือกมา
				WHILE(@dDATE1 <= @dDATE2)
						BEGIN	
							--PRINT @dDATE1;
							INSERT INTO TRPTPTTSpcPSVDDailySaleTmp(FNRowPartID,FDXshDocDate,FTComName,FTRptCode,FTUsrSession) VALUES('99',@dDATE1,@tComName,@tRptCode,@tUsrSession)
							SET @dDATE1 = DATEADD(dd, 1, @dDATE1);
						END;
				
				--ประเภทช่วงการค้นหา
				SET @tSqlFilter = ' AND FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') BETWEEN ''' + @dDATEFrom + ''' AND ''' + @dDATETo +''' '
				IF (@nFilterType=1)
					BEGIN
						IF (@tBchF <> '' AND @tBchT <> '')
						BEGIN
							SET @tSqlFilter += ' AND  ( (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') OR (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') )' + CHAR(13)
						END

						IF (@tMerF <> '' AND @tMerT <> '')
						BEGIN
							SET @tSqlFilter +=' AND  ( (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') OR (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') )' + CHAR(13)
						END

						IF (@tShpF <> '' AND @tShpT <> '')
						BEGIN
							SET @tSqlFilter +=' AND  ( (HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''') OR (HD.FTShpCode BETWEEN ''' + @tShpT + ''' AND ''' + @tShpF + ''') )' + CHAR(13)
						END

						IF (@tPosF <> '' AND @tPosT <> '')
						BEGIN
							SET @tSqlFilter += ' AND  ( (HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''') OR (HD.FTPosCode BETWEEN ''' + @tPosT + ''' AND ''' + @tPosF + ''') )' + CHAR(13)
						END
					END
				ELSE
					BEGIN
						IF(@tBchL <> '')
						BEGIN	
							SET @tSqlFilter +=' AND  (HD.FTBchCode IN(' + REPLACE(@tBchL,'''''','''') + '))' + CHAR(13)
						END

						IF(@tMerL <> '')
						BEGIN	
							SET @tSqlFilter +=' AND  (SHP.FTMerCode IN(' + REPLACE(@tMerL,'''''','''') + '))' + CHAR(13)
						END

						IF(@tShpL <> '')
						BEGIN	
							SET @tSqlFilter +=' AND  (HD.FTShpCode IN(' + REPLACE(@tShpL,'''''','''') + '))' + CHAR(13)
						END

						IF(@tPosL <> '')
						BEGIN	
							SET @tSqlFilter +=' AND  (HD.FTPosCode IN(' + REPLACE(@tPosL,'''''','''') + '))' + CHAR(13)
						END
					END

				-- S T A R T -- 
				SET @tSql = ' INSERT INTO TRPTPTTSpcPSVDDailySaleTmp (FDXshDocDate,FCXshGrand,FNXshTotalBill,FCXrcNetVDQR,FCXrcNetPosCash,FCXrcNetPosQR,FCXrcNetPosEDC,FTXshRem,FTComName,FTRptCode,FTUsrSession)'
				SET @tSql +=' SELECT D.FDXshDocDate,'
				SET @tSql +=' ISNULL(S.FCXshGrand,0) AS FCXshGrand,'
				SET @tSql +=' ISNULL(S.FNXshTotalBill, 0) AS FNXshTotalBill,'
				SET @tSql +=' ISNULL(S.FCXrcNetVDQR,0) AS FCXrcNetVDQR,'
				SET @tSql +=' ISNULL(S.FCXrcNetPosCash,0) AS FCXrcNetPosCash,'
				SET @tSql +=' ISNULL(S.FCXrcNetPosQR,0) AS FCXrcNetPosQR,'
				SET @tSql +=' ISNULL(S.FCXrcNetPosEDC,0) AS FCXrcNetPosEDC,'
				SET @tSql +=' '''' AS FTXshRem,'
				SET @tSql +=' '''+@tComName+''' AS FTComName,'
				SET @tSql +=' '''+@tRptCode+''' AS FTRptCode,'
				SET @tSql +=' '''+@tUsrSession+''' AS FTUsrSession'
				SET @tSql +=' FROM TRPTPTTSpcPSVDDailySaleTmp D WITH(NOLOCK)'
				SET @tSql +=' LEFT JOIN '
				SET @tSql +='('
				SET @tSql +=' SELECT T.FDXshDocDate,'
				SET @tSql +=' COUNT(T.FTXshDocNo) AS FNXshTotalBill,'
				SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNet ELSE T.FCXrcNet * -1 END) AS FCXshGrand,'
				SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosCash ELSE T.FCXrcNetPosCash * -1 END) AS FCXrcNetPosCash,'
				SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosQR ELSE T.FCXrcNetPosQR * -1 END) AS FCXrcNetPosQR,'
				SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosEDC ELSE T.FCXrcNetPosEDC * -1 END) AS FCXrcNetPosEDC,'
				SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetVDQR ELSE T.FCXrcNetVDQR * -1 END) AS FCXrcNetVDQR'
				SET @tSql +=' FROM '
				SET @tSql +=' ( '
				SET @tSql +=' SELECT SHD.*,'
				SET @tSql +=' SRC.FCXrcNetPosCash,'
				SET @tSql +=' SRC.FCXrcNetPosEDC,'
				SET @tSql +=' SRC.FCXrcNetPosQR,'
				SET @tSql +=' SRC.FCXrcNetVDQR'
				SET @tSql +=' FROM'
				SET @tSql +=' ( SELECT FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') AS FDXshDocDate,'
				SET @tSql +=' HD.FNXshDocType,'
				SET @tSql +=' RC.FCXrcNet,'
				SET @tSql +=' RC.FTXshDocNo'
				SET @tSql +=' FROM TPSTSalRC RC'
				SET @tSql +=' LEFT JOIN TPSTSalHD HD ON HD.FTXshDocNo = RC.FTXshDocNo'
				SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode'
				SET @tSql +=' INNER JOIN'
				SET @tSql +=' ( SELECT DISTINCT'
				SET @tSql +=' FTXshDocNo'
				SET @tSql +=' FROM TPSTSalDT DT'
				SET @tSql +=' LEFT JOIN TCNMPdt AS PDT ON DT.FTPdtCode = PDT.FTPdtCode'
				SET @tSql +=' WHERE PDT.FTPdtType = 1 ) DT ON RC.FTXshDocNo = DT.FTXshDocNo'
				SET @tSql +=' WHERE HD.FTXshStaDoc = 1'
				SET @tSql += @tSqlFilter
				SET @tSql +=' ) SHD'
				SET @tSql +=' LEFT JOIN'
				SET @tSql +=' ( SELECT HD.FTXshDocNo,'
				SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''001'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosCash,'
				SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''002'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosEDC,'
				SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosQR,'
				SET @tSql +=' 0 AS FCXrcNetVDQR'
				SET @tSql +=' FROM TPSTSalRC AS RC'
				SET @tSql +=' INNER JOIN TPSTSalHD AS HD ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1'
				SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode'
 				SET @tSql +=' INNER JOIN TFNMRcv AS RCV ON RC.FTRcvCode = RCV.FTRcvCode'
				SET @tSql +=' WHERE RCV.FTFmtCode IN(''001'', ''002'', ''013'')'
				SET @tSql += @tSqlFilter
				SET @tSql +=' GROUP BY HD.FTXshDocNo'
				SET @tSql +=' ) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo'

				SET @tSql +=' UNION ALL'
				SET @tSql +=' SELECT SHD.*,' 
				SET @tSql +=' SRC.FCXrcNetPosCash,'
				SET @tSql +=' SRC.FCXrcNetPosEDC,'  
				SET @tSql +=' SRC.FCXrcNetPosQR,'
				SET @tSql +=' SRC.FCXrcNetVDQR'
				SET @tSql +=' FROM ('
				SET @tSql +=' SELECT FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') AS FDXshDocDate,'
				SET @tSql +=' HD.FNXshDocType,'
				SET @tSql +=' ISNULL(RC.FCXrcNet, 0) AS FCXrcNet,'
				SET @tSql +=' RC.FTXshDocNo'
				SET @tSql +=' FROM TVDTSalRC RC'
				--14/01/2020 NUI add cut paycash coupon
				SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'	
				SET @tSql +=' LEFT JOIN TVDTSalHD HD ON HD.FTXshDocNo = RC.FTXshDocNo'
				SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode'
				SET @tSql +=' INNER JOIN ('
				SET @tSql +=' SELECT DISTINCT FTXshDocNo'
				SET @tSql +=' FROM TVDTSalDT DT'
				SET @tSql +=' LEFT JOIN TCNMPdt AS PDT ON DT.FTPdtCode = PDT.FTPdtCode'
				SET @tSql +=' WHERE PDT.FTPdtType = 1'
				SET @tSql +=' ) DT ON RC.FTXshDocNo = DT.FTXshDocNo'
				SET @tSql +=' WHERE HD.FTXshStaDoc = 1 AND Rcv.FTFmtCode <> ''004'''
				SET @tSql += @tSqlFilter
				SET @tSql +=' ) SHD'
				SET @tSql +=' LEFT JOIN ('
				SET @tSql +=' SELECT HD.FTXshDocNo,'
				SET @tSql +=' 0 AS FCXrcNetPosCash,'
				SET @tSql +=' 0 AS FCXrcNetPosEDC,'
				SET @tSql +=' 0 AS FCXrcNetPosQR,'
				SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetVDQR'
				SET @tSql +=' FROM TVDTSalRC AS RC '
				SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode'	
				SET @tSql +=' INNER JOIN TVDTSalHD AS HD ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1'
				SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode' 
				SET @tSql +=' WHERE RCV.FTFmtCode = ''013'''
				SET @tSql += @tSqlFilter
				SET @tSql +=' GROUP BY HD.FTXshDocNo'
				SET @tSql +=' ) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo'
				SET @tSql +=' ) T GROUP BY T.FDXshDocDate'
				SET @tSql +=' ) S ON D.FDXshDocDate = S.FDXshDocDate'
				SET @tSql +=' WHERE D.FTComName = '''+@tComName+''''
				SET @tSql +=' AND D.FTUsrSession = '''+@tUsrSession+''''
				SET @tSql +=' ORDER BY D.FDXshDocDate'
				print @tSql
				EXECUTE(@tSql)

				SET @tSqlDel = 'DELETE FROM TRPTPTTSpcPSVDDailySaleTmp WITH(ROWLOCK) WHERE FNRowPartID = ''99'' AND FTComName = ''' + @tComName + ''' AND FTRptCode = ''' + @tRptCode + ''' AND FTUsrSession = ''' + @tUsrSession + ''' '
				EXECUTE(@tSqlDel)

				--เอาไว้ทดสอบว่า sql ถูกไหม
				--PRINT (CAST(@tSql as varchar(max)))
	RETURN 0;
END TRY
BEGIN CATCH 
	SET @FNResult= -1
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSVDMonthlySale]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSVDMonthlySale]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSVDMonthlySale] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSVDMonthlySale]
--ALTER PROCEDURE [dbo].[SP_RPTxPSVDMonthlySale]
	@pnLngID AS int ,
	@ptComName AS varchar(100) ,
	@ptRptCode AS varchar(100),
	@ptUsrSession AS varchar(255) ,
	@pnFilterType AS int ,
	
	--สาขา
	@ptBchF AS varchar(5) ,
	@ptBchT AS varchar(5) ,
	@ptBchL AS varchar(8000) ,

	--กลุ่มธุกิจ
	@ptMerF AS varchar(10) ,
	@ptMerT AS varchar(10) ,
	@ptMerL AS varchar(8000) ,

	--ร้าน
	@ptShpF AS varchar(10) ,
	@ptShpT AS varchar(10) ,
	@ptShpL AS varchar(8000) ,

	--จุดขาย
	@ptPosF AS varchar(20),
	@ptPosT AS varchar(20),
	@ptPosL AS varchar(8000) ,

	--เดือน และ ปี
	@pdMonthF VARCHAR(10), 
	@pdMonthT VARCHAR(10), 
	@pdYearSale VARCHAR(10),
	@FNResult INT OUTPUT
AS
    BEGIN TRY

		DECLARE @nLngID int 
		DECLARE @nFilterType Varchar(1)
		DECLARE @tSql nVARCHAR(Max)
		DECLARE @tSqlFilter nVARCHAR(Max)
		DECLARE @tSqlDel nVARCHAR(Max)

		--สาขา
		DECLARE @tBchF Varchar(5)
		DECLARE @tBchT Varchar(5)
		DECLARE @tBchL Varchar(8000)

		--กลุ่มธุกิจ
		DECLARE @tMerF Varchar(10)
		DECLARE @tMerT Varchar(10)
		DECLARE @tMerL Varchar(8000)

		--ร้าน
		DECLARE @tShpF Varchar(10)
		DECLARE @tShpT Varchar(10)
		DECLARE @tShpL Varchar(8000)
				
		--จุดขาย
		DECLARE @tPosF Varchar(20)
		DECLARE @tPosT Varchar(20)
		DECLARE @tPosL Varchar(8000)

		DECLARE @tStartMonth int
	    DECLARE @tToMonth int
		DECLARE @dMonthFrom VARCHAR(10)
		DECLARE @dMonthTo VARCHAR(10)
		DECLARE @tSaleMonth VARCHAR(2)
		DECLARE @tDocDateF VARCHAR(10)
		DECLARE @tDocDateT VARCHAR(10)
		DECLARE @tComName VARCHAR(255)
		DECLARE @tRptCode VARCHAR(50)
		DECLARE @tUsrSession VARCHAR(MAX)

		--------------------------------------------

		SET @nLngID		 = @pnLngID
		SET @nFilterType = @pnFilterType

		--สาขา
		SET @tBchF = @ptBchF
		SET @tBchT = @ptBchT
		SET @tBchL = @ptBchL

		--กลุ่มธุกิจ
		SET @tMerF = @ptMerF
		SET @tMerT = @ptMerT
		SET @tMerL = @ptMerL

		--ร้านค้า
		SET @tShpF = @ptShpF
		SET @tShpT = @ptShpT
		SET @tShpL = @ptShpL

		--จุดขาย
		SET @tPosF = @ptPosF
		SET @tPosT = @ptPosT 
		SET @tPosL = @ptPosL

        SET @tStartMonth	= CAST(@pdMonthF  AS INT)
		SET @tToMonth		= CAST(@pdMonthT  AS INT)
		SET @dMonthFrom		= CAST(@pdMonthF  AS INT)
		SET @dMonthTo		= CAST(@pdMonthT  AS INT)

		SET @tDocDateF		= @pdYearSale + '-' + @pdMonthF + '-01'
		SET @tDocDateT		= @pdYearSale + '-' + @pdMonthT + '-31'

		SET @tComName		= @ptComName
		SET @tUsrSession	= @ptUsrSession
		SET @tRptCode		= @ptRptCode
		SET @FNResult		= 0

		--------------------------------------------

		IF @nLngID = null
		BEGIN
			SET @nLngID = 1
		END	

		--สาขา
		IF @tBchF = null
		BEGIN
			SET @tBchF = ''
		END
		IF @tBchT = null OR @tBchT = ''
		BEGIN
			SET @tBchT = @tBchF
		END
				
		--กลุ่มธุกิจ
		IF @tMerF =null
		BEGIN
			SET @tMerF = ''
		END
		IF @tMerT =null OR @tMerT = ''
		BEGIN
			SET @tMerT = @tMerF
		END 
				
		--ร้านค้า
		IF @tShpF =null
		BEGIN
			SET @tShpF = ''
		END
		IF @tShpT =null OR @tShpT = ''
		BEGIN
			SET @tShpT = @tShpF
		END 
				
		--จุดขาย
		IF @tPosF = null
		BEGIN
			SET @tPosF = ''
		END
		IF @tPosT = null OR @tPosT = ''
		BEGIN
			SET @tPosT = @tPosF
		END

        --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
        DELETE FROM TRPTPTTSpcPSVDMonthlySaleTmp WITH(ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

        --สร้างเดือนที่ตาม Filter ที่เลือกมา
        WHILE(@tStartMonth <= @tToMonth)
            BEGIN
				IF (@tStartMonth < 10) 
				    BEGIN
					    SET @tSaleMonth = '0'+CAST(@tStartMonth AS VARCHAR) 
					END
				ELSE
				   BEGIN 
				        SET @tSaleMonth = CAST(@tStartMonth AS VARCHAR)
				   END
                INSERT INTO TRPTPTTSpcPSVDMonthlySaleTmp(FNRowPartID,FTXshDocMonth,FTComName,FTRptCode,FTUsrSession) VALUES('99',@tSaleMonth,@tComName,@tRptCode,@tUsrSession)
                SET @tStartMonth= @tStartMonth + 1;
            END;
				
			--ประเภทช่วงการค้นหา
			SET @tSqlFilter = ' AND FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT +''' '  + CHAR(13)
			IF (@nFilterType=1)
				BEGIN
					IF (@tBchF <> '' AND @tBchT <> '')
					BEGIN
						SET @tSqlFilter += ' AND  ( (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') OR (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') )' + CHAR(13)
					END

					IF (@tMerF <> '' AND @tMerT <> '')
					BEGIN
						SET @tSqlFilter +=' AND  ( (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') OR (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') )' + CHAR(13)
					END

					IF (@tShpF <> '' AND @tShpT <> '')
					BEGIN
						SET @tSqlFilter +=' AND  ( (HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''') OR (HD.FTShpCode BETWEEN ''' + @tShpT + ''' AND ''' + @tShpF + ''') )' + CHAR(13)
					END

					IF (@tPosF <> '' AND @tPosT <> '')
					BEGIN
						SET @tSqlFilter += ' AND  ( (HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''') OR (HD.FTPosCode BETWEEN ''' + @tPosT + ''' AND ''' + @tPosF + ''') )' + CHAR(13)
					END
				END
			ELSE
				BEGIN
					IF(@tBchL <> '')
					BEGIN	
						SET @tSqlFilter +=' AND  (HD.FTBchCode IN('  + REPLACE(@tBchL,'''''','''') +  '))' + CHAR(13)
					END

					IF(@tMerL <> '')
					BEGIN	
						SET @tSqlFilter +=' AND  (SHP.FTMerCode IN(' + REPLACE(@tMerL,'''''','''') + '))' + CHAR(13)
					END

					IF(@tShpL <> '')
					BEGIN	
						SET @tSqlFilter +=' AND  (HD.FTShpCode IN(' + REPLACE(@tShpL,'''''','''') + '))' + CHAR(13)
					END

					IF(@tPosL <> '')
					BEGIN	
						SET @tSqlFilter +=' AND  (HD.FTPosCode IN(' + REPLACE(@tPosL,'''''','''') + '))' + CHAR(13)
					END
				END

			SET @tSql = ' INSERT INTO TRPTPTTSpcPSVDMonthlySaleTmp (FTXshDocMonth, FCXshGrand , FNXshTotalBill , FCXrcNetVDQR, FCXrcNetPosCash ,FCXrcNetPosQR , FCXrcNetPosEDC , FTXshRem , FTComName , FTRptCode , FTUsrSession ) '
			SET @tSql += 'SELECT M.FTXshDocMonth, '
			SET @tSql += 'ISNULL(S.FCXshGrand, 0) AS FCXshGrand, '
			SET @tSql += 'ISNULL(S.FNXshTotalBill, 0) AS FNXshTotalBill, '
			SET @tSql += 'ISNULL(S.FCXrcNetVDQR, 0) AS FCXrcNetVDQR, '
			SET @tSql += 'ISNULL(S.FCXrcNetPosCash, 0) AS FCXrcNetPosCash, '
			SET @tSql += 'ISNULL(S.FCXrcNetPosQR, 0) AS FCXrcNetPosQR, '
			SET @tSql += 'ISNULL(S.FCXrcNetPosEDC, 0) AS FCXrcNetPosEDC, '
			SET @tSql += ' '''' AS FTXshRem , '
			SET @tSql += ' '''+@tComName+''' AS FTComName, '
			SET @tSql += ' '''+@tRptCode+''' AS FTRptCode, '
			SET @tSql += ' '''+@tUsrSession+''' AS FTUsrSession '
			SET @tSql += ' FROM TRPTPTTSpcPSVDMonthlySaleTmp M WITH(NOLOCK) '
			SET @tSql +=' LEFT JOIN '
			SET @tSql +='('
			SET @tSql +=' SELECT FORMAT(T.FDXshDocDate,''MM'') AS  FTXshDocMonth, '
			SET @tSql +=' COUNT(T.FTXshDocNo) AS FNXshTotalBill, '
			SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNet ELSE T.FCXrcNet * -1 END) AS FCXshGrand, '
			SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosCash ELSE T.FCXrcNetPosCash * -1 END) AS FCXrcNetPosCash, '
			SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosQR ELSE T.FCXrcNetPosQR * -1 END) AS FCXrcNetPosQR, '
			SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosEDC ELSE T.FCXrcNetPosEDC * -1 END) AS FCXrcNetPosEDC , '
			SET @tSql +=' SUM(CASE WHEN T.FNXshDocType = 1 THEN T.FCXrcNetVDQR ELSE T.FCXrcNetVDQR * -1 END) AS FCXrcNetVDQR '
			SET @tSql +='FROM '
			SET @tSql +='( '
			SET @tSql +='SELECT SHD.*,'
			SET @tSql +=' SRC.FCXrcNetPosCash, '
			SET @tSql +=' SRC.FCXrcNetPosEDC, '
			SET @tSql +=' SRC.FCXrcNetPosQR, '
			SET @tSql +=' SRC.FCXrcNetVDQR '
			SET @tSql +=' FROM '
			SET @tSql +=' ( SELECT FDXshDocDate,  '
			SET @tSql +=' HD.FNXshDocType, '
			SET @tSql +=' RC.FCXrcNet, '
			SET @tSql +=' RC.FTXshDocNo '
			SET @tSql +=' FROM TPSTSalRC RC '
			SET @tSql +=' LEFT JOIN TPSTSalHD HD ON HD.FTXshDocNo = RC.FTXshDocNo '
			SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode '
			SET @tSql +=' INNER JOIN '
			SET @tSql +=' ( SELECT DISTINCT '
			SET @tSql +=' FTXshDocNo '
			SET @tSql +=' FROM TPSTSalDT DT '
			SET @tSql +=' LEFT JOIN TCNMPdt AS PDT ON DT.FTPdtCode = PDT.FTPdtCode '
			SET @tSql +=' WHERE PDT.FTPdtType = 1 ) DT ON RC.FTXshDocNo = DT.FTXshDocNo '
			SET @tSql +=' WHERE HD.FTXshStaDoc = 1 '
			SET @tSql += @tSqlFilter
			SET @tSql +=' ) SHD '
			SET @tSql +=' LEFT JOIN '
			SET @tSql +=' ( SELECT HD.FTXshDocNo, '
			SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''001'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosCash, '
			SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''002'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosEDC, '
			SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetPosQR, '
			SET @tSql +=' 0 AS FCXrcNetVDQR '
			SET @tSql +=' FROM TPSTSalRC AS RC '
			SET @tSql +=' INNER JOIN TPSTSalHD AS HD ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1 '
			SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode '
 			SET @tSql +=' INNER JOIN TFNMRcv AS RCV ON RC.FTRcvCode = RCV.FTRcvCode '
			SET @tSql +=' WHERE RCV.FTFmtCode IN(''001'', ''002'', ''013'') '
			SET @tSql += @tSqlFilter
			SET @tSql +=' GROUP BY HD.FTXshDocNo '
			SET @tSql +=' ) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo '

			SET @tSql +=' UNION ALL '
			SET @tSql +=' SELECT SHD.*,  ' 
			SET @tSql +=' SRC.FCXrcNetPosCash, '
			SET @tSql +=' SRC.FCXrcNetPosEDC, '  
			SET @tSql +=' SRC.FCXrcNetPosQR, '
			SET @tSql +=' SRC.FCXrcNetVDQR '
			SET @tSql +=' FROM ( '
			SET @tSql +=' SELECT HD.FDXshDocDate, '
			SET @tSql +=' HD.FNXshDocType, '
			SET @tSql +=' ISNULL(RC.FCXrcNet, 0) AS FCXrcNet, '
			SET @tSql +=' RC.FTXshDocNo '
			SET @tSql +=' FROM TVDTSalRC RC '
			SET @tSql +=' LEFT JOIN TFNMRcv Fcv WITH(NOLOCK) ON  RC.FTRcvCode = Fcv.FTRcvCode'	
			SET @tSql +=' LEFT JOIN TVDTSalHD HD ON HD.FTXshDocNo = RC.FTXshDocNo '
			SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode '
			SET @tSql +=' INNER JOIN ( '
			SET @tSql +=' SELECT DISTINCT FTXshDocNo '
			SET @tSql +=' FROM TVDTSalDT DT '
			SET @tSql +=' LEFT JOIN TCNMPdt AS PDT ON DT.FTPdtCode = PDT.FTPdtCode '
			SET @tSql +=' WHERE PDT.FTPdtType = 1 '
			SET @tSql +=' ) DT ON RC.FTXshDocNo = DT.FTXshDocNo '
			SET @tSql +=' WHERE HD.FTXshStaDoc = 1 AND Fcv.FTFmtCode <> ''004'''
			SET @tSql += @tSqlFilter
			SET @tSql +=' ) SHD '
			SET @tSql +=' LEFT JOIN ( '
			SET @tSql +=' SELECT HD.FTXshDocNo, '
			SET @tSql +=' 0 AS FCXrcNetPosCash, '
			SET @tSql +=' 0 AS FCXrcNetPosEDC, '
			SET @tSql +=' 0 AS FCXrcNetPosQR, '
			SET @tSql +=' SUM(CASE WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet ELSE 0 END) AS FCXrcNetVDQR '
			SET @tSql +=' FROM TVDTSalRC AS RC '
			SET @tSql +=' INNER JOIN TVDTSalHD AS HD ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1'
			SET @tSql +=' INNER JOIN TCNMShop AS SHP ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode' 
			SET @tSql +=' INNER JOIN TFNMRcv AS RCV ON RC.FTRcvCode = RCV.FTRcvCode'
			SET @tSql +=' WHERE RCV.FTFmtCode = ''013'' '
			SET @tSql += @tSqlFilter
			SET @tSql +=' GROUP BY HD.FTXshDocNo '
			SET @tSql +=' ) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo '
			SET @tSql +=' ) T GROUP BY FORMAT(T.FDXshDocDate,''MM'')'
			SET @tSql +=' ) S ON S.FTXshDocMonth = M.FTXshDocMonth '
			SET @tSql +=' WHERE M.FTComName = '''+@tComName+''' '
			SET @tSql +=' AND M.FTUsrSession = '''+@tUsrSession+''' '
			SET @tSql +=' ORDER BY M.FTXshDocMonth '
			--PRINT (CAST(@tSql as varchar(8000)))
			EXECUTE(@tSql)

			SET @tSqlDel = 'DELETE FROM TRPTPTTSpcPSVDMonthlySaleTmp WITH(ROWLOCK) WHERE FNRowPartID = ''99'' AND FTComName = ''' + @tComName + ''' AND FTRptCode = ''' + @tRptCode + ''' AND FTUsrSession = ''' + @tUsrSession + ''' '
			EXECUTE(@tSqlDel)
	RETURN 0;
END TRY
BEGIN CATCH 
	SET @FNResult= -1
END CATCH	


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSVDPdtSaleDet]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSVDPdtSaleDet]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSVDPdtSaleDet] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSVDPdtSaleDet]
--ALTER PROCEDURE [dbo].[SP_RPTxPSVDPdtSaleDet]
-- Add the parameters for the stored procedure here
	@pnLngID      int,
	@ptComName    Varchar(100),
	@ptRptCode    Varchar(100),
	@ptUsrSession Varchar(255),
    @pnFilterType INT, 
	--สาขา
	@ptBchF	      Varchar(5),
	@ptBchT       Varchar(5),
	@ptBchL       VARCHAR(MAX),
	--ร้านค้า
	@ptShpF       Varchar(5),
	@ptShpT       Varchar(5),
	@ptShpL       Varchar(5),
	--เครื่องจุดขาย
	@ptPosF       Varchar(5),
	@ptPosT       Varchar(5),
    @ptPosL       VARCHAR(MAX),
	--กลุ่มธุรกิจ
	@ptMerF       Varchar(5),
	@ptMerT       Varchar(5),
	@ptMerL       VARCHAR(MAX),
	--ประเภทชำระเงิน
	@ptRcvF       VARCHAR(5), 
	@ptRcvT       VARCHAR(5),
	--วันที่
	@ptDocDateF   Varchar(10),
	@ptDocDateT   Varchar(10),

	@pnResult      INT OUTPUT 

AS
--------------------------------
-- Saharat(Golf) 
-- Create 23/12/2019
-- Temp name  -
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptMerF จากกลุ่มธุรกิจ
-- @ptMerT ถึงกลุ่มธุรกิจ
-- @ptPosF จากรหัสเครื่องจุดขาย
-- @ptPosT ถึงรหัสเครื่องจุดขาย
-- @ptRcvF จากประเภทการชำระเงิน
-- @ptRcvT ถึงประเภทการชำระเงิน
-- @pnFilterType ประเภท Filter 1 = Between 2 = IN
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่


--------------------------------------
BEGIN TRY
	DECLARE @nLngID      int
	DECLARE @tComName    Varchar(100)
	DECLARE @tRptCode    Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql        VARCHAR(8000)
	DECLARE @tSql1       nVARCHAR(Max)
	DECLARE @tSql2       VARCHAR(8000)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nFilterType INT
	DECLARE @tSQL_Where_Rcv VARCHAR(MAX)

	--สาขา แบบช่วง
	DECLARE @tBchF	     Varchar(5)
	DECLARE @tBchT       Varchar(5)
	--สาขา แบบเลือก
	DECLARE @tBchL       Varchar(MAX)
    --ร้านค้า แบบช่วง
	DECLARE @tShpF       Varchar(5)
	DECLARE @tShpT       Varchar(5)
	--ร้านค้า แบบเลือก
	DECLARE @tShpL       Varchar(MAX)
	--เครื่องจุดขาย แบบช่วง
	DECLARE @tPosF       Varchar(5)
	DECLARE @tPosT       Varchar(5)
	--เครื่องจุดขาย แบบเลือก
	DECLARE @tPosL       Varchar(MAX)
	--กลุ่มธุรกิจ แบบช่วง
	DECLARE @tMerF       Varchar(5)
	DECLARE @tMerT       Varchar(5)
	--กลุ่มธุรกิจ แบบเลือก
	DECLARE @tMerL       Varchar(5)
	--ประเภทชำระเงิน
	DECLARE @tRcvF       Varchar(5)
	DECLARE @tRcvT		 Varchar(5)
	--วันที่
	DECLARE @tDocDateF   Varchar(10)
	DECLARE @tDocDateT   Varchar(10)

	DECLARE @nResult     INT   


-------- ประกาศตัวแปรรับ parameter ------

	SET  @nLngID		 = @pnLngID
	SET  @tComName		 = @ptComName
	SET  @tRptCode       = @ptRptCode
	SET  @tUsrSession    = @ptUsrSession
	SET  @nFilterType     = @pnFilterType

	--สาขา แบบช่วง
	SET  @tBchF			 = @ptBchF
	SET  @tBchT          = @ptBchT
	--สาขา แบบเลือก
	SET  @tBchL          = @ptBchL
	--ร้านค้า แบบช่วง
	SET  @tShpF			 = @ptShpF
	SET  @tShpT			 = @ptShpT
	--ร้านค้า แบบช่วง
	SET  @tShpL		     = @ptShpL
	--เครื่องจุดขาย แบบช่วง
	SET  @tPosF			 = @ptPosF
	SET  @tPosT			 = @ptPosT
	--เครื่องจุดขาย แบบเลือก
	SET  @tPosL          = @PtPosL
	--กลุ่มธุรกิจ แบบช่วง
	SET  @tMerF          = @ptMerF
	SET  @tMerT			 = @ptMerT
	--กลุ่มธุรกิจ แบบเลือก
	SET  @tMerL			 = @ptMerL
	--ประเภทชำระเงิน
	SET  @tRcvF			 = @ptRcvF
	SET  @tRcvT	         = @ptRcvT
	--วันที่
	SET  @tDocDateF		 = @ptDocDateF
	SET  @tDocDateT		 = @ptDocDateT

	SET  @tSQL_Filter    = ''
	SET  @tSQL_Where_Rcv = ''

	SET @nResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END
	
	SET @tSQL_Filter  = ' WHERE HD.FTXshStaDoc = 1 ' 

/*===== 1: แบบช่วง ===========================================================================================================================================*/
	IF(@nFilterType = 1)
		BEGIN
		/*===== ตรวจสอบค่า Filter สาขา ช่วง ========================================*/
		--เช็ค Parameter จากสาขา
		IF(@tBchF = '' OR @tBchF = NULL)
			BEGIN 
				SET @tBchF = ''
			END
		ELSE IF(@tBchF <> '')
		   BEGIN 
			   SET @tBchF = @tBchF
		   END
		--เช็ค Parameter จากสาขา
		IF(@tBchT = '' OR @tBchT = NULL)
			BEGIN 
				SET @tBchT = ''
			END
		ELSE IF(@tBchT <> '')
		   BEGIN 
			   SET @tBchT = @tBchT
		   END
		IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

		/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ ช่วง ========================================*/
		--เช็ค Parameter จากกลุ่มธุรกิจ
		IF(@tMerF = '' OR @tMerF = NULL)
			BEGIN 
				SET @tMerF = ''
			END
		ELSE IF(@tMerF <> '')
		   BEGIN 
			   SET @tMerF = @tMerF
		   END
		--เช็ค Parameter จากสาขา
		IF(@tMerT = '' OR @tMerT = NULL)
			BEGIN 
				SET @tMerT = ''
			END
		ELSE IF(@tMerT <> '')
		   BEGIN 
			   SET @tMerT = @tMerT
		   END

		IF (@tMerF <> '' AND @tMerT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
			END

		/*===== ตรวจสอบค่า Filter ร้านค้า ช่วง ========================================*/
		--เช็ค Parameter จากร้านค้า
		IF(@tShpF = '' OR @tShpF = NULL)
			BEGIN 
				SET @tShpF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tShpF = @tShpF
		   END

		 --เช็ค Parameter ถึงร้านค้า
		IF(@tShpT = '' OR @tShpT = NULL)
		   BEGIN 
			   SET @tShpT = ''
		   END
		ELSE IF(@tShpT <> '')
		   BEGIN 
			   SET @tShpT = @tShpT
		   END

		IF (@tShpF <> '' AND @tShpT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
			END
	
		/*===== ตรวจสอบค่า Filter จุดขาย ช่วง ========================================*/
		--เช็ค Parameter จากตู้
		IF(@tPosF = '' OR @tPosF = NULL)
			BEGIN 
				SET @tPosF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tPosF = @tPosF
		   END

		 --เช็ค Parameter ถึงตู้
		IF(@tPosT = '' OR @tPosT = NULL)
		   BEGIN 
			   SET @tPosT = ''
		   END
		ELSE IF(@tPosT <> '')
		   BEGIN 
			   SET @tPosT = @tPosT
		   END

		IF (@tPosF <> '' AND @tPosT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
			END
	END

/*===== 2: แบบเลือก ===========================================================================================================================================*/
	IF(@nFilterType = 2)
		BEGIN
			/*===== ตรวจสอบค่า Filter สาขา เลือก ========================================*/
			--เช็ค Parameter สาขา
			IF(@tBchL = '' OR @tBchL = NULL)
				BEGIN 
					SET @tBchL = ''
				END
			ELSE IF(@tBchL <> '')
			   BEGIN 
				   SET @tBchL = @tBchL
			   END

			IF (@tBchL <> '')
				BEGIN
					SET @tSQL_Filter += ' AND (HD.FTBchCode IN(' + REPLACE(@tBchL,'''''','''') + '))' 
														
				END

			/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ เลือก ========================================*/
			--เช็ค Parameter กลุ่มธุรกิจ
			IF(@tMerL = '' OR @tMerL = NULL)
				BEGIN 
					SET @tMerF = ''
				END
			ELSE IF(@tMerL <> '')
			   BEGIN 
				   SET @tMerL = @tMerL
			   END

			IF (@tMerL <> '')
				BEGIN
					SET @tSQL_Filter += ' AND  (SHP.FTMerCode IN(' + REPLACE(@tMerL,'''''','''') + '))' 
				END

			/*===== ตรวจสอบค่า Filter ร้านค้า เลือก ========================================*/
			--เช็ค Parameter จากร้านค้า
			IF(@tShpL = '' OR @tShpL = NULL)
				BEGIN 
					SET @tShpL = ''
				END
			ELSE IF(@tShpL <> '')
			   BEGIN 
				   SET @tShpL = @tShpL
			   END

			IF (@tShpL <> '')
				BEGIN
					SET @tSQL_Filter += ' AND  (HD.FTShpCode  IN(' + REPLACE(@tShpL,'''''','''') + '))'    
											
				END
	
			/*===== ตรวจสอบค่า Filter จุดขาย เลือก ========================================*/
			--เช็ค Parameter จุดขาย
			IF(@tPosL = '' OR @tPosL = NULL)
				BEGIN 
					SET @tPosL = ''
				END
			ELSE IF(@tShpL <> '')
			   BEGIN 
				   SET @tPosL = @tPosL
			   END

			IF (@tPosL <> '')
				BEGIN
					SET @tSQL_Filter += ' AND  (HD.FTPosCode IN(' + REPLACE(@tPosL,'''''','''') + '))' 
											
			END
	
	END
	
			/*===== ตรวจสอบค่า Filter ประเภทการชำระเงิน  ========================================*/
			--เช็ค Parameter จากประเภทการชำระเงิน
			IF(@tRcvF = '' OR @tRcvF = NULL)
				BEGIN 
					SET @tRcvF = ''
				END
			ELSE IF(@tRcvF <> '')
			   BEGIN 
				   SET @tRcvF = @tRcvF
			   END

			 --เช็ค Parameter ถึงประเภทการชำระเงิน
			IF(@tRcvT = '' OR @tRcvT = NULL)
			   BEGIN 
				   SET @tRcvT = ''
			   END
			ELSE IF(@tRcvT <> '')
			   BEGIN 
				   SET @tRcvT = @tRcvT
			   END
   
			IF (@tRcvF <> '' AND @tRcvT <> '')
				BEGIN
					SET @tSQL_Where_Rcv += ' WHERE  RC.FTRcvCode BETWEEN ''' + @tRcvF + ''' AND ''' + @tRcvT + ''' '
				END


		/*===== ตรวจสอบค่า Filter วันที่ ช่วง ========================================*/
		--เช็ค Parameter จากตู้
		IF(@tDocDateF = '' OR @tDocDateF = NULL)
			BEGIN 
				SET @tDocDateF = ''
			END
		ELSE IF(@tDocDateF <> '')
		   BEGIN 
			   SET @tDocDateF = @tDocDateF
		   END

		 --เช็ค Parameter ถึงตู้
		IF(@tDocDateT = '' OR @tDocDateT = NULL)
		   BEGIN 
			   SET @tDocDateT = ''
		   END
		ELSE IF(@tDocDateT <> '')
		   BEGIN 
			   SET @tDocDateT = @tDocDateT
		   END

	    IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSQL_Filter += '  AND FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' '
			END    




	--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	DELETE FROM TRPTPTTSpcPdtSaleDet WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	
	--เพิ่มข้อมูลลง Tmp
	SET @tSQL = '
	INSERT INTO TRPTPTTSpcPdtSaleDet 
	(FTComName,FTRptCode,FTUsrSession,FDXshDocDate,FTPosCode,FTXshDocNo,FTPdtName,FTRcvCode,FTRcvName,FTXshCstName,FTXshCstLastName,FTXshCstTel,FTXshCardID,FTXrcRefNo1,FCXrcNet,FNAppType)
	'
	 --รายงานยอดขายผลิตภัณฑ์ของสัปดาห์(POS Vending)
	 SET @tSQL += '
					SELECT S.* FROM (
						SELECT 
							   ''' + @tComName + '''    AS FTComName,
						       ''' + @tRptCode + '''    AS FTRptCode,
							   ''' + @tUsrSession + ''' AS FTUsrSession,
							   FORMAT(HD.FDXshDocDate,''yyyy-MM-dd'') AS FDXshDocDate,
							   HD.FTPosCode,
							   HD.FTXshDocNo, 
							   DT.FTPdtName,
							   RC.FTRcvCode, 
							   RC.FTRcvName,
							   SUBSTRING(FTXshCstName,0,CHARINDEX('' '',HDC.FTXshCstName) + 1) AS FTXshCstName,	
							   REVERSE(SUBSTRING(REVERSE(HDC.FTXshCstName),0,CHARINDEX('' '',HDC.FTXshCstName))) AS FTXshCstLastName,
							   HDC.FTXshCstTel,
							   HD.FTCstCode,
							   RC.FTXrcRefNo1,
							   CASE WHEN HD.FNXshDocType = 1 THEN  RC.FCXrcNet ELSE RC.FCXrcNet * -1 END AS FCXrcNet,
							   1 AS FNXshAppType

						FROM TPSTSalRC RC
						INNER JOIN
						(
							--หาบิลที่ขายสินค้าทั่วไปเท่านั้น Pos System
							SELECT DISTINCT 
									HD.FTBchCode
								   ,HD.FTPosCode
								   ,HD.FTXshDocNo
								   ,HD.FNXshDocType
								   ,HD.FDXshDocDate
								   ,HD.FTCstCode
							FROM TPSTSalDT DT WITH(NOLOCK)
								 INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo
								 INNER  JOIN TCNMShop SHP WITH(NOLOCK) ON   HD.FTBchCode = SHP.FTBchCode AND
																		   HD.FTShpCode = SHP.FTShpCode
								 INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
																		AND PDT.FTPdtType = 1'
	SET @tSQL += @tSQL_Filter
	SET @tSQL += '
					) HD ON   RC.FTBchCode = HD.FTBchCode 
					AND RC.FTXshDocNo = HD.FTXshDocNo
					INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo
					LEFT  JOIN TPSTSalHDCst HDC  WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo'
	SET @tSQL +=  @tSQL_Where_Rcv 
	SET @tSQL += '
		           UNION ALL
						SELECT ''' + @tComName + '''    AS FTComName,
						       ''' + @tRptCode + '''    AS FTRptCode,
							   ''' + @tUsrSession + ''' AS FTUsrSession,
						       FORMAT(HD.FDXshDocDate,''yyyy-MM-dd'') AS FDCreateOn,
							   HD.FTPosCode,
							   HD.FTXshDocNo, 
							   DT.FTPdtName,
							   RC.FTRcvCode, 
							   RC.FTRcvName,
							   SUBSTRING(FTXshCstName,0,CHARINDEX('' '',HDC.FTXshCstName) + 1) AS FTXshCstName,	
							   REVERSE(SUBSTRING(REVERSE(HDC.FTXshCstName),0,CHARINDEX('' '',HDC.FTXshCstName))) AS FTXshCstLastName,
							   HDC.FTXshCstTel,
							   HD.FTCstCode,
							   RC.FTXrcRefNo1,
							   CASE WHEN HD.FNXshDocType = 1 THEN  RC.FCXrcNet ELSE RC.FCXrcNet * -1 END AS FNXshDocType,
							   2 AS FNXshAppType

						FROM TVDTSalRC RC
						INNER JOIN
						(
							--หาบิลที่ขายสินค้าทั่วไปเท่านั้น VD System
							SELECT  DISTINCT 
									HD.FTBchCode
								   ,HD.FTPosCode
								   ,HD.FTXshDocNo
								   ,HD.FNXshDocType
								   ,HD.FDXshDocDate
								   ,HD.FTCstCode
							FROM TVDTSalDT DT WITH(NOLOCK)
								 INNER JOIN TVDTSalHD HD WITH(NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo
								 INNER  JOIN TCNMShop SHP WITH(NOLOCK) ON   HD.FTBchCode = SHP.FTBchCode AND
																		   HD.FTShpCode = SHP.FTShpCode
								 INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode'
																	
	SET @tSQL += @tSQL_Filter
	SET @tSQL += '	) HD ON   RC.FTBchCode = HD.FTBchCode 
					AND RC.FTXshDocNo = HD.FTXshDocNo
					LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode	
					INNER JOIN VCN_ProductsSaleByBill DT ON RC.FTXshDocNo = DT.FTXshDocNo
				    LEFT  JOIN TVDTSalHDCst HDC  WITH(NOLOCK) ON HD.FTXshDocNo = HDC.FTXshDocNo '

	SET @tSQL +=  @tSQL_Where_Rcv 
	IF @tSQL_Where_Rcv = ''
	BEGIN
		SET @tSQL +=  ' WHERE Rcv.FTFmtCode <> ''004'''
	END
	ELSE IF @tSQL_Where_Rcv <> ''
	BEGIN
		SET @tSQL +=  ' AND Rcv.FTFmtCode <> ''004'''
	END
	SET @tSQL += ') S ORDER BY S.FDXshDocDate '
	/*===== End Process =======================================================================================================*/

	PRINT @tSQL
	EXECUTE(@tSQL)

	--ลบข้อมูล Initail Temp
	DELETE FROM TRPTPTTSpcPdtSaleDet WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNRowPartID = 99

	SET @nResult = 0
	return @nResult
END TRY	
BEGIN CATCH
    SET @nResult = -1
	return @nResult
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxPSVDWeeklySale]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxPSVDWeeklySale]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxPSVDWeeklySale] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxPSVDWeeklySale]
--ALTER PROCEDURE [dbo].[SP_RPTxPSVDWeeklySale]
	@pnLngID INT , 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	@pnFilterType INT,

	--สาขา ช่วง
	@ptBchF VARCHAR(20),
	@ptBchT VARCHAR(20),
	--กลุ่มธุรกิจ ช่วง
	@ptMerF VARCHAR(20),
	@ptMerT VARCHAR(20),
	--ร้านค้า ช่วง
	@ptShpF VARCHAR(20),
	@ptShpT VARCHAR(20),
	--จุดขาย ช่วง
	@ptPosCodeF VARCHAR(5),
	@ptPosCodeT VARCHAR(5),

	--สาขา เลือก
	@ptBchL VARCHAR(MAX),
	--กลุ่มธุรกิจ เลือก
	@ptMerL VARCHAR(MAX),
	--ร้านค้า เลือก
	@ptShpL VARCHAR(MAX),
	--จุดขาย เลือก
	@ptPosCodeL VARCHAR(MAX),

	--ห้ามเป็นค่าว่าง
	@pdMonthSale VARCHAR(10), 
	@pdYearSale VARCHAR(10),

	@FNResult INT OUTPUT
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(MAX)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(50)
	DECLARE @tUsrSession VARCHAR(255)
	DECLARE @nFilterType INT
	DECLARE @tStartOfWeek INT
	DECLARE @tEndOfWeek INT
	DECLARE @tStartDayOfMont DATE

	--สาขา ช่วง
	DECLARE @tBchF VARCHAR(5)
	DECLARE @tBchT VARCHAR(5)
	--กลุ่มธุรกิจ ช่วง
	DECLARE @tMerF VARCHAR(5)
	DECLARE @tMerT VARCHAR(5)
	--ร้านค้า ช่วง
	DECLARE @tShpF VARCHAR(5)
	DECLARE @tShpT VARCHAR(5)
	--จุดขาย ช่วง
	DECLARE @tPosCodeF VARCHAR(5)
	DECLARE @tPosCodeT VARCHAR(5)

	--สาขา เลือก
	DECLARE @tBchL VARCHAR(MAX)
	--กลุ่มธุรกิจ เลือก
	DECLARE @tMerL VARCHAR(MAX)
	--ร้านค้า เลือก
	DECLARE @tShpL VARCHAR(MAX)
	--จุดขาย เลือก
	DECLARE @tPosCodeL VARCHAR(MAX)

	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	SET @nFilterType = @pnFilterType

	--สาขา ช่วง
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	--กลุ่มธุรกิจ ช่วง
	SET @tMerF = @ptMerF
	SET @tMerT = @ptMerT
	--ร้านค้า ช่วง
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	--จุดขาย ช่วง
	SET @tPosCodeF = @ptPosCodeF
	SET @tPosCodeT = @ptPosCodeT

	--สาขา เลือก
	SET @tBchL = @ptBchL
	--กลุ่มธุรกิจ เลือก
	SET @tMerL = @ptMerL
	--ร้านค้า เลือก
	SET @tShpL = @ptShpL
	--จุดขาย เลือก
	SET @tPosCodeL = @ptPosCodeL

	SET @tSQL_Filter = ''

	/*===== 1: แบบช่วง ===========================================================================================================================================*/
	IF(@nFilterType = 1)
		/*===== ตรวจสอบค่า Filter สาขา ช่วง ========================================*/
		--เช็ค Parameter จากสาขา
		IF(@tBchF = '' OR @tBchF = NULL)
			BEGIN 
				SET @tBchF = ''
			END
		ELSE IF(@tBchF <> '')
		   BEGIN 
			   SET @tBchF = @tBchF
		   END

		 --เช็ค Parameter ถึงสาขา
		IF(@tBchT = '' OR @tBchT = NULL)
		   BEGIN 
			   SET @tBchT = ''
		   END
		ELSE IF(@tBchT <> '')
		   BEGIN 
			   SET @tBchT = @tBchT
		   END

		IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  ( (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') OR (HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''') )' + CHAR(13)
			END

		/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ ช่วง ========================================*/
		--เช็ค Parameter จากกลุ่มธุรกิจ
		IF(@tMerF = '' OR @tMerF = NULL)
			BEGIN 
				SET @tMerF = ''
			END
		ELSE IF(@tMerF <> '')
		   BEGIN 
			   SET @tMerF = @tMerF
		   END

		 --เช็ค Parameter ถึงกลุ่มธุรกิจ
		IF(@tMerT = '' OR @tMerT = NULL)
		   BEGIN 
			   SET @tMerT = ''
		   END
		ELSE IF(@tMerT <> '')
		   BEGIN 
			   SET @tMerT = @tMerT
		   END

		IF (@tMerF <> '' AND @tMerT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  ( (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') OR (SHP.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''') )' + CHAR(13)
			END

		/*===== ตรวจสอบค่า Filter ร้านค้า ช่วง ========================================*/
		--เช็ค Parameter จากร้านค้า
		IF(@tShpF = '' OR @tShpF = NULL)
			BEGIN 
				SET @tShpF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tShpF = @tShpF
		   END

		 --เช็ค Parameter ถึงร้านค้า
		IF(@tShpT = '' OR @tShpT = NULL)
		   BEGIN 
			   SET @tShpT = ''
		   END
		ELSE IF(@tShpT <> '')
		   BEGIN 
			   SET @tShpT = @tShpT
		   END

		IF (@tShpF <> '' AND @tShpT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  ( (HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''') OR (HD.FTShpCode BETWEEN ''' + @tShpT + ''' AND ''' + @tShpF + ''') )' + CHAR(13)
			END
	
		/*===== ตรวจสอบค่า Filter จุดขาย ช่วง ========================================*/
		--เช็ค Parameter จากจุดขาย
		IF(@tPosCodeF = '' OR @tPosCodeF = NULL)
			BEGIN 
				SET @tPosCodeF = ''
			END
		ELSE IF(@tShpF <> '')
		   BEGIN 
			   SET @tPosCodeF = @tPosCodeF
		   END

		 --เช็ค Parameter ถึงจุดขาย
		IF(@tPosCodeT = '' OR @tPosCodeT = NULL)
		   BEGIN 
			   SET @tPosCodeT = ''
		   END
		ELSE IF(@tPosCodeT <> '')
		   BEGIN 
			   SET @tPosCodeT = @tPosCodeT
		   END

		IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  ( (HD.FTPosCode BETWEEN ''' + @tPosCodeF + ''' AND ''' + @tPosCodeT + ''') OR (HD.FTPosCode BETWEEN ''' + @tPosCodeT + ''' AND ''' + @tPosCodeF + ''') )' + CHAR(13)
			END

	/*===== 2: แบบเลือก ===========================================================================================================================================*/
	IF(@nFilterType = 2)
		/*===== ตรวจสอบค่า Filter สาขา เลือก ========================================*/
		--เช็ค Parameter สาขา
		IF(@tBchL = '' OR @tBchL = NULL)
			BEGIN 
				SET @tBchL = ''
			END
		ELSE IF(@tBchL <> '')
		   BEGIN 
			   SET @tBchL = @tBchL
		   END

		IF (@tBchL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTBchCode IN('+ REPLACE(@tBchL,'''''','''') + '))' + CHAR(13)
			END

		/*===== ตรวจสอบค่า Filter กลุ่มธุรกิจ เลือก ========================================*/
		--เช็ค Parameter กลุ่มธุรกิจ
		IF(@tMerL = '' OR @tMerL = NULL)
			BEGIN 
				SET @tMerF = ''
			END
		ELSE IF(@tMerL <> '')
		   BEGIN 
			   SET @tMerL = @tMerL
		   END

		IF (@tMerL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (SHP.FTMerCode IN(' + REPLACE(@tMerL,'''''','''') + '))' + CHAR(13)
			END

		/*===== ตรวจสอบค่า Filter ร้านค้า เลือก ========================================*/
		--เช็ค Parameter จากร้านค้า
		IF(@tShpL = '' OR @tShpL = NULL)
			BEGIN 
				SET @tShpL = ''
			END
		ELSE IF(@tShpL <> '')
		   BEGIN 
			   SET @tShpL = @tShpL
		   END

		IF (@tShpL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTShpCode IN(' + REPLACE(@tShpL,'''''','''') + '))' + CHAR(13)
			END
	
		/*===== ตรวจสอบค่า Filter จุดขาย เลือก ========================================*/
		--เช็ค Parameter จุดขาย
		IF(@tPosCodeL = '' OR @tPosCodeL = NULL)
			BEGIN 
				SET @tPosCodeL = ''
			END
		ELSE IF(@tShpL <> '')
		   BEGIN 
			   SET @tPosCodeL = @tPosCodeL
		   END

		IF (@tPosCodeL <> '')
			BEGIN
				SET @tSQL_Filter += ' AND  (HD.FTPosCode IN(' + REPLACE(@tPosCodeL,'''''','''') + '))' + CHAR(13)
			END

	/*===== Begin Process =======================================================================================================*/
	--หาวันที่เอกสารนำไป WHERE ที่ Query
	DECLARE @tDocDateF VARCHAR(10)
	DECLARE @tDocDateT VARCHAR(10)
	SET @tDocDateF = @pdYearSale + '-' + @pdMonthSale + '-01'
	SET @tDocDateT = @pdYearSale + '-' + @pdMonthSale + '-31'

	SET @tSQL_Filter += ' AND (FORMAT(HD.FDXshDocDate, ''yyyy-MM-dd'') BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''')' + CHAR(13)

	--สร้างวันที่เพื่อนำไปหาจำนวนสัปดาห์ของเดือน
	SET @tStartDayOfMont = CAST(@pdYearSale + '-' + @pdMonthSale + '-01' AS VARCHAR(10))
	--PRINT(@tStartDayOfMont)

	--สัปดาห์เริ่มต้น
	SET @tStartOfWeek = 1
	--หาจำนวนสัปดาห์สุดท้ายภายในเดือนที่เลือกเพื่อนำไปสร้างข้อมูลสัปดาห์
	SET @tEndOfWeek = (SELECT  DATEPART(WEEK, EOMONTH(@tStartDayOfMont))  - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,EOMONTH(@tStartDayOfMont)), 0))+ 1 )
	--PRINT(@tEndOfWeek)

	--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	DELETE FROM TRPTPTTSpcPSVDWeeklySaleTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

    --สร้างสัปดาห์ที่ตาม Filter ที่เลือกมา
    WHILE(@tStartOfWeek <= @tEndOfWeek)
        BEGIN
            --PRINT @tStartOfWeek;
            INSERT INTO TRPTPTTSpcPSVDWeeklySaleTmp(FNRowPartID,FDXshDocWeek,FTComName,FTRptCode,FTUsrSession) VALUES(99,@tStartOfWeek,@tComName,@tRptCode,@tUsrSession)
            SET @tStartOfWeek = @tStartOfWeek + 1;
        END;
	

	SET @tSQL = '
		INSERT INTO TRPTPTTSpcPSVDWeeklySaleTmp 
		(FTComName,FTRptCode,FTUsrSession,FDXshDocWeek,FCXshGrand,FNXshTotalBill,FCXrcNetVDQR,FCXrcNetPosCash,FCXrcNetPosQR,FCXrcNetPosEDC,FTXshRem)
	'

	 --รายงานยอดขายผลิตภัณฑ์ของสัปดาห์(POS Vending)
	 SET @tSQL += '
		SELECT 
			''' + @tComName + ''' AS FTComName,
			''' + @tRptCode + ''' AS FTRptCode,
			''' + @tUsrSession + ''' AS FTUsrSession,
			W.FDXshDocWeek,
			ISNULL(SAL.FCXshGrand, 0) AS FCXshGrand, 
			ISNULL(SAL.FNXshTotalBill, 0) AS FNXshTotalBill, 
			ISNULL(SAL.FCXrcNetVDQR, 0) AS FCXrcNetVDQR, 
			ISNULL(SAL.FCXrcNetPosCash, 0) AS FCXrcNetPosCash, 
			ISNULL(SAL.FCXrcNetPosQR, 0) AS FCXrcNetPosQR, 
			ISNULL(SAL.FCXrcNetPosEDC, 0) AS FCXrcNetPosEDC, 
			'''' AS FTXshRem
		FROM TRPTPTTSpcPSVDWeeklySaleTmp W WITH(NOLOCK)
		LEFT JOIN (
			SELECT 
				FNXshSaleWeek,
				SUM(
					CASE
						WHEN T.FNXshDocType = 1 THEN T.FCXrcNet
						ELSE T.FCXrcNet * -1
					END
				) AS FCXshGrand, 
				COUNT(T.FTXshDocNo) AS FNXshTotalBill, 
				SUM(
					CASE
						WHEN T.FNXshDocType = 1 THEN T.FCXrcNetVDQR
						ELSE T.FCXrcNetVDQR * -1
					END
				) AS FCXrcNetVDQR,
				SUM(
					CASE
						WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosCash
						ELSE T.FCXrcNetPosCash * -1
					END
				) AS FCXrcNetPosCash, 
				SUM(
					CASE
						WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosQR
						ELSE T.FCXrcNetPosQR * -1
					END
				) AS FCXrcNetPosQR, 
				SUM(
					CASE
						WHEN T.FNXshDocType = 1 THEN T.FCXrcNetPosEDC
						ELSE T.FCXrcNetPosEDC * -1
					END
				) AS FCXrcNetPosEDC
			FROM
			(
				--Pos System
				SELECT 
					SHD.*, 
					SRC.FCXrcNetPosCash, 
					SRC.FCXrcNetPosEDC, 
					SRC.FCXrcNetPosQR, 
					SRC.FCXrcNetVDQR
				FROM
				(
					SELECT 
						DATEPART(WEEK, HD.FDXshDocDate)  -
						DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,HD.FDXshDocDate), 0))+ 1 AS FNXshSaleWeek, 
						HD.FNXshDocType, 
						RC.FCXrcNet, 
						RC.FTXshDocNo
					FROM TPSTSalRC RC
						 LEFT JOIN TPSTSalHD AS HD WITH(NOLOCK) ON HD.FTXshDocNo = RC.FTXshDocNo
						 INNER JOIN TCNMShop AS SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode
						 INNER JOIN
						(
							SELECT DISTINCT 
								FTXshDocNo
							FROM TPSTSalDT DT WITH(NOLOCK)
							LEFT JOIN TCNMPdt AS PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
							WHERE PDT.FTPdtType = 1
						) DT ON RC.FTXshDocNo = DT.FTXshDocNo
					WHERE HD.FTXshStaDoc = 1
	'
	SET @tSQL += @tSQL_Filter
	SET @tSQL += '
				) SHD
				LEFT JOIN
				(
					SELECT 
						HD.FTXshDocNo, 
						SUM(
							CASE
								WHEN RCV.FTFmtCode = ''001'' THEN RC.FCXrcNet
								ELSE 0
							END
						) AS FCXrcNetPosCash, 
						SUM(
							CASE
								WHEN RCV.FTFmtCode = ''002'' THEN RC.FCXrcNet
								ELSE 0
							END
						) AS FCXrcNetPosEDC, 
						SUM(
							CASE
								WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet
								ELSE 0
							END
						) AS FCXrcNetPosQR, 
						0 AS FCXrcNetVDQR
					FROM TPSTSalRC AS RC WITH(NOLOCK)
					INNER JOIN TPSTSalHD AS HD WITH(NOLOCK) ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1
					INNER JOIN TCNMShop AS SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode
					INNER JOIN TFNMRcv AS RCV WITH(NOLOCK) ON RC.FTRcvCode = RCV.FTRcvCode
					WHERE RCV.FTFmtCode IN(''001'', ''002'', ''013'')
	'
	SET @tSQL += @tSQL_Filter
	--14/01/2020 NUI add cut paycash coupon
	SET @tSQL += '
					GROUP BY HD.FTXshDocNo
				) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo

				UNION ALL

				--VD System
				SELECT 
					SHD.*, 
					SRC.FCXrcNetPosCash, 
					SRC.FCXrcNetPosEDC, 
					SRC.FCXrcNetPosQR, 
					SRC.FCXrcNetVDQR
				FROM
				(
					SELECT 
						DATEPART(WEEK, HD.FDXshDocDate) - DATEPART(WEEK, DATEADD(MM, DATEDIFF(MM,0,HD.FDXshDocDate), 0))+ 1 AS FNXshSaleWeek,
						HD.FNXshDocType, 
						ISNULL(RC.FCXrcNet, 0) AS FCXrcNet, 
						RC.FTXshDocNo
					FROM TVDTSalRC RC WITH(NOLOCK)
				    LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON  RC.FTRcvCode = Rcv.FTRcvCode	
					LEFT JOIN TVDTSalHD HD WITH(NOLOCK) ON HD.FTXshDocNo = RC.FTXshDocNo
					INNER JOIN TCNMShop AS SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode
					INNER JOIN
					(
						SELECT DISTINCT 
							FTXshDocNo
						FROM TVDTSalDT DT WITH(NOLOCK)
						LEFT JOIN TCNMPdt AS PDT WITH(NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
						WHERE PDT.FTPdtType = 1
					) DT ON RC.FTXshDocNo = DT.FTXshDocNo
					WHERE HD.FTXshStaDoc = 1 AND Rcv.FTFmtCode <> ''004''
	'
	SET @tSQL += @tSQL_Filter
	SET @tSQL += '
				) SHD
				LEFT JOIN
				(
					SELECT 
						HD.FTXshDocNo, 
						0 AS FCXrcNetPosCash, 
						0 AS FCXrcNetPosEDC, 
						0 AS FCXrcNetPosQR, 
						SUM(
							CASE
								WHEN RCV.FTFmtCode = ''013'' THEN RC.FCXrcNet
								ELSE 0
							END
						) AS FCXrcNetVDQR
					FROM TVDTSalRC AS RC WITH(NOLOCK)
					INNER JOIN TVDTSalHD AS HD WITH(NOLOCK) ON RC.FTXshDocNo = HD.FTXshDocNo AND HD.FTXshStaDoc = 1
					INNER JOIN TCNMShop AS SHP WITH(NOLOCK) ON HD.FTBchCode = SHP.FTBchCode AND HD.FTShpCode = SHP.FTShpCode
					INNER JOIN TFNMRcv AS RCV WITH(NOLOCK) ON RC.FTRcvCode = RCV.FTRcvCode
					WHERE RCV.FTFmtCode = ''013''
	'
	SET @tSQL += @tSQL_Filter
	SET @tSQL += '
					GROUP BY HD.FTXshDocNo
				) SRC ON SHD.FTXshDocNo = SRC.FTXshDocNo
			) T
			GROUP BY T.FNXshSaleWeek
		) SAL ON W.FDXshDocWeek = SAL.FNXshSaleWeek

		WHERE W.FTComName = ''' + @tComName + '''
		AND W.FTUsrSession = ''' + @tUsrSession + '''
		ORDER BY W.FDXshDocWeek
	 '

	--PRINT @tSQL
	EXECUTE(@tSQL)

	--ลบข้อมูล Initail Temp
	DELETE FROM TRPTPTTSpcPSVDWeeklySaleTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND FNRowPartID = 99

	SET @FNResult = 0
	return @FNResult
END TRY	
BEGIN CATCH
    SET @FNResult = -1
	return @FNResult
END CATCH

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRecePtionByTime003001014]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRecePtionByTime003001014]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRecePtionByTime003001014] AS' 
END
GO
-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxRecePtionByTime003001014]

	@pnLngID      int,
	@ptComName    Varchar(100),
	@ptRptCode    Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF	      Varchar(10),
	--@ptBchT       Varchar(10),
	--@ptShpF       Varchar(10),
	--@ptShpT       Varchar(10),
	--@ptPosF       Varchar(10),
	--@ptPosT       Varchar(10),

	@ptDocDateF   Varchar(10),
	@ptDocDateT   Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Saharat(Golf) 
-- Create 09/12/2019
-- Temp name  -
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession

-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPosF จากรหัสเครื่องจุดขาย
-- @ptPosT ถึงรหัสเครื่องจุดขาย

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
--------------------------------------
BEGIN TRY
	DECLARE @nLngID      int
	DECLARE @tComName    Varchar(100)
	DECLARE @tRptCode    Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 nVARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF	     Varchar(5)
	--DECLARE @tBchT       Varchar(5)
	--DECLARE @tShpF       Varchar(5)
	--DECLARE @tShpT       Varchar(5)
	--DECLARE @tPosF       Varchar(5)
	--DECLARE @tPosT       Varchar(5)

	DECLARE @tDocDateF   Varchar(10)
	DECLARE @tDocDateT   Varchar(10)

-------- ประกาศตัวแปรรับ parameter ------

	SET  @nLngID		 = @pnLngID
	SET  @tComName		 = @ptComName
	SET  @tRptCode       = @ptRptCode
	SET  @tUsrSession    = @ptUsrSession

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET  @tBchF			 = @ptBchF
	--SET  @tBchT          = @ptBchT
	--SET  @tShpF			 = @ptShpF
	--SET  @tShpT			 = @ptShpT
	--SET  @tPosF			 = @ptPosF
	--SET  @tPosT			 = @ptPosT

	
	SET  @tDocDateF		 = @ptDocDateF
	SET  @tDocDateT		 = @ptDocDateT

	SET @FNResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END

----- Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null  --------

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END
	
	--IF @tBchF = null
	--BEGIN
	--	SET @tBchF = ''
	--END

	--IF @tBchT = null OR @tBchT = ''
	--BEGIN
	--	SET @tBchT = @tBchF
	--END
	
	--IF @tShpF = null
	--BEGIN 
	--	SET @tShpF = ''
	--END 
	
	--IF @tShpT = null OR @tShpT = ''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END

	--IF @tPosF = null
	--BEGIN
	--	SET @tPosF = ''
	--END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END 

	IF @tDocDateT = null OR @tDocDateT = ''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END 

	SET @tSql1	 = ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 += ' AND TLS.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 += ' AND SHP_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''' '
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 += ' AND TLS.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND TLS.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 += ' AND TLS.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 += ' AND SHP_F.FTMerCode IN (' + @ptMerL + ')'
		END
		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 += ' AND TLS.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND TLS.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND TLS.FTBchCode BETWEEN '''+ @tBchF +''' AND '''+ @tBchT +''' '
	--END

	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 += ' AND TLS.FTShpCode BETWEEN '''+ @tShpF +''' AND '''+ @tShpT +''''
 --   END
	
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN 
	--	SET @tSql1 += ' AND TLS.FTPosCode BETWEEN '''+ @tPosF +''' AND '''+ @tPosT +''''
	--END 
	
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN	
		SET @tSql2 = ' AND CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '''+ @tDocDateF +''' AND '''+ @tDocDateT +''' '
	END
	ELSE
	BEGIN	
		SET @tSql2 = ''
	END

	--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
    DELETE FROM TRPTRTRecePtionByTimeTmp WHERE FTComName =  '' + @tComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	
	--INSERT Temp
  	SET @tSql  =' INSERT INTO TRPTRTRecePtionByTimeTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='	FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTTPdStart,FTTPdStop,FNXshBillQTY,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' TLS.FTBchCode,TLS.FTBchName,TLS.FTShpCode,TLS.FTShpName,TLS.FTPosCode,TLS.FTTPdStart,TLS.FTTPdStop,ISNULL(MIS.FNXshBillQTY,0) AS FNXshBillQTY,ISNULL(MIS.FCXshGrand,0) AS   FCXshGrand'

	SET @tSql +=' FROM( SELECT TPD.*, GHD.* FROM ( SELECT * , SUBSTRING(FTTPdStart,1,2)  AS FTTpdHours FROM VCN_TimePeriod ) TPD CROSS JOIN ('
	SET @tSql +=' SELECT DISTINCT  SHD.FTBchCode, SDT.FTShpCode, SHD.FTPosCode,BCH.FTBchName,SHP.FTShpName '
	SET @tSql +=' FROM TRTTSalHD SHD WITH(NOLOCK) '
	SET @tSql +=' LEFT JOIN TRTTSalDT SDT WITH(NOLOCK) ON SHD.FTXshDocNo = SDT.FTXshDocNo '
	SET @tSql +=' LEFT JOIN TCNMBranch_L BCH ON SHD.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' LEFT JOIN TCNMShop_L SHP ON SDT.FTShpCode = SHP.FTShpCode AND SHP.FNLngID  = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' '
	SET @tSql +=' ) GHD ) TLS LEFT JOIN ( '
	SET @tSql +='  SELECT SHD.FTBchCode , SDT.FTShpCode, SHD.FTPosCode, SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),12,2) AS FDXshDocTime,'
	SET @tSql +=' COUNT(SHD.FTXshDocNo) AS FNXshBillQTY, SUM(SHD.FCXshGrand) AS FCXshGrand '
	SET @tSql +=' FROM TRTTSalHD SHD WITH(NOLOCK) '
	SET @tSql +=' LEFT JOIN TRTTSalDT SDT WITH(NOLOCK) ON SHD.FTXshDocNo = SDT.FTXshDocNo '
	SET @tSql +=' WHERE SHD.FTXshStaDoc = 1 AND   SHD.FTXshStaPaid = 3 '
	SET @tSql +=  @tSql2
    SET @tSql +=' GROUP BY SHD.FTBchCode, SDT.FTShpCode,SHD.FTPosCode,SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),12,2)'
	SET @tSql +=' ) MIS ON TLS.FTBchCode = MIS.FTBchCode AND TLS.FTShpCode = MIS.FTShpCode AND TLS.FTTpdHours = MIS.FDXshDocTime '
	SET @tSql +=' LEFT JOIN TCNMShop SHP_F ON TLS.FTShpCode = SHP_F.FTShpCode AND TLS.FTBchCode = SHP_F.FTBchCode '
	
	PRINT @tSql1
	SET @tSql += @tSql1	
	PRINT @tSql

	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTRecePtionByTimeTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''

END TRY
BEGIN CATCH
	SET @FNResult = -1
	RETURN @FNResult
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRentalBySize3002003]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRentalBySize3002003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRentalBySize3002003] AS' 
END
GO
-- =============================================
-- Author:		Kitpipat Kaewkieo
-- Create date: 24/07/2019
-- Description:	รายงานการฝากตามขนาดช่องฝาก
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxRentalBySize3002003]
	
	    @pnLngID int , 
		@pnComName Varchar(100),
		@ptRptCode Varchar(100),
		@ptUsrSession Varchar(255),
		@ptBchF Varchar(20),
		@ptBchT Varchar(20),
		@ptShpF Varchar(20),
		@ptShpT Varchar(20),
		@ptPosCodeF Varchar(5),
		@ptPosCodeT Varchar(5),
		@ptDocDateF Varchar(50),
		@ptDocDateT Varchar(50),
		@FNResult INT OUTPUT 

AS
BEGIN TRY

	 DECLARE @tSQL VARCHAR(8000)
	 DECLARE @tSQL_Filter VARCHAR(8000)
	 DECLARE @tSQL_tDateFilter VARCHAR(4000)
	 DECLARE @nLngID int
	 DECLARE @tComName Varchar(100)
	 DECLARE @tRptCode Varchar(100)
	 DECLARE @tUsrSession Varchar(255)
	 DECLARE @tBchF Varchar(20)
	 DECLARE @tBchT Varchar(20)
	 DECLARE @tShpF Varchar(20)
	 DECLARE @tShpT Varchar(20)
	 DECLARE @tPosCodeF Varchar(5)
	 DECLARE @tPosCodeT Varchar(5)
	 DECLARE @tDocDateF Varchar(50)
	 DECLARE @tDocDateT Varchar(50)
	 

	 SET @nLngID = @pnLngID
	 SET @tComName = @pnComName
	 SET @tRptCode = @ptRptCode
	 SET @tUsrSession = @ptUsrSession
	 SET @tBchF = @ptBchF --จากสาขา
	 SET @tBchT = @ptBchT --ถึงสาขา
	 SET @tShpF = @ptShpF --จากร้านค้า
	 SET @tShpT = @ptShpT --ถึงร้านค้า
	 SET @tPosCodeF = @ptPosCodeF --จาก Pos
	 SET @tPosCodeT = @ptPosCodeT --ถึง Pos
	
	 SET @tDocDateF = @ptDocDateF  --จากวันที่เอกสาร
	 SET @tDocDateT = @ptDocDateT  --ถึงวันที่เอกสาร
	 

	 --ตรวจสอบ PosCode From
	 IF(@tPosCodeF = NULL OR @tPosCodeF = '')
		 BEGIN 
			SET @tPosCodeF = ''
		 END
	 ELSE IF(@tPosCodeF <> '')
		 BEGIN 
			SET @tPosCodeF = @tPosCodeF
		 END

	 --ตรวจสอบ PosCode To
	 IF(@tPosCodeT = NULL OR @tPosCodeT = '')
		 BEGIN 
			SET @tPosCodeT = ''
		 END
	 ELSE IF(@tPosCodeT <> '')
		 BEGIN 
			SET @tPosCodeT = @tPosCodeT
		 END

	 --ตรวจสอบค่าสำหรับ Filter
	 SET @tSQL_Filter =   '  WHERE 1 = 1  '

	 IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND A.FTPosCode BETWEEN ''' + @tPosCodeF + ''' AND ''' + @tPosCodeT + ''' '
	 END

	
	 --ตรวจสอบข้อมูล filter วันที่
	 --เช็ค Parameter จากวันที่
	 IF (@tDocDateF = NULL OR @tDocDateF = '')
	    BEGIN
			 SET @tDocDateF = CONVERT(VARCHAR(10),DATEADD(YEAR, -10, GETDATE()),121)
		END
	 ELSE IF (@tDocDateF <> '')
		BEGIN
			SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
		END
     --เช็ค Parameter ถึงวันที่
	 IF (@tDocDateT = NULL OR @tDocDateT = '')
	    BEGIN
			 SET @tDocDateT = CONVERT(VARCHAR(10),GETDATE(),121)
		END
	 ELSE IF (@tDocDateT <> '')
		BEGIN
			SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)
		END

     --Filter วันที่เอกสาร
	 SET @tSQL_tDateFilter = ' WHERE 1 = 1 '
	 SET @tSQL_tDateFilter +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' '

	 --ตรวจสอบค่า Filter สาขา
	 --เช็ค Parameter จากสาขา
	 IF(@tBchF = '' OR @tBchF = NULL)
	    BEGIN 
		     SET @tBchF = ''
	    END
	 ELSE IF(@tBchF <> '')
	    BEGIN 
		     SET @tBchF = @tBchF
	    END

     --เช็ค Parameter ถึงสาขา
	 IF(@tBchT = '' OR @tBchT = NULL)
	    BEGIN 
		     SET @tBchT = ''
	    END
	 ELSE IF(@tBchT <> '')
	    BEGIN 
		     SET @tBchT = @tBchT
	    END


	 IF (@tBchF <> '' AND @tBchT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND  A.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
	 END

	 --ตรวจสอบค่า Filter ร้านค้า
	 --เช็ค Parameter จากร้านค้า
	 IF(@tShpF = NULL OR @tShpF = '')
		 BEGIN
			SET @tShpF = ''
		 END
	 ELSE IF(@tShpF <> '')
		 BEGIN
			SET @tShpF = @tShpF 
		 END

	 --เช็ค Parameter ถึงร้านค้า
	 IF(@tShpT = NULL OR @tShpT = '')
		 BEGIN
			SET @tShpT = ''
		 END
	 ELSE IF(@tShpT <> '')
		 BEGIN
			SET @tShpT = @tShpT 
		 END

	 IF (@tShpF <> '' AND @tShpT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND  A.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
	 END


	DELETE FROM TRPTRTSalBySizeTmp WITH (ROWLOCK) WHERE FTComName =  '' + @tComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSQL = 'INSERT INTO TRPTRTSalBySizeTmp (FTComName,FTRptCode,FTUsrSession,FTBchCode,FTShpCode,FTPosCode,FTShpName,FTPzeCode,FTPzeName,FTXhdQty) '

	SET @tSql+= ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSQL+= ' A.* FROM( '
	SET @tSQL+= ' SELECT SL.FTBchCode,SL.FTShpCode,HD.FTPosCode,SHL.FTShpName,SLY.FTPzeCode,SZE.FTSizName, '
	SET @tSQL+= ' COUNT(HD.FTXshDocNo) AS FTXhdQty '
	SET @tSQL+= ' FROM TRTTSALHD HD WITH (NOLOCK) '
	SET @tSQL+= ' LEFT JOIN TRTTSalDTSL SL WITH (NOLOCK) ON HD.FTXshDocNo = SL.FTXshDocNo '
	SET @tSQL+= ' LEFT JOIN TRTMShopLayout SLY ON SL.FNXsdLayNo = SLY.FNLayNo AND SL.FTBchCode = SLY.FTBchCode AND SL.FTShpCode = SLY.FTShpCode '
	SET @tSQL+= ' LEFT JOIN TCNMShop_L SHL ON SHL.FTBchCode = SL.FTBchCode AND   SHL.FTShpCode = SL.FTShpCode AND SHL.FNLngID = '''+ CAST(@nLngID  AS VARCHAR(10)) +''' '
	SET @tSQL+= ' LEFT JOIN TRTMShopSize_L SZE  ON SLY.FTPzeCode = SZE.FTSizCode AND SZE.FNLngID = '''+ CAST(@nLngID  AS VARCHAR(10)) +''' '
	
	SET @tSQL+=  ' ' + @tSQL_tDateFilter + ' ' 

	SET @tSQL+= ' GROUP BY SL.FTBchCode,SL.FTShpCode,HD.FTPosCode,SHL.FTShpName,SLY.FTPzeCode,SZE.FTSizName) A '
	SET @tSQL+= @tSQL_Filter
	SET @tSQL+= ' ORDER BY A.FTBchCode,A.FTShpCode,A.FTPosCode,A.FTShpName,A.FTPzeCode,A.FTSizName DESC '

	PRINT @tSQL

	EXECUTE(@tSQL)

	SET @FNResult = 0
	return @FNResult

END TRY

BEGIN CATCH

    SET @FNResult = -1
	return @FNResult

END CATCH






GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRentalDetail]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRentalDetail]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRentalDetail] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxRentalDetail]
    @pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptBchF Varchar(20),
	@ptBchT Varchar(20),
	@ptShpF Varchar(20),
	@ptShpT Varchar(20),
	@ptPosCodeF Varchar(5),
	@ptPosCodeT Varchar(5),
	@ptRackCodeF Varchar(5),
	@ptRackCodeT Varchar(5),
	@ptDocDateF Varchar(50),
	@ptDocDateT Varchar(50),
	@FNResult INT OUTPUT 
AS
BEGIN TRY

	 DECLARE @tSQL VARCHAR(8000)
	 DECLARE @tSQL_Filter VARCHAR(8000)
	 DECLARE @nLngID int
	 DECLARE @tComName Varchar(100)
	 DECLARE @tRptCode Varchar(100)
	 DECLARE @tUsrSession Varchar(255)
	 DECLARE @tBchF Varchar(20)
	 DECLARE @tBchT Varchar(20)
	 DECLARE @tShpF Varchar(20)
	 DECLARE @tShpT Varchar(20)
	 DECLARE @tPosCodeF Varchar(5)
	 DECLARE @tPosCodeT Varchar(5)
	 DECLARE @tRackCodeF Varchar(5)
	 DECLARE @tRackCodeT Varchar(5)
	 DECLARE @tDocDateF Varchar(50)
	 DECLARE @tDocDateT Varchar(50)
	 

	 SET @nLngID = @pnLngID
	 SET @tComName = @pnComName
	 SET @tRptCode = @ptRptCode
	 SET @tUsrSession = @ptUsrSession
	 SET @tBchF = @ptBchF --จากสาขา
	 SET @tBchT = @ptBchT --ถึงสาขา
	 SET @tShpF = @ptShpF --จากร้านค้า
	 SET @tShpT = @ptShpT --ถึงร้านค้า
	 SET @tPosCodeF = @ptPosCodeF --จาก Pos
	 SET @tPosCodeT = @ptPosCodeT --ถึง Pos
	 SET @tRackCodeF = @ptRackCodeF --จากกลุ่มช่อง
	 SET @tRackCodeT = @ptRackCodeT --ถึงกลุ่มช่อง
	 SET @tDocDateF = CONVERT(VARCHAR(10),@ptDocDateF,121)  --จากวันที่เอกสาร
	 SET @tDocDateT = CONVERT(VARCHAR(10),@ptDocDateT,121)  --ถึงวันที่เอกสาร
	 

	 --ตรวจสอบ PosCode From
	 IF @tPosCodeF = NULL
	 BEGIN 
		SET @tPosCodeF = ''
	 END
	 IF @tPosCodeF <> ''
	 BEGIN 
		SET @tPosCodeF = @tPosCodeF
	 END

	 --ตรวจสอบ PosCode To
	 IF @tPosCodeT = NULL
	 BEGIN 
		SET @tPosCodeT = ''
	 END
	 IF @tPosCodeT <> ''
	 BEGIN 
		SET @tPosCodeT = @tPosCodeT
	 END

	  --ตรวจสอบค่าสำหรับ Filter

	 SET @tSQL_Filter =   ' WHERE 1=1  AND FTXshStaDoc = ''1'' '

	 IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND HD.FTPosCode BETWEEN ''' + @tPosCodeF + ''' AND ''' + @tPosCodeT + ''' '
	 END

	 --ตรวจสอบ Filter กลุ่มช่อง
	 --From Rack
	 IF @tRackCodeF = NULL
	 BEGIN 
		SET @tRackCodeF = ''
	 END
	 --To Rack
	 IF @tRackCodeT = NULL
	 BEGIN 
		SET @tRackCodeT = ''
	 END

	 IF @tRackCodeF <> ''
	 BEGIN 
		SET @tRackCodeF = @tRackCodeF
	 END

	 IF @tRackCodeT <> ''
	 BEGIN 
		SET @tRackCodeT = @tRackCodeT
	 END

	 IF (@tRackCodeF <> '' AND @tRackCodeT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND RCK.FTRakCode BETWEEN ''' + @tRackCodeF + ''' AND ''' + @tRackCodeT + ''' '
	 END

	 --ตรวจสอบข้อมูล filter วันที่
	 IF (@tDocDateF = NULL)
	 BEGIN
		SET @tDocDateF = ''
	 END
	 IF (@tDocDateT = NULL)
	 BEGIN
		SET @tDocDateT = ''
	 END

	 IF (@tDocDateF <> '')
	 BEGIN
		SET @tDocDateF = @tDocDateF
	 END
	 IF (@tDocDateT <> '')
	 BEGIN
		SET @tDocDateT = @tDocDateT
	 END

	 IF (@tDocDateF <> '' AND @tDocDateT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' '
	 END

	 --ตรวจสอบค่า Filter สาขา
	 IF(@tBchF = NULL)
	 BEGIN
	    SET @tBchF = ''
	 END
	 IF(@tBchF <> '')
	 BEGIN
	    SET @tBchF = @tBchF 
	 END

	 IF(@tBchT = NULL)
	 BEGIN
	    SET @tBchT = ''
	 END
	 IF(@tBchT <> '')
	 BEGIN
	    SET @tBchT = @tBchT 
	 END

	 IF (@tBchF <> '' AND @tBchT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND  DSL.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
	 END

	 --ตรวจสอบค่า Filter ร้านค้า
	 IF(@tShpF = NULL)
	 BEGIN
	    SET @tShpF = ''
	 END
	 IF(@tShpF <> '')
	 BEGIN
	    SET @tShpF = @tShpF 
	 END
	 IF(@tShpT = NULL)
	 BEGIN
	    SET @tShpT = ''
	 END
	 IF(@tShpT <> '')
	 BEGIN
	    SET @tShpT = @tShpT 
	 END

	 IF (@tShpF <> '' AND @tShpT <> '')
	 BEGIN
		SET @tSQL_Filter +=' AND  DSL.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
	 END


	 DELETE FROM TRPTRTSalDTTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	
	 SET @tSQL = ' INSERT INTO TRPTRTSalDTTmp (FTComName,FTRptCode,FTUsrSession,FTBchCode,FTShpCode,FTPosCode,FTXshFrmLogin,FTCryCode,FTXshDocNo,FDXshDocDate,FTRakName,'
	 SET @tSQL+= ' FNLayNo,FTPzeName,FDXshDatePick,FTXshToLogin,FTXshStaPaid,FCXshPrePaid)'

	 SET @tSQL+= ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'

	 SET @tSQL+= ' DSL.FTBchCode,DSL.FTShpCode,HD.FTPosCode,HD.FTCstCode,HD.FTCryCode,HD.FTXshDocNo,HD.FDXshDocDate,RCK.FTRakName,'
     SET @tSQL+= ' SHL.FNLayNo,SZL.FTSizName,HD.FDXshDatePick,HD.FTXshToLogin,'
	 SET @tSQL+= ' HD.FTXshStaPaid,HD.FCXshPrePaid '
	 SET @tSQL+= ' FROM TRTTSalHD HD WITH (NOLOCK) '
	 SET @tSQL+= ' LEFT JOIN TRTTSalDTSL DSL WITH (NOLOCK)  ON HD.FTXshDocNo = DSL.FTXshDocNo '
	 SET @tSQL+= ' LEFT JOIN TRTMShopLayout SHL ON SHL.FTBchCode = DSL.FTBchCode AND SHL.FTShpCode = DSL.FTShpCode AND SHL.FNLayNo = DSL.FNXsdLayNo '
	 SET @tSQL+= ' LEFT JOIN TRTMShopRack_L RCK ON SHL.FTRakCode = RCK.FTRakCode '
	 SET @tSQL+= ' AND  RCK.FNLngID = '''+ CAST(@nLngID  AS VARCHAR(10)) +''''
	 SET @tSQL+= ' LEFT JOIN TRTMShopSize_L SZL ON SHL.FTPzeCode = SZL.FTSizCode '
	 SET @tSQL+= ' AND  SZL.FNLngID = '''+ CAST(@nLngID  AS VARCHAR(10)) +''''

	 SET @tSQL+= @tSQL_Filter

	 PRINT @tSQL
	 EXECUTE(@tSQL)
	 

	 SET @FNResult= 1

     RETURN  @FNResult

END TRY

BEGIN CATCH 

	  SET @FNResult= -1
	  RETURN  @FNResult

END CATCH






GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRentalPayment3001005]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRentalPayment3001005]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRentalPayment3001005] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxRentalPayment3001005]
	    @pnLngID int , 
		@pnComName Varchar(100),
		@ptRptCode Varchar(100),
		@ptUsrSession Varchar(255),
		@ptBchF Varchar(20),
		@ptBchT Varchar(20),
		@ptShpF Varchar(20),
		@ptShpT Varchar(20),
		@ptPosCodeF Varchar(5),
		@ptPosCodeT Varchar(5),
		@ptReciveTypeF Varchar(20),
		@ptReciveTypeT Varchar(20),
		@ptDocDateF Varchar(50),
		@ptDocDateT Varchar(50),
		@FNResult INT OUTPUT 
AS
BEGIN TRY
      
	 DECLARE @tSQL VARCHAR(8000)
	 DECLARE @tSQL_SubFilter VARCHAR(4000)
	 DECLARE @tSQL_Filter VARCHAR(4000)

	 DECLARE @nLngID int
	 DECLARE @tComName Varchar(100)
	 DECLARE @tRptCode Varchar(100)
	 DECLARE @tUsrSession Varchar(255)
	 DECLARE @tBchF VARCHAR(20) --จากสาขา
	 DECLARE @tBchT VARCHAR(20) --ถึงสาขา
	 DECLARE @tShpF VARCHAR(20) --จากร้านค้า
	 DECLARE @tShpT VARCHAR(20) --ถึงร้านค้า
	 DECLARE @tPosF VARCHAR(20) --จากเครื่องจุดขาย
	 DECLARE @tPosT VARCHAR(20) --ถึงเครื่องจุดขาย

	 DECLARE @tReciveTypeF VARCHAR(20) --จากประเภทการชำระ
	 DECLARE @tReciveTypeT VARCHAR(20) --ถึงประเภทการชำระ

	 DECLARE @tDocDateF Varchar(50) --จากวันที่
	 DECLARE @tDocDateT Varchar(50) --ถึงวันที่


	 SET @nLngID = @pnLngID
	 SET @tComName = @pnComName
	 SET @tRptCode = @ptRptCode
	 SET @tUsrSession = @ptUsrSession
	 SET @tBchF = @ptBchF
	 SET @tBchT = @ptBchT
	 SET @tShpF = @ptShpF --จากร้านค้า
	 SET @tShpT = @ptShpT --ถึงร้านค้า
	 SET @tPosF = @ptPosCodeF
	 SET @tPosT = @ptPosCodeT
	 SET @tReciveTypeF = @ptReciveTypeF --จากประเภทการชำระ
	 SET @tReciveTypeT = @ptReciveTypeT --ถึงประเภทการชำระ
	 SET @tDocDateF = @ptDocDateF --จากวันที่
	 SET @tDocDateT = @ptDocDateF --ถึงวันที่
	 
	 SET @tSQL_Filter = ' WHERE 1=1 '  --Filter นอกสุด
	 SET @tSQL_SubFilter = ' WHERE 1=1 ' --Filter Sub Query

	 --ตรวจสอบ Parameter สาขา
	 --จาก สาขา 
	 IF(@tBchF = NULL OR @tBchF = '')
	    BEGIN 
		   SET @tBchF = '' 
		END
	 ELSE IF(@tBchF <> '')
	    BEGIN
		   SET @tBchF = @tBchF 
		END

     --จาก ถึงสาขา 
	 IF(@tBchT = NULL OR @tBchT = '')
	    BEGIN 
		   SET @tBchT = '' 
		END
	 ELSE IF(@tBchT <> '')
	    BEGIN
		   SET @tBchT = @tBchT 
		END

     --Filter สาขา
     IF(@tBchF <> '' AND @tBchT <> '')
	    BEGIN
		      SET @tSQL_SubFilter += ' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
		END

     --ตรวจสอบ Parameter ร้านค้า
	 --จากร้านค้า
	 IF(@tShpF = NULL OR @tShpF = '')
	    BEGIN 
		   SET @tShpF = '' 
		END
	 ELSE IF(@tShpF <> '')
	    BEGIN
		   SET @tShpF = @tShpF 
		END

	 --ถึงร้านค้า
	 IF(@tShpT = NULL OR @tShpT = '')
	    BEGIN 
		   SET @tShpT = '' 
		END
	 ELSE IF(@tShpT <> '')
	    BEGIN
		   SET @tShpT = @tShpT 
		END

	 --Filter ร้านค้า
     IF(@tShpF <> '' AND @tShpT <> '')
	    BEGIN
		      SET @tSQL_SubFilter += ' AND RDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
		END

	 
	 --ตรวจสอบ Parameter เครื่องจุดขาย
	 --จากเครื่องจุดขาย
	 IF(@tPosF = NULL OR @tPosF = '')
	    BEGIN 
		   SET @tPosF = '' 
		END
	 ELSE IF(@tPosF <> '')
	    BEGIN
		   SET @tPosF = @tPosF 
		END

	 --ถึงเครื่องจุดขาย
	 IF(@tPosT = NULL OR @tPosT = '')
	    BEGIN 
		   SET @tPosT = '' 
		END
	 ELSE IF(@tPosT <> '')
	    BEGIN
		   SET @tPosT = @tPosT 
		END
     
	 --Filter เครื่องจุดขาย
	 IF(@tPosT <> '' AND @tPosT <> '')
	    BEGIN
		      SET @tSQL_SubFilter += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
		END
     
	 --ตรวจสอบ Parameter ประเภทการชำระ
	 --จากประเภทการชำระ
	 IF(@tReciveTypeF = NULL OR @tReciveTypeF = '')
	    BEGIN 
		   SET @tReciveTypeF = '' 
		END
	 ELSE IF(@tReciveTypeF <> '')
	    BEGIN
		   SET @tReciveTypeF = @tReciveTypeF 
		END

	 --ถึงประเภทการชำระ
	 IF(@tReciveTypeT = NULL OR @tReciveTypeT = '')
	    BEGIN 
		   SET @tReciveTypeT = '' 
		END
	 ELSE IF(@tReciveTypeT <> '')
	    BEGIN
		   SET @tReciveTypeT = @tReciveTypeT 
		END
	
	 --Filter ประเภทการชำระ
	 IF(@tReciveTypeF <> '' AND @tReciveTypeT <> '')
	    BEGIN
		      SET @tSQL_Filter += ' AND RC.FTRcvCode BETWEEN ''' + @tReciveTypeF + ''' AND ''' + @tReciveTypeT + ''' '
		END
	
	 
	 --ตรวจสอบข้อมูล filter วันที่
	 --เช็ค Parameter จากวันที่
	 IF (@tDocDateF = NULL OR @tDocDateF = '')
	    BEGIN
			 SET @tDocDateF = CONVERT(VARCHAR(10),DATEADD(YEAR, -10, GETDATE()),121)
		END
	 ELSE IF (@tDocDateF <> '')
		BEGIN
			SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
		END
     --เช็ค Parameter ถึงวันที่
	 IF (@tDocDateT = NULL OR @tDocDateT = '')
	    BEGIN
			 SET @tDocDateT = CONVERT(VARCHAR(10),GETDATE(),121)
		END
	 ELSE IF (@tDocDateT <> '')
		BEGIN
			SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)
		END

     --Filter วันที่เอกสาร
	 SET @tSQL_Filter +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' '
	 
	 DELETE FROM TRPTRTSalRCTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	 
	 SET @tSQL = 'INSERT INTO TRPTRTSalRCTmp (FTComName,FTRptCode,FTUsrSession,FTBchCode,FTXshDocNo,FTRcvCode,FTRcvName, '
	 SET @tSQL+= 'FCXrcNet,FDXshDocDate) '
	 
	 SET @tSQL+= ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	 SET @tSQL+= ' RC.FTBchCode,RC.FTXshDocNo,RC.FTRcvCode,RC.FTRcvName,RC.FCXrcNet + RC.FCXrcChg AS FCXrcNet, 
						   CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXshDocDate
					FROM TRTTPAYRC RC WITH (NOLOCK)
					INNER JOIN (
					SELECT DISTINCT S1.FTXshDocNo
					FROM (
							SELECT DT.FTXshDocNo
							FROM   TRTTPAYDT DT WITH (NOLOCK)
							       INNER JOIN TRTTSalHD HD WITH (NOLOCK) ON DT.FTXsdRefDocNo = HD.FTXshDocNo
								   INNER JOIN TRTTSalDT RDT WITH (NOLOCK) ON HD.FTXshDocNo = RDT.FTXshDocNo '

	  SET @tSQL+= @tSQL_SubFilter		
	  		
	  SET @tSQL+= ' ) S1 ) S2 ON RC.FTXshDocNo = S2.FTXshDocNo
					LEFT JOIN TRTTPAYHD HD WITH (NOLOCK)  ON HD.FTXshDocNo = RC.FTXshDocNo '
	  PRINT @tSQL_Filter
	  SET @tSQL+= @tSQL_Filter
	  
	  --AND RC.FTRcvCode BETWEEN '001' AND '001'
	  --AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN '2019-07-25' AND  '2019-07-25'
	  PRINT @tSQL
	  EXECUTE(@tSQL)
	  SET @FNResult = 0
      return @FNResult

END TRY
BEGIN CATCH

     SET @FNResult = -1
     return @FNResult

END CATCH





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRentalPayment3001006]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRentalPayment3001006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRentalPayment3001006] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxRentalPayment3001006]
	    @pnLngID int , 
		@pnComName Varchar(100),
		@ptRptCode Varchar(100),
		@ptUsrSession Varchar(255),
		@ptBchF Varchar(20),
		@ptBchT Varchar(20),
		@ptShpF Varchar(20),
		@ptShpT Varchar(20),
		@ptPosCodeF Varchar(5),
		@ptPosCodeT Varchar(5),
		@ptReciveTypeF Varchar(20),
		@ptReciveTypeT Varchar(20),
		@ptDocDateF Varchar(50),
		@ptDocDateT Varchar(50),
		@FTResult VARCHAR(8000) OUTPUT  
AS
BEGIN TRY
      
	 DECLARE @tSQL VARCHAR(8000)
	 DECLARE @tSQL_SubFilter1 VARCHAR(4000) --Filter Sub1
	 DECLARE @tSQL_SubFilter2 VARCHAR(4000) --Filter Sub2
	 DECLARE @tSQL_Filter VARCHAR(4000)
	 

	 DECLARE @nLngID int
	 DECLARE @tComName Varchar(100)
	 DECLARE @tRptCode Varchar(100)
	 DECLARE @tUsrSession Varchar(255)
	 DECLARE @tBchF VARCHAR(20) --จากสาขา
	 DECLARE @tBchT VARCHAR(20) --ถึงสาขา
	 DECLARE @tShpF VARCHAR(20) --จากร้านค้า
	 DECLARE @tShpT VARCHAR(20) --ถึงร้านค้า
	 DECLARE @tPosF VARCHAR(20) --จากเครื่องจุดขาย
	 DECLARE @tPosT VARCHAR(20) --ถึงเครื่องจุดขาย

	 DECLARE @tReciveTypeF VARCHAR(20) --จากประเภทการชำระ
	 DECLARE @tReciveTypeT VARCHAR(20) --ถึงประเภทการชำระ

	 DECLARE @tDocDateF Varchar(50) --จากวันที่
	 DECLARE @tDocDateT Varchar(50) --ถึงวันที่

	 SET @nLngID = @pnLngID
	 SET @tComName = @pnComName
	 SET @tRptCode = @ptRptCode
	 SET @tUsrSession = @ptUsrSession
	 SET @tBchF = @ptBchF
	 SET @tBchT = @ptBchT
	 SET @tShpF = @ptShpF --จากร้านค้า
	 SET @tShpT = @ptShpT --ถึงร้านค้า
	 SET @tPosF = @ptPosCodeF
	 SET @tPosT = @ptPosCodeT
	 SET @tReciveTypeF = @ptReciveTypeF --จากประเภทการชำระ
	 SET @tReciveTypeT = @ptReciveTypeT --ถึงประเภทการชำระ
	 SET @tDocDateF = @ptDocDateF --จากวันที่
	 SET @tDocDateT = @ptDocDateF --ถึงวันที่
	 
	 SET @tSQL_Filter = ' WHERE ISNULL(RC.FTXshDocNo,'''') <> '''' '  --Filter นอกสุด

	 --ตรวจสอบ Parameter สาขา
	 --จาก สาขา 
	 IF(@tBchF = NULL OR @tBchF = '')
	    BEGIN 
		   SET @tBchF = '' 
		END
	 ELSE IF(@tBchF <> '')
	    BEGIN
		   SET @tBchF = @tBchF 
		END

     --จาก ถึงสาขา 
	 IF(@tBchT = NULL OR @tBchT = '')
	    BEGIN 
		   SET @tBchT = '' 
		END
	 ELSE IF(@tBchT <> '')
	    BEGIN
		   SET @tBchT = @tBchT 
		END

     --Filter สาขา
     IF(@tBchF <> '' AND @tBchT <> '')
	    BEGIN
		      SET @tSQL_Filter += ' AND SHD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''' '
		END

     --ตรวจสอบ Parameter ร้านค้า
	 --จากร้านค้า
	 IF(@tShpF = NULL OR @tShpF = '')
	    BEGIN 
		   SET @tShpF = '' 
		END
	 ELSE IF(@tShpF <> '')
	    BEGIN
		   SET @tShpF = @tShpF 
		END

	 --ถึงร้านค้า
	 IF(@tShpT = NULL OR @tShpT = '')
	    BEGIN 
		   SET @tShpT = '' 
		END
	 ELSE IF(@tShpT <> '')
	    BEGIN
		   SET @tShpT = @tShpT 
		END

	 --Filter ร้านค้า
     IF(@tShpF <> '' AND @tShpT <> '')
	    BEGIN
		      SET @tSQL_Filter += ' AND SDT.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''' '
		END

	 
	 --ตรวจสอบ Parameter เครื่องจุดขาย
	 --จากเครื่องจุดขาย
	 IF(@tPosF = NULL OR @tPosF = '')
	    BEGIN 
		   SET @tPosF = '' 
		END
	 ELSE IF(@tPosF <> '')
	    BEGIN
		   SET @tPosF = @tPosF 
		END

	 --ถึงเครื่องจุดขาย
	 IF(@tPosT = NULL OR @tPosT = '')
	    BEGIN 
		   SET @tPosT = '' 
		END
	 ELSE IF(@tPosT <> '')
	    BEGIN
		   SET @tPosT = @tPosT 
		END
     
	 --Filter เครื่องจุดขาย
	 IF(@tPosT <> '' AND @tPosT <> '')
	    BEGIN
		      SET @tSQL_Filter += ' AND SHD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''' '
		END
     
	 --ตรวจสอบ Parameter ประเภทการชำระ
	 --จากประเภทการชำระ
	 IF(@tReciveTypeF = '' OR @tReciveTypeF = NULL)
	    BEGIN 
		   SET @tReciveTypeF = '' 
		END
	 ELSE IF(@tReciveTypeF <> '')
	    BEGIN
		   SET @tReciveTypeF = @tReciveTypeF 
		END

	 --ถึงประเภทการชำระ
	 IF(@tReciveTypeT = '' OR @tReciveTypeT = NULL)
	    BEGIN 
		   SET @tReciveTypeT = '' 
		END
	 ELSE IF(@tReciveTypeT <> '')
	    BEGIN
		   SET @tReciveTypeT = @tReciveTypeT 
		END
	
	 --Filter ประเภทการชำระ
	 IF(@tReciveTypeF <> '' AND @tReciveTypeT <> '')
	    BEGIN
		   
			  SET @tSQL_SubFilter1 = ' AND EE.FTRcvCode BETWEEN ''' + @tReciveTypeF + ''' AND ''' + @tReciveTypeT + ''' '
			  --SET @tSQL_SubFilter1 = ' AND EE.FTRcvCode BETWEEN ''001'' AND ''007'' '
			  SET @tSQL_SubFilter2 = ' AND E.FTRcvCode BETWEEN ''' + @tReciveTypeF + ''' AND ''' + @tReciveTypeT + ''' '
			  --SET @tSQL_SubFilter2 = ' AND E.FTRcvCode BETWEEN ''001'' AND ''007'' '
		END
	 ELSE IF(@tReciveTypeF = '' AND @tReciveTypeT = '')
	    BEGIN
		    SET @tSQL_SubFilter1 = ''
		    SET @tSQL_SubFilter2 = ''
		END
	 
		 --PRINT 
		 --SET @tSQL_SubFilter1 = ' AND EE.FTRcvCode BETWEEN ''001'' AND ''001'' '
		 --SET @tSQL_SubFilter2 = ' AND E.FTRcvCode BETWEEN ''001'' AND ''001'' '
	 
	  --   SET @tSQL_SubFilter1 = ''
		 --SET @tSQL_SubFilter2 = ''
	
	 
	 --ตรวจสอบข้อมูล filter วันที่
	 --เช็ค Parameter จากวันที่
	 IF (@tDocDateF = NULL OR @tDocDateF = '')
	    BEGIN
			 SET @tDocDateF = CONVERT(VARCHAR(10),DATEADD(YEAR, -10, GETDATE()),121)
		END
	 ELSE IF (@tDocDateF <> '')
		BEGIN
			SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
		END
     --เช็ค Parameter ถึงวันที่
	 IF (@tDocDateT = NULL OR @tDocDateT = '')
	    BEGIN
			 SET @tDocDateT = CONVERT(VARCHAR(10),GETDATE(),121)
		END
	 ELSE IF (@tDocDateT <> '')
		BEGIN
			SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)
		END

     --Filter วันที่เอกสาร

	
	 SET @tSQL_SubFilter2+= ' AND CONVERT(VARCHAR(10),H.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''' ' --Sub Filter
	
		 	 
	 DELETE FROM TRPTRTSalRCTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
	 
	 SET @tSQL = 'INSERT INTO TRPTRTSalRCTmp (FTComName,FTRptCode,FTUsrSession,FTXshDocNo,FTXrcRefNo1,FTRcvName,FTXrcAmt,FCXrcNet,FTBchCode,FTShpCode,FTPosCode) '
	 
	
	 SET @tSQL+= ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	 SET @tSQL+= '   RC.FTXshDocNo,DT.FTXsdRefDocNo,RC.FTRcvName,RC.FTXrcAmt,RC.FCXrcNet,SDT.FTBchCode,SDT.FTShpCode,SHD.FTPosCode 
					FROM TRTTPAYDT DT 
					LEFT JOIN(
					SELECT  
						   E.FTXshDocNo,
						   STUFF((SELECT  '','' + FTRCvName
								FROM TRTTPAYRC EE
								WHERE  EE.FTXshDocNo=E.FTXshDocNo '

                 --Add Filter Sub In Sub
				  SET @tSQL+= @tSQL_SubFilter1

				  SET @tSQL+= ' ORDER BY FTXshDocNo
							FOR XML PATH('''')), 1, 1, '''') AS FTRcvName,

							STUFF((SELECT  '','' + CONVERT(VARCHAR(255),FCXrcNet) + '' ''
									FROM TRTTPAYRC EE
									WHERE  EE.FTXshDocNo=E.FTXshDocNo '

				  --Add Filter Sub In Sub
				 SET @tSQL+= @tSQL_SubFilter1

			  SET @tSQL+= ' ORDER BY FTXshDocNo
							FOR XML PATH('''')), 1, 1, '''') AS FTXrcAmt,

							SUM(E.FCXrcNet) AS FCXrcNet

					FROM TRTTPAYRC E
					INNER JOIN TRTTPAYHD H ON E.FTXshDocNo = H.FTXshDocNo 
					WHERE 1 = 1  '

      --Sub Query Filter
	  SET @tSQL+= @tSQL_SubFilter2

	  SET @tSQL+= ' GROUP BY E.FTXshDocNo ) RC ON DT.FTXshDocNo = RC.FTXshDocNo
					LEFT JOIN TRTTSalHD SHD ON DT.FTXsdRefDocNo = SHD.FTXshDocNo
					LEFT JOIN TRTTSalDT SDT ON SHD.FTXshDocNo = SDT.FTXshDocNo '

	  SET @tSQL+= @tSQL_Filter
	  
	  PRINT @tSQL
	  EXECUTE(@tSQL)
END TRY
BEGIN CATCH
     SET @FTResult = CONVERT(VARCHAR(1) , -1)
     return @FTResult
	 --PRINT @tSQL
END CATCH






GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRTDropByDateTemp3001010]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRTDropByDateTemp3001010]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRTDropByDateTemp3001010] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxRTDropByDateTemp3001010]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ÅÙ¡¤éÒ
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 15/10/2019 รายงานการฝาก ตามช่วงเวลา แบบละเอียด 
-- Temp name  TRPTSalRCTmp
-- @pnLngID ÀÒÉÒ
-- @ptRptCdoe ª×èÍÃÒÂ§Ò¹
-- @ptUsrSession UsrSession
-- @ptBchF ¨Ò¡ÃËÑÊÊÒ¢Ò
-- @ptBchT ¶Ö§ÃËÑÊÊÒ¢Ò
-- @ptShpF ¨Ò¡ÃéÒ¹¤éÒ
-- @ptShpT ¶Ö§ÃéÒ¹¤éÒ
-- @ptPosF Varchar(5),
-- @ptPosT Varchar(5),
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)

	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ÅÙ¡¤éÒ
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @tMerF ='00002'	
	--SET @tMerT = '00002'
	--SET @tPosF 	= '00002'
	--SET @tPosT 	= '00002'
	--SET @tWahF 	= '00001'
	--SET @tWahT = '00001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosF 	= @ptPosF
	SET @tPosT 	= @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null



	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END


	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 '


	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND ShpPos.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END


	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END


	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTRTDropByDateTemp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 
 	SET @tSql  = ' INSERT INTO TRPTRTDropByDateTemp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FDXshDocDate,FTBchCode,FTBchName,FTXshDocNo,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FDXshDatePick,HD.FTPosCode,'
	SET @tSql +=' FTPzeName,FTRthCode,FTXsdTimeStart,FCXsdNetAfHD'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'

	SET @tSql +=' CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,HD.FTBchCode,Bch.FTBchName,HD.FTXshDocNo,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FDXshDatePick,HD.FTPosCode,'
	SET @tSql +=' FTSizName,FTRthCode,CONVERT(VARCHAR(8),FDXsdStart,108) AS FTXsdTimeStart,FCXsdNetAfHD'
	SET @tSql +=' FROM  TRTTSalHD HD WITH (NOLOCK) INNER JOIN 
				  TRTTSalDT DT WITH (NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo LEFT JOIN 
				  TCNMBranch_L Bch WITH (NOLOCK) ON HD.FTBchCode = Bch.FTBchCode AND Bch.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN
				  TRTMShopSize_L Siz_L WITH (NOLOCK)  ON DT.FTPzeCode = Siz_L.FTSizCode AND Siz_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' INNER JOIN
				  TRTMShopPos ShpPos WITH (NOLOCK)  ON HD.FTBchCode = ShpPos.FTBchCode AND HD.FTPosCode = ShpPos.FTPosCode INNER JOIN
				  TCNMShop Shp WITH (NOLOCK) ON ShpPos.FTBchCode = Shp.FTBchCode AND ShpPos.FTShpCode = Shp.FTShpCode AND Shp.FTShpType = ''5'''
	PRINT @tSql1
	SET @tSql += @tSql1
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTDropByDateTemp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	







GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxRTPickByDateTemp3001011]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxRTPickByDateTemp3001011]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxRTPickByDateTemp3001011] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxRTPickByDateTemp3001011]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ÅÙ¡¤éÒ
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 15/10/2019 รายงานการฝาก ตามช่วงเวลา แบบละเอียด 
-- Temp name  TRPTSalRCTmp
-- @pnLngID ÀÒÉÒ
-- @ptRptCdoe ª×èÍÃÒÂ§Ò¹
-- @ptUsrSession UsrSession
-- @ptBchF ¨Ò¡ÃËÑÊÊÒ¢Ò
-- @ptBchT ¶Ö§ÃËÑÊÊÒ¢Ò
-- @ptShpF ¨Ò¡ÃéÒ¹¤éÒ
-- @ptShpT ¶Ö§ÃéÒ¹¤éÒ
-- @ptPosF Varchar(5),
-- @ptPosT Varchar(5),
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)

	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ÅÙ¡¤éÒ
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @tMerF ='00002'	
	--SET @tMerT = '00002'
	--SET @tPosF 	= '00002'
	--SET @tPosT 	= '00002'
	--SET @tWahF 	= '00001'
	--SET @tWahT = '00001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPosF 	= @ptPosF
	SET @tPosT 	= @ptPosT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null



	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END


	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND REPLACE(ISNULL(CONVERT(DATE, FDXshDatePick), ''''), ''1900-01-01'', '''') <> '''''


	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND ShpPos.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END


	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END


	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDatePick,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTRTPickByDateTemp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 
 	SET @tSql  = ' INSERT INTO TRPTRTPickByDateTemp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FDXshDocDate,FTBchCode,FTBchName,FTXshDocNo,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FDXshDatePick,HD.FTPosCode,'
	SET @tSql +=' FTPzeName,FTRthCode,FTXsdTimeFinish,FCXsdNetAfHD'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'

	SET @tSql +=' CONVERT(VARCHAR(10),FDXshDatePick,121) AS FDXshDocDate,HD.FTBchCode,Bch.FTBchName,HD.FTXshDocNo,FTXshRefExt,FTXshFrmLogin,FTXshToLogin,FDXshDatePick,HD.FTPosCode,'
	SET @tSql +=' FTSizName,FTRthCode,CONVERT(VARCHAR(8),FDXsdStart,108) AS FTXsdTimeFinish,FCXsdNetAfHD'
	SET @tSql +=' FROM  TRTTSalHD HD WITH (NOLOCK) INNER JOIN 
				  TRTTSalDT DT WITH (NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo LEFT JOIN 
				  TCNMBranch_L Bch WITH (NOLOCK) ON HD.FTBchCode = Bch.FTBchCode AND Bch.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN
				  TRTMShopSize_L Siz_L WITH (NOLOCK)  ON DT.FTPzeCode = Siz_L.FTSizCode AND Siz_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' INNER JOIN
				  TRTMShopPos ShpPos WITH (NOLOCK)  ON HD.FTBchCode = ShpPos.FTBchCode AND HD.FTPosCode = ShpPos.FTPosCode INNER JOIN
				  TCNMShop Shp WITH (NOLOCK) ON ShpPos.FTBchCode = Shp.FTBchCode AND ShpPos.FTShpCode = Shp.FTShpCode AND Shp.FTShpType = ''5'''
	PRINT @tSql1
	SET @tSql += @tSql1
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTRTPickByDateTemp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	







GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSalDaily]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalDaily]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalDaily] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSalDaily]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	@ptAppType Varchar(5), -- 
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn รายงาน - ยอดขายสิ้นวัน
-- Create 28/04/2020
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptRcvF จากการชำระเงิน
-- @ptRcvT ถึงการชำระเงิน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tRcvF Varchar(5)
	DECLARE @tRcvT Varchar(5)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tBchF Varchar(5)
	--DECLARE @tBchT Varchar(5)
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '007' 
	--SET @tRcvT  = '007' 
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PaymentSum1001003'
	--SET @ptUsrSession = '001'
	--SET @tRcvF  = '' 
	--SET @tRcvT  = '' 
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tRcvF = @ptRcvF
	--SET @tRcvT = @ptRcvT

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tRcvF = null
	BEGIN
		SET @tRcvF = ''
	END
	IF @tRcvT = null OR @tRcvT = ''
	BEGIN
		SET @tRcvT = @tRcvF
	END

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND HD.FTXshStaDoc = ''1'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF @tRcvF <> '' AND @tRcvT <> ''
	BEGIN 
		SET @tSql1 += ' AND RC.FTRcvCode BETWEEN '''+ @tRcvF + ''' AND '''+ @tRcvT + ''''		
	END

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTSalDailyTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	--DECLARE @tTableName VARCHAR(100) 
	--DECLARE @tSqlTbl nVARCHAR(Max)
	--SET @tTableName ='TRPTSalRCTmp' + @nComName 
	----DROP TABLE TRPTSalRCTmpAda062 --@tTableName
	----DROP TABLE Ada062 --@tTableName
	--SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
 --   SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TRPTSalRCTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptCode +''' AND FTUsrSession = ''' + @tUsrSession + ''''
	--EXECUTE(@tSqlTbl)

	--PRINT @tSqlTbl
	--SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	--EXECUTE(@tSqlTbl)

	--Sale FNAppType = 1 
	SET @tSql  = ' INSERT INTO TRPTSalDailyTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FTXihValType,FTRcvName,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' FNAppType,FTXihValType,FTRcvName,FCXshGrand'
	SET @tSql +=' FROM('
	SET @tSql +=' SELECT 1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''1'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshTotal,0)*-1 ELSE ISNULL(FCXshTotal,0) END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''2'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0)) *-1 ELSE (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0)) END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''3'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshRnd,0)) *-1 ELSE (ISNULL(FCXshRnd,0)) END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''4'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshGrand,0)*-1 ELSE ISNULL(FCXshGrand,0) END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1	

	--GROUP BY FTXihValType
	SET @tSql +=' UNION ALL' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SELECT 1 AS FNAppType, ISNULL(Rcv_L.FTRcvName, RC.FTRcvName) AS FTRcvName,''5'' AS FTXihValType,'
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXshGrand'
		SET @tSql +=' FROM (TPSTSalHD HD INNER JOIN TPSTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
		SET @tSql +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
		SET @tSql +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = 1  LEFT JOIN'
	SET @tSql +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = 1 LEFT JOIN'
	SET @tSql +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	--SET @tSql +=' WHERE MONTH(CONVERT(VARCHAR(10),FDXshDocDate,121)) = 3 AND FTXshStaDoc = ''1'''
	SET @tSql += @tSql1	
	SET @tSql += ' GROUP BY  ISNULL(Rcv_L.FTRcvName, RC.FTRcvName)'


	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''6'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshVatable,0)) *-1 ELSE (ISNULL(FCXshVatable,0)) END) AS FCXshVatable'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  1 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''7'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshVat,0)*-1 ELSE ISNULL(FCXshVat,0) END) AS FCXshVat'
	SET @tSql +=' FROM TPSTSalHD HD'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	SET @tSql += @tSql1
	SET @tSql += ' ) Sale'
	
	PRINT @tSql
	EXECUTE(@tSql)

--Vending FNAppType = 2 
	SET @tSql  = ' INSERT INTO TRPTSalDailyTmp '
	SET @tSql +=' ('
	SET @tSql +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +='  FNAppType,FTXihValType,FTRcvName,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql +=' FNAppType,FTXihValType,FTRcvName,FCXshGrand'
	SET @tSql +=' FROM('
	SET @tSql +=' SELECT 2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''1'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshTotal,0)*-1 ELSE ISNULL(FCXshTotal,0) END) AS FCXshGrand'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''2'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0)) *-1 ELSE (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0)) END) AS FCXshGrand'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''3'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshRnd,0)) *-1 ELSE (ISNULL(FCXshRnd,0)) END) AS FCXshGrand'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''4'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshGrand,0)*-1 ELSE ISNULL(FCXshGrand,0) END) AS FCXshGrand'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1	

	--GROUP BY FTXihValType
		SET @tSql +=' UNION ALL' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SELECT 2 AS FNAppType, ISNULL(Rcv_L.FTRcvName, RC.FTRcvName) AS FTRcvName,''5'' AS FTXihValType,'
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN RC.FCXrcNet*-1 ELSE RC.FCXrcNet END) AS FCXshGrand'
		SET @tSql +=' FROM (TVDTSalHD HD INNER JOIN TVDTSalRC RC ON HD.FTXshDocNo=RC.FTXshDocNo) LEFT OUTER JOIN'
		SET @tSql +=' TFNMRcv Rcv ON RC.FTRcvCode=Rcv.FTRcvCode LEFT JOIN'
		SET @tSql +=' TFNMRcv_L Rcv_L ON Rcv.FTRcvCode = Rcv_L.FTRcvCode AND Rcv_L.FNLngID = 1  LEFT JOIN'
	SET @tSql +=' TFNMBank_L Bnk_L ON RC.FTBnkCode = Bnk_L.FTBnkCode AND Bnk_L.FNLngID = 1 LEFT JOIN'
	SET @tSql +=' TCNMCst Cst ON HD.FTCstCode = Cst.FTCstCode'
	SET @tSql +=' LEFT JOIN TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode'
	--SET @tSql +=' WHERE MONTH(CONVERT(VARCHAR(10),FDXshDocDate,121)) = 3 AND FTXshStaDoc = ''1'''
	SET @tSql += @tSql1	
	SET @tSql += ' GROUP BY  ISNULL(Rcv_L.FTRcvName, RC.FTRcvName)'

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''6'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN (ISNULL(FCXshVatable,0)) *-1 ELSE (ISNULL(FCXshVatable,0)) END) AS FCXshVatable'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1	

	SET @tSql +=' UNION ALL'
	SET @tSql +=' SELECT  2 AS FNAppType, '''' AS FTRcvName,'
	SET @tSql +=' ''7'' AS FTXihValType,' --1: ยอดขาย ,2: ส่วนลด 3: ปักเศษ 4: ยอดขายรวม 5: ชำระเงิน 6: ยอดขายไม่รวมภาษี 7: ภาษี
	SET @tSql +=' SUM(CASE WHEN  HD.FNXshDocType = ''9'' THEN ISNULL(FCXshVat,0)*-1 ELSE ISNULL(FCXshVat,0) END) AS FCXshVat'
	SET @tSql +=' FROM TVDTSalHD HD'
	SET @tSql += @tSql1
	SET @tSql +=' ) VD ' 
	--PRINT @tSql1
	PRINT @tSql
	EXECUTE(@tSql)
	

	SET @tSql2  = ' INSERT INTO TRPTSalDailyTmp '
	SET @tSql2 +=' ('
	SET @tSql2 +='  FTComName,FTRptCode,FTUsrSession,'
	SET @tSql2 +='  FTXihChkType,FNAppType,FTXihValType,FTRcvName,FCXshGrand'
	SET @tSql2 +=' )'
	SET @tSql2 +=' SELECT '''+@nComName +''' AS FTComName, ''' + @tRptCode +''' AS FTRptCode,'''+ @tUsrSession+''' AS FTUsrSession,'
	SET @tSql2 +=' ''1'' AS FTXihChkType,'''+ @ptAppType + ''' AS FNAppType,FTXihValType,FTRcvName,'
	
	SET @tSql2 +=' SUM(FCXshGrand) AS FCXshGrand'  
	SET @tSql2 +=' FROM TRPTSalDailyTmp' --WHERE FNAppType
	SET @tSql2 +=' WHERE 1=1'
	IF @ptAppType <> '0'
	BEGIN
		SET @tSql2 +=' AND FNAppType = ''' + @ptAppType + ''''
	END
	SET @tSql2 +=' AND FTComName =  ''' + @nComName + '''  AND FTRptCode = ''' + @tRptCode + ''' AND FTUsrSession = ''' + @tUsrSession + ''' AND ISNULL(FTXihChkType,'''') = '''''
	SET @tSql2 +=' GROUP BY FTXihValType,FTRcvName'
	
	PRINT @tSql2
	EXECUTE(@tSql2)
	--SET @tSql +=' ORDER BY FTXihValType
	

	DELETE TRPTSalDailyTmp WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + '' AND ISNULL(FTXihChkType,'') = ''

	RETURN SELECT * FROM TRPTSalDailyTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + '' ORDER BY FNAppType
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH		

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSalDailyByCashierTmp]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalDailyByCashierTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalDailyByCashierTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSalDailyByCashierTmp]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Shop
	@ptShpL Varchar(8000), --ร้สนค้า Condition IN
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 11/03/2020
--รายงานยอดขาย - ตามเครื่องจุดขาย
-- Temp name  TRPTMnyShotOverTmp_Moshi

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(Max)
	DECLARE @tSqlHD VARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptShpL = null
	BEGIN
		SET @ptShpL = ''
	END

	IF @ptShpF = null
	BEGIN
		SET @ptShpF = ''
	END
	IF @ptShpT = null OR @ptShpT = ''
	BEGIN
		SET @ptShpT = @ptShpF
	END


	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '
	SET @tSqlHD =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSqlHD +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@ptShpF <> '' AND @ptShpT <> '')
		BEGIN
			SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
			SET @tSqlHD +=' AND HD.FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
		END


		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSqlHD +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
			SET @tSqlHD +=' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTUsrCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTBchCode IN (' + @ptBchL + ')'
			SET @tSqlHD +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptShpL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTShpCode IN (' + @ptShpL + ')'
			SET @tSqlHD +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTPosCode IN (' + @ptPosL + ')'
			SET @tSqlHD +=' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND FTUsrCode IN (' + @ptUsrL + ')'
			SET @tSqlHD +=' AND HD.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTUsrCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlHD +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
	--PRINT '99999'
	DELETE FROM TRPTSalDailyByCashierTmp  WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp

	SET @tSql = 'INSERT INTO TRPTSalDailyByCashierTmp'
	--PRINT @tSql
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession'
	 SET @tSql +=' ,FTTnsType,FTRcvCode,FTRcvName,FTBchCode,FTUsrCode,FTUsrName,FCXshNet,FCXshReturn,FCXshRnd,FCXshGrand'
	SET @tSql +=' )'
	--PRINT @tSql
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' ''1'' AS FTTnsType  ,'''' AS FTRcvCode,'''' AS FTRcvName, '''' AS  FTBchCode,HD.FTUsrCode,UsrL.FTUsrName,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN (ISNULL(FCXshGrand,0) - ISNULL(FCXshRnd,0)) ELSE 0 END) AS FCXshNet,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 9 THEN (ISNULL(FCXshGrand,0) - ISNULL(FCXshRnd,0)) ELSE 0 END) AS FCXshReturn,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0) *-1 END) AS FCXshRnd,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0) *-1 END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
	SET @tSql +=' LEFT JOIN TCNMUser_L UsrL WITH(NOLOCK) ON HD.FTUsrCode = UsrL.FTUsrCode AND UsrL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''  
	SET @tSql += @tSqlHD
	SET @tSql +=' GROUP BY HD.FTUsrCode,UsrL.FTUsrName'
	--PRINT @tSql
	SET @tSql +=' UNION' 
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' ISNULL(FTTnsType,''2'') AS FTTnsType , Rcv.FTRcvCode,RcvFL.FTRcvName AS FTRcvName,'''' AS FTBchCode,SaleMst.FTUsrCode,SaleMst.FTUsrName,'
	SET @tSql +=' SUM(ISNULL(FCXshNet,0)) AS FCXshNet,'
	SET @tSql +=' SUM(ISNULL(FCXshReturn,0)) AS FCXshReturn,'
	SET @tSql +=' SUM(ISNULL(FCXshRnd,0)) AS FCXshRnd,'
	SET @tSql +=' SUM(ISNULL(FCXshGrand,0)) AS FCXshGrand'
	SET @tSql +=' FROM TFNMRcv Rcv  WITH(NOLOCK)'
	SET @tSql +=' LEFT JOIN TFNMRcv_L RcvFL WITH(NOLOCK) ON Rcv.FTRcvCode = RcvFL.FTRcvCode AND RcvFL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql +=' CROSS JOIN'
	SET @tSql +=' (SELECT DISTINCT HD.FTBchCode,HD.FTUsrCode,FTUsrName'
	SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
	SET @tSql +=' INNER JOIN TPSTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSql +=' LEFT JOIN TCNMUser_L UsrL WITH(NOLOCK) ON HD.FTUsrCode = UsrL.FTUsrCode AND UsrL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += @tSqlHD
	--1 Where
	SET @tSql +=' ) SaleMst' 
	SET @tSql +=' LEFT JOIN'
		SET @tSql +=' (SELECT ''2'' AS FTTnsType  ,RC.FTRcvCode,RcvFL.FTRcvName AS FTRcvName, HD.FTBchCode,HD.FTUsrCode,UsrL.FTUsrName'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 1 THEN (ISNULL(FCXrcNet,0)- ISNULL(HDRnd.FCXshRnd,0)) ELSE 0 END) AS FCXshNet'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 9 THEN (ISNULL(FCXrcNet,0)- ISNULL(HDRnd.FCXshRnd,0)) ELSE 0 END) AS FCXshReturn'
			SET @tSql +=' ,SUM(CASE WHEN Rcv.FTRcvCode = ''001'' THEN  HDRnd.FCXshRnd ELSE 0 END) AS FCXshRnd'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0) *-1 END) AS FCXshGrand'
			SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
			SET @tSql +=' INNER JOIN TPSTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
			SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
			SET @tSql +=' LEFT JOIN TFNMRcv_L RcvFL WITH(NOLOCK) ON Rcv.FTRcvCode = RcvFL.FTRcvCode AND RcvFL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql +=' LEFT JOIN TCNMUser_L UsrL WITH(NOLOCK) ON HD.FTUsrCode = UsrL.FTUsrCode AND UsrL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''' 
			SET @tSql +=' LEFT JOIN'
					  SET @tSql +=' (SELECT FTBchCode,FTXshDocNo, CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0) *-1 END AS FCXshRnd'
					   SET @tSql +=' FROM TPSTSalHD  WITH(NOLOCK)' 
					   SET @tSql += @tSql1
					   --GROUP BY FTBchCode,FTXshDocNo  
					   --2 Where
					  SET @tSql +=' ) HDRnd ON RC.FTBchCode = HDRnd.FTBchCode AND RC.FTXshDocNo = HDRnd.FTXshDocNo'
			SET @tSql += @tSqlHD
			--3 Where
			SET @tSql +=' GROUP BY RC.FTRcvCode,RcvFL.FTRcvName , HD.FTBchCode,HD.FTUsrCode,UsrL.FTUsrName'
		SET @tSql +=' ) Sale ON Rcv.FTRcvCode = Sale.FTRcvCode AND SaleMst.FTBchCode = Sale.FTBchCode AND SaleMst.FTUsrCode = Sale.FTUsrCode'
		SET @tSql +=' GROUP BY  ISNULL(FTTnsType, ''2''), Rcv.FTRcvCode, RcvFL.FTRcvName,SaleMst.FTUsrCode, SaleMst.FTUsrName' 
	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTSalDailyByCashierTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSalDailyByPosTmp]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalDailyByPosTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalDailyByPosTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSalDailyByPosTmp]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Shop
	@ptShpL Varchar(8000), --ร้สนค้า Condition IN
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 11/03/2020
--รายงานยอดขาย - ตามเครื่องจุดขาย
-- Temp name  TRPTSalDailyByPosTmp

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(Max)
	DECLARE @tSqlHD VARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptShpL = null
	BEGIN
		SET @ptShpL = ''
	END

	IF @ptShpF = null
	BEGIN
		SET @ptShpF = ''
	END
	IF @ptShpT = null OR @ptShpT = ''
	BEGIN
		SET @ptShpT = @ptShpF
	END


	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '
	SET @tSqlHD =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			SET @tSqlHD +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@ptShpF <> '' AND @ptShpT <> '')
		BEGIN
			SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
			SET @tSqlHD +=' AND HD.FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
		END


		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			SET @tSqlHD +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
			SET @tSqlHD +=' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTBchCode IN (' + @ptBchL + ')'
			SET @tSqlHD +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptShpL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTShpCode IN (' + @ptShpL + ')'
			SET @tSqlHD +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTPosCode IN (' + @ptPosL + ')'
			SET @tSqlHD +=' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND FTUsrCode IN (' + @ptUsrL + ')'
			SET @tSqlHD +=' AND HD.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		SET @tSqlHD +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTSalDailyByPosTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
    
	SET @tSql = 'INSERT INTO TRPTSalDailyByPosTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession'
	 SET @tSql +=' ,FTTnsType,FTRcvCode,FTRcvName,FTBchCode,FTPosCode,FTPosName,FCXshNet,FCXshReturn,FCXshRnd,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' ''1'' AS FTTnsType  ,'''' AS FTRcvCode,'''' AS FTRcvName, HD.FTBchCode,HD.FTPosCode,PosL.FTPosName,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN (ISNULL(FCXshGrand,0) - ISNULL(FCXshRnd,0)) ELSE 0 END) AS FCXshNet,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 9 THEN (ISNULL(FCXshGrand,0) - ISNULL(FCXshRnd,0)) ELSE 0 END) AS FCXshReturn,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0) *-1 END) AS FCXshRnd,'
	SET @tSql +=' SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0) *-1 END) AS FCXshGrand'
	SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
	SET @tSql +=' LEFT JOIN TCNMPos_L PosL WITH(NOLOCK) ON HD.FTPosCode = PosL.FTPosCode AND HD.FTBchCode = PosL.FTBchCode AND PosL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''  
	SET @tSql += @tSqlHD
	SET @tSql +=' GROUP BY HD.FTBchCode,HD.FTPosCode,PosL.FTPosName'

	SET @tSql +=' UNION' 
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' ISNULL(FTTnsType,''2'') AS FTTnsType , Rcv.FTRcvCode,RcvFL.FTFmtName AS FTRcvName,SaleMst.FTBchCode,SaleMst.FTPosCode,SaleMst.FTPosName,ISNULL(FCXshNet,0) AS FCXshNet,ISNULL(FCXshReturn,0) AS FCXshReturn,'
	SET @tSql +=' ISNULL(FCXshRnd,0) AS FCXshRnd,ISNULL(FCXshGrand,0) AS FCXshGrand'
	SET @tSql +=' FROM TFNMRcv Rcv  WITH(NOLOCK)'
	SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFL WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFL.FTFmtCode AND RcvFL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql +=' CROSS JOIN'
	SET @tSql +=' (SELECT DISTINCT HD.FTBchCode,HD.FTPosCode,FTPosName'
	SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
	SET @tSql +=' INNER JOIN TPSTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
	SET @tSql +=' LEFT JOIN TCNMPos_L PosL WITH(NOLOCK) ON HD.FTPosCode = PosL.FTPosCode AND HD.FTBchCode = PosL.FTBchCode AND PosL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += @tSqlHD
	--1 Where
	SET @tSql +=' ) SaleMst' 
	SET @tSql +=' LEFT JOIN'
		SET @tSql +=' (SELECT ''2'' AS FTTnsType  ,RC.FTRcvCode,RcvFL.FTFmtName AS FTRcvName, HD.FTBchCode,HD.FTPosCode,PosL.FTPosName'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 1 THEN (ISNULL(FCXrcNet,0)- ISNULL(HDRnd.FCXshRnd,0)) ELSE 0 END) AS FCXshNet'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 9 THEN (ISNULL(FCXrcNet,0)- ISNULL(HDRnd.FCXshRnd,0)) ELSE 0 END) AS FCXshReturn'
			SET @tSql +=' ,SUM(CASE WHEN Rcv.FTFmtCode = ''001'' THEN  HDRnd.FCXshRnd ELSE 0 END) AS FCXshRnd'
			SET @tSql +=' ,SUM(CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXrcNet,0) ELSE ISNULL(FCXrcNet,0) *-1 END) AS FCXshGrand'
			SET @tSql +=' FROM TPSTSalHD HD WITH(NOLOCK)'
			SET @tSql +=' INNER JOIN TPSTSalRC RC WITH(NOLOCK) ON HD.FTBchCode = RC.FTBchCode AND HD.FTXshDocNo = RC.FTXshDocNo'
			SET @tSql +=' LEFT JOIN TFNMRcv Rcv WITH(NOLOCK) ON RC.FTRcvCode = Rcv.FTRcvCode'
			SET @tSql +=' LEFT JOIN TSysRcvFmt_L RcvFL WITH(NOLOCK) ON Rcv.FTFmtCode = RcvFL.FTFmtCode AND RcvFL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql +=' LEFT JOIN TCNMPos_L PosL WITH(NOLOCK) ON HD.FTPosCode = PosL.FTPosCode AND HD.FTBchCode = PosL.FTBchCode AND PosL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''' 
			SET @tSql +=' LEFT JOIN'
					  SET @tSql +=' (SELECT FTBchCode,FTXshDocNo, CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshRnd,0) ELSE ISNULL(FCXshRnd,0) *-1 END AS FCXshRnd'
					   SET @tSql +=' FROM TPSTSalHD  WITH(NOLOCK)' 
					   SET @tSql += @tSql1
					   --GROUP BY FTBchCode,FTXshDocNo  
					   --2 Where
					  SET @tSql +=' ) HDRnd ON RC.FTBchCode = HDRnd.FTBchCode AND RC.FTXshDocNo = HDRnd.FTXshDocNo'
			SET @tSql += @tSqlHD
			--3 Where
			SET @tSql +=' GROUP BY RC.FTRcvCode,RcvFL.FTFmtName , HD.FTBchCode,HD.FTPosCode,PosL.FTPosName'
		SET @tSql +=' ) Sale ON Rcv.FTRcvCode = Sale.FTRcvCode AND SaleMst.FTBchCode = Sale.FTBchCode AND SaleMst.FTPosCode = Sale.FTPosCode'

	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTSalDailyByPosTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSaleShopByDate]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSaleShopByDate]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSaleShopByDate] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSaleShopByDate] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @ptRptName ชื่อรายงาน
-- @ptRptName ชื่อรายงาน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(5)
	DECLARE @tShpT Varchar(5)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleShopByDate'
	--SET @tBchF = '00032'
	--SET @tBchT = '00034'
	--SET @tShpF = '555'
	--SET @tShpT = '777'

	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleShopByDate'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	DELETE FROM TFCTRptCrdAnalysisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	DECLARE @tTableName VARCHAR(100) 
	DECLARE @tSqlTbl nVARCHAR(Max)
	DECLARE @tSqlTbl2 nVARCHAR(Max)
	SET @tTableName ='TFCTRptTmp' + @nComName 
	--DROP TABLE TFCTRptTmpAda062 --@tTableName
	--DROP TABLE Ada062 --@tTableName
	--PRINT @tTableName
	SET @tTableName = REPLACE(@tTableName,'-','')
	--PRINT @tTableName
    SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TFCTRptCrdAnalysisTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptName +''''
	EXECUTE(@tSqlTbl)

	SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName
	PRINT @tSqlTbl
	EXECUTE(@tSqlTbl)

	PRINT @tTableName
	--SELECT * FROM #TFCTRptCrdAnalysisTmp

	SET @tSql ='INSERT INTO '+ @tTableName +' WITH(ROWLOCK)' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp #TFCTRptCrdTemp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSql +=') '--SELECT * FROM #TFCTRptCrdTmp WITH(NOLOCK)'
	SET @tSql += 'SELECT '''+ @nComName + ''' AS FTComName, '''+ @tRptName +''' AS FTRptName,'
	SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, ''' + CAST(@nLngID  AS VARCHAR(10)) + ''', FDTxnDocDate, FCTxnValue'
	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 --SET @tSql += 'CRDHIS.FTTxnDocTypeName,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
		 --SET @tSql += 'ISNULL(TOPUP.FTCreateBy,'''') + ISNULL(VOID.FTCreateBy,'''') + ISNULL(IMP.FTCreateBy,'''') + ISNULL(SHIFT.FTCreateBy,'''') AS FTUsrCreate,'
		 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,ISNULL(CRDHIS.FTBchCode,'''') AS FTBchCode,ISNULL(CRDHIS.FTBchName,'''') AS FTBchName'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,C.FTBchCode,Bch_L.FTBchName,'
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,'''') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate,121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate,121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,'''') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance'
			 SET @tSql += ' FROM'
				SET @tSql += '('

				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdSale WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tShpF <> '' AND @tShpT <> '')
				BEGIN
					SET @tSql +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
					SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard AS CRD WITH(NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard_L AS CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMPos AS POS WITH(NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCardType_L AS CTL WITH(NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMUsrDepart_L AS DPL WITH(NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMShop_L AS SHPL WITH(NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMBranch_L AS Bch_L WITH(NOLOCK) ON C.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate,121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM TFNMCard WITH(NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate,121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate,121)'
			SET @tSql += ' ) AS CRDHIS '
			SET @tSql += ' ) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' TCNMUser_L AS USRL WITH(NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'

			IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

			IF (@tShpF <> '' AND @tShpT <> '')
			BEGIN
				SET @tSql +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END


	--SET @tSql += ' IN TO TFCTRptCrdAnalysisTmp'
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdAnalysisTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
    SET @tSqlIns += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, '+ @tTableName + '.FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSqlIns +=' FROM '+ @tTableName + ' LEFT JOIN'
	SET @tSqlIns += ' TCNMUser_L AS USRL WITH(NOLOCK) ON '+ @tTableName + '.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('

	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('

	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=')R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = '+ @tTableName + '.FNTxnIDRef'

	--PRINT @tSql
	EXECUTE(@tSql)

--	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	
	SET @tSqlTbl2 = 'DROP TABLE ' + @tTableName 
	EXECUTE(@tSqlTbl2)
	RETURN SELECT * FROM TFCTRptCrdAnalysisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 PRINT @tSqlTbl2
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSaleShopByShop]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSaleShopByShop]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSaleShopByShop] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSaleShopByShop] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ÀÒÉÒ
-- @ptRptName ª×èÍÃÒÂ§Ò¹
-- @ptRptName ª×èÍÃÒÂ§Ò¹
-- @ptBchF ¨Ò¡ÃËÑÊÊÒ¢Ò
-- @ptBchT ¶Ö§ÃËÑÊÊÒ¢Ò
-- @ptShpF ¨Ò¡ÃéÒ¹¤éÒ
-- @ptShpT ¶Ö§ÃéÒ¹¤éÒ
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(5)
	DECLARE @tShpT Varchar(5)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleShopByDate'
	--SET @tBchF = '00032'
	--SET @tBchT = '00034'
	--SET @tShpF = '555'
	--SET @tShpT = '777'

	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleShopByShop'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null
	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	DELETE FROM TFCTRptCrdAnalysisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 
	DECLARE @tTableName VARCHAR(100) 
	DECLARE @tSqlTbl nVARCHAR(Max)
	SET @tTableName ='TFCTRptTmp' + @nComName 
	--DROP TABLE TFCTRptTmpAda062 --@tTableName
	--DROP TABLE Ada062 --@tTableName
	SET @tTableName = REPLACE(@tTableName,'-','')
	PRINT @tTableName
	
    SET @tSqlTbl = 'SELECT * INTO '+ @tTableName +' FROM TFCTRptCrdAnalysisTmp WHERE FTComName = '''+  @nComName +''' AND FTRptName = '''+ @tRptName +''''
	EXECUTE(@tSqlTbl)
	
	SET @tSqlTbl = 'TRUNCATE TABLE '+ @tTableName 
	EXECUTE(@tSqlTbl)
	
	SET @tSql ='INSERT INTO '+ @tTableName +' WITH(ROWLOCK)' --à¾ÔèÁ¢éÍÁÙÅãËÁè·Õè Contion Å§ Temp #TFCTRptCrdTemp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName,  FNLngID, FDTxnDocDate, FCTxnSaleVal,FCTxnCancelSaleVal,FCTxnSaleNet'
	SET @tSql +=') '--SELECT * FROM #TFCTRptCrdTmp WITH(NOLOCK)'
	SET @tSql += ' SELECT '''+ @nComName + ''' AS FTComName, '''+ @tRptName +''' AS FTRptName,'
	--SET @tSql += ' FTBchCode, FTBchName, FTShpCode, FTShpName, FTTxnDocType, ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' AS FNLngID, FDTxnDocDate, FCTxnValue'
	SET @tSql += 'FTBchCode, FTBchName, FTShpCode, FTShpName,  ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' AS FNLngID, CONVERT(VARCHAR(10),FDTxnDocDate,121) AS FDTxnDocDate, '
	SET @tSql += 'SUM(CASE WHEN FTTxnDocType = ''3''	THEN FCTxnValue ELSE 0 END) AS FCTxnSaleVal,' --ขาย  
	SET @tSql += 'SUM(CASE WHEN FTTxnDocType = ''4''	THEN FCTxnValue ELSE 0 END) AS FCTxnCancelSaleVal,' --คืน  
	SET @tSql += 'SUM(CASE WHEN FTTxnDocType = ''3''	THEN FCTxnValue ELSE FCTxnValue*-1 END) AS FCTxnSaleNet' --รวม  

	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 --SET @tSql += 'CRDHIS.FTTxnDocTypeName,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
		 --SET @tSql += 'ISNULL(TOPUP.FTCreateBy,'''') + ISNULL(VOID.FTCreateBy,'''') + ISNULL(IMP.FTCreateBy,'''') + ISNULL(SHIFT.FTCreateBy,'''') AS FTUsrCreate,'
		 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,ISNULL(CRDHIS.FTBchCode,'''') AS FTBchCode,ISNULL(CRDHIS.FTBchName,'''') AS FTBchName'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,C.FTBchCode,Bch_L.FTBchName,'
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,'''') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate,121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate,121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,'''') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance'
			 SET @tSql += ' FROM'
				SET @tSql += '('

				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdSale WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tShpF <> '' AND @tShpT <> '')
				BEGIN
					SET @tSql +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
					SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard AS CRD WITH(NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard_L AS CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMPos AS POS WITH(NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCardType_L AS CTL WITH(NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMUsrDepart_L AS DPL WITH(NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMShop_L AS SHPL WITH(NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMBranch_L AS Bch_L WITH(NOLOCK) ON C.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate,121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM TFNMCard WITH(NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate,121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate,121)'
			SET @tSql += ' ) AS CRDHIS '
			SET @tSql += ' ) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' TCNMUser_L AS USRL WITH(NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'

			IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

			IF (@tShpF <> '' AND @tShpT <> '')
			BEGIN
				SET @tSql +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END
			SET @tSql +=' GROUP BY FTBchCode, FTBchName, FTShpCode, FTShpName, CONVERT(VARCHAR(10),FDTxnDocDate,121)'
	PRINT @tSql
	EXECUTE(@tSql)
	--SET @tSql += ' IN TO TFCTRptCrdAnalysisTmp'
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdAnalysisTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
    SET @tSqlIns += ' FTBchCode, FTBchName, FTShpCode, FTShpName,  FNLngID, FDTxnDocDate, FCTxnSaleVal,FCTxnCancelSaleVal,FCTxnSaleNet'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns += ' FTBchCode, FTBchName, FTShpCode, FTShpName,  '+ @tTableName + '.FNLngID, FDTxnDocDate, FCTxnSaleVal,FCTxnCancelSaleVal,FCTxnSaleNet'
	SET @tSqlIns +=' FROM '+ @tTableName + ' LEFT JOIN'
	SET @tSqlIns += ' TCNMUser_L AS USRL WITH(NOLOCK) ON '+ @tTableName + '.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('

	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('

	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=')R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = '+ @tTableName + '.FNTxnIDRef'

	

	PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	
	PRINT @tSqlTbl
	SET @tSqlTbl = 'DROP TABLE ' + @tTableName
	EXECUTE(@tSqlTbl)
	RETURN SELECT * FROM TFCTRptCrdAnalysisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
  --PRINT @tSql
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSalMthQtyByPdtTmp]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalMthQtyByPdtTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalMthQtyByPdtTmp] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxSalMthQtyByPdtTmp]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
--สาขา
	@ptBchL Varchar(8000), --สาขา Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

--Shop
	@ptShpL Varchar(8000), --ร้สนค้า Condition IN
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),

--Pos
	@ptPosL Varchar(8000), --เครื่องขาย Condition IN
	@ptPosF Varchar(10),
	@ptPosT Varchar(10),
	  
--Cashier
	@ptUsrL Varchar(8000), --Cashier Condition IN
	@ptUsrF Varchar(10),
	@ptUsrT Varchar(10),

--Product
    @ptPdtF Varchar(20),
	@ptPdtT Varchar(20),
--Year
	@ptYear Varchar(4),
--	@ptDocDateF Varchar(10),
--	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 11/03/2020
--รายงานยอดขาย - ตามเครื่องจุดขาย
-- Temp name  TRPTMnyShotOverTmp_Moshi

--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 VARCHAR(Max)
	DECLARE @tSqlHD VARCHAR(Max)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Cashier
	DECLARE @tUsrF Varchar(10)
	DECLARE @tUsrT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Pos
	SET @tPosF  = @ptPosF
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF
	SET @tUsrT  = @ptUsrT

	--SET @tDocDateF = @ptDocDateF
	--SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	--SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptShpL = null
	BEGIN
		SET @ptShpL = ''
	END

	IF @ptShpF = null
	BEGIN
		SET @ptShpF = ''
	END
	IF @ptShpT = null OR @ptShpT = ''
	BEGIN
		SET @ptShpT = @ptShpF
	END


	IF @ptPosL =null
	BEGIN
		SET @ptPosL = ''
	END

	IF @tPosF =null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT =null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @ptUsrL =null
	BEGIN
		SET @ptUsrL = ''
	END

	IF @tUsrF =null
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT =null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @ptPdtF =null
	BEGIN
		SET @ptPdtF = ''
	END
	IF @ptPdtT =null OR @ptPdtT = ''
	BEGIN
		SET @ptPdtT = @ptPdtF
	END

	IF @ptYear = null
	BEGIN 
		SET @ptYear = ''
	END

	--IF @tDocDateT = null OR @tDocDateT =''
	--BEGIN 
	--	SET @tDocDateT = @tDocDateF
	--END
	
		
	SET @tSql1 =   ' WHERE 1=1 AND DT.FTXsdStaPdt <> ''4'' AND HD.FTXshStaDoc <> ''3'' AND Pdt.FTPdtStaActive = ''1'' '
	--SET @tSqlHD =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			--SET @tSqlHD +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@ptShpF <> '' AND @ptShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
			--SET @tSqlHD +=' AND HD.FTShpCode BETWEEN ''' + @ptShpF + ''' AND ''' + @ptShpT + ''''
		END


		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
			--SET @tSqlHD +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END

		IF (@tUsrF <> '' AND @tUsrT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
			--SET @tSqlHD +=' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
		END

		--IF (@tPosF <> '' AND @tPosT <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		--END		


	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
			--SET @tSqlHD +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptShpL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
			--SET @tSqlHD +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTPosCode IN (' + @ptPosL + ')'
			--SET @tSqlHD +=' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END

		IF (@ptUsrL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTUsrCode IN (' + @ptUsrL + ')'
			--SET @tSqlHD +=' AND HD.FTUsrCode IN (' + @ptUsrL + ')'
		END

		--IF (@ptPosL <> '')
		--BEGIN
		--	SET @tSql1 += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		--END		
	END

	IF (@ptPdtF <> '' AND @ptPdtT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTUsrCode BETWEEN ''' + @ptPdtF + ''' AND ''' + @ptPdtT + ''''
		--SET @tSqlHD +=' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
	END

	IF (@ptYear <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(4),FDXshDocDate,121) BETWEEN ''' + @ptYear + ''' AND ''' + @ptYear + ''''
		--SET @tSqlHD +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTSalMthQtyByPdtTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
    
	SET @tSql = 'INSERT INTO TRPTSalMthQtyByPdtTmp'
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession'
	 SET @tSql +=' ,FTPdtCode,FTPdtName,FCXsdQty01,FCXsdQty02,FCXsdQty03,FCXsdQty04,FCXsdQty05,FCXsdQty06,FCXsdQty07,FCXsdQty08,FCXsdQty09,FCXsdQty10,FCXsdQty11,FCXsdQty12,FCXsdQtyTotal'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTPdtCode,FTPdtName,'
	SET @tSql +=' ISNULL([1],0) AS FCXsdQty01 ,ISNULL([2],0) AS FCXsdQty02,ISNULL([3],0) AS FCXsdQty03,ISNULL([4],0) AS FCXsdQty04 ,ISNULL([5],0) AS FCXsdQty05,ISNULL([6],0) AS FCXsdQty06,'
	SET @tSql +=' ISNULL([7],0) AS FCXsdQty07,ISNULL([8],0) AS FCXsdQty08,ISNULL([9],0) AS FCXsdQty09,ISNULL([10],0) AS FCXsdQty10,ISNULL([11],0) AS FCXsdQty11,ISNULL([12],0) AS FCXsdQty12,'
	SET @tSql +=' ISNULL([1],0)+ISNULL([2],0)+ISNULL([3],0)+ISNULL([4],0)+ISNULL([5],0)+ISNULL([6],0)+ISNULL([7],0)+ISNULL([8],0)+ISNULL([9],0)+ISNULL([10],0)+'
	SET @tSql +=' ISNULL([11],0)+ISNULL([12],0) AS FCXsdQtyTotal'
	SET @tSql +=' FROM'	
		SET @tSql +=' (SELECT DISTINCT MONTH(CONVERT(VARCHAR(10),HD.FDXshDocDate,121)) AS FNXshMonth,DT.FTPdtCode,PdtL.FTPdtName,'
		 SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXsdQty,0) ELSE ISNULL(FCXsdQty,0)*-1 END) AS  FCXsdQtyAll'
		 SET @tSql +=' FROM TPSTSalDT DT WITH (NOLOCK) INNER JOIN TPSTSalHD HD WITH (NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo'
		 SET @tSql +=' INNER JOIN TCNMPdt Pdt WITH (NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode'
		 SET @tSql +=' LEFT JOIN TCNMPdt_L PdtL WITH (NOLOCK) ON DT.FTPdtCode = PdtL.FTPdtCode AND PdtL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
		 --SET @tSql +=' WHERE DT.FTXsdStaPdt <> ''4'' AND HD.FTXshStaDoc <> ''3'' AND Pdt.FTPdtStaActive = ''1'''
		 SET @tSql += @tSql1
		 SET @tSql +=' GROUP BY MONTH(CONVERT(VARCHAR(10),HD.FDXshDocDate,121)) ,DT.FTPdtCode,PdtL.FTPdtName'
		SET @tSql +=' ) AS Sale'
		SET @tSql +=' PIVOT('
			SET @tSql +=' SUM(FCXsdQtyAll) FOR FNXshMonth IN ([1],[2],[3],[4],[5],[6],[7],[8],[9],[10],[11],[12])'
		SET @tSql +=' ) AS Mth'
	SET @tSql +=' ORDER BY FTPdtCode'


	PRINT @tSql
	EXECUTE(@tSql)
	RETURN SELECT * FROM TRPTSalMthQtyByPdtTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxSalPdtRetTmp]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxSalPdtRetTmp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxSalPdtRetTmp] AS' 
END
GO
-- =============================================
-- Author:		Piya
-- Create date: 25/06/2020
-- Description:	รายงาน - การคืนสินค้าตามวันที่
-- =============================================
ALTER PROCEDURE [dbo].[SP_RPTxSalPdtRetTmp]
	@pnLngID INT , 
	@ptComName VARCHAR(100),
	@ptRptCode VARCHAR(100),
	@ptUsrSession VARCHAR(255),
	@pnFilterType INT, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL VARCHAR(8000), --กรณี Condition IN
	@ptBchF VARCHAR(5),
	@ptBchT VARCHAR(5),
	--Shop Code
	@ptShpL VARCHAR(8000), --กรณี Condition IN
	@ptShpF VARCHAR(10),
	@ptShpT VARCHAR(10),
	--เครื่องจุดขาย
	@ptPosL VARCHAR(8000), --กรณี Condition IN
	@ptPosF VARCHAR(20),
	@ptPosT VARCHAR(20),
	--แคชเชียร์
	--@ptUsrL VARCHAR(8000), --กรณี Condition IN
	@ptUsrF VARCHAR(20),
	@ptUsrT VARCHAR(20),
	--วันที่เอกสาร
	@ptDocDateF VARCHAR(50),
	@ptDocDateT VARCHAR(50),

	@FNResult INT OUTPUT	
AS
BEGIN TRY
	DECLARE @tSQL VARCHAR(MAX)
	DECLARE @tSQL_Filter VARCHAR(MAX)
	DECLARE @nLngID INT
	DECLARE @tComName VARCHAR(100)
	DECLARE @tRptCode VARCHAR(100)
	DECLARE @tUsrSession VARCHAR(255)
	--Branch Code
	DECLARE @tBchF VARCHAR(5)
	DECLARE @tBchT VARCHAR(5)
	--Shop Code
	DECLARE @tShpF VARCHAR(10)
	DECLARE @tShpT VARCHAR(10)
	--Pos Code
	DECLARE @tPosF VARCHAR(20)
	DECLARE @tPosT VARCHAR(20)
	--Cashier
	DECLARE @tUsrF VARCHAR(20)
	DECLARE @tUsrT VARCHAR(20)
	--วันที่
	DECLARE @tDocDateF VARCHAR(50)
	DECLARE @tDocDateT VARCHAR(50)
	 
	SET @nLngID = @pnLngID
	SET @tComName = @ptComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT
	--Cashier
	SET @tUsrF  = @ptUsrF 
	SET @tUsrT  = @ptUsrT
	--วันที่
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	SET @tSQL_Filter = ''

	/*===== ตรวจสอบค่า Filter ========================================*/

	IF @ptBchL = null OR @ptBchL = ''
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null OR @tBchF = ''
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptShpL = null OR @ptShpL = ''
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF = null OR @tShpF = ''
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT = null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null OR @tPosF = ''
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tUsrF = null OR @tUsrF = ''
	BEGIN
		SET @tUsrF = ''
	END
	IF @tUsrT = null OR @tUsrT = ''
	BEGIN
		SET @tUsrT = @tUsrF
	END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSQL_Filter +=' AND HD.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSQL_Filter += ' AND HD.FTPosCode IN (' + @ptPosL + ')'
		END		
	END

	IF (@tUsrF <> '' AND @tUsrT <> '')
	BEGIN
		SET @tSQL_Filter += ' AND HD.FTUsrCode BETWEEN ''' + @tUsrF + ''' AND ''' + @tUsrT + ''''
	END
	
	/*===== Filter วันที่เอกสาร =============================================*/
	--เช็ค Parameter จากวันที่
	IF(@tDocDateF = '' OR @tDocDateF = NULL)
		BEGIN 
			SET @tDocDateF = ''
	    END
	ELSE IF(@tDocDateF <> '')
	   BEGIN 
		   SET @tDocDateF = @tDocDateF
	   END

     --เช็ค Parameter ถึงวันที่
	IF(@tDocDateT = '' OR @tDocDateT = NULL)
	   BEGIN 
		   SET @tDocDateT = ''
	   END
	ELSE IF(@tDocDateT <> '')
	   BEGIN 
		   SET @tDocDateT = @tDocDateT
	   END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL_Filter += ' AND ( (CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''') OR (CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateT + ''' AND ''' + @tDocDateF + ''') ) '
		END

	DELETE FROM TRPTSalPdtRetTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	SET @tSQL = '
		INSERT INTO TRPTSalPdtRetTmp 
		(FTComName,FTRptCode,FTUsrSession,FTXthTnsType,FNRowPartID,FTXihDocNo,FTXihRefIn,FDXihDocDate,FCXshRnd,FCXtdAmount,FTRsnName,FTUsrName,FTXshApvName)'

	SET @tSQL += '
		SELECT 
			'''+@tComName+''' AS FTComName,
			'''+@tRptCode+''' AS FTRptCode,
			'''+@tUsrSession+''' AS FTUsrSession,
			HD.FTXshTnsType AS FTXthTnsType,
			HD.FNRowPartID,
			HD.FTXshDocNo AS FTXihDocNo,
			HD.FTXshRefInt AS FTXihRefIn,
			HD.FDXshDocDate AS FDXihDocDate,
			HD.FCXshRnd,
			HD.FCXshGrand AS FCXtdAmount,
			HD.FTRsnName,
			HD.FTUsrName,
			HD.FTUsrApvBy AS FTXshApvName
		FROM (
			SELECT
				1 AS FTXshTnsType,
				0 AS FNRowPartID,
				HD.FTXshDocNo,
				ISNULL(HD.FTXshRefInt, ''N/A'') AS FTXshRefInt,
				HD.FDXshDocDate,
				HD.FCXshRnd,
				HD.FCXshGrand,
				ISNULL(RSN.FTRsnName, ''N/A'') AS FTRsnName,
				USR.FTUsrName,
				USR.FTUsrName AS FTUsrApvBy
			FROM TPSTSalHD HD WITH (NOLOCK)

			LEFT JOIN TCNMRsn_L RSN WITH (NOLOCK) ON HD.FTRsnCode = RSN.FTRsnCode
			AND RSN.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''
			LEFT JOIN TCNMUser_L USR WITH (NOLOCK) ON HD.FTUsrCode = USR.FTUsrCode
			AND USR.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''

			WHERE HD.FNXshDocType = 9
			AND HD.FTXshStaDoc = 1'
			--Where parameter ต่างๆได้ที่นี่
			SET @tSQL += @tSQL_Filter
		SET @tSQL += ') HD'



		SET @tSQL += '
		INSERT INTO TRPTSalPdtRetTmp 
		(FTComName,FTRptCode,FTUsrSession,FTXthTnsType,FNRowPartID,FTXihDocNo,FDXihDocDate,FTPdtCode,FTPdtName,FCXidQty,FTPunName,FCXtdAmount)'

		SET @tSQL += '
		SELECT 
			'''+@tComName+''' AS FTComName,
			'''+@tRptCode+''' AS FTRptCode,
			'''+@tUsrSession+''' AS FTUsrSession,
			DT.FTXshTnsType AS FTXthTnsType,
			DT.FNRowPartID,
			DT.FTXshDocNo AS FTXihDocNo,
			DT.FDXshDocDate AS FDXihDocDate,
			DT.FTPdtCode,
			DT.FTPdtName,
			DT.FCXsdQty AS FCXidQty,
			DT.FTPunName,
			DT.FCXsdNetAfHD AS FCXtdAmount
		FROM (
			SELECT
				2 AS FTXshTnsType,
				ROW_NUMBER() OVER (PARTITION BY DT.FTXshDocNo ORDER BY DT.FTPdtCode DESC) AS FNRowPartID,
				DT.FTXshDocNo,
				HD.FDXshDocDate,
				DT.FTPdtCode,
				PDT.FTPdtName,
				DT.FCXsdQty,
				DT.FTPunName,
				DT.FCXsdNetAfHD
			FROM TPSTSalDT DT WITH (NOLOCK)

			INNER JOIN TPSTSalHD HD WITH (NOLOCK) ON DT.FTXshDocNo = HD.FTXshDocNo
			AND DT.FTBchCode = HD.FTBchCode
			INNER JOIN TCNMPdt_L PDT WITH (NOLOCK) ON DT.FTPdtCode = PDT.FTPdtCode
			AND PDT.FNLngID = '''+ CAST(@nLngID AS VARCHAR(10)) +'''

			WHERE HD.FNXshDocType = 9
			AND HD.FTXshStaDoc = 1
			AND DT.FTXsdStaPdt <> 4'
			--Where parameter ต่างๆได้ที่นี่
			SET @tSQL += @tSQL_Filter
		SET @tSQL += ') DT'

	--PRINT @tSQL
	EXECUTE(@tSQL)

	SET @FNResult = 0
	RETURN @FNResult
END TRY	
BEGIN CATCH

    SET @FNResult = -1
	RETURN @FNResult

END CATCH
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockBal1002001]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockBal1002001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockBal1002001] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxStockBal1002001] 
    @pnLngID int , 
	@ptComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

	--@ptBchF VARCHAR(100),
	--@ptBchT VARCHAR(100),
	@ptWahCodeF VARCHAR(100),
	@ptWahCodeT VARCHAR(100),

	@FTResult VARCHAR(8000) OUTPUT

AS
BEGIN TRY

      DECLARE @tSQL VARCHAR(8000)
	  DECLARE @tSQL_Filter VARCHAR(8000)

	  DECLARE @nLngID int
	  DECLARE @tComName VARCHAR(100)
	  DECLARE @tRptCode VARCHAR(100)
	  DECLARE @tUsrSession VARCHAR(255)

	  --Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	  --DECLARE @tBchF VARCHAR(100)
	  --DECLARE @tBchT VARCHAR(100)
	  DECLARE @tWahCodeF VARCHAR(100)
	  DECLARE @tWahCodeT VARCHAR(100)

	  SET @tComName = @ptComName
	  SET @tRptCode = @ptRptCode
	  SET @tUsrSession = @ptUsrSession
	  SET @nLngID = @pnLngID

	  --Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT

	  --SET @tBchF = @ptBchF
	  --SET @tBchT = @ptBchT
	  SET @tWahCodeF = @ptWahCodeF
	  SET @tWahCodeT = @ptWahCodeT

	  SET @tSQL_Filter = ' WHERE 1 = 1 '

	  IF(@nLngID = '' OR @nLngID = NULL)
	     BEGIN
		      SET @nLngID = 1
		 END
	   ELSE IF(@nLngID <> '')
	     BEGIN
		     SET @nLngID = @pnLngID
		 END

	  IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	  --IF(@tBchF = '' OR @tBchF = NULL)
			-- BEGIN
			--	  SET @tBchF = ''
			-- END
	  -- ELSE IF(@tBchF <> '')
			-- BEGIN
			--	 SET @tBchF = @tBchF
			-- END

	  -- IF(@tBchT = '' OR @tBchT = NULL)
			-- BEGIN
			--	  SET @tBchT = ''
			-- END
	  -- ELSE IF(@tBchT <> '')
			-- BEGIN
			--	 SET @tBchT = @tBchT
			-- END
	   
	  -- IF(@tBchF <> '' AND @tBchT <> '')
			-- BEGIN 
			--	  SET @tSQL_Filter += ' AND STK.FTBchCode BETWEEN ''' + @tBchF +''' AND ''' + @tBchT + ''' ' 
			-- END
	  -- ELSE IF(@tBchF = '' AND @tBchT = '')
	  --       BEGIN 
			--      SET @tSQL_Filter += ''
			-- END

		IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQL_Filter +=' AND STK.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END	
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSQL_Filter +=' AND STK.FTBchCode IN (' + @ptBchL + ')'
		END	
	END

	   --คลังสินค้า
	   IF(@tWahCodeF = '' OR @tWahCodeF = NULL)
			 BEGIN
				  SET @tWahCodeF = ''
			 END
	   ELSE IF(@tWahCodeF <> '')
			 BEGIN
				 SET @tWahCodeF = @tWahCodeF
			 END

		 --ถึงคลัง
	   IF(@tWahCodeT = '' OR @tWahCodeT = NULL)
			 BEGIN
				  SET @tWahCodeT = ''
			 END
	   ELSE IF(@tWahCodeT <> '')
			 BEGIN
				 SET @tWahCodeT = @tWahCodeT
			 END

	   IF(@tWahCodeF <> '' AND @tWahCodeT <> '')
			  BEGIN 
				  SET @tSQL_Filter += ' AND STK.FTWahCode BETWEEN '''+@tWahCodeF+''' AND '''+@tWahCodeT+''' ' 
			  END
	   ELSE IF(@tWahCodeF = '' AND @tWahCodeT = '')
	         BEGIN 
			      SET @tSQL_Filter += ''
			 END
	 
	   
	   --DELETE FROM TRPTPdtStkBalTmp WITH (ROWLOCK) WHERE FTComName =  '' + @tComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''	  
	   DELETE FROM TRPTPdtStkBalTmp  WHERE FTComName =  '' + @tComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	  SET @tSQL  = ' INSERT INTO TRPTPdtStkBalTmp (FTComName,FTRptCode,FTUsrSession,FTWahCode,FTWahName,FTPdtCode,FTPdtName,FCStkQty,'	  
	  SET @tSQL += ' FTPgpChainName,FCPdtCostAVGEX,FCPdtCostTotal)'
	  SET @tSQL += ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	  SET @tSQL +=  ' WAH.FTWAHCODE,WAH.FTWahName,PDT.FTPdtCode,PDT.FTPdtName,STK.FCStkQty,Grp_L.FTPgpChainName,ISNULL(AvgCost.FCPdtCostAVGEX,0) AS FCPdtCostAVGEX,ISNULL(AvgCost.FCPdtCostAVGEX,0)* ISNULL(STK.FCStkQty,0) AS FCPdtCostTotal
					 FROM TCNTPDTSTKBAL STK WITH (NOLOCK)
					 LEFT JOIN VCN_ProductCost AvgCost WITH (NOLOCK) ON STK.FTPdtCode = AvgCost.FTPdtCode  
					 LEFT JOIN TCNMPdt PDT1 WITH (NOLOCK) ON  STK.FTPdtCode = PDT1.FTPdtCode
					 LEFT JOIN TCNMPDT_L PDT WITH (NOLOCK) ON  STK.FTPDTCODE = PDT.FTPDTCODE AND PDT.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''
					 LEFT JOIN TCNMWAHOUSE_L  WAH WITH (NOLOCK) ON STK.FTWAHCODE = WAH.FTWAHCODE AND WAH.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' 
					 LEFT JOIN TCNMPdtGrp_L Grp_L WITH (NOLOCK) ON Pdt1.FTPgpChain  =  Grp_L.FTPgpChain AND WAH.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	  SET @tSQL += @tSQL_Filter		
	  SET @tSQL +=' UNION'
	  SET @tSQL += ' SELECT '''+ @tComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	  SET @tSQL += ' WAH.FTWAHCODE,WAH.FTWahName,PDT.FTPdtCode,PDT.FTPdtName,STK.FCStkQty,Grp_L.FTPgpChainName,ISNULL(AvgCost.FCPdtCostAVGEX,0) AS FCPdtCostAVGEX,ISNULL(AvgCost.FCPdtCostAVGEX,0)* ISNULL(STK.FCStkQty,0) AS FCPdtCostTotal
					 FROM TCNTPDTSTKBALBch STK WITH (NOLOCK)
					 LEFT JOIN VCN_ProductCost AvgCost WITH (NOLOCK) ON STK.FTPdtCode = AvgCost.FTPdtCode  
					 LEFT JOIN TCNMPdt PDT1 WITH (NOLOCK) ON  STK.FTPdtCode = PDT1.FTPdtCode
					 LEFT JOIN TCNMPDT_L PDT WITH (NOLOCK) ON  STK.FTPDTCODE = PDT.FTPDTCODE AND PDT.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''
					 LEFT JOIN TCNMWAHOUSE_L  WAH WITH (NOLOCK) ON STK.FTWAHCODE = WAH.FTWAHCODE AND WAH.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' 
					 LEFT JOIN TCNMPdtGrp_L Grp_L WITH (NOLOCK) ON Pdt1.FTPgpChain  =  Grp_L.FTPgpChain AND WAH.FNLNGID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''

	  SET @tSQL += @tSQL_Filter	
	  PRINT @tSQL
	  EXECUTE(@tSQL)

	 SET @FTResult = CONVERT(VARCHAR(8000),@tSQL)

	 RETURN @FTResult

END TRY
BEGIN CATCH
     return -1
	 PRINT @tSQL
END CATCH

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockBalance2002001]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockBalance2002001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockBalance2002001] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxStockBalance2002001]

--ALTER PROCEDURE [dbo].[SP_RPTxStockBalance2002001] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptMerF Varchar(10),
	--@ptMerT Varchar(10),
	--@ptPosF Varchar(5),
	--@ptPosT Varchar(5),
	@ptWahF Varchar(5),
	@ptWahT Varchar(5),	
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ
-- @ptPosF จากตู้ 
-- @ptPosT ถึงตู้
-- @ptWahF จากคลัง
-- @ptWahT ถึงคลัง
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tMerF Varchar(10)
	--DECLARE @tMerT Varchar(10)
	--DECLARE @tPosF Varchar(5)
	--DECLARE @tPosT Varchar(5)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)
	
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)



	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'StockBalance2002001'
	--SET @tUsrSession = '001'
	--SET @tMerF = '00050'
	--SET @tMerT = '002'
	--SET @tPosF = '00001'
	--SET @tPosT = '00011'
	--SET @tWahF = '00001'
	--SET @tWahT = '00019'

	--SET @tShpF = '00001'
	--SET @tShpT = '00027'


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	--SET @tMerF =@ptMerF
	--SET @tMerT = @ptMerT
	--SET @tPosF = @ptPosF
	--SET @tPosT = @ptPosT
	SET @tWahF = @ptWahF
	SET @tWahT = @ptWahT
	
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	--IF @tMerF = null
	--BEGIN
	--	SET @tMerF = ''
	--END
	--IF @tMerT = null OR @tMerT = ''
	--BEGIN
	--	SET @tMerT = @tMerF
	--END

	--IF @tShpF = null
	--BEGIN
	--	SET @tShpF = ''
	--END 
	--IF @tShpT = null OR @tShpT =''
	--BEGIN
	--	SET @tShpT = @tShpF
	--END 

	--IF @tPosF = null
	--BEGIN
	--	SET @tPosF = ''
	--END 
	--IF @tPosT = null OR @tPosT =''
	--BEGIN
	--	SET @tPosT = @tPosF
	--END 

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END 
	IF @tWahT = null OR @tWahT =''
	BEGIN
		SET @tWahT = @tWahF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND Stk.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND Wah.FTWahRefCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND Stk.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND Wah.FTWahRefCode IN (' + @ptPosL + ')'
		END		
	END

	--IF (@tMerF <> '' AND @tMerT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSql1 +=' AND Wah.FTWahCode BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END
	
	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND Wah.FTWahRefCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	--END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),Stk.FDLastUpdOn,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTVDPdtStkBalTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
   	SET @tSql  = ' INSERT INTO TRPTVDPdtStkBalTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FDLastUpdOn,FTWahCode, FTPosCode ,FTPdtCode,FTPdtName ,FNLayRow,FNLayCol,FCStkQty,FCPdtCostEX'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode, FDLastUpdOn,FTWahCode,FTPosCode ,FTPdtCode,FTPdtName ,FNLayRow,FNLayCol,FCStkQty,FCPdtCostEX'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT Stk.FTBchCode,Stk.FDLastUpdOn, Stk.FTWahCode,Wah.FTWahRefCode AS FTPosCode ,Stk.FTPdtCode,Pdt_L.FTPdtName ,FNLayRow,FNLayCol,FCStkQty,AvgCost.FCPdtCostAVGEX AS FCPdtCostEX'
		SET @tSql +=' FROM TVDTPdtStkBal Stk WITH (NOLOCK)  INNER JOIN'		  
				  SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON Stk.FTPdtCode = Pdt.FTPdtCode LEFT JOIN' 
				  SET @tSql +=' VCN_ProductCost AvgCost WITH (NOLOCK) ON Pdt.FTPdtCode = AvgCost.FTPdtCode  LEFT JOIN'
				  SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
				  SET @tSql +=' TCNMWaHouse Wah WITH (NOLOCK) ON Stk.FTWahCode = Wah.FTWahCode LEFT JOIN'
				  SET @tSql +=' TCNMWaHouse_L Wah_L WITH (NOLOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
				  
				  --SET @tSql +=' (SELECT FTBchCode,FTShpCode,FTWahCode,FTMerCode' 
				  --SET @tSql +=' FROM TCNMShop WITH (NOLOCK)'
				  SET @tSql +=' ( SELECT SHP.FTBchCode,SHP.FTShpCode,WAH.FTWahCode,SHP.FTMerCode '
	              SET @tSql +=' FROM TCNMShop SHP WITH (NOLOCK) '
	              SET @tSql +=' LEFT JOIN TVDMPosShop PSS ON SHP.FTShpCode = PSS.FTShpCode '
				  SET @tSql +=' LEFT JOIN TCNMWaHouse WAH ON PSS.FTPosCode = WAH.FTWahRefCode '
				  -- SET @tSql +=@tSql1
				   --WHERE FTMerCode BETWEEN  '00050' AND '002'
				  SET @tSql +=' ) Mer ON Stk.FTBchCode = Mer.FTBchCode AND Stk.FTWahCode = Mer.FTWahCode'
				  PRINT @tSql1
				  SET @tSql +=@tSql1
				  --SET @tSql +=' WHERE 1=1'

		SET @tSql +=' ) Stk1'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDPdtStkBalTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	


			  --SELECT * FROM TCNMShop

--SELECT * FROM TCNMMerchant
--SELECT * FROM   TVDMPdtLayout
--SELECT * FROM TVDTPdtStkBal
--SELECT * FROM TCNMShop WHERE FTShpType = '4'
--SELECT * FROM TCNMPdt
--SELECT * FROM TCNMPdtCostAvg
--SELECT FCSplLastPrice,* FROM TCNMPdtSpl
--SELECT * FROM TRPTVDPdtStkBalTmp



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockBalance2002001_Edit]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockBalance2002001_Edit]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockBalance2002001_Edit] AS' 
END
GO

ALTER PROCEDURE [dbo].[SP_RPTxStockBalance2002001_Edit]

--ALTER PROCEDURE [dbo].[SP_RPTxStockBalance2002001] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),
	@ptWahF Varchar(5),
	@ptWahT Varchar(5),	
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ
-- @ptPosF จากตู้ 
-- @ptPosT ถึงตู้
-- @ptWahF จากคลัง
-- @ptWahT ถึงคลัง
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)
	
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)



	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'StockBalance2002001'
	--SET @tUsrSession = '001'
	--SET @tMerF = '00050'
	--SET @tMerT = '002'
	--SET @tPosF = '00001'
	--SET @tPosT = '00011'
	--SET @tWahF = '00001'
	--SET @tWahT = '00019'

	--SET @tShpF = '00001'
	--SET @tShpT = '00027'


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tMerF =@ptMerF
	SET @tMerT = @ptMerT
	SET @tPosF = @ptPosF
	SET @tPosT = @ptPosT
	SET @tWahF = @ptWahF
	SET @tWahT = @ptWahT
	
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END 
	IF @tPosT = null OR @tPosT =''
	BEGIN
		SET @tPosT = @tPosF
	END 

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END 
	IF @tWahT = null OR @tWahT =''
	BEGIN
		SET @tWahT = @tWahF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '


	IF (@tMerF <> '' AND @tMerT <> '')
	BEGIN
		SET @tSql1 +=' AND FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSql1 +=' AND Wah.FTWahCode BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END
	
	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND Wah.FTWahRefCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),Stk.FDLastUpdOn,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TRPTVDPdtStkBalTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
   	SET @tSql  = ' INSERT INTO TRPTVDPdtStkBalTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FDLastUpdOn,FTWahCode, FTPosCode ,FTPdtCode,FTPdtName ,FNLayRow,FNLayCol,FCStkQty,FCPdtCostEX'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTBchCode, FDLastUpdOn,FTWahCode,FTPosCode ,FTPdtCode,FTPdtName ,FNLayRow,FNLayCol,FCStkQty,FCPdtCostEX'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT Stk.FTBchCode,Stk.FDLastUpdOn, Stk.FTWahCode,Wah.FTWahRefCode AS FTPosCode ,Stk.FTPdtCode,Pdt_L.FTPdtName ,FNLayRow,FNLayCol,FCStkQty,AvgCost.FCPdtCostAVGEX AS FCPdtCostEX'
		SET @tSql +=' FROM TVDTPdtStkBal Stk WITH (NOLOCK)  INNER JOIN'		  
				  SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON Stk.FTPdtCode = Pdt.FTPdtCode LEFT JOIN' 
				  SET @tSql +=' VCN_ProductCost AvgCost WITH (NOLOCK) ON Pdt.FTPdtCode = AvgCost.FTPdtCode  LEFT JOIN'
				  SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
				  SET @tSql +=' TCNMWaHouse Wah WITH (NOLOCK) ON Stk.FTWahCode = Wah.FTWahCode LEFT JOIN'
				  SET @tSql +=' TCNMWaHouse_L Wah_L WITH (NOLOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
				  SET @tSql +=' (SELECT FTBchCode,FTShpCode,FTWahCode,FTMerCode' 
				  SET @tSql +=' FROM TCNMShop WITH (NOLOCK)'
				  
				  -- SET @tSql +=@tSql1
				   --WHERE FTMerCode BETWEEN  '00050' AND '002'
				  SET @tSql +=' ) Mer ON Stk.FTBchCode = Mer.FTBchCode AND Stk.FTWahCode = Mer.FTWahCode'
				  PRINT @tSql1
				  SET @tSql +=@tSql1
				  --SET @tSql +=' WHERE 1=1'

		SET @tSql +=' ) Stk1'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDPdtStkBalTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	


			  --SELECT * FROM TCNMShop

--SELECT * FROM TCNMMerchant
--SELECT * FROM   TVDMPdtLayout
--SELECT * FROM TVDTPdtStkBal
--SELECT * FROM TCNMShop WHERE FTShpType = '4'
--SELECT * FROM TCNMPdt
--SELECT * FROM TCNMPdtCostAvg
--SELECT FCSplLastPrice,* FROM TCNMPdtSpl
--SELECT * FROM TRPTVDPdtStkBalTmp




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockChecking2002002]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockChecking2002002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockChecking2002002] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxStockChecking2002002]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptMerF Varchar(10),
	--@ptMerT Varchar(10),
	--@ptPosF Varchar(5),
	--@ptPosT Varchar(5),
	--@ptShpF Varchar(30),
	--@ptShpT Varchar(30),

	@ptWahF Varchar(5),
	@ptWahT Varchar(5),	

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ
-- @ptPosF จากตู้ 
-- @ptPosT ถึงตู้
-- @ptWahF จากคลัง
-- @ptWahT ถึงคลัง
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	--DECLARE @tMerF Varchar(10)
	--DECLARE @tMerT Varchar(10)
	--DECLARE @tPosF Varchar(5)
	--DECLARE @tPosT Varchar(5)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)
	
	--DECLARE @tShpF Varchar(30)
	--DECLARE @tShpT Varchar(30)



	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'StockChecking2002002'
	--SET @tUsrSession = '001'
	--SET @tMerF = '00050'
	--SET @tMerT = '002'
	--SET @tPosF = '00001'
	--SET @tPosT = '00011'
	--SET @tWahF = '00001'
	--SET @tWahT = '00019'

	--SET @tShpF = '00001'
	--SET @tShpT = '00027'


	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT

	SET @tWahF = @ptWahF
	SET @tWahT = @ptWahT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END 
	IF @tWahT = null OR @tWahT =''
	BEGIN
		SET @tWahT = @tWahF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTAjhMerchantTo BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTAjhShopTo BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTAjhPosTo BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTAjhMerchantTo IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTAjhShopTo IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTAjhPosTo IN (' + @ptPosL + ')'
		END		
	END

	--IF (@tMerF <> '' AND @tMerT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTAjhMerchantTo BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTAjhShopTo BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTAjhWhTo BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END

	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTAjhPosTo BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	--END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
    	SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDAjhDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTPdtAdjStkTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
   	SET @tSql = ' INSERT INTO TRPTPdtAdjStkTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTAjhDocNo,FDAjhDocDate,FTAjdApvCode,FTAjdApvName,FTPdtCode,FTPdtName,FNAjdLayRow,FNAjdLayCol,FCAjdWahB4Adj,FCAjdUnitQty,FCAjdQtyAllDiff'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FTAjhDocNo,FDAjhDocDate,FTUsrCode,FTUsrName,FTPdtCode,FTPdtName,FNAjdLayRow,FNAjdLayCol,FCAjdWahB4Adj,FCAjdUnitQty,FCAjdQtyAllDiff'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTAjhDocNo,HD.FDAjhDocDate,HD.FTUsrCode,Usr_L.FTUsrName,DT.FTPdtCode,Pdt_L.FTPdtName,ISNULL(DT.FNAjdLayRow,0) AS FNAjdLayRow,'
		 SET @tSql +=' ISNULL(DT.FNAjdLayCol,0) AS FNAjdLayCol,ISNULL(DT.FCAjdWahB4Adj,0) AS FCAjdWahB4Adj,ISNULL(DT.FCAjdUnitQty,0) AS FCAjdUnitQty,'
		 SET @tSql +=' ISNULL(DT.FCAjdUnitQty,0) - ISNULL(DT.FCAjdWahB4Adj,0) AS FCAjdQtyAllDiff'
		 SET @tSql +=' FROM TCNTPdtAdjStkDT DT  WITH (NOLOCK) INNER JOIN' 
		 SET @tSql +=' TCNTPdtAdjStkHD HD  WITH (NOLOCK) ON DT.FTAjhDocNo = HD.FTAjhDocNo LEFT JOIN'
		 SET @tSql +=' TCNMUser_L Usr_L  WITH (NOLOCK) ON HD.FTUsrCode = Usr_L.FTUsrCode AND Usr_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		 SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN' 
		 SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		PRINT @tSql1
		SET @tSql += @tSql1
		SET @tSql +=' ) Chk1'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPdtAdjStkTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockMovent]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockMovent]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockMovent] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxStockMovent]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptPdtF Varchar(20),
	@ptPdtT Varchar(20),
	@ptWahF Varchar(5),
	@ptWahT Varchar(5),	


	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงจากเจ้าของกิจการ
-- @ptPosF จากตู้ 
-- @ptPosT ถึงตู้
-- @ptWahF จากคลัง
-- @ptWahT ถึงคลัง
-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tPdtF Varchar(20)
	DECLARE @tPdtT Varchar(20)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'StockChecking2002002'
	--SET @tUsrSession = '001'
	--SET @tBchF = '00050'
	--SET @tBchT = '002'
	--SET @tPdtF = '00001'
	--SET @tPdtT = '00011'
	--SET @tWahF = '00001'
	--SET @tWahT = '00019'

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF =@ptBchF
	SET @tBchT = @ptBchT
	SET @tPdtF = @ptPdtF
	SET @tPdtT = @ptPdtT
	SET @tWahF = @ptWahF
	SET @tWahT = @ptWahT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tPdtF = null
	BEGIN
		SET @tPdtF = ''
	END 
	IF @tPdtT = null OR @tPdtT =''
	BEGIN
		SET @tPdtT = @tPdtF
	END 

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END 
	IF @tWahT = null OR @tWahT =''
	BEGIN
		SET @tWahT = @tWahF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 '

	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSql1 +=' AND FTWahCode BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END

	IF (@tPdtF <> '' AND @tPdtT <> '')
	BEGIN
		SET @tSql1 +=' AND FTPdtCode BETWEEN ''' + @tPdtF + ''' AND ''' + @tPdtT + ''''
	END
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		IF DAY(CONVERT(VARCHAR(10),@tDocDateF,121)) = 1 
		BEGIN
    		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FTStkDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END 
		--ELSE
		--BEGIN 
		--	SET @tSql1 +=' AND CONVERT(VARCHAR(10),FTStkDate,121) BETWEEN ''' + @tDocDateF + '''  AND ''' + @tDocDateT + ''''
		--END
	END

	DELETE FROM TRPTPdtStkCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 	SET @tSql = ' INSERT INTO TRPTPdtStkCrdTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode, FDStkDate, FTStkDocNo, Stk.FTWahCode,Wah_L.FTWahName, Stk.FTPdtCode,Pdt_L.FTPdtName,'
	SET @tSql +=' FTStkQtyMonEnd,FTStkQtyIn,FTStkQtyOut,FTStkQtySaleDN,FTStkQtyCN,FTStkQtyAdj'
	SET @tSql +=' )' 
	SET @tSql +=' SELECT FTBchCode, FDStkDate, FTStkDocNo, Stk.FTWahCode,Wah_L.FTWahName, Stk.FTPdtCode,Pdt_L.FTPdtName,' --FTStkType, 
		   SET @tSql +=' CASE WHEN FTStkType = ''0'' THEN FCStkQty ELSE 0 END AS FTStkQtyMonEnd,'
		   SET @tSql +=' CASE WHEN FTStkType = ''1'' THEN FCStkQty ELSE 0 END AS FTStkQtyIn,'
		   SET @tSql +=' CASE WHEN FTStkType = ''2'' THEN FCStkQty ELSE 0 END AS FTStkQtyOut,'
		   SET @tSql +=' CASE WHEN FTStkType = ''3'' THEN FCStkQty ELSE 0 END AS FTStkQtySaleDN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''4'' THEN FCStkQty ELSE 0 END AS FTStkQtyCN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''5'' THEN FCStkQty ELSE 0 END AS FTStkQtyAdj'
	SET @tSql +=' FROM   TCNTPdtStkCrd Stk WITH(NO LOCK) LEFT JOIN' 
		   SET @tSql +=' TCNMWaHouse_L Wah_L WITH(NO LOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
		   SET @tSql +=' TCNMPdt_L Pdt_L ON WITH(NO LOCK) Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''


	PRINT @tSql
	--EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPdtAdjStkTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	PRINT @tSql
END CATCH	

--SELECT * FROM TCNTPdtStkCrd





GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxStockMovent1002002]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxStockMovent1002002]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxStockMovent1002002] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxStockMovent1002002]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

	@ptPdtF Varchar(20),
	@ptPdtT Varchar(20),
	@ptWahF Varchar(5),
	@ptWahT Varchar(5),	

	@ptMonth Varchar(2) , 
	@ptYear Varchar(4),
	--@ptDocDateF Varchar(10),
	--@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 14/08/2019
-- Temp name  TRPTVDPdtStkBalTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @@ptBchF จากสาขา
-- @@ptBchT ถึงสาขา
-- @ptPdtF จากสินค้า
-- @ptPdtT ถึงสินค้า
-- @ptWahF จากคลัง
-- @ptWahT ถึงคลัง

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------

BEGIN TRY	
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql0 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tPdtF Varchar(20)
	DECLARE @tPdtT Varchar(20)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)

	DECLARE @tMonth Varchar(2) 
	DECLARE @tYear Varchar(4)

	--DECLARE @tDocDateF Varchar(10)
	--DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptCode = 'Movent1002002'
	--SET @tUsrSession = '001'
	--SET @tBchF = '00050'
	--SET @tBchT = '002'
	--SET @tPdtF = '00001'
	--SET @tPdtT = '00011'
	--SET @tWahF = '00001'
	--SET @tWahT = '00019'

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tPdtF = @ptPdtF
	SET @tPdtT = @ptPdtT
	SET @tWahF = @ptWahF
	SET @tWahT = @ptWahT

	SET @tMonth = @ptMonth
	SET @tYear = @ptYear

	--SET @tDocDateF = @ptDocDateF
	--SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	--SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	--SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tPdtF = null
	BEGIN
		SET @tPdtF = ''
	END 
	IF @tPdtT = null OR @tPdtT =''
	BEGIN
		SET @tPdtT = @tPdtF
	END 

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END 
	IF @tWahT = null OR @tWahT =''
	BEGIN
		SET @tWahT = @tWahF
	END 

	--IF @tDocDateF = null
	--BEGIN 
	--	SET @tDocDateF = ''
	--END

	--IF @tDocDateT = null OR @tDocDateT =''
	--BEGIN 
	--	SET @tDocDateT = @tDocDateF
	--END
	IF @tMonth = null
	BEGIN 
		SET @tMonth = ''
	END

	IF @tYear = null
	BEGIN 
		SET @tYear = ''
	END
	
		
	SET @tSqlIns =   ' WHERE 1=1 '

	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSqlIns +=' AND Stk.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSqlIns +=' AND Stk.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END	
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSqlIns +=' AND Stk.FTBchCode IN (' + @ptBchL + ')'
		END	
	END
		
	IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSqlIns +=' AND Stk.FTWahCode BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END

	IF (@tPdtF <> '' AND @tPdtT <> '')
	BEGIN
		SET @tSqlIns +=' AND Stk.FTPdtCode BETWEEN ''' + @tPdtF + ''' AND ''' + @tPdtT + ''''
	END

	IF (@tMonth <> '' )
	BEGIN
		SET @tSqlIns +=' AND CONVERT(varchar(2),MONTH(FDStkDate)) BETWEEN ''' + @tMonth + ''' AND ''' + @tMonth + ''''
	END

	IF (@tYear <> '' )
	BEGIN
		SET @tSqlIns +=' AND CONVERT(varchar(4),YEAR(FDStkDate)) BETWEEN ''' + @tYear + ''' AND ''' + @tYear + ''''
	END


	--IF (@tDocDateF <> '' AND @tDocDateT <> '')
	--BEGIN
	--    --เฉพาะ StkType = 1-5
 --  		SET @tSql1 =' AND CONVERT(VARCHAR(10),FDStkDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	--	--SET @tSql1 += ' AND FTStkType BETWEEN ''1'' AND ''5'''
	--	--เฉพาะ StkType = 0
	--	IF DAY(CONVERT(VARCHAR(10),@tDocDateF,121)) = 1 
	--	BEGIN 
	--		--กรณีเลือกวันที่ 1
	--		SET @tSql0 =' AND CONVERT(VARCHAR(10),FDStkDate,121) BETWEEN  CONVERT(Datetime,''' +@tDocDateF+''',111) - DAY('''+ @tDocDateF +''') + 1 AND CONVERT(Datetime,''' +@tDocDateF+''',111)'
	--		SET @tSql0 +=' AND FTStkType BETWEEN ''0'' AND ''0'''
	--	END ELSE
	--	BEGIN
	--	    --กรณีไม่ได้เลือกวันที่ 1 ยอดยกมาจะ Sum จำนวนที่เคลื่อไหน ถึงวันก่อนที่เลือก วันที่เริ่มต้น
	--		SET @tSql0 =' AND CONVERT(VARCHAR(10),FDStkDate,121) BETWEEN  CONVERT(Datetime,''' +@tDocDateF+''',111) - DAY('''+ @tDocDateF +''') + 1 AND CONVERT(Datetime,''' +@tDocDateF+''',111)-1'			
	--	END
	--END ELSE
	--BEGIN
	--	SET @tSql1 = ''
	--	SET @tSql0 = ''
	--END
		
	DELETE FROM TRPTPdtStkCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	-- Stk
 	SET @tSql = ' INSERT INTO TRPTPdtStkCrdTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName, FDStkDate, FTStkDocNo, FTWahCode,FTWahName, FTPdtCode,FTPdtName,'
	SET @tSql +=' FCStkQtyMonEnd,FCStkQtyIn,FCStkQtyOut,FCStkQtySaleDN,FCStkQtyCN,FCStkQtyAdj'
	SET @tSql +=' )' 
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' STK.FTBchCode,FTBchName, FDStkDate, FTStkDocNo, Stk.FTWahCode,Wah_L.FTWahName, Stk.FTPdtCode,Pdt_L.FTPdtName,' --FTStkType, 
		   SET @tSql +=' CASE WHEN FTStkType = ''0'' THEN FCStkQty ELSE 0 END AS FCStkQtyMonEnd,'
		   SET @tSql +=' CASE WHEN FTStkType = ''1'' THEN FCStkQty ELSE 0 END AS FCStkQtyIn,'
		   SET @tSql +=' CASE WHEN FTStkType = ''2'' THEN FCStkQty ELSE 0 END AS FCStkQtyOut,'
		   SET @tSql +=' CASE WHEN FTStkType = ''3'' THEN FCStkQty ELSE 0 END AS FCStkQtySaleDN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''4'' THEN FCStkQty ELSE 0 END AS FCStkQtyCN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''5'' THEN FCStkQty ELSE 0 END AS FCStkQtyAdj'
	SET @tSql +=' FROM   TCNTPdtStkCrd Stk WITH(NOLOCK) LEFT JOIN' 
		   SET @tSql +=' TCNMWaHouse_L Wah_L WITH(NOLOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
		   SET @tSql +=' TCNMPdt_L Pdt_L WITH(NOLOCK) ON Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		   SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON Stk.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
    
	--PRINT @tSql1
	--PRINT @tSqlIns	
	PRINT @tSql
    SET @tSql +=  @tSqlIns
	PRINT @tSql
	EXECUTE(@tSql)

	----STKBch
SET @tSql = ' INSERT INTO TRPTPdtStkCrdTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName, FDStkDate, FTStkDocNo, FTWahCode,FTWahName, FTPdtCode,FTPdtName,'
	SET @tSql +=' FCStkQtyMonEnd,FCStkQtyIn,FCStkQtyOut,FCStkQtySaleDN,FCStkQtyCN,FCStkQtyAdj'
	SET @tSql +=' )' 
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' STK.FTBchCode,FTBchName, FDStkDate, FTStkDocNo, Stk.FTWahCode,Wah_L.FTWahName, Stk.FTPdtCode,Pdt_L.FTPdtName,' --FTStkType, 
		   SET @tSql +=' CASE WHEN FTStkType = ''0'' THEN FCStkQty ELSE 0 END AS FCStkQtyMonEnd,'
		   SET @tSql +=' CASE WHEN FTStkType = ''1'' THEN FCStkQty ELSE 0 END AS FCStkQtyIn,'
		   SET @tSql +=' CASE WHEN FTStkType = ''2'' THEN FCStkQty ELSE 0 END AS FCStkQtyOut,'
		   SET @tSql +=' CASE WHEN FTStkType = ''3'' THEN FCStkQty ELSE 0 END AS FCStkQtySaleDN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''4'' THEN FCStkQty ELSE 0 END AS FCStkQtyCN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''5'' THEN FCStkQty ELSE 0 END AS FCStkQtyAdj'
	SET @tSql +=' FROM   TCNTPdtStkCrdBch Stk WITH(NOLOCK) LEFT JOIN' 
		   SET @tSql +=' TCNMWaHouse_L Wah_L WITH(NOLOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
		   SET @tSql +=' TCNMPdt_L Pdt_L WITH(NOLOCK) ON Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		   SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON Stk.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
    
	--PRINT @tSql1
	--PRINT @tSqlIns	
	PRINT @tSql
    SET @tSql +=  @tSqlIns 
	PRINT @tSql
	EXECUTE(@tSql)

	----STKME
 SET @tSql = ' INSERT INTO TRPTPdtStkCrdTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTBchName, FDStkDate, FTStkDocNo, FTWahCode,FTWahName, FTPdtCode,FTPdtName,'
	SET @tSql +=' FCStkQtyMonEnd,FCStkQtyIn,FCStkQtyOut,FCStkQtySaleDN,FCStkQtyCN,FCStkQtyAdj'
	SET @tSql +=' )' 
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' STK.FTBchCode,FTBchName, FDStkDate, FTStkDocNo, Stk.FTWahCode,Wah_L.FTWahName, Stk.FTPdtCode,Pdt_L.FTPdtName,' --FTStkType, 
		   SET @tSql +=' CASE WHEN FTStkType = ''0'' THEN FCStkQty ELSE 0 END AS FCStkQtyMonEnd,'
		   SET @tSql +=' CASE WHEN FTStkType = ''1'' THEN FCStkQty ELSE 0 END AS FCStkQtyIn,'
		   SET @tSql +=' CASE WHEN FTStkType = ''2'' THEN FCStkQty ELSE 0 END AS FCStkQtyOut,'
		   SET @tSql +=' CASE WHEN FTStkType = ''3'' THEN FCStkQty ELSE 0 END AS FCStkQtySaleDN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''4'' THEN FCStkQty ELSE 0 END AS FCStkQtyCN,'
		   SET @tSql +=' CASE WHEN FTStkType = ''5'' THEN FCStkQty ELSE 0 END AS FCStkQtyAdj'
	SET @tSql +=' FROM   TCNTPdtStkCrdMe Stk WITH(NOLOCK) LEFT JOIN' 
		   SET @tSql +=' TCNMWaHouse_L Wah_L WITH(NOLOCK) ON Stk.FTWahCode = Wah_L.FTWahCode AND Wah_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN' 
		   SET @tSql +=' TCNMPdt_L Pdt_L WITH(NOLOCK) ON Stk.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
		   SET @tSql +=' LEFT JOIN TCNMBranch_L Bch_L WITH(NOLOCK) ON Stk.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
    
	--PRINT @tSql1
	--PRINT @tSqlIns	
	PRINT @tSql
    SET @tSql +=  @tSqlIns 
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTPdtStkCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	PRINT @tSql
END CATCH	

--SELECT * FROM TCNTPdtStkCrd
GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxTimeDepositTmp003001009]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxTimeDepositTmp003001009]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxTimeDepositTmp003001009] AS' 
END
GO

 --Create By Witsarut 
 --Create Date 3/12/2019

ALTER PROCEDURE [dbo].[SP_RPTxTimeDepositTmp003001009]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	--@ptBchF Varchar(20),
	--@ptBchT Varchar(20),
	--@ptShpF Varchar(20),
	--@ptShpT Varchar(20),
	--@ptPosCodeF Varchar(20),
	--@ptPosCodeT Varchar(20),
	@ptDocDateF Varchar(50),
	@ptDocDateT Varchar(50),
	@FNResult INT OUTPUT 	
AS
BEGIN TRY

	-- Declare Parameter
	DECLARE @nLngID int
	DECLARE @tComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	--DECLARE @tBchF Varchar(20)
	--DECLARE @tBchT Varchar(20)
	--DECLARE @tShpF Varchar(20)
	--DECLARE @tShpT Varchar(20)
	--DECLARE @tPosCodeF Varchar(20)
	--DECLARE @tPosCodeT Varchar(20)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tDocDateF Varchar(50)
	DECLARE @tDocDateT Varchar(50)

	DECLARE @tSQL	VARCHAR(8000)
	DECLARE @tWhereFilter VARCHAR(8000)
	DECLARE @tSQL2 nVARCHAR(Max)

	-- รับ Parameter
	SET @nLngID	  = @pnLngID
	SET @tComName = @pnComName
	SET @tRptCode = @ptRptCode
	SET @tUsrSession = @ptUsrSession
	--Branch
	SET @tBchF  = @ptBchF
	SET @tBchT  = @ptBchT
	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT
	--Shop
	SET @tShpF  = @ptShpF
	SET @tShpT  = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT  = @ptPosT
	--SET @tBchF = @ptBchF --จากสาขา
	--SET @tBchT = @ptBchT --ถึงสาขา
	--SET @tShpF = @ptShpF --จากร้านค้า
	--SET @tShpT = @ptShpT --ถึงร้านค้า
	--SET @tPosCodeF = @ptPosCodeF --จาก Pos
	--SET @tPosCodeT = @ptPosCodeT --ถึง Pos
	SET @tDocDateF = CONVERT(VARCHAR(10),@ptDocDateF,121)  --จากวันที่เอกสาร
	SET @tDocDateT = CONVERT(VARCHAR(10),@ptDocDateT,121)  --ถึงวันที่เอกสาร

	SET @FNResult= 0

	IF @nLngID = null
	BEGIN 
		SET @nLngID = 1
	END

	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END
	---------------- ตรวจสอบค่า Filter สาขา (Branch) --------------

	--	IF @tBchF = null
	--	BEGIN
	--		SET @tBchF = ''
	--	END
	--	IF @tBchT = null OR @tBchT = ''
	--	BEGIN
	--		SET @tBchT = @tBchF
	--	END

	-- -------------- ตรวจสอบค่า Filter ร้านค้า (Shop) --------------
	--	IF @tShpF = null
	--	BEGIN
	--		SET @tShpF = ''
	--	END 
	--	IF @tShpT = null OR @tShpT =''
	--	BEGIN
	--		SET @tShpT = @tShpF
	--	END 

	---------------- ตรวจสอบค่า Filter เครื่องจุดขาย (POS) --------------
	
	--	IF @tPosCodeF = null
	--	BEGIN
	--		SET @tPosCodeF = ''
	--	END 
	--	IF @tPosCodeT = null OR @tPosCodeT =''
	--	BEGIN
	--		SET @tPosCodeT = @tPosCodeF
	--	END 

	 -------------- ตรวจสอบค่า Filter วันที่  (Date) --------------
	IF @tDocDateF = null
	BEGIN
		SET @tDocDateF = ''
	END 
	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN
		SET @tDocDateT = @tDocDateF
	END 


	-- Check Where
	SET @tWhereFilter	= ' WHERE 1=1'

	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tWhereFilter +=' AND TLS.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tWhereFilter +=' AND SHP_F.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tWhereFilter +=' AND TLS.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tWhereFilter += ' AND TLS.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND TLS.FTBchCode IN (' + @ptBchL + ')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tWhereFilter +=' AND SHP_F.FTMerCode IN (' + @ptMerL + ')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tWhereFilter +=' AND TLS.FTShpCode IN (' + @ptShpL + ')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tWhereFilter += ' AND TLS.FTPosCode IN (' + @ptPosL + ')'
		END		
	END
	 
	------- ตรวจสอบค่าสำหรับ Filter Branch --------
	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tWhereFilter +=' AND TLS.FTBchCode BETWEEN '''+ @tBchF +''' AND '''+ @tBchT +''' '
	--END


	------- ตรวจสอบค่าสำหรับ Filter Shop --------
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tWhereFilter += ' AND TLS.FTShpCode BETWEEN '''+ @tShpF +''' AND '''+ @tShpT +''''
	--END

	------- ตรวจสอบค่าสำหรับ Filter Pos --------
	--IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
	--BEGIN 
	--	SET @tWhereFilter += ' AND TLS.FTPosCode BETWEEN '''+ @tPosCodeF +''' AND '''+ @tPosCodeT +''''
	--END 

	------- ตรวจสอบค่าสำหรับ Filter Date --------

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN	
		SET @tSQL2 = ' AND CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '''+ @tDocDateF +''' AND '''+ @tDocDateT +''' '
	END
	ELSE
		BEGIN	
		SET @tSQL2 = ''
	END

	 ------- ลบข้อมูลใน Temp -------
		DELETE FROM TRPTRTTimeDepositTmp WITH (ROWLOCK) WHERE FTComName = '' + @tComName + '' AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''

	 ------- เพิ่มข้อมูลใน Temp -------
		SET @tSQL	=' INSERT INTO TRPTRTTimeDepositTmp ( '
		SET @tSQL	+=' FTComName,FTRptCode,FTUsrSession,FTBchCode,FTBchName,FTShpCode,FTShpName,FTPosCode,FTTpdStart,FTTpdStop,FNXshBillQTY,FCXshGrand'
		SET @tSQL	+=' )'
		SET @tSQL	+=' SELECT '''+@tComName+''' AS FTComName,'''+@tRptCode+''' AS FTRptCode,'''+@tUsrSession+''' AS FTUsrSession,'
		SET @tSQL	+=' TLS.FTBchCode,TLS.FTBchName,TLS.FTShpCode,TLS.FTShpName,TLS.FTPosCode,TLS.FTTPdStart,TLS.FTTPdStop, '
		SET @tSQL	+=' ISNULL(MIS.FNXshBillQTY,0) AS FNXshBillQTY,ISNULL(MIS.FCXshGrand,0) AS  FCXshGrand'
		SET @tSQL	+=' FROM( SELECT TPD.*, GHD.*'
		SET @tSQL	+=' FROM ( SELECT * , SUBSTRING(FTTPdStart,1,2)  AS FTTpdHours'
		SET @tSQL	+=' FROM VCN_TimePeriod ) TPD'
		SET @tSQL	+=' CROSS JOIN ( SELECT DISTINCT SHD.FTBchCode,SDT.FTShpCode,SHD.FTPosCode,BCH.FTBchName,SHP.FTShpName'
		SET @tSQL	+=' FROM TRTTSalHD SHD WITH(NOLOCK)'
		SET @tSQL	+=' LEFT JOIN TRTTSalDT SDT WITH(NOLOCK) ON SHD.FTXshDocNo = SDT.FTXshDocNo'
		SET @tSQL	+=' LEFT JOIN TCNMBranch_L BCH ON SHD.FTBchCode = BCH.FTBchCode AND BCH.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' '
		SET @tSQL	+=' LEFT JOIN TCNMShop_L SHP ON SDT.FTShpCode = SHP.FTShpCode AND SHP.FNLngID = '''+CAST(@nLngID AS VARCHAR(10))+''' ) GHD'
		SET @tSQL	+=' ) TLS'
		SET @tSQL	+=' LEFT JOIN ( SELECT SHD.FTBchCode,SDT.FTShpCode,SHD.FTPosCode,'
		SET @tSQL	+=' SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),12,2) AS FDXshDocTime,'
		SET @tSQL	+=' COUNT(SHD.FTXshDocNo) AS FNXshBillQTY,'
		SET @tSQL	+=' SUM(SHD.FCXshGrand) AS FCXshGrand'
		SET @tSQL	+=' FROM TRTTSalHD SHD WITH(NOLOCK)'
		SET @tSQL	+=' LEFT JOIN TRTTSalDT SDT WITH(NOLOCK) ON SHD.FTXshDocNo = SDT.FTXshDocNo'
		SET @tSQL	+=' WHERE SHD.FTXshStaDoc = 1'
		SET @tSQL	+= @tSQL2
		SET @tSQL	+=' GROUP BY SHD.FTBchCode, SDT.FTShpCode,SHD.FTPosCode,SUBSTRING(CONVERT(VARCHAR(19),SHD.FDXshDocDate,121),12,2)'
		SET @tSQL	+=' ) MIS ON TLS.FTBchCode = MIS.FTBchCode AND TLS.FTShpCode = MIS.FTShpCode AND TLS.FTTpdHours = MIS.FDXshDocTime '
		SET @tSQL   +=' LEFT JOIN TCNMShop SHP_F ON TLS.FTShpCode = SHP_F.FTShpCode AND TLS.FTBchCode = SHP_F.FTBchCode '

		PRINT(@tWhereFilter)
		SET @tSQL	+= @tWhereFilter
		PRINT(@tSQL)

		EXECUTE(@tSQL)

		RETURN SELECT * FROM TRPTRTTimeDepositTmp WHERE FTComName = ''+ @tComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
END TRY
BEGIN CATCH
	SET @FNResult= -1
	PRINT @tSql
END CATCH

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxTopUp]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxTopUp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxTopUp] AS' 
END
GO

ALTER PROCEDURE [dbo].[SP_RPTxTopUp]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptUserIdF Varchar(30),
	@ptUserIdT Varchar(30),
	@ptCrdActF Varchar(1), --ʶҹкѵÍ
	@ptCrdActT Varchar(1),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID À҉ҍ
-- @tRptName ªר̓҂§ҹ
-- @tRptName ªר̓҂§ҹ
-- @pnCrdF ¨ҡºѵà
-- @pnCrdT ¶֧ˁ҂ŢºѵÍ
-- @ptUserIdF ¨ҡËъ¾¹ѡ§ҹ,
-- @ptUserIdT ¶֧Ëъ¾¹ѡ§ҹ,
 --@ptCrdActF Varchar(5), --»Ð7ºѵÍ
 --@ptCrdActT Varchar(5),
-- @ptDocDateF ¨ҡǑ¹·ը
-- @ptDocDateT ¶֧Ǒ¹·ը
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tUserIdF Varchar(30)
	DECLARE @tUserIdT Varchar(30)
	DECLARE @tCrdActF Varchar(1) --»Ð7ºѵÍ
	DECLARE @tCrdActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'TopUp'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tUserIdF = '2019030551'
	--SET @tUserIdT = '2019030800'
	--SET @tCrdActF = '1'
	--SET @tCrdActT = '3'
	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tUserIdF =  @ptUserIdF
	SET @tUserIdT =  @ptUserIdT
	SET @tCrdActF = @ptCrdActF
	SET @tCrdActT = @ptCrdActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤蒣˩ Paraleter ¡óՠT ໧¹¤蒇蒧˃׍ null
	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tCrdT = null OR @tCrdT =''
	BEGIN
		SET @tCrdT = @tCrdF
	END 

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	if @tCrdActF = null 
	BEGIN
		SET @tCrdActF = ''
	END
	IF @tCrdActT = null or @tCrdActF = ''
	BEGIN 
		SET @tCrdActT = @tCrdActF
	END 

	IF @tUserIdF = null
	BEGIN
		SET @tUserIdF = ''
	END

	IF @tUserIdT = null OR @tUserIdT = ''
	BEGIN
		SET @tUserIdT = @tUserIdF
	END

	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ź¢鍁م Temp ¢ͧःרͧ·ը¨кѹ·֡¢́مŧ Temp
	SET @tSQL = 'INSERT INTO TFCTRptCrdTmp' 
	SET @tSQL +='('
	SET @tSQL +='FTComName,FTRptName,FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTTxnDocNoRef,FTCrdCode,FDCrdExpireDate,FTCdtRmk,FTCrdName,'
	SET @tSQL +='FTCrdStaActive,FTCrdHolderID,FTUsrName,FCTxnCrdValue,FCTxnValue,FCTxnValAftTrans,FTCtyName,FTDptName'
	SET @tSQL +=')'
	SET @tSQL +=' SELECT '''+ @nComName + '''  AS FTComName, '''+ @tRptName +'''AS FTRptName,'
	SET @tSQL +='FTTxnPosCode,FDTxnDocDate,FTTxnDocType,FTTxnDocNoRef,FTCrdCode,FDCrdExpireDate,FTCdtRmk,FTCrdName,'
	SET @tSQL +='FTCrdStaActive,FTCrdHolderID,FTUsrName,FCTxnCrdValue,FCTxnValue,FCTxnValAftTrans,FTCtyName,FTDptName'
	SET @tSQL +=' FROM'
		SET @tSQL +=' ('
		 SET @tSQL +=' SELECT A.FTTxnPosCode,A.FDTxnDocDate,A.FTTxnDocType,A.FTTxnDocNoRef,A.FTCrdCode,CRDX.FDCrdExpireDate,A.FTCdtRmk,CRDL.FTCrdName,'
		 SET @tSQL +=' CTYL.FTCtyName,DPL.FTDptName,CRD.FTCrdStaActive, CRD.FTCrdHolderID,TOPHD.FTUsrName,A.FCTxnCrdValue,A.FCTxnValue,A.FCTxnCrdValue + A.FCTxnValue AS FCTxnValAftTrans'
		 SET @tSQL +=' FROM'
			SET @tSQL +=' ('
 			 SET @tSQL +=' SELECT ISNULL(FTTxnPosCode, ''N/A'') AS FTTxnPosCode, FDTxnDocDate, FTCrdCode, FCTxnValue, '''' AS FTCdtRmk, FTTxnDocType, FTTxnDocNoRef, FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdHis AS CHIS WITH (NOLOCK)'
			 SET @tSQL += ' WHERE 1=1'

			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
			 	SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END
 
 			 IF (@tDocDateF <> '' AND @tDocDateT <> '')
 			 BEGIN
			 	SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			 END

			 SET @tSQL +=' UNION ALL'
			 SET @tSQL +=' SELECT ISNULL(CT.FTTxnPosCode, ''N/A'') AS FTTxnPosCode,CT.FDTxnDocDate,CT.FTCrdCode,CT.FCTxnValue,'''' AS FTCdtRmk, CT.FTTxnDocType,' 
			 SET @tSQL +=' CT.FTTxnDocNoRef, CT.FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdTopUp AS CT WITH (NOLOCK) INNER JOIN'
			 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS CTHD WITH (NOLOCK) ON CT.FTTxnDocNoRef = CTHD.FTCthDocNo'
			 SET @tSQL += ' WHERE 1=1'
			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
				 SET @tSQL +=' AND CT.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END

			 IF (@tDocDateF <> '' AND @tDocDateT <> '')
			 BEGIN
				 SET @tSQL +=' AND CONVERT(VARCHAR(10),CT.FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			 END

			SET @tSQL +=' ) AS A LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS TOPHD WITH (NOLOCK) ON A.FTTxnDocNoRef = TOPHD.FTCthDocNo LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON A.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCardType_L AS CTYL WITH (NOLOCK) ON CRD.FTCtyCode = CTYL.FTCtyCode AND CTYL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRDX WITH (NOLOCK) ON A.FTCrdCode = CRDX.FTCrdCode'
		 SET @tSQL +=' WHERE (A.FTTxnDocType IN (''1'',''5''))'
		SET @tSQL +=' ) TopUp'
		SET @tSql += ' WHERE 1=1'
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		IF @tUserIdF <> '' AND @tUserIdT <> ''
		BEGIN
			SET @tSQL += ' AND FTCrdHolderID BETWEEN ''' + @tUserIdF + ''' AND ''' + @tUserIdT +''''
		END

		IF @tCrdActF <> '' AND @tCrdActT <> ''
		BEGIN
			SET  @tSQL += ' AND FTCrdStaActive BETWEEN '''+ @tCrdActF +''' AND '''+ @tCrdActT +''''
		END  
	--PRINT @tSQL
	execute(@tSQL)
	
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxTransferCardInfo]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxTransferCardInfo]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxTransferCardInfo] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxTransferCardInfo] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdTypeOF Varchar(5), --ประเภทบัตรเดิม
	@ptCrdTypeOT Varchar(5),
	@ptCrdTypeNF Varchar(5), --ประเภทบัตรใหม่
	@ptCrdTypeNT Varchar(5),
	@ptCrdOF Varchar(30), --หมายเลขบัตรเดิม
	@ptCrdOT Varchar(30),
	@ptCrdNF Varchar(30), --หมายเลขบัตรเดิมใหม่
	@ptCrdNT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/06/2019
-- @pnLngID ภาษา
-- @pnComName
-- @ptRptName
-- @ptCrdTypeOF --ประเภทบัตรเดิม
-- @ptCrdTypeOT 
-- @ptCrdTypeNF  --ประเภทบัตรใหม่
-- @ptCrdTypeNT 
-- @ptCrdOF  --หมายเลขบัตรเดิม
-- @ptCrdOT 
-- @ptCrdNF  --หมายเลขบัตรเดิมใหม่
-- @ptCrdNT 
-- @ptDocDateF 
-- @ptDocDateT 
--------------------------------------
BEGIN TRY
	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)

	--FTCtyCode
	DECLARE @tCrdTypeOF Varchar(5) --ประเภทบัตรเดิม
	DECLARE @tCrdTypeOT Varchar(5)
	DECLARE @tCrdTypeNF Varchar(5) --ประเภทบัตรใหม่
	DECLARE @tCrdTypeNT Varchar(5)

	DECLARE @tCrdOF Varchar(30) --หมายเลขบัตรเดิม
	DECLARE @tCrdOT Varchar(30)

	DECLARE @tCrdNF Varchar(30) --หมายเลขบัตรเดิมใหม่
	DECLARE @tCrdNT Varchar(30)


	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'TransferCardInfo'

	--SET @tCrdTypeOF = '' --ประเภทบัตรเดิม
	--SET @tCrdTypeOT = ''
	--SET @tCrdTypeNF = '' --ประเภทบัตรใหม่
	--SET @tCrdTypeNT =''

	--SET @tCrdOF ='C10002' --หมายเลขบัตรเดิม
	--SET @tCrdOT ='C10025' 

	--SET @tCrdNF ='CRD12451' --หมายเลขบัตรเดิมใหม่
	--SET @tCrdNT ='CRD12474'

	--SET @tDocDateF ='2019-03-01'
	--SET @tDocDateT ='2019-04-30'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdTypeOF = @ptCrdTypeOF --ประเภทบัตรเดิม
	SET @tCrdTypeOT = @ptCrdTypeOT
	SET @tCrdTypeNF = @ptCrdTypeNF --ประเภทบัตรใหม่
	SET @tCrdTypeNT = @ptCrdTypeNT

	SET @tCrdOF =@ptCrdOF --หมายเลขบัตรเดิม
	SET @tCrdOT =@ptCrdOT 

	SET @tCrdNF =@ptCrdNF --หมายเลขบัตรเดิมใหม่
	SET @tCrdNT =@ptCrdNT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	IF @tCrdTypeOF = null
	BEGIN
		SET @tCrdTypeOF = ''
	END
	IF @tCrdTypeOT = null
	BEGIN
		SET @tCrdTypeOT = ''
	END
	IF @tCrdTypeOT = ''
	BEGIN
		SET @tCrdTypeOT = @tCrdTypeOF
	END
	
	IF @tCrdTypeNF = null
	BEGIN
		SET @tCrdTypeNF = ''
	END
	IF @tCrdTypeNF = null
	BEGIN
		SET @tCrdTypeNT = ''
	END
	IF @tCrdTypeNT = '' 
	BEGIN
		SET @tCrdTypeNT = @tCrdTypeNF
	END

	IF @tCrdOF = null
	BEGIN
		SET @tCrdOF  = ''
	END
	IF @tCrdOT = null
	BEGIN
		SET @tCrdOT  = ''
	END
	IF @tCrdOT = ''
	BEGIN
		SET @tCrdOT = @tCrdOF
	END

	IF @tCrdNF = null
	BEGIN
		SET @tCrdNF  = ''
	END
	IF @tCrdNT = null
	BEGIN
		SET @tCrdNT  = ''
	END
	IF @tCrdNT = ''
	BEGIN
		SET @tCrdNT = @tCrdNF
	END 

	IF @tDocDateF = null
	BEGIN
		SET @tDocDateF  =''
	END
	IF @tDocDateT = null
	BEGIN
		SET @tDocDateT  =''
	END
	IF @tDocDateT = ''
	BEGIN
		SET @tDocDateT = @tDocDateF
	END

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	SET @tSql1 = ' WHERE 1=1 '

	IF @tCrdTypeOF <> '' AND @tCrdTypeOT <> ''
	BEGIN
		SET @tSql1 += ' AND CTL.FTCtyCode BETWEEN ''' +  @tCrdTypeOF + ''' AND '''+  @tCrdTypeOF +''''
	END

	IF @tCrdTypeNF <> '' AND @tCrdTypeNT <> ''
	BEGIN
		SET @tSql1 += ' AND CTL_N.FTCtyCode BETWEEN ''' +  @tCrdTypeNF + ''' AND '''+  @tCrdTypeNT +''''
	END
	
	IF @tCrdOF <> '' AND @tCrdOT <> ''
	BEGIN
		SET @tSql1 += ' AND VDT.FTCvdOldCode BETWEEN ''' +  @tCrdOF + ''' AND '''+  @tCrdOT +''''
	END

	IF @tCrdNF <> '' AND @tCrdNT <> ''
	BEGIN
		SET @tSql1 += ' AND VDT.FTCvdNewCode BETWEEN ''' +  @tCrdNF + ''' AND '''+  @tCrdNT +''''
	END	

	IF @tDocDateF <> '' AND @tDocDateT <> ''
	BEGIN
		SET @tSql1 += ' AND CONVERT(VARCHAR(10), VDT.FDCreateOn, 121)  BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END


	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp

	SET @tSql ='INSERT INTO TFCTRptCrdTmp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,FDDocDate, FTCvdOldCode,FTCvdNewCode, FTOldCtyName,  FTNewCtyName, FTCrdName, FTUsrName, FCOldCrdValue, FCNewCrdValue '
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + '''  AS FTComName,'''+ @tRptName +''' AS FTRptName,'
	--SELECT tComName AS 
	SET @tSql +=' FDDocDate, FTCvdOldCode,FTCvdNewCode, FTOldCtyName,  FTNewCtyName, FTCrdName, FTUsrName, FCOldCrdValue, FCNewCrdValue'
	SET @tSql +=' FROM'
	SET @tSql +=' (SELECT VHD.FTCvhDocType, VHD.FTCvhStaPrcDoc, VHD.FTCvhStaDoc, VDT.FTCvdStaCrd, VDT.FTBchCode, VDT.FTCvhDocNo, VDT.FNCvdSeqNo, VDT.FDCreateOn AS FDDocDate, '
	SET @tSql +=' USRL.FTUsrName, VDT.FTCvdOldCode,CTL.FTCtyCode AS FTOldCtyCode, CTL.FTCtyName AS FTOldCtyName, VDT.FTCvdNewCode, '
	SET @tSql +=' CTL_N.FTCtyName AS FTNewCtyName, CTL_N.FTCtyCode AS FTNewCtyCode, CRDL.FTCrdName, DPL.FTDptName, '
	SET @tSql +=' VDT.FCCvdOldBal AS FCOldCrdValue, CRD.FCCrdValue AS FCNewCrdValue'--, FNLngID'
	SET @tSql +=' FROM    dbo.TFNTCrdVoidHD AS VHD WITH (NOLOCK) INNER JOIN'
	SET @tSql +=' dbo.TFNTCrdVoidDT AS VDT WITH (NOLOCK) ON VHD.FTBchCode = VDT.FTBchCode AND VHD.FTCvhDocNo = VDT.FTCvhDocNo LEFT OUTER JOIN'

	SET @tSql +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON VDT.FTCvdOldCode = CRD.FTCrdCode LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'

	SET @tSql +=' dbo.TFNMCard AS CRD_N WITH (NOLOCK) ON VDT.FTCvdNewCode = CRD_N.FTCrdCode LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCard_L AS CRDL_N WITH (NOLOCK) ON CRD_N.FTCrdCode = CRDL_N.FTCrdCode  AND CRDL_N.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql +=' dbo.TFNMCardType_L AS CTL_N WITH (NOLOCK) ON CRD_N.FTCtyCode = CTL_N.FTCtyCode AND CTL_N.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'

	SET @tSql +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT OUTER JOIN'
	SET @tSql +=' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON VHD.FTCreateBy = USRL.FTUsrCode  AND USRL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
	SET @tSql += @tSql1
	SET @tSql +=' ) CrdTnf'
	--PRINT @tSql 
	execute(@tSql)
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	--EXECUTE @tSqlIns
END TRY

BEGIN CATCH 
 SET @FNResult= -1
 --print @tSql
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxUnExchangeBalance]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxUnExchangeBalance]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxUnExchangeBalance] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxUnExchangeBalance] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptExpDateF Varchar(10),--FDCrdExpireDate
	@ptExpDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @tRptName ชื่อรายงาน
-- @tRptName ชื่อรายงาน
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptExpDateF Varchar(10),--FDCrdExpireDate
-- @ptExpDateT Varchar(10)
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	--FDCrdExpireDate
	DECLARE @tExpDateF Varchar(10)
	DECLARE @tExpDateT Varchar(10)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'ExchangeBalance'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tExpDateF = '2046-10-18'
	--SET @tExpDateT = '9999-12-31'

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tExpDateF = @ptExpDateF
	SET @tExpDateT = @ptExpDateT
	SET @FNResult= 0

	SET @tExpDateF = CONVERT(VARCHAR(10),@tExpDateF,121)
	SET @tExpDateT = CONVERT(VARCHAR(10),@tExpDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
	IF @tCrdF = null
	BEGIN
		SET @tCrdF = ''
	END 

		--FDCrdExpireDate
	IF @tExpDateF = null
	BEGIN
		SET @tExpDateF =''
	END
	IF @tExpDateT = null
	BEGIN
		SET @tExpDateT = ''
	END
	IF @tExpDateT = ''
	BEGIN
		SET @tExpDateT = @tExpDateF
	END

	DELETE FROM TFCTRptCrdAnalysisTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
	SET @tSQL = 'INSERT INTO TFCTRptCrdAnalysisTmp' 
	SET @tSQL +='('
	SET @tSQL +='FTComName,FTRptName,FTCrdCode, FTCrdName, FTCtyName, FDCrdExpireDate, FTTxnDocType, FCTxnValue'
		SET @tSQL +=')'
	SET @tSQL +=' SELECT '''+ @nComName + '''  AS FTComName, '''+ @tRptName +'''AS FTRptName,'
	SET @tSQL +='FTCrdCode, FTCrdName, FTCtyName, FDCrdExpireDate, FTTxnDocType, FCTxnValue'
		SET @tSQL +=' FROM'
		SET @tSQL +=' ('
		 SET @tSQL +=' SELECT A.FTTxnPosCode,A.FDTxnDocDate,A.FTTxnDocType,A.FTTxnDocNoRef,A.FTCrdCode,CRDX.FDCrdExpireDate,A.FTCdtRmk,CRDL.FTCrdName,'
		 SET @tSQL +=' CTYL.FTCtyName,DPL.FTDptName,CRD.FTCrdStaActive, CRD.FTCrdHolderID,TOPHD.FTUsrName,A.FCTxnCrdValue,A.FCTxnValue,A.FCTxnCrdValue + A.FCTxnValue AS FCTxnValAftTrans'
		 SET @tSQL +=' FROM'
			SET @tSQL +=' ('
 			 SET @tSQL +=' SELECT ISNULL(FTTxnPosCode, ''N/A'') AS FTTxnPosCode, FDTxnDocDate, FTCrdCode, FCTxnValue, '''' AS FTCdtRmk, FTTxnDocType, FTTxnDocNoRef, FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdHis AS CHIS WITH (NOLOCK)'
			 SET @tSQL += ' WHERE 1=1'

			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
			 	SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END
 
 			 IF (@tExpDateF <> '' AND @tExpDateT <> '')
 			 BEGIN
			 	SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
			 END

			 SET @tSQL +=' UNION ALL'
			 SET @tSQL +=' SELECT ISNULL(CT.FTTxnPosCode, ''N/A'') AS FTTxnPosCode,CT.FDTxnDocDate,CT.FTCrdCode,CT.FCTxnValue,'''' AS FTCdtRmk, CT.FTTxnDocType,' 
			 SET @tSQL +=' CT.FTTxnDocNoRef, CT.FCTxnCrdValue'
			 SET @tSQL +=' FROM dbo.TFNTCrdTopUp AS CT WITH (NOLOCK) INNER JOIN'
			 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS CTHD WITH (NOLOCK) ON CT.FTTxnDocNoRef = CTHD.FTCthDocNo'
			 SET @tSQL += ' WHERE 1=1'
			 IF (@tCrdF <> '' AND @tCrdT <> '')
			 BEGIN
				 SET @tSQL +=' AND CT.FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			 END

			 IF (@tExpDateF <> '' AND @tExpDateT <> '')

			 BEGIN
				 SET @tSQL +=' AND CONVERT(VARCHAR(10),CT.FDTxnDocDate, 121) BETWEEN ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
			 END

			SET @tSQL +=' ) AS A LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNTCrdTopUpHD AS TOPHD WITH (NOLOCK) ON A.FTTxnDocNoRef = TOPHD.FTCthDocNo LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRD WITH (NOLOCK) ON A.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCardType_L AS CTYL WITH (NOLOCK) ON CRD.FTCtyCode = CTYL.FTCtyCode AND CTYL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
		 SET @tSQL +=' dbo.TFNMCard AS CRDX WITH (NOLOCK) ON A.FTCrdCode = CRDX.FTCrdCode'
		 SET @tSQL +=' WHERE (A.FTTxnDocType IN (''1'',''5''))'
		SET @tSQL +=' ) TopUp'
		SET @tSql += ' WHERE 1=1'
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSQL +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tExpDateF <> '' AND @tExpDateT <> '')
		BEGIN
			SET @tSQL +=' AND CONVERT(VARCHAR(10),FDTxnDocDate, 121) BETWEEN ''' + @tExpDateF + ''' AND ''' + @tExpDateT + ''''
		END
 
	--PRINT @tSQL
	execute(@tSQL)
	
	RETURN SELECT * FROM TFCTRptCrdAnalysisTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxUseCard1]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxUseCard1]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxUseCard1] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxUseCard1] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 06/06/2019
-- @pnLngID ภาษา
-- @tRptName ชื่อรายงาน
-- @tRptName ชื่อรายงาน
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'UseCard1'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

		IF @nLngID = null
		BEGIN
			SET @nLngID = 1
		END	
		--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
		IF @tCrdF = null
		BEGIN
			SET @tCrdF = ''
		END 

		IF @tDocDateF = null
		BEGIN 
			SET @tDocDateF = ''
		END

		IF @tCrdT = null OR @tCrdT =''
		BEGIN
			SET @tCrdT = @tCrdF
		END 

		IF @tDocDateT = null OR @tDocDateT =''
		BEGIN 
			SET @tDocDateT = @tDocDateF
		END


		SET @tSql1 = ' WHERE 1=1 '
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSql1 +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			SET @tSql2 = ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		
		--print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	 --SELECT        A.FTBchCode, A.FTTxnDocNoRef, A.FTShpCode, A.FTShpName, A.FTTxnPosCode, A.FTDptName, A.FTPosType, A.FNTxnID, A.FNTxnIDRef, A.FTTxnDocType, A.FTTxnStaOffLine, A.FTCrdCode, A.FTCtyName, 
	 --                        A.FTCtyCode, A.FTCrdHolderID, A.FTCrdStaActive, A.FDTxnDocDate, A.FDCrdExpireDate, A.FTBchCodeRef, A.FCTxnValue, A.FCTxnCrdValue, A.FCTxnCrdAftTrans, A.FTCrdName, A.FCCrdBalance, A.CardExpValue, 
	 --                        A.FTTxnDocTypeName, A.FNLngID, A.FNDplLngID, A.FNCtyLngID, A.FNShpLngID, A.FTUsrCreate, A.FTDocLastUpdBy, 
	 --                        CASE WHEN A.FTTxnDocType = 3 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 4 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 5 THEN A.FTTxnPosCode ELSE USRL.FTUsrName END AS FTDocCreateBy,
	 --                         ISNULL(USRL.FNLngID, 1) AS FNUsrLngID
    --DROP TABLE #TFCTRptCrdTemp
    SELECT * INTO #TFCTRptCrdTemp FROM TFCTRptCrdTmp WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''
	TRUNCATE TABLE #TFCTRptCrdTemp
	--SELECT * FROM #TFCTRptCrdTmp

	SET @tSql ='INSERT INTO #TFCTRptCrdTemp WITH (ROWLOCK) ' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptName,FTTxndocType, FTCrdCode, FTCrdName, FTShpCode, FTShpName, '
	SET @tSql +=' FTTxnPosCode, FTPosType, FTTxnDocRefNo, FTTxnDocNoRef, FTTxnDocTypeName,FNTxnID,FNTxnIDRef, '
	SET @tSql +=' FTDocCreateBy, FDTxnDocDate, FCCrdBalance, FNLngID, FCTxnValue'
	SET @tSql +=' ) '--SELECT * FROM #TFCTRptCrdTmp WITH (NOLOCK)'
	SET @tSql += ' SELECT '''+ @nComName + '''  AS FTComName, '''+ @tRptName +'''AS FTRptName,'
	SET @tSql += ' A.FTTxnDocType,A.FTCrdCode, A.FTCrdName,A.FTShpCode,A.FTShpName,A.FTTxnPosCode,A.FTPosType,'''' AS FTTxnDocRefNo, A.FTTxnDocNoRef,A.FTTxnDocTypeName,'
	SET @tSql += ' A.FNTxnID,A.FNTxnIDRef,'
	SET @tSql += ' CASE WHEN A.FTTxnDocType = 3 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 4 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 5 THEN A.FTTxnPosCode ELSE USRL.FTUsrName END AS FTDocCreateBy,'
	SET @tSql += ' A.FDTxnDocDate,'
	SET @tSql += ' A.FCCrdBalance,''' +  CAST(@nLngID  AS VARCHAR(10)) + ''' AS FNLngID, A.FCTxnValue '
	SET @tSql += ' FROM (SELECT  CRDHIS.FTTxnDocNoRef, CRDHIS.FTShpCode, CRDHIS.FTShpName, CRDHIS.FTTxnPosCode,  CRDHIS.FTPosType, '
	SET @tSql += ' CRDHIS.FTTxnDocType, CRDHIS.FTCrdCode,    CRDHIS.FTCrdStaActive, CRDHIS.FDTxnDocDate, '
	SET @tSql += ' CRDHIS.FDCrdExpireDate,  CRDHIS.FCTxnValue,  CRDHIS.FTCrdName, CRDHIS.FCCrdBalance, '
	SET @tSql += ' CRDHIS.FTTxnDocTypeName ,'
	SET @tSql += ' CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
	SET @tSql += ' ISNULL(TOPUP.FTCreateBy, '''') + ISNULL(VOID.FTCreateBy, '''') + ISNULL(IMP.FTCreateBy, '''') + ISNULL(SHIFT.FTCreateBy, '''') AS FTUsrCreate'
	SET @tSql += ' FROM  (SELECT  C.FTBchCode, ISNULL(C.FTTxnDocNoRef, ''N/A'') AS FTTxnDocNoRef, C.FTShpCode, SHPL.FTShpName, C.FTTxnPosCode,  '
	SET @tSql += ' CASE WHEN POS.FTPosType = 1 THEN ''จุดขาย/ร้านค้า;Pos/Store'' WHEN POS.FTPosType = 2 THEN ''จุดเติมเงิน;Topup'' WHEN POS.FTPosType = 3 THEN ''จุดตรวจสอบมูลค่า;Check Point'' ELSE ''ระบบหลังบ้าน;Back Office'''
	SET @tSql += ' END AS FTPosType,  C.FTTxnDocType,  C.FTCrdCode,  '
	SET @tSql += ' CRD.FTCrdStaActive, C.FNTxnID,C.FNTxnIDRef,'
	SET @tSql += ' CONVERT(VARCHAR(19), C.FDTxnDocDate, 121) AS FDTxnDocDate, ISNULL(CONVERT(VARCHAR(19), CRD.FDCrdExpireDate, 121), ''N/A'') AS FDCrdExpireDate, '
	SET @tSql += '  ISNULL(C.FCTxnValue, 0) AS FCTxnValue, ISNULL(C.FCTxnCrdValue, 0) AS FCTxnCrdValue,  ISNULL(CRDL.FTCrdName, ''N/A'') AS FTCrdName, ISNULL(CRD.FCCrdValue, 0) AS FCCrdBalance, '

	SET @tSql += ' CASE WHEN C.FTTxnDocType = 1 THEN ''เติมเงิน;Topup'' WHEN C.FTTxnDocType = ''2'' THEN ''ยกเลิกเติมเงิน;Cancel Topup'' WHEN C.FTTxnDocType = ''3'' THEN ''ตัดจ่าย/ขาย;Sale'' WHEN C.FTTxnDocType'
	SET @tSql += ' = ''4'' THEN ''ยกเลิกตัดจ่าย;Cancel Sale'' WHEN C.FTTxnDocType = ''5'' THEN ''แลกคืน;Pay Back'' WHEN C.FTTxnDocType = ''6'' THEN ''เบิกบัตร;Card Requisition'' WHEN C.FTTxnDocType = ''7'' THEN ''คืนบัตร;Card Return'''
	SET @tSql += ' WHEN C.FTTxnDocType = ''8'' THEN ''โอนเงินออก'' WHEN C.FTTxnDocType = ''9'' THEN ''โอนเงินเข้า'' WHEN C.FTTxnDocType = ''10'' THEN ''ล้างบัตร;Clear Card'' WHEN C.FTTxnDocType = ''11'' THEN ''ปรับสถานะ;Card Change Status'''
	SET @tSql += ' WHEN C.FTTxnDocType = ''12'' THEN ''บัตรใหม่;New Card'' ELSE ''ไม่ระบุ;Unknown'' END AS FTTxnDocTypeName'
	SET @tSql += ' FROM  (SELECT FTBchCode, FTTxnDocNoRef,  FTTxnDocType,  FTCrdCode, FDTxnDocDate,  FCTxnValue, FCTxnCrdValue, FTShpCode, '
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef '
	SET @tSql += ' FROM  dbo.TFNTCrdHis WITH (NOLOCK) '
	SET @tSql += @tSql1

	SET @tSql += ' UNION ALL '
	SET @tSql += ' SELECT FTBchCode, FTTxnDocNoRef,  FTTxnDocType,  FTCrdCode, FDTxnDocDate, FCTxnValue, FCTxnCrdValue, FTShpCode, '
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef '
	SET @tSql += ' FROM  dbo.TFNTCrdHisBch WITH (NOLOCK)'
	SET @tSql += @tSql1

	SET @tSql += ' UNION ALL '
	SET @tSql += ' SELECT FTBchCode, FTTxnDocNoRef,   FTTxnDocType,  FTCrdCode, FDTxnDocDate,  FCTxnValue, FCTxnCrdValue, FTShpCode, '
	SET @tSql += ' FTTxnPosCode ,FNTxnID,FNTxnIDRef '
	SET @tSql += ' FROM  dbo.TFNTCrdTopUp WITH (NOLOCK)'
	SET @tSql += @tSql1
                                                              
	SET @tSql += ' UNION ALL'
	SET @tSql += ' SELECT FTBchCode, FTTxnDocNoRef,   FTTxnDocType,  FTCrdCode, FDTxnDocDate,  FCTxnValue, FCTxnCrdValue, FTShpCode, '
	SET @tSql += ' FTTxnPosCode,FNTxnID,FNTxnIDRef  '
	SET @tSql += ' FROM dbo.TFNTCrdSale WITH (NOLOCK)'
	SET @tSql += @tSql1

	SET @tSql += ' ) AS C LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNMCard AS CRD WITH (NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNMCard_L AS CRDL WITH (NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMPos AS POS WITH (NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
	--SET @tSql += ' dbo.TFNMCardType_L AS CTL WITH (NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMUsrDepart_L AS DPL WITH (NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMShop_L AS SHPL WITH (NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
	SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate, 121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
	SET @tSql += ' FROM   dbo.TFNMCard WITH (NOLOCK)'
	SET @tSql += ' GROUP BY FDCrdExpireDate) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate, 121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate, 121)) AS CRDHIS LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdTopUpHD AS TOPUP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = TOPUP.FTCthDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdVoidHD AS VOID WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = VOID.FTCvhDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdImpHD AS IMP WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = IMP.FTCihDocNo LEFT OUTER JOIN'
	SET @tSql += ' dbo.TFNTCrdShiftHD AS SHIFT WITH (NOLOCK) ON CRDHIS.FTTxnDocNoRef = SHIFT.FTCshDocNo) AS A LEFT OUTER JOIN'
	SET @tSql += ' dbo.TCNMUser_L AS USRL WITH (NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
	--SET @tSql += ' IN TO TFCTRptCrdTmp1'
	--PRINT @tSql
	execute(@tSql)

	SET @tSqlIns = 'INSERT INTO TFCTRptCrdTmp ('
	SET @tSqlIns +=' FTComName,FTRptName,FTTxndocType, FTCrdCode, FTCrdName, FTShpCode, FTShpName,'
	SET @tSqlIns +=' FTTxnPosCode, FTPosType, FTTxnDocRefNo, FTTxnDocNoRef, FTTxnDocTypeName,'
	SET @tSqlIns +=' FTDocCreateBy, FDTxnDocDate, FCCrdBalance, FNLngID, FCTxnValue'
	SET @tSqlIns +=' )'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,FTTxndocType, FTCrdCode, FTCrdName, FTShpCode, FTShpName,'
	SET @tSqlIns +=' FTTxnPosCode, FTPosType, FTDocRef AS FTTxnDocRefNo, FTTxnDocNoRef, FTTxnDocTypeName,'
	SET @tSqlIns +=' FTDocCreateBy, FDTxnDocDate, FCCrdBalance, FNLngID, FCTxnValue'
	SET @tSqlIns +=' FROM #TFCTRptCrdTemp'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef , R2.FTTxnDocNoRef AS FTDocRef FROM ('
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHis WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHisBch WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdTopUp WHERE ISNULL(FNTxnIDRef,'''' ) <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' ) R1'
	SET @tSqlIns +=' INNER JOIN ('
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHis'
	SET @tSqlIns +=' WHERE 1 = 1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHisBch'
	SET @tSqlIns +=' WHERE 1 = 1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdTopUp'
	SET @tSqlIns +=' WHERE 1 = 1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1 = 1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate, 121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' ) R2 ON R1.FNTxnIDRef = R2.FNTxnID  ) REF ON REF.FNTxnIDRef = #TFCTRptCrdTemp.FNTxnIDRef'
	--PRINT @tSqlIns
	execute(@tSqlIns)
	
	--PRINT @tSql
	DROP TABLE #TFCTRptCrdTemp
--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxUseCard2]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxUseCard2]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxUseCard2] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxUseCard2] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptName Varchar(100),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptCrdF Varchar(30),
	@ptCrdT Varchar(30),
	@ptUserIdF Varchar(30),
	@ptUserIdT Varchar(30),
	@ptCrdActF Varchar(1), --สถานะบัตร
	@ptCrdActT Varchar(1),
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 19/06/2019
-- @pnLngID ภาษา
-- @ptRptName ชื่อรายงาน
-- @ptRptName ชื่อรายงาน
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @pnCrdF จากบัตร 
-- @pnCrdT ถึงหมายเลขบัตร
-- @ptUserIdF จากรหัสพนักงาน,
-- @ptUserIdT ถึงรหัสพนักงาน,
 --@ptCrdActF Varchar(5), --ประเภทบัตร
 --@ptCrdActT Varchar(5),
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult
--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptName Varchar(100)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tCrdF Varchar(30)
	DECLARE @tCrdT Varchar(30)
	DECLARE @tUserIdF Varchar(30)
	DECLARE @tUserIdT Varchar(30)
	--FTCtyCode
	DECLARE @tCrdActF Varchar(1) --ประเภทบัตร
	DECLARE @tCrdActT Varchar(1)
	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'UseCard2'
	--SET @tBchF = '00032'
	--SET @tBchT = '00034'
	--SET @tCrdF = '2019030500'
	--SET @tCrdT = '2019030600'
	--SET @tUserIdF = '2019030551'
	--SET @tUserIdT = '2019030800'
	--SET @tCrdActF = '1'
	--SET @tCrdActT = '3'
	--SET @tDocDateF = '2019-01-01'
	--SET @tDocDateT = '2019-06-30'

	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'UseCard2'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tCrdF = ''
	--SET @tCrdT = ''
	--SET @tUserIdF = ''
	--SET @tUserIdT = ''
	--SET @tCrdActF = ''
	--SET @tCrdActT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tRptName = @ptRptName
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tCrdF = @ptCrdF
	SET @tCrdT = @ptCrdT
	SET @tUserIdF =  @ptUserIdF
	SET @tUserIdT =  @ptUserIdT
	SET @tCrdActF = @ptCrdActF
	SET @tCrdActT = @ptCrdActT
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0
	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

		IF @nLngID = null
		BEGIN
			SET @nLngID = 1
		END	
		--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null
		IF @tBchF = null
		BEGIN
			SET @tBchF = ''
		END
		IF @tBchT = null OR @tBchT = ''
		BEGIN
			SET @tBchT = @tBchF
		END

		IF @tCrdF = null
		BEGIN
			SET @tCrdF = ''
		END 

		IF @tDocDateF = null
		BEGIN 
			SET @tDocDateF = ''
		END

		IF @tCrdT = null OR @tCrdT =''
		BEGIN
			SET @tCrdT = @tCrdF
		END 

		IF @tDocDateT = null OR @tDocDateT =''
		BEGIN 
			SET @tDocDateT = @tDocDateF
		END

		if @tCrdActF = null 
		BEGIN
			SET @tCrdActF = ''
		END
		IF @tCrdActT = null or @tCrdActF = ''
		BEGIN 
			SET @tCrdActT = @tCrdActF
		END 

		IF @tUserIdF = null
		BEGIN
			SET @tUserIdF = ''
		END

		IF @tUserIdT = null OR @tUserIdT = ''
		BEGIN
			SET @tUserIdT = @tUserIdF
		END

		SET @tSql1 = ' WHERE 1=1 '

		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END
		
		IF (@tCrdF <> '' AND @tCrdT <> '')
		BEGIN
			SET @tSql1 +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
		END

		IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
		END
		
		--print @tSql1
		--DECLARE @nComName Varchar(100)
		--SET @nComName = 'Ada062'
	DELETE FROM TFCTRptCrdTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptName = '' + @tRptName + '' --ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
	 --SELECT        A.FTBchCode, A.FTTxnDocNoRef, A.FTShpCode, A.FTShpName, A.FTTxnPosCode, A.FTDptName, A.FTPosType, A.FNTxnID, A.FNTxnIDRef, A.FTTxnDocType, A.FTTxnStaOffLine, A.FTCrdCode, A.FTCtyName, 
	 --                        A.FTCtyCode, A.FTCrdHolderID, A.FTCrdStaActive, A.FDTxnDocDate, A.FDCrdExpireDate, A.FTBchCodeRef, A.FCTxnValue, A.FCTxnCrdValue, A.FCTxnCrdAftTrans, A.FTCrdName, A.FCCrdBalance, A.CardExpValue, 
	 --                        A.FTTxnDocTypeName, A.FNLngID, A.FNDplLngID, A.FNCtyLngID, A.FNShpLngID, A.FTUsrCreate, A.FTDocLastUpdBy, 
	 --                        CASE WHEN A.FTTxnDocType = 3 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 4 THEN A.FTTxnPosCode WHEN A.FTTxnDocType = 5 THEN A.FTTxnPosCode ELSE USRL.FTUsrName END AS FTDocCreateBy,
	 --                         ISNULL(USRL.FNLngID, 1) AS FNUsrLngID
    --DROP TABLE #TFCTRptCrdTemp
    SELECT * INTO #TFCTRptCrdTemp FROM TFCTRptCrdTmp WHERE FTComName = '' + @nComName + ''  AND FTRptName = '' + @tRptName + ''
	TRUNCATE TABLE #TFCTRptCrdTemp
	--SELECT * FROM #TFCTRptCrdTmp

	SET @tSql ='INSERT INTO #TFCTRptCrdTemp WITH(ROWLOCK)' --เพิ่มข้อมูลใหม่ที่ Contion ลง Temp
	SET @tSql +=' ('
	SET @tSql +='FTComName,FTRptName,'
	SET @tSql +='FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSql += 'FTBchCode,FTBchName,'
	SET @tSql +='FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,FNTxnIDRef,'
--	SET @tSql +='FTDocCreateBy,'
	SET @tSql +='FDTxnDocDate,FCCrdBalance,FNLngID,FCTxnValue'
	SET @tSql +=') '--SELECT * FROM #TFCTRptCrdTmp WITH(NOLOCK)'
	SET @tSql += 'SELECT '''+ @nComName + ''' AS FTComName, '''+ @tRptName +''' AS FTRptName,'
	SET @tSql += 'A.FTTxnDocType,A.FTCrdCode,A.FTCrdName,A.FTCtyName,A.FTCrdHolderID,A.FTShpCode,A.FTShpName,A.FTCrdStaActive,A.FTDptName,A.FCTxnCrdAftTrans,'
	SET @tSql += 'A.FTBchCode,A.FTBchName,'
	SET @tSql += 'A.FTTxnPosCode,A.FTPosType,'''' AS FTTxnDocRefNo,A.FTTxnDocNoRef,A.FTTxnDocTypeName,A.FNTxnID,A.FNTxnIDRef,'

	SET @tSql += 'A.FDTxnDocDate,A.FCCrdBalance,''' +  CAST(@nLngID AS VARCHAR(10)) + ''' AS FNLngID, A.FCTxnValue'
	SET @tSql += ' FROM'
		SET @tSql += '('
		 SET @tSql += 'SELECT CRDHIS.FTTxnDocNoRef,CRDHIS.FTShpCode,CRDHIS.FTShpName,CRDHIS.FTTxnPosCode, CRDHIS.FTPosType,'
		 SET @tSql += 'CRDHIS.FTTxnDocType,CRDHIS.FTCrdCode,CRDHIS.FTCrdStaActive,CRDHIS.FDTxnDocDate,'
		 SET @tSql += 'CRDHIS.FDCrdExpireDate,CRDHIS.FCTxnValue,CRDHIS.FTCrdName,CRDHIS.FCCrdBalance,'
		 SET @tSql += 'CRDHIS.FTTxnDocTypeName,'
		 SET @tSql += 'CRDHIS.FNTxnID,CRDHIS.FNTxnIDRef,'
		 SET @tSql += 'ISNULL(TOPUP.FTCreateBy,'''') + ISNULL(VOID.FTCreateBy,'''') + ISNULL(IMP.FTCreateBy,'''') + ISNULL(SHIFT.FTCreateBy,'''') AS FTUsrCreate,'
		 SET @tSql += 'CRDHIS.FTCtyName,CRDHIS.FTCrdHolderID,CRDHIS.FTDptName,CRDHIS.FCTxnCrdAftTrans,ISNULL(CRDHIS.FTBchCode,'''') AS FTBchCode,ISNULL(CRDHIS.FTBchName,'''') AS FTBchName'
		 SET @tSql += ' FROM'
			SET @tSql += '('
			 SET @tSql += 'SELECT CTL.FTCtyName,CRD.FTCrdHolderID,ISNULL(DPL.FTDptName,'''') AS FTDptName,C.FTBchCode,Bch_L.FTBchName,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ISNULL(C.FCTxnCrdValue, 0)+ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''2'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''3'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''4'' THEN ISNULL(C.FCTxnCrdValue, 0)+ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' WHEN ''5'' THEN ISNULL(C.FCTxnCrdValue, 0)-ISNULL(C.FCTxnValue, 0)' 
				SET @tSql += ' ELSE C.FCTxnCrdValue' 
			 SET @tSql += ' END AS FCTxnCrdAftTrans,'
			 SET @tSql += 'ISNULL(C.FTTxnDocNoRef,'''') AS FTTxnDocNoRef,C.FTShpCode,SHPL.FTShpName,C.FTTxnPosCode,'
		     SET @tSql += 'CASE POS.FTPosType'
				SET @tSql += ' WHEN ''1'' THEN ''จุดขาย/ร้านค้า;Pos/Store''' 
				SET @tSql += ' WHEN ''2'' THEN ''จุดเติมเงิน;Topup'''
				SET @tSql += ' WHEN ''3'' THEN ''จุดตรวจสอบมูลค่า;Check Point'''
				SET @tSql += ' ELSE ''ระบบหลังบ้าน;Back Office'''
			 SET @tSql += ' END AS FTPosType,C.FTTxnDocType,C.FTCrdCode,CRD.FTCrdStaActive,C.FNTxnID,C.FNTxnIDRef,'
			 SET @tSql += 'CONVERT(VARCHAR(19),C.FDTxnDocDate,121) AS FDTxnDocDate,ISNULL(CONVERT(VARCHAR(19),CRD.FDCrdExpireDate,121),'''') AS FDCrdExpireDate,'
	         SET @tSql += 'ISNULL(C.FCTxnValue,0) AS FCTxnValue,ISNULL(C.FCTxnCrdValue,0) AS FCTxnCrdValue,ISNULL(CRDL.FTCrdName,'''') AS FTCrdName,ISNULL(CRD.FCCrdValue,0) AS FCCrdBalance,'
			 SET @tSql += 'CASE C.FTTxnDocType' 
				SET @tSql += ' WHEN ''1'' THEN ''เติมเงิน;Topup'''
				SET @tSql += ' WHEN ''2'' THEN ''ยกเลิกเติมเงิน;Cancel Topup'''
				SET @tSql += ' WHEN ''3'' THEN ''ตัดจ่าย/ขาย;Sale'''
				SET @tSql += ' WHEN ''4'' THEN ''ยกเลิกตัดจ่าย;Cancel Sale'''
				SET @tSql += ' WHEN ''5'' THEN ''แลกคืน;Pay Back'''
				SET @tSql += ' WHEN ''6'' THEN ''เบิกบัตร;Card Requisition'''
				SET @tSql += ' WHEN ''7'' THEN ''คืนบัตร;Card Return'''
				SET @tSql += ' WHEN ''8'' THEN ''โอนเงินออก'''
				SET @tSql += ' WHEN ''9'' THEN ''โอนเงินเข้า'''
				SET @tSql += ' WHEN ''10'' THEN ''ล้างบัตร;Clear Card'''
				SET @tSql += ' WHEN ''11'' THEN ''ปรับสถานะ;Card Change Status'''
				SET @tSql += ' WHEN ''12'' THEN ''บัตรใหม่;New Card'''
				SET @tSql += ' ELSE ''ไม่ระบุ;Unknown'''
			 SET @tSql += ' END AS FTTxnDocTypeName'
			 SET @tSql += ' FROM'
				SET @tSql += '('
				 SET @tSql += 'SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,FTTxnPosCode,FNTxnID,FNTxnIDRef'
				 SET @tSql += ' FROM TFNTCrdHis WITH(NOLOCK)'
				 SET @tSql += @tSql1

				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM .TFNTCrdHisBch WITH(NOLOCK)'
				SET @tSql += @tSql1

				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdTopUp WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tCrdF <> '' AND @tCrdT <> '')
				BEGIN
					SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
				--SET @tSql += @tSql1
                                                              
				SET @tSql += ' UNION ALL'
				SET @tSql += ' SELECT FTBchCode,FTTxnDocNoRef,FTTxnDocType,FTCrdCode,FDTxnDocDate,FCTxnValue,FCTxnCrdValue,FTShpCode,'
				SET @tSql += 'FTTxnPosCode,FNTxnID,FNTxnIDRef'
				SET @tSql += ' FROM TFNTCrdSale WITH(NOLOCK)'
				SET @tSql += ' WHERE 1=1'
				IF (@tBchF <> '' AND @tBchT <> '')
				BEGIN
					SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
				END
		
				IF (@tCrdF <> '' AND @tCrdT <> '')
				BEGIN
					SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
				END

				IF (@tDocDateF <> '' AND @tDocDateT <> '')
				BEGIN
					SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
				END
				--SET @tSql += @tSql1

				SET @tSql += ' ) AS C LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard AS CRD WITH(NOLOCK) ON C.FTCrdCode = CRD.FTCrdCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCard_L AS CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode AND CRDL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMPos AS POS WITH(NOLOCK) ON C.FTTxnPosCode = POS.FTPosCode LEFT OUTER JOIN'
				SET @tSql += ' TFNMCardType_L AS CTL WITH(NOLOCK) ON CRD.FTCtyCode = CTL.FTCtyCode AND CTL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMUsrDepart_L AS DPL WITH(NOLOCK) ON CRD.FTDptCode = DPL.FTDptCode AND DPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMShop_L AS SHPL WITH(NOLOCK) ON C.FTShpCode = SHPL.FTShpCode AND C.FTBchCode = SHPL.FTBchCode AND SHPL.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' TCNMBranch_L AS Bch_L WITH(NOLOCK) ON C.FTBchCode = Bch_L.FTBchCode AND Bch_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT OUTER JOIN'
				SET @tSql += ' (SELECT CONVERT(VARCHAR(19), FDCrdExpireDate,121) AS FDCrdExpireDate, SUM(FCCrdValue) AS CardExpValue'
				SET @tSql += ' FROM TFNMCard WITH(NOLOCK)'
				SET @tSql += ' GROUP BY FDCrdExpireDate'
				SET @tSql += ' ) AS CEXP ON CONVERT(VARCHAR(10), C.FDTxnDocDate,121) = CONVERT(VARCHAR(10), CEXP.FDCrdExpireDate,121)'
			SET @tSql += ' ) AS CRDHIS LEFT OUTER JOIN'
			SET @tSql += ' TFNTCrdTopUpHD AS TOPUP WITH(NOLOCK) ON CRDHIS.FTTxnDocNoRef = TOPUP.FTCthDocNo LEFT OUTER JOIN'
			SET @tSql += ' TFNTCrdVoidHD AS VOID WITH(NOLOCK) ON CRDHIS.FTTxnDocNoRef = VOID.FTCvhDocNo LEFT OUTER JOIN'
			SET @tSql += ' TFNTCrdImpHD AS IMP WITH(NOLOCK) ON CRDHIS.FTTxnDocNoRef = IMP.FTCihDocNo LEFT OUTER JOIN'
			SET @tSql += ' TFNTCrdShiftHD AS SHIFT WITH(NOLOCK) ON CRDHIS.FTTxnDocNoRef = SHIFT.FTCshDocNo) AS A'--LEFT OUTER JOIN'
			--SET @tSql += ' TCNMUser_L AS USRL WITH(NOLOCK) ON A.FTUsrCreate = USRL.FTUsrCode'
			SET @tSql += ' WHERE 1=1'

			IF (@tBchF <> '' AND @tBchT <> '')
			BEGIN
				SET @tSql +=' AND FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
			END

			IF (@tCrdF <> '' AND @tCrdT <> '')
			BEGIN
				SET @tSql +=' AND FTCrdCode BETWEEN ''' + @tCrdF + ''' AND ''' + @tCrdT + ''''
			END

			IF (@tDocDateF <> '' AND @tDocDateT <> '')
			BEGIN
				SET @tSql +=' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
			END
			IF @tUserIdF <> '' AND @tUserIdT <> ''
			BEGIN
				SET @tSql += ' AND FTCrdHolderID BETWEEN ''' + @tUserIdF + ''' AND ''' + @tUserIdT +''''
			END

			IF @tCrdActF <> '' AND @tCrdActT <> ''
			BEGIN
				SET  @tSql += ' AND FTCrdStaActive BETWEEN '''+ @tCrdActF +''' AND '''+ @tCrdActT +''''
			END  

	--SET @tSql += ' IN TO TFCTRptCrdTmp1'
	SET @tSqlIns = 'INSERT INTO TFCTRptCrdTmp ('
	SET @tSqlIns +='FTComName,FTRptName,'
	SET @tSqlIns +='FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSqlIns += 'FTBchCode,FTBchName,'
	SET @tSqlIns +='FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,#TFCTRptCrdTemp.FNTxnIDRef,'
	SET @tSqlIns +='FTDocCreateBy,'
	SET @tSqlIns +='FDTxnDocDate,FCCrdBalance,FNLngID,FCTxnValue'
	SET @tSqlIns +=')'
	SET @tSqlIns +=' SELECT'
	SET @tSqlIns +=' FTComName,FTRptName,'
	SET @tSqlIns +=' FTTxndocType,FTCrdCode,FTCrdName,FTCtyName,FTCrdHolderID,FTShpCode,FTShpName,FTCrdStaActive,FTDptName,FCTxnCrdAftTrans,'
	SET @tSqlIns += 'FTBchCode,FTBchName,'
	SET @tSqlIns +=' FTTxnPosCode,FTPosType,FTTxnDocRefNo,FTTxnDocNoRef,FTTxnDocTypeName,FNTxnID,#TFCTRptCrdTemp.FNTxnIDRef,'
	SET @tSqlIns += ' CASE FTTxnDocType' 
		SET @tSqlIns += ' WHEN ''3'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' WHEN ''4'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' WHEN ''5'' THEN FTTxnPosCode' 
		SET @tSqlIns += ' ELSE USRL.FTUsrName'
		SET @tSqlIns += ' END AS FTDocCreateBy,'

	SET @tSqlIns +='FDTxnDocDate,FCCrdBalance,#TFCTRptCrdTemp.FNLngID, FCTxnValue'
	SET @tSqlIns +=' FROM #TFCTRptCrdTemp LEFT JOIN'
	SET @tSqlIns += ' TCNMUser_L AS USRL WITH(NOLOCK) ON #TFCTRptCrdTemp.FTUsrCreate = USRL.FTUsrCode'
	SET @tSqlIns +=' LEFT JOIN ('
	SET @tSqlIns +=' SELECT R1.FNTxnIDRef, R2.FTTxnDocNoRef AS FTDocRef FROM ('
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHis WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdHisBch WHERE ISNULL(FNTxnIDRef,'''') <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdTopUp WHERE ISNULL(FNTxnIDRef,'''' ) <> '''''
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FNTxnIDRef FROM TFNTCrdSale WHERE ISNULL(FNTxnIDRef,'''') <> '''''
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=') R1'
	SET @tSqlIns +=' INNER JOIN ('
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHis'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdHisBch'
	SET @tSqlIns +=' WHERE 1=1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdTopUp'
	SET @tSqlIns +=' WHERE 1=1'
	--SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10), FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=' UNION ALL'
	SET @tSqlIns +=' SELECT FTTxnDocNoRef,FNTxnID FROM TFNTCrdSale'
	SET @tSqlIns +=' WHERE 1=1'
--	SET @tSqlIns += @tSql2
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSqlIns += ' AND CONVERT(VARCHAR(10),FDTxnDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	SET @tSqlIns +=')R2 ON R1.FNTxnIDRef = R2.FNTxnID) REF ON REF.FNTxnIDRef = #TFCTRptCrdTemp.FNTxnIDRef'

	--PRINT @tSql
	EXECUTE(@tSql)

	--PRINT @tSqlIns
	EXECUTE(@tSqlIns)
	
	DROP TABLE #TFCTRptCrdTemp
--	--SELECT * FROM #TFCTRptCrdTmp
	RETURN SELECT * FROM TFCTRptCrdTmp WHERE FTComName = ''+ @nComName + '' AND FTRptName = ''+ @tRptName +''
--	----EXECUTE @tSqlIns
	
END TRY

BEGIN CATCH 
 SET @FNResult= -1
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDDailyByPdtBstQty2001004]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDDailyByPdtBstQty2001004]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDDailyByPdtBstQty2001004] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxVDDailyByPdtBstQty2001004] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnTop int,
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

	@ptMerF Varchar(10),
	@ptMerT Varchar(10),

	@ptShpF Varchar(30),
	@ptShpT Varchar(30),

	@ptPosF Varchar(5),
	@ptPosT Varchar(5),


	@ptPdtCodeF Varchar(20),
	@ptPdtCodeT Varchar(20),
	@ptPdtChanF Varchar(30),
	@ptPdtChanT Varchar(30),
	@ptPdtTypeF Varchar(5),
	@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @pnTop Top
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา

--	@ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงเจ้าของกินการ
--	@ptPosF จากตู้ Vending
--	@ptPosT ถึงตู้ Vending

-- @ptShpF จากร้านค้า
-- @ptShpT ถึงร้านค้า
-- @ptPdtCodeF จากสินค้า
-- @ptPdtCodeT ถึงสินค้า
-- @ptPdtChanF จากกลุ่มสินค้า
-- @ptPdtChanT ถึงกลุ่มสินค้า
-- @ptPdtTypeF จากประเภทสินค้า
-- @ptPdtTypeT ถึงประเภท

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @nTop Int
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)
	
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)

	DECLARE @tPdtCodeF Varchar(20)
	DECLARE @tPdtCodeT Varchar(20)
	DECLARE @tPdtChanF Varchar(30)
	DECLARE @tPdtChanT Varchar(30)
	DECLARE @tPdtTypeF Varchar(5)
	DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PdtBstQty1001004'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @nTop = 2
	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @nTop = 0
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @nTop = @pnTop
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tPdtCodeF  = @ptPdtCodeF 
	SET @tPdtCodeT = @ptPdtCodeT
	SET @tPdtChanF = @ptPdtChanF
	SET @tPdtChanT = @ptPdtChanT 
	SET @tPdtTypeF = @ptPdtTypeF
	SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null

	IF @nTop = null 
	BEGIN
	 SET @nTop = 0
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END


	IF @tPdtCodeF = null
	BEGIN
		SET @tPdtCodeF = ''
	END 
	IF @tPdtCodeT = null OR @tPdtCodeT =''
	BEGIN
		SET @tPdtCodeT = @tPdtCodeF
	END 

	IF @tPdtChanF = null
	BEGIN
		SET @tPdtChanF = ''
	END 
	IF @tPdtChanT = null OR @tPdtChanT =''
	BEGIN
		SET @tPdtChanT = @tPdtChanF
	END 

	IF @tPdtTypeF = null
	BEGIN
		SET @tPdtTypeF = ''
	END 
	IF @tPdtTypeT = null OR @tPdtTypeT =''
	BEGIN
		SET @tPdtTypeT = @tPdtTypeF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END
	
		
	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND DT.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
	
	IF (@tMerF <> '' AND @tMerT <> '')
	BEGIN
		SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END


	IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	END

	IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	END

	IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDTopSaleTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
  	SET @tSql  = ' INSERT INTO TRPTVDTopSaleTmp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTPdtCode,FTPdtName,FTPdtChainName,FCXsdQty,FCXsdDisChg,FCXsdVat,FCXsdNet,FCXsdGrandTotal'
	SET @tSql +=' )'
	IF @nTop > 0
	BEGIN
		SET @tSql +=' SELECT TOP('+CAST(@nTop AS VARCHAR(1000))+') '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'		
	END 
	ELSE BEGIN
		SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	END
	SET @tSql +=' FTPdtCode,FTPdtName,FTPgpChainName,FCXsdQty,  FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNet,FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,'
		SET @tSql +=' ISNULL(Pun_L.FTPunName,'''') AS FTPunName,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END) FCXsdQty,' 
		SET @tSql +=' SUM((CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(FCXsdQty,0) ELSE (ISNULL(FCXsdQty,0))*-1 END) *ISNULL(FCXsdSetPrice,0) ) AS FCXsdAmtB4DisChg,'
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END) FCXsdDis,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END) FCXsdVat,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END) FCXsdNet,' 
		SET @tSql +=' SUM(CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END) FCXsdNetAfHD' 
		SET @tSql +=' FROM TVDTSalDT DT INNER JOIN TVDTSalHD HD ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo LEFT JOIN'
		SET @tSql +=' TCNMShop Shp ON HD.FTBchCode = Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		SET @tSql +=' TCNMPdtGrp_L Pgp_L ON Pdt.FTPgpChain = Pgp_L.FTPgpChain AND Pgp_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + '''  LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = ''' +  + CAST(@nLngID  AS VARCHAR(10)) + + ''''
		PRINT @tSql1
		SET @tSql += @tSql1			
	SET @tSql +=' GROUP BY DT.FTPdtCode,Pdt_L.FTPdtName,Pgp_L.FTPgpChainName,ISNULL(Pun_L.FTPunName,'''')'
	SET @tSql +=' ) SalePdt'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDTopSaleTmp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	--PRINT @tSql
END CATCH	






GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDDailySaleByInv2001006]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDDailySaleByInv2001006]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDDailySaleByInv2001006] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxVDDailySaleByInv2001006]
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),

	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	@ptPosF Varchar(5),
	@ptPosT Varchar(5),
	@ptWahF Varchar(5),
	@ptWahT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ÅÙ¡¤éÒ
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 12/10/2019 รายงานยอดขายตามบิล
-- Temp name  TRPTSalRCTmp
-- @pnLngID ÀÒÉÒ
-- @ptRptCdoe ª×èÍÃÒÂ§Ò¹
-- @ptUsrSession UsrSession
-- @ptBchF ¨Ò¡ÃËÑÊÊÒ¢Ò
-- @ptBchT ¶Ö§ÃËÑÊÊÒ¢Ò
-- @ptShpF ¨Ò¡ÃéÒ¹¤éÒ
-- @ptShpT ¶Ö§ÃéÒ¹¤éÒ
-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	DECLARE @tShpF Varchar(30)
	DECLARE @tShpT Varchar(30)

	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tPosF Varchar(5)
	DECLARE @tPosT Varchar(5)
	DECLARE @tWahF Varchar(5)
	DECLARE @tWahT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ÅÙ¡¤éÒ
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @tMerF ='00002'	
	--SET @tMerT = '00002'
	--SET @tPosF 	= '00002'
	--SET @tPosT 	= '00002'
	--SET @tWahF 	= '00001'
	--SET @tWahT = '00001'

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''
	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	SET @tMerF =@ptMerF
	SET @tMerT = @ptMerT
	SET @tPosF 	= @ptPosF
	SET @tPosT 	= @ptPosT
	SET @tWahF 	= @ptWahF
	SET @tWahT = @ptWahT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null


	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tWahF = null
	BEGIN
		SET @tWahF = ''
	END
	IF @tWahT = null OR @tWahT = ''
	BEGIN
		SET @tWahT = @tWahF
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END 
	IF @tShpT = null OR @tShpT =''
	BEGIN
		SET @tShpT = @tShpF
	END 


	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tBchF <> '' AND @tBchT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	END
		
	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tMerF <> '' AND @tMerT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	END

	IF (@tPosF <> '' AND @tPosT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	END

IF (@tWahF <> '' AND @tWahT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tWahF + ''' AND ''' + @tWahT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDTSaleByBillTemp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 
 	SET @tSql  = ' INSERT INTO TRPTVDTSaleByBillTemp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTXshDocNo,FDXshDocDate,FCXshAmtNV,FCXshDis,FCXshVat,FCXshGrand'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTXshDocNo,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,'
	SET @tSql +=' (FCXshGrand - FCXshVat - FCXshDiscount) AS FCXshValue,FCXshDiscount,FCXshVat,FCXshGrand'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT FTXshDocNo,FDXshDocDate,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0) ELSE (ISNULL(FCXshChg,0)-ISNULL(FCXshDis,0))*-1 END AS FCXshDiscount,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
		SET @tSql +='  CASE WHEN FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand'
		SET @tSql +='  FROM TVDTSalHD HD LEFT JOIN TCNMShop Shp ON HD.FTShpCode = Shp.FTShpCode'
		PRINT @tSql1
		SET @tSql += @tSql1	
		SET @tSql +=' ) Sale'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDTSaleByBillTemp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH		



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDDailySaleByInvByPdt2001007]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDDailySaleByInvByPdt2001007]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDDailySaleByInvByPdt2001007] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxVDDailySaleByInvByPdt2001007]  
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN

	--สาขา
	@ptBchL Varchar(8000), --กรณี Condition IN
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	--Shop Code
	@ptShpL Varchar(8000), --กรณี Condition IN
	@ptShpF Varchar(10),
	@ptShpT Varchar(10),
	--เครื่องจุดขาย
	@ptPosL Varchar(8000), --กรณี Condition IN
	@ptPosF Varchar(20),
	@ptPosT Varchar(20),

	@ptPdtCodeF Varchar(20),
	@ptPdtCodeT Varchar(20),
	@ptPdtChanF Varchar(30),
	@ptPdtChanT Varchar(30),
	@ptPdtTypeF Varchar(5),
	@ptPdtTypeT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ÅÙ¡¤éÒ
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ÀÒÉÒ
-- @ptRptCdoe ª×èÍÃÒÂ§Ò¹
-- @ptUsrSession UsrSession
-- @ptBchF ¨Ò¡ÃËÑÊÊÒ¢Ò
-- @ptBchT ¶Ö§ÃËÑÊÊÒ¢Ò
-- @ptShpF ¨Ò¡ÃéÒ¹¤éÒ
-- @ptShpT ¶Ö§ÃéÒ¹¤éÒ

-- @ptMerF Varchar(10)
-- @ptMerT Varchar(10)
-- @ptPosF Varchar(5)
-- @ptPosT Varchar(5)
-- @ptWahF Varchar(5)
-- @ptWahT Varchar(5)

-- @ptPdtCodeF ¨Ò¡ÊÔ¹¤éÒ
-- @ptPdtCodeT ¶Ö§ÊÔ¹¤éÒ
-- @ptPdtChanF ¨Ò¡¡ÅØèÁÊÔ¹¤éÒ
-- @ptPdtChanT ¶Ö§¡ÅØèÁÊÔ¹¤éÒ
-- @ptPdtTypeF ¨Ò¡»ÃÐàÀ·ÊÔ¹¤éÒ
-- @ptPdtTypeT ¶Ö§»ÃÐàÀ·

-- @ptDocDateF ¨Ò¡ÇÑ¹·Õè
-- @ptDocDateT ¶Ö§ÇÑ¹·Õè
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Branch Code
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)
	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	--Shop Code
	DECLARE @tShpF Varchar(10)
	DECLARE @tShpT Varchar(10)
	--Pos Code
	DECLARE @tPosF Varchar(20)
	DECLARE @tPosT Varchar(20)

	DECLARE @tPdtCodeF Varchar(20)
	DECLARE @tPdtCodeT Varchar(20)
	DECLARE @tPdtChanF Varchar(30)
	DECLARE @tPdtChanT Varchar(30)
	DECLARE @tPdtTypeF Varchar(5)
	DECLARE @tPdtTypeT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ÅÙ¡¤éÒ
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'SaleByInvByPdt1001002'
	--SET @ptUsrSession = '001'
	--SET @tBchF = '001'
	--SET @tBchT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tBchF = ''
	--SET @tBchT = ''
	--SET @tShpF = ''
	--SET @tShpT = ''

	--SET @ptPdtCodeF  =''
	--SET @ptPdtCodeT =''
	--SET @ptPdtChanF =''
	--SET @ptPdtChanT =''
	--SET @ptPdtTypeF =''
	--SET @ptPdtTypeT =''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--SET @tBchF = @ptBchF
	--SET @tBchT = @ptBchT
	--SET @tShpF = @ptShpF
	--SET @tShpT = @ptShpT

	--SET @tMerF =@ptMerF
	--SET @tMerT = @ptMerT
	--SET @tPosF 	= @ptPosF
	--SET @tPosT 	= @ptPosT
	--Branch
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT
	--Merchant
	SET @tMerF =@ptMerF
	SET @tMerT =@ptMerT
	--Shop
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT
	--Pos
	SET @tPosF  = @ptPosF 
	SET @tPosT = @ptPosT

	SET @tPdtCodeF  = @ptPdtCodeF 
	SET @tPdtCodeT = @ptPdtCodeT
	SET @tPdtChanF = @ptPdtChanF
	SET @tPdtChanT = @ptPdtChanT 
	SET @tPdtTypeF = @ptPdtTypeF
	SET @tPdtTypeT = @ptPdtTypeT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ¤èÒãËé Paraleter ¡Ã³Õ T à»ç¹¤èÒÇèÒ§ËÃ×Í null


	IF @ptBchL = null
	BEGIN
		SET @ptBchL = ''
	END

	IF @tBchF = null
	BEGIN
		SET @tBchF = ''
	END
	IF @tBchT = null OR @tBchT = ''
	BEGIN
		SET @tBchT = @tBchF
	END

	IF @ptMerL =null
	BEGIN
		SET @ptMerL = ''
	END

	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @ptShpL =null
	BEGIN
		SET @ptShpL = ''
	END

	IF @tShpF =null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT =null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tPosF = null
	BEGIN
		SET @tPosF = ''
	END
	IF @tPosT = null OR @tPosT = ''
	BEGIN
		SET @tPosT = @tPosF
	END

	IF @tPdtCodeF = null
	BEGIN
		SET @tPdtCodeF = ''
	END 
	IF @tPdtCodeT = null OR @tPdtCodeT =''
	BEGIN
		SET @tPdtCodeT = @tPdtCodeF
	END 

	IF @tPdtChanF = null
	BEGIN
		SET @tPdtChanF = ''
	END 
	IF @tPdtChanT = null OR @tPdtChanT =''
	BEGIN
		SET @tPdtChanT = @tPdtChanF
	END 

	IF @tPdtTypeF = null
	BEGIN
		SET @tPdtTypeF = ''
	END 
	IF @tPdtTypeT = null OR @tPdtTypeT =''
	BEGIN
		SET @tPdtTypeT = @tPdtTypeF
	END 

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	--IF (@tBchF <> '' AND @tBchT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
	--END
		
	--IF (@tShpF <> '' AND @tShpT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	--END

	
	--IF (@tMerF <> '' AND @tMerT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	--END

	--IF (@tPosF <> '' AND @tPosT <> '')
	--BEGIN
	--	SET @tSql1 +=' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
	--END
	IF @pnFilterType = '1'
	BEGIN
		IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode BETWEEN ''' + @tBchF + ''' AND ''' + @tBchT + ''''
		END

		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END

		IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
		END

		IF (@tPosF <> '' AND @tPosT <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode BETWEEN ''' + @tPosF + ''' AND ''' + @tPosT + ''''
		END		
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptBchL <> '' )
		BEGIN
			SET @tSql1 +=' AND HD.FTBchCode IN (''' + @ptBchL + ''')'
		END

		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql1 +=' AND Shp.FTMerCode IN (''' + @ptMerL + ''')'
		END

		IF (@ptShpL <> '')
		BEGIN
			SET @tSql1 +=' AND HD.FTShpCode IN (''' + @ptShpL + ''')'
		END

		IF (@ptPosL <> '')
		BEGIN
			SET @tSql1 += ' AND HD.FTPosCode IN (''' + @ptPosL + ''')'
		END		
	END


	IF (@tPdtCodeF <> '' AND @tPdtCodeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPdtCode BETWEEN ''' + @tPdtCodeF + ''' AND ''' + @tPdtCodeT + ''''
	END

	IF (@tPdtChanF <> '' AND @tPdtChanT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPgpChain BETWEEN ''' + @tPdtChanF + ''' AND ''' + @tPdtChanT + ''''
	END

	IF (@tPdtTypeF <> '' AND @tPdtTypeT <> '')
	BEGIN
		SET @tSql1 +=' AND Pdt.FTPtyCode BETWEEN ''' + @tPdtTypeF + ''' AND ''' + @tPdtTypeT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END
	
	DELETE FROM TRPTVDTSaleByProductTemp --WITH (ROWLOCK) 
	WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--Åº¢éÍÁÙÅ Temp ¢Í§à¤Ã×èÍ§·Õè¨ÐºÑ¹·Ö¡¢ÍÁÙÅÅ§ Temp
 	
  	SET @tSql  = ' INSERT INTO TRPTVDTSaleByProductTemp '
	SET @tSql +=' (FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTXshDocNo,FDXshDocDate,FTXsdPdtName,FTPunName,FCXsdQty,FCXsdSetPrice,FCXsdAmtB4DisChg,FCXsdDis,FCXsdVat,FCXsdNetAfHD'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'
	SET @tSql +=' FTXshDocNo,CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshDocDate,FTPdtName,FTPunName,FCXsdQty,FCXsdSetPrice,FCXsdQty*FCXsdSetPrice AS FCXsdAmtB4DisChg, FCXsdDis+(FCXsdNetAfHD-FCXsdNet) AS FCXsdDis ,FCXsdVat,FCXsdNetAfHD'
	SET @tSql +=' FROM'
		SET @tSql +=' (SELECT DT.FTXshDocNo,HD.FDXshDocDate,Pdt_L.FTPdtName,ISNULL(Pun_L.FTPunName,'''') AS FTPunName,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdQty,0) ELSE ISNULL(DT.FCXsdQty,0)*-1 END FCXsdQty,'
		SET @tSql +=' DT.FCXsdSetPrice,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0) ELSE (ISNULL(DT.FCXsdChg,0)- ISNULL(DT.FCXsdDis,0))*-1 END FCXsdDis,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdVat,0) ELSE ISNULL(DT.FCXsdVat,0)*-1 END FCXsdVat,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNet,0) ELSE ISNULL(DT.FCXsdNet,0)*-1 END FCXsdNet,'
		SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN  ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0)) ELSE ISNULL(DT.FCXsdNetAfHD,ISNULL(FCXsdNet,0))*-1 END FCXsdNetAfHD'
		SET @tSql +=' FROM TVDTSalDT DT WITH (NOLOCK) INNER JOIN' 
		SET @tSql +=' TVDTSalHD HD  WITH (NOLOCK)  ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo INNER JOIN'
		SET @tSql +=' TCNMPdt Pdt WITH (NOLOCK) ON DT.FTPdtCode = Pdt.FTPdtCode LEFT JOIN'
		SET @tSql +=' TCNMShop Shp WITH (NOLOCK) ON HD.FTShpCode = Shp.FTShpCode AND HD.FTBchCode = Shp.FTBchCode LEFT JOIN'
		SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = 1 LEFT JOIN'
		SET @tSql +=' TCNMPdtUnit_L Pun_L WITH (NOLOCK) ON DT.FTPunCode = Pun_L.FTPunCode AND Pun_L.FNLngID = 1 '
		SET @tSql += @tSql1			
		SET @tSql +=' ) SalePdt'
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDTSaleByProductTemp WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
	PRINT @tSql
END CATCH	



GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDPdtTwx2002003]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDPdtTwx2002003]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDPdtTwx2002003] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxVDPdtTwx2002003] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@pnFilterType int, --1 BETWEEN 2 IN
	--Merchant
	@ptMerL Varchar(8000), --กรณี Condition IN
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),

	@ptShpFF Varchar(5),
	@ptShpFT Varchar(5),
	@ptShpTF Varchar(5),
	@ptShpTT Varchar(5),

	@ptPosFF Varchar(5),
	@ptPosFT Varchar(5),
	@ptPosTF Varchar(5),
	@ptPosTT Varchar(5),

	@ptWahFF Varchar(5),
	@ptWahFT Varchar(5),
	@ptWahTF Varchar(5),
	@ptWahTT Varchar(5),


	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptMerF จากเจ้าของกิจการ
-- @ptMerT ถึงเจ้าของกิจการ

-- @ptShpFF จากร้านค้าที่โอน ,
-- @ptShpFT ถึงร้านค้าที่โอน,
-- @ptShpTF จากร้านค้าที่รับโอน
-- @ptShpTT ถึงร้านค้าที่รับโอน

-- @ptPosFF จากตู้ที่โอน
-- @ptPosFT ถึงตู้ที่โอน,
-- @ptPosTF จากตู้ที่รับโอน
-- @ptPosTT ถึงตู้ที่รับโอน

-- @ptWahFF จากคลังที่โอน
-- @ptWahFT ถึงคลังที่โอน,
-- @ptWahTF จากคลังที่รับโอน
-- @ptWahTT ถึงคลังที่รับโอน

-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql_Fi nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	--Merchant
	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)

	DECLARE @tShpFF Varchar(5)
	DECLARE @tShpFT Varchar(5)
	DECLARE @tShpTF Varchar(5)
	DECLARE @tShpTT Varchar(5)

	DECLARE @tPosFF Varchar(5)
	DECLARE @tPosFT Varchar(5)
	DECLARE @tPosTF Varchar(5)
	DECLARE @tPosTT Varchar(5)

	DECLARE @tWahFF Varchar(5)
	DECLARE @tWahFT Varchar(5)
	DECLARE @tWahTF Varchar(5)
	DECLARE @tWahTT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tMerF = '001'
	--SET @tMerT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tShpFF = ''
	--SET @tShpFT = ''
	--SET @tShpTF = ''
	--SET @tShpTT = ''

	--SET @tPosFF = ''
	--SET @tPosFT = ''
	--SET @tPosTF = ''
	--SET @tPosTT = ''

	--SET @tWahFF = ''
	--SET @tWahFT = ''
	--SET @tWahTF = ''
	--SET @tWahTT = ''

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--Merchant
	SET @tMerF  = @ptMerF
	SET @tMerT  = @ptMerT

	SET @tShpFF = @ptShpFF
	SET @tShpFT = @ptShpFT
	SET @tShpTF = @ptShpTF
	SET @tShpTT = @ptShpTT

	SET @tPosFF = @ptPosFF
	SET @tPosFT = @ptPosFT
	SET @tPosTF = @ptPosTF
	SET @tPosTT = @ptPosTT

	SET @tWahFF = @ptWahFF
	SET @tWahFT = @ptWahFT
	SET @tWahTF = @ptWahTF
	SET @tWahTT = @ptWahTT

	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tMerF =null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT =null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END 

	IF @tShpFF = null
	BEGIN
		SET @tShpFF = ''
	END
	IF @tShpFT = null OR @tShpFT = ''
	BEGIN
		SET @tShpFT = @tShpFF
	END
	IF @tShpTF = null
	BEGIN
		SET @tShpTF = ''
	END
	IF @tShpTT = null OR @tShpTT = ''
	BEGIN
		SET @tShpTT = @tShpTF
	END

	IF @tPosFF = null
	BEGIN
		SET @tPosFF = ''
	END
	IF @tPosFT = null OR @tPosFT = ''
	BEGIN
		SET @tPosFT = @tPosFF
	END
	IF @tPosTF = null
	BEGIN
		SET @tPosTF = ''
	END
	IF @tPosTT = null OR @tPosTT = ''
	BEGIN
		SET @tPosTT = @tPosTF
	END

	IF @tWahFF = null
	BEGIN
		SET @tWahFF = ''
	END
	IF @tWahFT = null OR @tWahFT = ''
	BEGIN
		SET @tWahFT = @tWahFF
	END
	IF @tWahTF = null
	BEGIN
		SET @tWahTF = ''
	END
	IF @tWahTT = null OR @tWahTT = ''
	BEGIN
		SET @tWahTT = @tWahTF
	END
	
	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql_Fi =   ' WHERE 1=1 AND FTXthStaDoc = ''1'''

	IF @pnFilterType = '1'
	BEGIN
		IF (@tMerF <> '' AND @tMerT <> '')
		BEGIN
			SET @tSql_Fi +=' AND HD.FTXthMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
		END	
	END

	IF @pnFilterType = '2'
	BEGIN
		IF (@ptMerL <> '' )
		BEGIN
			SET @tSql_Fi +=' AND HD.FTXthMerCode IN (' + @ptMerL + ')'
		END	
	END

	--IF (@tMerF <> '' AND @tMerT <> '')
	--BEGIN
	--	SET @tSql_Fi +=' AND HD.FTXthMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	--END

	IF (@tShpFF <> '' AND @tShpFT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthShopFrm BETWEEN ''' + @tShpFF + ''' AND ''' + @tShpFT + ''''
	END

	IF (@tShpTF <> '' AND @tShpTT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthShopTo BETWEEN ''' + @tShpTF + ''' AND ''' + @tShpTT + ''''
	END

	IF (@tPosFF <> '' AND @tPosFT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthPosFrm BETWEEN ''' + @tPosFF + ''' AND ''' + @tPosFT + ''''
	END

	IF (@tPosTF <> '' AND @tPosTT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthPosTo BETWEEN ''' + @tPosTF + ''' AND ''' + @tPosTT + ''''
	END

	IF (@tWahFF <> '' AND @tWahFT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthWhFrm BETWEEN ''' + @tWahFF + ''' AND ''' + @tWahFT + ''''
	END

	IF (@tWahTF <> '' AND @tWahTT <> '')
	BEGIN
		SET @tSql_Fi +=' AND HD.FTXthWhTo BETWEEN ''' + @tWahTF + ''' AND ''' + @tWahTT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql_Fi +=' AND CONVERT(VARCHAR(10),HD.FDXthDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDPdtTwxTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTVDPdtTwxTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTXthDocNo,FDXthDocDate,FTXthWhFrm,FTXthWhFrmName,FTXthWhTo,FTXthWhToName,FTPdtCode,FTPdtName,FNLayCol,FNLayRow,FCXtdQty,FTXtdUsrKey'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' HD.FTXthDocNo,FDXthDocDate,FTXthWhFrm,WahF.FTWahName,FTXthWhTo,WahT.FTWahName,DT.FTPdtCode,Pdt_L.FTPdtName,DT.FNLayCol,DT.FNLayRow,DT.FCXtdQty,Usr_L.FTUsrName'
	SET @tSql +=' FROM TVDTPdtTwxHD HD WITH (NOLOCK) INNER JOIN'
		 SET @tSql +=' TVDTPdtTwxDT DT WITH (NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo LEFT JOIN'
		 SET @tSql +=' TCNMWaHouse_L WahF WITH (NOLOCK) ON HD.FTXthWhFrm = WahF.FTWahCode AND WahF.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		 SET @tSql +=' TCNMWaHouse_L WahT WITH (NOLOCK) ON HD.FTXthWhTo = WahT.FTWahCode AND WahT.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' INNER JOIN'
		 SET @tSql +=' TCNMPdt_L Pdt_L WITH (NOLOCK) ON DT.FTPdtCode = Pdt_L.FTPdtCode AND Pdt_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''' LEFT JOIN'
		 SET @tSql +=' TCNMUser_L Usr_L WITH (NOLOCK) ON HD.FTUsrCode = Usr_L.FTUsrCode AND Usr_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
	PRINT @tSql_Fi
	SET @tSql +=  @tSql_Fi
--SELECT * FROM TCNMShop
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDPdtTwxTmp WITH (NOLOCK) WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	

GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDSalByProfitByLoss]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDSalByProfitByLoss]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDSalByProfitByLoss] AS' 
END
GO

ALTER PROCEDURE [dbo].[SP_RPTxVDSalByProfitByLoss] 

	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),

	--สาขา
	@ptBchF Varchar(5),
	@ptBchT Varchar(5),

	--ร้านค้า
	@ptShpF Varchar(30),
	@ptShpT Varchar(30),

	--เครื่องจุดขาย
	@ptPosCodeF Varchar(20),
	@ptPosCodeT Varchar(20),

	--กลุ่มสินค้า
	@ptChainCodeF Varchar(10),
	@ptChainCodeT Varchar(10),

	--สินค้า
	@ptProductCodeF Varchar(10),
	@ptProductCodeT Varchar(10),

	--วันที่
	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),

	@FNResult INT OUTPUT 

AS
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tRptCode Varchar(100)

	DECLARE @tSQLINS VARCHAR(8000)
	DECLARE @tSQLFilterIN VARCHAR(MAX)
	DECLARE @tSQLFilterOUT VARCHAR(MAX)
	
	DECLARE @tBchF Varchar(5)
	DECLARE @tBchT Varchar(5)

	DECLARE @tShpF Varchar(5)
	DECLARE @tShpT Varchar(5)

	DECLARE @tPosCodeF Varchar(30)
	DECLARE @tPosCodeT Varchar(30)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)

	DECLARE @tChainCodeF Varchar(30)
	DECLARE @tChainCodeT Varchar(30)

	DECLARE @tProductCodeF Varchar(10)
	DECLARE @tProductCodeT Varchar(10)

	--SET VALUE TO VAL
	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	--BRANCH PARAMETER
	SET @tBchF = @ptBchF
	SET @tBchT = @ptBchT

	--SHOP PARAMETER
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT

	--POS PARAMETER
	SET @tPosCodeF = @ptPosCodeF
	SET @tPosCodeT = @ptPosCodeT

	--DOCDATE PARAMETER
	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT

	--CHAIN PARAMETER
	SET @tChainCodeF = @ptChainCodeF
	SET @tChainCodeT = @ptChainCodeT

	--สินค้า
	SET @tProductCodeF = @ptProductCodeF
	SET @tProductCodeT = @ptProductCodeT

	--SET FILTER IN
	SET @tSQLFilterIN = ''

	--FILTER BRANCH CHECK BRANCHFROM AND BRANCHTO IS FILTERED
	IF (@tBchF <> '' AND @tBchT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND   SHD.FTBchCode BETWEEN '''+@tBchF+''' AND '''+@tBchT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ' '
		END

	--FILTER SHOP CHECK SHOPFROM AND SHOPTO IS FILTERED
	IF (@tShpF <> '' AND @tShpT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND   SHD.FTShpCode BETWEEN '''+@tShpF+''' AND '''+@tShpT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ' '
		END

	--FILTER POS CHECK POSFROM AND POSTO IS FILTERED
	IF (@tPosCodeF <> '' AND @tPosCodeT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND SHD.FTPosCode BETWEEN '''+@tPosCodeF+''' AND '''+@tPosCodeT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ' '
		END

    --FILTER CHAIN CHECK PRODUCT FROM AND PRODUCT TO IS FILTERED
	IF (@tProductCodeF <> '' AND @tProductCodeT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND SDT.FTPdtCode BETWEEN '''+@tProductCodeF+''' AND '''+@tProductCodeT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ''
		END

	--FILTER DOCDATE CHECK DOCDATEFROM AND DOCDATETO IS FILTERED
	IF (@tDocDateF <> '' AND @tDocDateT <> '')
		BEGIN
			SET @tSQLFilterIN += ' AND   CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '''+@tDocDateF+''' AND '''+@tDocDateT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterIN += ' '
		END

	--SET FILTER OUT
	SET @tSQLFilterOUT = ''

	--FILTER CHAIN CHECK CHAINFROM AND CHAINTO IS FILTERED
	IF (@tChainCodeF <> '' AND @tChainCodeT <> '')
		BEGIN
			SET @tSQLFilterOUT += ' AND SALE.FTPgpChainName BETWEEN '''+@tChainCodeF+''' AND '''+@tChainCodeT+''''
		END
    ELSE 
		BEGIN
			SET @tSQLFilterOUT += ''
		END


	--DELTE OLD DATA FROM TEMP TABLE
	DELETE FROM TRPTVDTSaleProfitTmp  WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''
    
	SET @tSQLINS = '  INSERT INTO TRPTVDTSaleProfitTmp(FTComName,FTRptCode,FTUsrSession,FTPdtCode,FTPdtName,FTChainName,FCXsdSaleQty,FCPdtCost,FCXshGrand,FCXsdProfit,'
	SET @tSQLINS += ' FCXsdProfitPercent, FCXsdSalePercent )'
	
	       SET @tSQLINS += ' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
           SET @tSQLINS += ' SALE.FTPdtCode, '
           SET @tSQLINS += ' SALE.FTPdtName, '
	       SET @tSQLINS += ' SALE.FTPgpChainName,'
	       SET @tSQLINS += ' SALE.FCXsdQty, '
           SET @tSQLINS += ' ISNULL(SALE.FCXsdQty * PDC.FCPdtCostAVGIN,0) AS FCPdtCost, '
	       SET @tSQLINS += ' SALE.FCXsdNetAfHD, '
	       SET @tSQLINS += ' ISNULL(SALE.FCXsdNetAfHD - (SALE.FCXsdQty * PDC.FCPdtCostAVGIN),0) AS FCXsdProfit, '
		   SET @tSQLINS += ' CASE WHEN ISNULL(SALE.FCXsdQty * PDC.FCPdtCostAVGIN,0) = 0 THEN 100
							 ELSE
							 ISNULL(((SALE.FCXsdNetAfHD - (SALE.FCXsdQty * PDC.FCPdtCostAVGIN)) / (SALE.FCXsdQty * PDC.FCPdtCostAVGIN )) * 100,0) 
							 END  AS FCXsdCostPercent,
							 CASE WHEN ISNULL(SALE.FCXsdNetAfHD,0) = 0 THEN 100
							 ELSE
							 ISNULL(((SALE.FCXsdNetAfHD - (SALE.FCXsdQty * PDC.FCPdtCostAVGIN)) / (SALE.FCXsdNetAfHD )) * 100,0) 
							 END AS FCXsdSalePercent '

      SET @tSQLINS += ' FROM ( '
		    SET @tSQLINS += ' SELECT SDT.FTPdtCode,PDT_L.FTPdtName,ISNULL(PDG_L.FTPgpChainName,''N/A'') AS  FTPgpChainName, '
		    SET @tSQLINS += ' SUM(SDT.FCXsdQty) AS FCXsdQty,SUM(SDT.FCXsdNetAfHD) AS FCXsdNetAfHD '
		    SET @tSQLINS += ' FROM TVDTSalDT SDT '
		    SET @tSQLINS += ' LEFT JOIN TVDTSalHD SHD ON SDT.FTXshDocNo = SHD.FTXshDocNo '
		    SET @tSQLINS += ' LEFT JOIN TCNMPdt PDT ON SDT.FTPdtCode = PDT.FTPdtCode '
		    SET @tSQLINS += ' LEFT JOIN TCNMPdt_L PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode AND PDT_L.FNLngID = ''' + CAST(@nLngID  AS VARCHAR(10)) + ''''
		    SET @tSQLINS += ' LEFT JOIN TCNMPdtGrp_L PDG_L ON PDT.FTPgpChain = PDG_L.FTPgpChain '
		    SET @tSQLINS += ' LEFT JOIN VCN_ProductCost PDC ON PDT.FTPdtCode = PDC.FTPdtCode '
		 
			--FILTER BY CONDITION (tSQLFilterIN)
			SET @tSQLINS += ' WHERE 1=1 '
			SET @tSQLINS += @tSQLFilterIN

			--AND   SHD.FTBchCode BETWEEN '00001' AND '00001'
			--AND   SHD.FTShpCode BETWEEN '00001' AND '00004'
			--AND   SHD.FTPosCode BETWEEN '00001' AND '00006'
		    --AND   CONVERT(VARCHAR(10),SHD.FDXshDocDate,121) BETWEEN '2019-10-08' AND '2019-10-10'
		    
		    SET @tSQLINS += ' GROUP BY SDT.FTPdtCode,PDT_L.FTPdtName,PDG_L.FTPgpChainName '

	        SET @tSQLINS += ' ) SALE '

            SET @tSQLINS += ' LEFT JOIN VCN_ProductCost PDC ON SALE.FTPdtCode = PDC.FTPdtCode '

	--Condition
    SET @tSQLINS += ' WHERE 1 = 1 '
	SET @tSQLINS += @tSQLFilterOUT
	--PRINT @tSQLINS

	EXECUTE(@tSQLINS)

	--FILTER BY CONDITION (tSQLFilterOUT)
   -- AND SALE.FTPgpChainName BETWEEN 'N/A' AND 'N/A'


    SET @FNResult = 0
	return @FNResult

END TRY
BEGIN CATCH
       SET @FNResult = -1
	   return @FNResult
END CATCH







GO
/****** Object:  StoredProcedure [dbo].[SP_RPTxVDVatByGrpShp2001001]    Script Date: 10/8/2563 15:39:15 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SP_RPTxVDVatByGrpShp2001001]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[SP_RPTxVDVatByGrpShp2001001] AS' 
END
GO
ALTER PROCEDURE [dbo].[SP_RPTxVDVatByGrpShp2001001] 
	@pnLngID int , 
	@pnComName Varchar(100),
	@ptRptCode Varchar(100),
	@ptUsrSession Varchar(255),
	@ptMerF Varchar(10),
	@ptMerT Varchar(10),
	@ptShpF Varchar(5),
	@ptShpT Varchar(5),

	@ptDocDateF Varchar(10),
	@ptDocDateT Varchar(10),
	----ลูกค้า
	--@ptCstF Varchar(20),
	--@ptCstT Varchar(20),
	@FNResult INT OUTPUT 
AS
--------------------------------------
-- Watcharakorn 
-- Create 10/07/2019
-- Temp name  TRPTSalRCTmp
-- @pnLngID ภาษา
-- @ptRptCdoe ชื่อรายงาน
-- @ptUsrSession UsrSession
-- @ptBchF จากรหัสสาขา
-- @ptBchT ถึงรหัสสาขา
-- @ptDocDateF จากวันที่
-- @ptDocDateT ถึงวันที่
-- @FNResult


--------------------------------------
BEGIN TRY

	DECLARE @nLngID int 
	DECLARE @nComName Varchar(100)
	DECLARE @tRptCode Varchar(100)
	DECLARE @tUsrSession Varchar(255)
	DECLARE @tSql VARCHAR(8000)
	DECLARE @tSqlIns VARCHAR(8000)
	DECLARE @tSql1 nVARCHAR(Max)
	DECLARE @tSql2 VARCHAR(8000)

	DECLARE @tMerF Varchar(10)
	DECLARE @tMerT Varchar(10)
	DECLARE @tShpF Varchar(5)
	DECLARE @tShpT Varchar(5)

	DECLARE @tDocDateF Varchar(10)
	DECLARE @tDocDateT Varchar(10)
	--ลูกค้า
	--DECLARE @tCstF Varchar(20)
	--DECLARE @tCstT Varchar(20)


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'PSSVat1001006'
	--SET @ptUsrSession = '001'
	--SET @tMerF = '001'
	--SET @tMerT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'
	
	--SET @tDocDateF = '2019-07-01'
	--SET @tDocDateT = '2019-07-10'


	--SET @nLngID = 1
	--SET @nComName = 'Ada062'
	--SET @tRptName = 'DailySaleByInv1001001'
	--SET @ptUsrSession = '001'
	--SET @tMerF = '001'
	--SET @tMerT = '001'
	--SET @tShpF = '00001'
	--SET @tShpT = '00001'

	--SET @tDocDateF = ''
	--SET @tDocDateT = ''

	SET @nLngID = @pnLngID
	SET @nComName = @pnComName
	SET @tUsrSession = @ptUsrSession
	SET @tRptCode = @ptRptCode

	SET @tMerF = @ptMerF
	SET @tMerT = @ptMerT
	SET @tShpF = @ptShpF
	SET @tShpT = @ptShpT


	SET @tDocDateF = @ptDocDateF
	SET @tDocDateT = @ptDocDateT
	SET @FNResult= 0

	SET @tDocDateF = CONVERT(VARCHAR(10),@tDocDateF,121)
	SET @tDocDateT = CONVERT(VARCHAR(10),@tDocDateT,121)

	IF @nLngID = null
	BEGIN
		SET @nLngID = 1
	END	
	--Set ค่าให้ Paraleter กรณี T เป็นค่าว่างหรือ null


	IF @tMerF = null
	BEGIN
		SET @tMerF = ''
	END
	IF @tMerT = null OR @tMerT = ''
	BEGIN
		SET @tMerT = @tMerF
	END

	IF @tShpF = null
	BEGIN
		SET @tShpF = ''
	END
	IF @tShpT = null OR @tShpT = ''
	BEGIN
		SET @tShpT = @tShpF
	END

	IF @tDocDateF = null
	BEGIN 
		SET @tDocDateF = ''
	END

	IF @tDocDateT = null OR @tDocDateT =''
	BEGIN 
		SET @tDocDateT = @tDocDateF
	END

	SET @tSql1 =   ' WHERE 1=1 AND FTXshStaDoc = ''1'''


	IF (@tMerF <> '' AND @tMerT <> '')
	BEGIN
		SET @tSql1 +=' AND Shp.FTMerCode BETWEEN ''' + @tMerF + ''' AND ''' + @tMerT + ''''
	END

	IF (@tShpF <> '' AND @tShpT <> '')
	BEGIN
		SET @tSql1 +=' AND HD.FTShpCode BETWEEN ''' + @tShpF + ''' AND ''' + @tShpT + ''''
	END

	IF (@tDocDateF <> '' AND @tDocDateT <> '')
	BEGIN
		SET @tSql1 +=' AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) BETWEEN ''' + @tDocDateF + ''' AND ''' + @tDocDateT + ''''
	END

	DELETE FROM TRPTVDTaxHDTmp WITH (ROWLOCK) WHERE FTComName =  '' + @nComName + ''  AND FTRptCode = '' + @tRptCode + '' AND FTUsrSession = '' + @tUsrSession + ''--ลบข้อมูล Temp ของเครื่องที่จะบันทึกขอมูลลง Temp
 
 	SET @tSql  = ' INSERT INTO TRPTVDTaxHDTmp '
	SET @tSql +=' ('
	SET @tSql +=' FTComName,FTRptCode,FTUsrSession,'
	SET @tSql +=' FTBchCode,FTXshdocDate,FTXshDocNo,FTPosCode,FTXshDocVatFull,FTCstName,FTCstTaxNo,FCXshAmt,FCXshVat,FCXshAmtNV,FCXshGrandTotal'
	SET @tSql +=' )'
	SET @tSql +=' SELECT '''+ @nComName + ''' AS FTComName,'''+ @tRptCode +''' AS FTRptCode, '''+ @tUsrSession +''' AS FTUsrSession,'	
	SET @tSql +=' FTBchCode,FDXshdocDate,FTXshDocNo,FTPosCode,FTXshDocVatFull,FTCstName,FTCstTaxNo,FCXshValue,FCXshVat,FCXshAmtNV,FCXshGrand'
	SET @tSql +=' FROM'	
			SET @tSql +=' (SELECT HD.FTBchCode,FDXshdocDate,HD.FTPosCode,FTXshDocNo,ISNULL(FTXshDocVatFull,'''') FTXshDocVatFull,Cst_L.FTCstName,Cst.FTCstTaxNo,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0) ELSE (ISNULL(FCXshGrand,0)-ISNULL(FCXshAmtNV,0)-ISNULL(FCXshVat,0))*-1 END AS FCXshValue,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshVat,0) ELSE ISNULL(FCXshVat,0)*-1 END AS FCXshVat,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshAmtNV,0) ELSE ISNULL(FCXshAmtNV,0)*-1 END AS FCXshAmtNV,'
			SET @tSql +=' CASE WHEN HD.FNXshDocType = 1 THEN ISNULL(FCXshGrand,0) ELSE ISNULL(FCXshGrand,0)*-1 END AS FCXshGrand'
			SET @tSql +=' FROM TVDTSalHD HD WITH (NOLOCK) LEFT JOIN'
					  SET @tSql +=' TCNMShop Shp WITH (NOLOCK) ON HD.FTBchCode = 	Shp.FTBchCode AND HD.FTShpCode = Shp.FTShpCode LEFT JOIN'
		 			  SET @tSql +=' TCNMCst Cst WITH (NOLOCK) ON HD.FTCstCode = Cst.FTCstCode LEFT JOIN'
					  SET @tSql +=' TCNMCst_L Cst_L WITH (NOLOCK) ON HD.FTCstCode = Cst_L.FTCstCode AND Cst_L.FNLngID = '''  + CAST(@nLngID  AS VARCHAR(10)) + ''''
			SET @tSql +=' WHERE FTXshStaDoc <> ''3'''
			SET @tSql +=' ) SalVat'    
	PRINT @tSql
	EXECUTE(@tSql)

	RETURN SELECT * FROM TRPTVDTaxHDTmp WITH (NOLOCK) WHERE FTComName = ''+ @nComName + '' AND FTRptCode = ''+ @tRptCode +'' AND FTUsrSession = '' + @tUsrSession + ''
	
END TRY

BEGIN CATCH 
	SET @FNResult= -1
END CATCH	

--SELECT * FROM TRPTPSTaxHDTmp


GO



/*============================================== END STORED REPORT ===========================================================*/

/****** Object:  StoredProcedure [dbo].[STP_DbVerUpdHis]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DbVerUpdHis]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DbVerUpdHis] AS' 
END
GO


-- Create a procedure to retrieve error information.
ALTER PROCEDURE [dbo].[STP_DbVerUpdHis]
--exec [STP_DbVerUpdHis] 
  
AS

SELECT * FROM sys.all_objects   where [type] in('P','V','U') ORDER BY modify_date desc





GO
/****** Object:  StoredProcedure [dbo].[STP_DELoDeleteOrderTimeout]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DELoDeleteOrderTimeout]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DELoDeleteOrderTimeout] AS' 
END
GO

-- =============================================
-- Author:		<Author,,Name>
-- Create date: <Create Date,,>
-- Description:	<Description,,>
-- =============================================
ALTER PROCEDURE [dbo].[STP_DELoDeleteOrderTimeout]
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
DECLARE @oTblTmpType TABLE
(
FNTxdBookID			BIGINT,
FTZneBookingType	VARCHAR(1),
FNPdtOthSystem		BIGINT,
FTPkgStaLimitBy		VARCHAR(1)
)

INSERT INTO @oTblTmpType 
	SELECT CDT.FNTxdBookID,LNE.FTZneBookingType,
 PDT.FNPdtOthSystem,PKG.FTPkgStaLimitBy
 FROM TTKTxnCartHD CHD WITH(NOLOCK)
 LEFT JOIN TTKTxnCartDT CDT WITH(NOLOCK) ON CDT.FNTxhID = CHD.FNTxhID
 LEFT JOIN TTKMLocZone LNE WITH(NOLOCK) ON LNE.FNZneID = CDT.FNZneID
 LEFT JOIN VTK_TTKMPdt PDT WITH(NOLOCK) ON PDT.FNPdtID = CDT.FNTxdPdtID
 LEFT JOIN TTKTPkgList PKG WITH(NOLOCK) ON PKG.FNPkgID = CHD.FNPkgID
 WHERE CHD.FNTxhID NOT IN (select FNTxhID from TTKTxnCartHD where CAST(FDDateIns AS DATETIME) + CAST(FTTimeIns AS DATETIME)>= dateadd(hour,-(FNTxhExpTimeout),getdate()))
 AND CHD.FTTxhStaPaid ='1'


DELETE
FROM TTKTBookingPkg WITH(ROWLOCK)
WHERE FNBkpSeq IN (SELECT FNTxdBookID FROM @oTblTmpType WHERE FTPkgStaLimitBy = '2')


DELETE
FROM TTKTBookingSeat WITH(ROWLOCK)
WHERE FNBksID IN (SELECT FNTxdBookID FROM @oTblTmpType WHERE FTZneBookingType = '1')

DELETE
FROM TTKTBookingRoom WITH(ROWLOCK)
WHERE FNBkrID IN (SELECT FNTxdBookID FROM @oTblTmpType WHERE FTZneBookingType = '2')

DELETE
FROM TTKTBookingTicket WITH(ROWLOCK)
WHERE FNBktSeq IN (SELECT FNTxdBookID FROM @oTblTmpType WHERE FTZneBookingType = '3' AND FNPdtOthSystem = 2)

DELETE
FROM TTKTBookingHW WITH(ROWLOCK)
WHERE FNBkhSeq IN (SELECT FNTxdBookID FROM @oTblTmpType WHERE FTZneBookingType = '3' AND FNPdtOthSystem = 6)

DELETE 
FROM TTKTxnCartDT WITH(ROWLOCK)
WHERE FNTxdBookID IN (SELECT FNTxdBookID FROM @oTblTmpType)

 DELETE CRC
FROM TTKTxnCartRC CRC
INNER JOIN TTKTxnCartHD CHD
  ON CHD.FTTxhDocRef=CRC.FTShdDocNo
  AND CAST(CHD.FDDateIns AS DATETIME) + CAST(CHD.FTTimeIns AS DATETIME)<= dateadd(hour,-(FNTxhExpTimeout),getdate())
WHERE FTRcvCode = '005' 
 AND CHD.FTTxhStaPaid ='1'

DELETE
FROM TTKTxnCartHD WITH(ROWLOCK)	
WHERE FNTxhID NOT IN (select FNTxhID from TTKTxnCartHD where CAST(FDDateIns AS DATETIME) + CAST(FTTimeIns AS DATETIME)>= dateadd(hour,-(FNTxhExpTimeout),getdate()))
 AND FTTxhStaPaid ='1'
END




GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxAdjustStockPrc]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxAdjustStockPrc]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxAdjustStockPrc] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxAdjustStockPrc]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)
DECLARE @tWahType varchar(1) -- 4. --
DECLARE @tAdjSeqChk varchar(1) -- 4.--

/*---------------------------------------------------------------------
Document History
Version		Date			User	Remark
00.01.00	13/06/2019		Em		create  
00.02.00	03/07/2019		Em		แก้ไขความกว้างฟิลด์ FTBchCode จาก 3 เป็น 5
00.03.00	05/07/2019		Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร
00.04.00	22/07/2019		Em		เพิ่มการปรับสต๊อก Vending
00.05.00	31/07/2019		Em		ปรับปรุงแก้ไข
00.06.00	01/08/2019		Em		เพิ่มการตรวจนับสินค้าทั่วไป
03.01.00	27/03/2020		Em		ปรับปรุงแก้ไข
03.02.00	28/03/2020		Em		แก้ไขให้ sum ยอดสต๊อกตามสินค้า
03.03.00	30/03/2020		Em		แก้ไขการ Sum ยอดขายที่ยังไม่ประมวลผล stk ตามสินค้าตามหน่วย
03.04.00	30/03/2020		Em		แก้ไขให้อัพเดท bal ตามจำนวนที่นับได้ + จำนวนที่ขายค้างอยู่ 
04.01.00	20/07/2020		Em		แก้ไขการใช้ฟิลด์ QtyAll
----------------------------------------------------------------------*/
BEGIN TRY
	--SET @tStaPrc = (SELECT TOP 1 ISNULL(FTAjhStaPrcStk,'') AS FTAjhStaPrcStk FROM TCNTPdtAdjStkHD WITH(NOLOCK) WHERE FTBchCode = @ptBchCode AND FTAjhDocNo = @ptDocNo )		-- 3. --
	
	-- 4. --
	SELECT TOP 1 @tWahType = ISNULL(WAH.FTWahStaType,''),
	 @tAdjSeqChk = ISNULL(HD.FTAjhApvSeqChk,'1'),
	 @tStaPrc = ISNULL(FTAjhStaPrcStk,'')
	FROM TCNTPdtAdjStkHD HD WITH(NOLOCK) 
	INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON HD.FTAjhWhTo = WAH.FTWahCode 
	WHERE HD.FTBchCode = @ptBchCode AND HD.FTAjhDocNo = @ptDocNo 
	-- 4. --
	
	IF @tStaPrc <> '1'		-- 3. --
	BEGIN
		IF @tWahType = '6'	-- 4. --
			BEGIN
				--Update sale before adjust
				UPDATE TCNTPdtAdjStkDT WITH(ROWLOCK)
				SET FCAjdSaleB4AdjC1 = ISNULL(SAL.FCXsdQty,0)
				,FCAjdQtyAllDiff = ((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(SAL.FCXsdQty,0)) - ISNULL(DT.FCAjdWahB4Adj,0))
				FROM TCNTPdtAdjStkDT DT
				LEFT JOIN (SELECT HD.FDXshDocDate, DT.FTPdtCode, VD.FNLayRow, VD.FNLayCol, SUM(DT.FCXsdQtyAll) AS FCXsdQty
					FROM TVDTSalHD HD WITH(NOLOCK)
					INNER JOIN TVDTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
					INNER JOIN TVDTSalDTVD VD WITH(NOLOCK) ON DT.FTBchCode = VD.FTBchCode AND DT.FTXshDocNo = VD.FTXshDocNo AND DT.FNXsdSeqNo = VD.FNXsdSeqNo
					WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
					GROUP BY HD.FDXshDocDate, DT.FTPdtCode, VD.FNLayRow, VD.FNLayCol) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FNAjdLayRow = SAL.FNLayRow AND DT.FNAjdLayCol = SAL.FNLayCol AND DT.FDAjdDateTime > SAL.FDXshDocDate
				--WHERE DT.FDAjdDateTime > SAL.FDXshDocDate
				WHERE DT.FTBchCode = @ptBchCode AND DT.FTAjhDocNo = @ptDocNo -- 5. --

				--insert data to Temp
				INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
				SELECT @ptDocNo AS FTComName,HD.FTBchCode,HD.FTAjhDocNo AS FTStkDocNo
				,'5' AS FTStkType
				,FTPdtCode AS FTPdtCode
				, SUM(((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0))) AS FCStkQty,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate
				, ROUND(0,2) AS FCStkSetPrice
				, ROUND(0,2) AS FCStkCostIn
				, ROUND(0,2) AS FCStkCostEx
				FROM TCNTPdtAdjStkDT DT with(nolock)
				INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo
				WHERE HD.FTBchCode=@ptBchCode AND HD.FTAjhDocNo =@ptDocNo
				AND HD.FTAjhDocType = '3'
				AND ((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) <> 0
				GROUP BY HD.FTBchCode,HD.FTAjhWhTo,HD.FTAjhDocNo,HD.FTAjhDocType,DT.FTPdtCode,HD.FDAjhDocDate

				--insert data to stock card
				INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
				SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
				GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
				FROM @TTmpPrcStk
				WHERE FTComName = @ptDocNo

				--update qty to stock balance
				UPDATE TCNTPdtStkBal with(rowlock) 
				SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
				,FDLastUpdOn = GETDATE()
				,FTLastUpdBy = @ptWho
				FROM TCNTPdtStkBal BAL
				INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
				WHERE TMP.FTComName=@ptDocNo 
				AND ISNULL(TMP.FCStkQty,0)<>0

				--insert to Stock balance
				INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
				SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty,GETDATE(),@ptWho,GETDATE(),@ptWho
				FROM @TTmpPrcStk TMP
				LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
				WHERE ISNULL(BAL.FTPdtCode,'') = ''

				UPDATE TVDTPdtStkBal WITH(ROWLOCK)
				SET FCStkQty= BAL.FCStkQty + ((ISNULL(DT.FCAjdUnitQty,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0))
				,FDLastUpdOn = GETDATE()
				,FTLastUpdBy = @ptWho
				FROM TVDTPdtStkBal BAL
				--INNER JOIN TCNTPdtAdjStkDT DT with(nolock) ON BAL.FTPdtCode = DT.FTPdtCode AND BAL.FNLayRow = DT.FNAjdLayRow AND BAL.FNLayCol = DT.FNAjdLayCol
				--INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo AND BAL.FTWahCode = HD.FTAjhWhTo
				INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON BAL.FTWahCode = HD.FTAjhWhTo -- 5. --
				INNER JOIN TCNTPdtAdjStkDT DT with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo AND BAL.FTPdtCode = DT.FTPdtCode AND BAL.FNLayRow = DT.FNAjdLayRow AND BAL.FNLayCol = DT.FNAjdLayCol -- 5. --
				WHERE HD.FTBchCode=@ptBchCode AND HD.FTAjhDocNo =@ptDocNo
				AND HD.FTAjhDocType = '3'
				AND ((ISNULL(DT.FCAjdUnitQty,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) <> 0
				
				--Cost
				UPDATE TCNMPdtCostAvg with(rowlock)
				SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
				,FCPdtQtyBal = STK.FCStkQty
				,FDLastUpdOn = GETDATE()
				FROM TCNMPdtCostAvg COST
				INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
				INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
			END
		ELSE
			BEGIN
				IF @tAdjSeqChk = '1'
					BEGIN
						-- 03.04.00 --
						UPDATE TCNTPdtAdjStkDT
						SET FCAjdWahB4Adj = (CASE WHEN ISNULL(TMP.FTPdtCode,'') = '' THEN 0 ELSE FCAjdWahB4Adj END)
						FROM TCNTPdtAdjStkDT DT 
						LEFT JOIN (SELECT FTPdtCode,MIN(FCPdtUnitFact) AS FCPdtUnitFact
									FROM TCNTPdtAdjStkDT WITH(NOLOCK)
									WHERE FTBchCode=@ptBchCode AND FTAjhDocNo =@ptDocNo
									GROUP BY FTPdtCode
									) TMP ON TMP.FTPdtCode = DT.FTPdtCode AND TMP.FCPdtUnitFact = DT.FCPdtUnitFact
						WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
						-- 03.04.00 --

						--Update sale before adjust
						UPDATE TCNTPdtAdjStkDT WITH(ROWLOCK)
						SET FCAjdSaleB4AdjC1 = ISNULL(SAL.FCXsdQty,0)
						,FCAjdQtyAllDiff = ((ISNULL(DT.FCAjdQtyAllC1,0) + ISNULL(SAL.FCXsdQty,0)) - ISNULL(DT.FCAjdWahB4Adj,0))
						FROM TCNTPdtAdjStkDT DT
						--LEFT JOIN (SELECT HD.FDXshDocDate, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
						--	FROM TPSTSalHD HD WITH(NOLOCK)
						--	INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
						--	WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
						--	GROUP BY HD.FDXshDocDate, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FDAjdDateTime > SAL.FDXshDocDate
						-- 03.01.00 --
						--LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
						LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty -- 03.03.00 --
							FROM TPSTSalHD HD WITH(NOLOCK)
							INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
							WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
							AND HD.FTBchCode = @ptBchCode
							--GROUP BY HD.FTBchCode, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode
							GROUP BY HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FTPunCode = SAL.FTPunCode	-- 03.03.00 --
						-- 03.01.00 --
						--WHERE DT.FDAjdDateTime > SAL.FDXshDocDate
						WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo	-- 5. --

						--insert data to Temp
						INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
						SELECT @ptDocNo AS FTComName,HD.FTBchCode,HD.FTAjhDocNo AS FTStkDocNo
						,'5' AS FTStkType
						,FTPdtCode AS FTPdtCode
						--, ((ISNULL(DT.FCAjdQtyAllC1,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) AS FCStkQty
						, SUM(((ISNULL(DT.FCAjdQtyAllC1,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0))) AS FCStkQty	-- 03.02.00 --
						,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate
						, ROUND(0,2) AS FCStkSetPrice
						, ROUND(0,2) AS FCStkCostIn
						, ROUND(0,2) AS FCStkCostEx
						FROM TCNTPdtAdjStkDT DT with(nolock)
						INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo
						WHERE HD.FTBchCode=@ptBchCode AND HD.FTAjhDocNo =@ptDocNo
						AND HD.FTAjhDocType IN ('2','3')
						AND ((ISNULL(DT.FCAjdQtyAllC1,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) <> 0
						GROUP BY HD.FTBchCode,HD.FTAjhDocNo,DT.FTPdtCode,HD.FTAjhWhTo,FDAjhDocDate	-- 03.02.00 --

						--insert data to stock card
						INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
						SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
						GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
						FROM @TTmpPrcStk
						WHERE FTComName = @ptDocNo

						--update qty to stock balance
						--UPDATE TCNTPdtStkBal with(rowlock) 
						----SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
						--SET FCStkQty= TMP.FCStkQty	-- 03.03.00 --
						--,FDLastUpdOn = GETDATE()
						--,FTLastUpdBy = @ptWho
						--FROM TCNTPdtStkBal BAL
						--INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
						--WHERE TMP.FTComName=@ptDocNo 
						--AND ISNULL(TMP.FCStkQty,0)<>0
						-- 03.04.00 --
						UPDATE TCNTPdtStkBal with(rowlock) 
						SET FCStkQty= TMP.FCStkQty
						,FDLastUpdOn = GETDATE()
						,FTLastUpdBy = @ptWho
						FROM TCNTPdtStkBal BAL
						--INNER JOIN (SELECT HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode,SUM(DT.FCAjdQtyAll+DT.FCAjdSaleB4AdjC1) AS FCStkQty 
						INNER JOIN (SELECT HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode,SUM(DT.FCAjdQtyAllC1+DT.FCAjdSaleB4AdjC1) AS FCStkQty -- 04.01.00 --
								FROM TCNTPdtAdjStkDT DT with(nolock)
								INNER JOIN TCNTPdtAdjStkHD HD with(nolock) on HD.FTBchCode = DT.FTBchCode AND HD.FTAjhDocNo = DT.FTAjhDocNo
								WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
								GROUP BY HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode
								) TMP ON TMP.FTAjhBchTo = BAL.FTBchCode AND TMP.FTAjhWhTo = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
						-- 03.04.00 --

						--insert to Stock balance
						INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
						SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty,GETDATE(),@ptWho,GETDATE(),@ptWho
						FROM @TTmpPrcStk TMP
						LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
						WHERE ISNULL(BAL.FTPdtCode,'') = ''

						--Cost
						UPDATE TCNMPdtCostAvg with(rowlock)
						SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
						,FCPdtQtyBal = STK.FCStkQty
						,FDLastUpdOn = GETDATE()
						FROM TCNMPdtCostAvg COST
						INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
						INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
					END
				ELSE
					IF @tAdjSeqChk = '2'
						BEGIN
							-- 03.04.00 --
							UPDATE TCNTPdtAdjStkDT
							SET FCAjdWahB4Adj = (CASE WHEN ISNULL(TMP.FTPdtCode,'') = '' THEN 0 ELSE FCAjdWahB4Adj END)
							FROM TCNTPdtAdjStkDT DT 
							LEFT JOIN (SELECT FTPdtCode,MIN(FCPdtUnitFact) AS FCPdtUnitFact
										FROM TCNTPdtAdjStkDT WITH(NOLOCK)
										WHERE FTBchCode=@ptBchCode AND FTAjhDocNo =@ptDocNo
										GROUP BY FTPdtCode
										) TMP ON TMP.FTPdtCode = DT.FTPdtCode AND TMP.FCPdtUnitFact = DT.FCPdtUnitFact
							WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
							-- 03.04.00 --

							--Update sale before adjust
							UPDATE TCNTPdtAdjStkDT WITH(ROWLOCK)
							SET FCAjdSaleB4AdjC2 = ISNULL(SAL.FCXsdQty,0)
							,FCAjdQtyAllDiff = ((ISNULL(DT.FCAjdQtyAllC2,0) + ISNULL(SAL.FCXsdQty,0)) - ISNULL(DT.FCAjdWahB4Adj,0))
							FROM TCNTPdtAdjStkDT DT
							--LEFT JOIN (SELECT HD.FDXshDocDate, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
							--	FROM TPSTSalHD HD WITH(NOLOCK)
							--	INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
							--	WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
							--	GROUP BY HD.FDXshDocDate, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FDAjdDateTime > SAL.FDXshDocDate
							-- 03.01.00 --
							--LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
							LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty -- 03.03.00 --
								FROM TPSTSalHD HD WITH(NOLOCK)
								INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
								WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
								AND HD.FTBchCode = @ptBchCode
								--GROUP BY HD.FTBchCode, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode
								GROUP BY HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FTPunCode = SAL.FTPunCode	-- 03.03.00 --
							-- 03.01.00 --
							--WHERE DT.FDAjdDateTime > SAL.FDXshDocDate
							WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo	-- 5. --

							--insert data to Temp
							INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
							SELECT @ptDocNo AS FTComName,HD.FTBchCode,HD.FTAjhDocNo AS FTStkDocNo
							,'5' AS FTStkType
							,FTPdtCode AS FTPdtCode
							--, ((ISNULL(DT.FCAjdQtyAllC2,0) + ISNULL(DT.FCAjdSaleB4AdjC2,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) AS FCStkQty,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate
							, SUM(((ISNULL(DT.FCAjdQtyAllC2,0) + ISNULL(DT.FCAjdSaleB4AdjC2,0)) - ISNULL(DT.FCAjdWahB4Adj,0))) AS FCStkQty,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate	-- 03.02.00 --
							, ROUND(0,2) AS FCStkSetPrice
							, ROUND(0,2) AS FCStkCostIn
							, ROUND(0,2) AS FCStkCostEx
							FROM TCNTPdtAdjStkDT DT with(nolock)
							INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo
							WHERE HD.FTBchCode=@ptBchCode AND HD.FTAjhDocNo =@ptDocNo
							AND HD.FTAjhDocType IN ('2','3')
							AND ((ISNULL(DT.FCAjdQtyAllC2,0) + ISNULL(DT.FCAjdSaleB4AdjC2,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) <> 0
							GROUP BY HD.FTBchCode ,HD.FTAjhDocNo,DT.FTPdtCode,HD.FTAjhWhTo,HD.FDAjhDocDate	-- 03.02.00 --

							--insert data to stock card
							INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
							SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
							GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
							FROM @TTmpPrcStk
							WHERE FTComName = @ptDocNo

							--update qty to stock balance
							--UPDATE TCNTPdtStkBal with(rowlock) 
							----SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
							--SET FCStkQty= TMP.FCStkQty	-- 03.03.00 --
							--,FDLastUpdOn = GETDATE()
							--,FTLastUpdBy = @ptWho
							--FROM TCNTPdtStkBal BAL
							--INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
							--WHERE TMP.FTComName=@ptDocNo 
							--AND ISNULL(TMP.FCStkQty,0)<>0

							-- 03.04.00 --
							UPDATE TCNTPdtStkBal with(rowlock) 
							SET FCStkQty= TMP.FCStkQty
							,FDLastUpdOn = GETDATE()
							,FTLastUpdBy = @ptWho
							FROM TCNTPdtStkBal BAL
							--INNER JOIN (SELECT HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode,SUM(DT.FCAjdQtyAll+DT.FCAjdSaleB4AdjC2) AS FCStkQty 
							INNER JOIN (SELECT HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode,SUM(DT.FCAjdQtyAllC2+DT.FCAjdSaleB4AdjC2) AS FCStkQty	-- 04.01.00 --
									FROM TCNTPdtAdjStkDT DT with(nolock)
									INNER JOIN TCNTPdtAdjStkHD HD with(nolock) on HD.FTBchCode = DT.FTBchCode AND HD.FTAjhDocNo = DT.FTAjhDocNo
									WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
									GROUP BY HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode
									) TMP ON TMP.FTAjhBchTo = BAL.FTBchCode AND TMP.FTAjhWhTo = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
							-- 03.04.00 --

							--insert to Stock balance
							INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
							SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty,GETDATE(),@ptWho,GETDATE(),@ptWho
							FROM @TTmpPrcStk TMP
							LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
							WHERE ISNULL(BAL.FTPdtCode,'') = ''

							--Cost
							UPDATE TCNMPdtCostAvg with(rowlock)
							SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
							,FCPdtQtyBal = STK.FCStkQty
							,FDLastUpdOn = GETDATE()
							FROM TCNMPdtCostAvg COST
							INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
							INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
						END
					ELSE
						BEGIN
							-- 03.04.00 --
							UPDATE TCNTPdtAdjStkDT
							SET FCAjdWahB4Adj = (CASE WHEN ISNULL(TMP.FTPdtCode,'') = '' THEN 0 ELSE FCAjdWahB4Adj END)
							FROM TCNTPdtAdjStkDT DT 
							LEFT JOIN (SELECT FTPdtCode,MIN(FCPdtUnitFact) AS FCPdtUnitFact
										FROM TCNTPdtAdjStkDT WITH(NOLOCK)
										WHERE FTBchCode=@ptBchCode AND FTAjhDocNo =@ptDocNo
										GROUP BY FTPdtCode
										) TMP ON TMP.FTPdtCode = DT.FTPdtCode AND TMP.FCPdtUnitFact = DT.FCPdtUnitFact
							WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
							-- 03.04.00 --

							--Update sale before adjust
							UPDATE TCNTPdtAdjStkDT WITH(ROWLOCK)
							SET FCAjdSaleB4AdjC1 = ISNULL(SAL.FCXsdQty,0)
							,FCAjdQtyAllDiff = ((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(SAL.FCXsdQty,0)) - ISNULL(DT.FCAjdWahB4Adj,0))
							FROM TCNTPdtAdjStkDT DT
							--LEFT JOIN (SELECT HD.FDXshDocDate, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
							--	FROM TPSTSalHD HD WITH(NOLOCK)
							--	INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
							--	WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
							--	GROUP BY HD.FDXshDocDate, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FDAjdDateTime > SAL.FDXshDocDate
							-- 03.01.00 --
							--LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty
							LEFT JOIN (SELECT HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode, SUM(DT.FCXsdQtyAll) AS FCXsdQty -- 03.03.00 --
								FROM TPSTSalHD HD WITH(NOLOCK)
								INNER JOIN TPSTSalDT DT WITH(NOLOCK) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
								WHERE ISNULL(HD.FTXshStaPrcStk,'') = ''
								AND HD.FTBchCode = @ptBchCode
								--GROUP BY HD.FTBchCode, DT.FTPdtCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode
								GROUP BY HD.FTBchCode, DT.FTPdtCode, DT.FTPunCode) SAL ON DT.FTPdtCode = SAL.FTPdtCode AND DT.FTPunCode = SAL.FTPunCode	-- 03.03.00 --
							-- 03.01.00 --
							--WHERE DT.FDAjdDateTime > SAL.FDXshDocDate
							WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo	-- 5. --

							--insert data to Temp
							INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
							SELECT @ptDocNo AS FTComName,HD.FTBchCode,HD.FTAjhDocNo AS FTStkDocNo
							,'5' AS FTStkType
							,FTPdtCode AS FTPdtCode
							--, ((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) AS FCStkQty,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate
							, SUM(((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0))) AS FCStkQty,HD.FTAjhWhTo AS FTWahCode,HD.FDAjhDocDate AS FDStkDate		-- 03.02.00 --
							, ROUND(0,2) AS FCStkSetPrice
							, ROUND(0,2) AS FCStkCostIn
							, ROUND(0,2) AS FCStkCostEx
							FROM TCNTPdtAdjStkDT DT with(nolock)
							INNER JOIN TCNTPdtAdjStkHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTAjhDocNo = HD.FTAjhDocNo
							WHERE HD.FTBchCode=@ptBchCode AND HD.FTAjhDocNo =@ptDocNo
							AND HD.FTAjhDocType IN ('2','3')
							AND ((ISNULL(DT.FCAjdQtyAll,0) + ISNULL(DT.FCAjdSaleB4AdjC1,0)) - ISNULL(DT.FCAjdWahB4Adj,0)) <> 0
							GROUP BY HD.FTBchCode ,HD.FTAjhDocNo,DT.FTPdtCode,HD.FTAjhWhTo,HD.FDAjhDocDate	-- 03.02.00 --

							--insert data to stock card
							INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
							SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
							GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
							FROM @TTmpPrcStk
							WHERE FTComName = @ptDocNo

							--update qty to stock balance
							--UPDATE TCNTPdtStkBal with(rowlock) 
							----SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
							--SET FCStkQty= TMP.FCStkQty	-- 03.03.00 --
							--,FDLastUpdOn = GETDATE()
							--,FTLastUpdBy = @ptWho
							--FROM TCNTPdtStkBal BAL
							--INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
							--WHERE TMP.FTComName=@ptDocNo 
							--AND ISNULL(TMP.FCStkQty,0)<>0

							-- 03.04.00 --
							UPDATE TCNTPdtStkBal with(rowlock) 
							SET FCStkQty= TMP.FCStkQty
							,FDLastUpdOn = GETDATE()
							,FTLastUpdBy = @ptWho
							FROM TCNTPdtStkBal BAL
							INNER JOIN (SELECT HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode,SUM(DT.FCAjdQtyAll+DT.FCAjdSaleB4AdjC1) AS FCStkQty 
									FROM TCNTPdtAdjStkDT DT with(nolock)
									INNER JOIN TCNTPdtAdjStkHD HD with(nolock) on HD.FTBchCode = DT.FTBchCode AND HD.FTAjhDocNo = DT.FTAjhDocNo
									WHERE DT.FTBchCode=@ptBchCode AND DT.FTAjhDocNo =@ptDocNo
									GROUP BY HD.FTAjhBchTo,HD.FTAjhWhTo,DT.FTPdtCode
									) TMP ON TMP.FTAjhBchTo = BAL.FTBchCode AND TMP.FTAjhWhTo = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
							-- 03.04.00 --

							--insert to Stock balance
							INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
							SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty,GETDATE(),@ptWho,GETDATE(),@ptWho
							FROM @TTmpPrcStk TMP
							LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
							WHERE ISNULL(BAL.FTPdtCode,'') = ''

							--Cost
							UPDATE TCNMPdtCostAvg with(rowlock)
							SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
							,FCPdtQtyBal = STK.FCStkQty
							,FDLastUpdOn = GETDATE()
							FROM TCNMPdtCostAvg COST
							INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
							INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
						END
			END
		
	END	-- 3. --
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxBchPdtTnf]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxBchPdtTnf]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxBchPdtTnf] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxBchPdtTnf]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		
/*---------------------------------------------------------------------
Document History
Version		Date			User	Remark
00.01.00	24/03/2020		Em		create  
00.02.00	26/03/2020		Em		แก้ไขข้อมูลลงตามสาขาต้นทางปลายทาง
00.03.00	09/04/2020		Em		แก้ไขปรับปรุง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcBchTnf'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') AS FTXthStaPrcStk FROM TCNTPdtTbxHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)	

	IF @tStaPrc <> '1'	
	BEGIN
		--Create stk balance
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,
		SELECT DISTINCT HD.FTXthBchFrm,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,	-- 00.02.00 --
		GETDATE() AS FDLastUpd,@ptWho,	
		GETDATE() AS FDCreateOn,@ptWho	
		FROM TCNTPdtTbxHD HD WITH(NOLOCK)		
		INNER JOIN TCNTPdtTbxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo		
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = ''

		--Update In
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Tfb.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho	
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTXthBchTo,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll	-- 00.03.00 --
				FROM TCNTPdtTbxHD HD WITH(NOLOCK)		
				INNER JOIN TCNTPdtTbxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo	
				WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
				--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Tfb  ON Tfb.FTBchCode = STK.FTBchCode AND Tfb.FTXthWhTo = STK.FTWahCode AND Tfb.FTPdtCode = STK.FTPdtCode
				GROUP BY HD.FTXthBchTo,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Tfb  ON Tfb.FTXthBchTo = STK.FTBchCode AND Tfb.FTXthWhTo = STK.FTWahCode AND Tfb.FTPdtCode = STK.FTPdtCode	-- 00.03.00 --

		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,SUM(DT.FCXtdQtyAll) AS FCStkQty,	
		SELECT DISTINCT HD.FTXthBchTo,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,	-- 00.02.00 --
		GETDATE() AS FDLastUpdOn,@ptWho,	
		GETDATE() AS FDCreateOn,@ptWho		
		FROM TCNTPdtTbxHD HD WITH(NOLOCK)		
		INNER JOIN TCNTPdtTbxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo		
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = ''
		--GROUP BY HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode	
		GROUP BY HD.FTXthBchTo,HD.FTXthWhTo,DT.FTPdtCode	-- 00.02.00 --

		--Update Out
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Tfb.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho	
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTXthBchFrm,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll	-- 00.03.00 --
			FROM TCNTPdtTbxHD HD WITH(NOLOCK)
			INNER JOIN TCNTPdtTbxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
			WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
			--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Tfb  ON Tfb.FTBchCode = STK.FTBchCode AND Tfb.FTXthWhFrm = STK.FTWahCode AND Tfb.FTPdtCode = STK.FTPdtCode
			GROUP BY HD.FTXthBchFrm,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Tfb  ON Tfb.FTXthBchFrm = STK.FTBchCode AND Tfb.FTXthWhFrm = STK.FTWahCode AND Tfb.FTPdtCode = STK.FTPdtCode	-- 00.03.00 --

		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		--SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		SELECT HD.FTXthBchTo,HD.FTXthDocNo AS FTStkDocNo	-- 00.02.00 --
		,'1' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTbxDT DT with(nolock)
		INNER JOIN TCNTPdtTbxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		GROUP BY HD.FTXthBchTo,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate	-- 00.02.00 --

		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		--SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		SELECT HD.FTXthBchFrm,HD.FTXthDocNo AS FTStkDocNo	-- 00.02.00 --
		,'2' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTbxDT DT with(nolock)
		INNER JOIN TCNTPdtTbxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		GROUP BY HD.FTXthBchFrm,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate	-- 00.02.00 --

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk

		--Cost
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '1'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode

		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt - (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '2'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode
		
	END	
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxBchPdtTnfIn]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxBchPdtTnfIn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxBchPdtTnfIn] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxBchPdtTnfIn]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)
/*---------------------------------------------------------------------
Document History
Version		Date			User	Remark
03.01.00	25/03/2020		Em		create  
03.02.00	26/03/2020		Em		เพิ่มการตรวจสอบ DocType
03.03.00	27/03/2020		Em		แก้ไขขนาดฟิลด์ BchCode จาก 3 เป็น 5
03.04.00	13/04/2020		Em		แก้ไขปรับปรุง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcBchIn'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  

	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') FROM TCNTPdtTbiHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)

	IF @tStaPrc <> '1'
	BEGIN
		--Create stk balance	
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)		
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,
		SELECT DISTINCT HD.FTXthBchTo,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,	-- 03.01.00 --
		GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TCNTPdtTbiHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTbiDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		--WHERE HD.FTXthBchTo = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo -- 03.01.00 --
		AND ISNULL(STK.FTPdtCode,'') = ''		

		UPDATE TCNTPdtIntDTBch WITH(ROWLOCK)
		SET FCXtdQtyRcv = ISNULL(FCXtdQtyRcv,0) + ISNULL(DTi.FCXtdQtyAll,0)
		,FTXtdRvtRef = HDi.FTXthDocNo 
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtIntDTBch DT
		INNER JOIN TCNTPdtTbiHD HDi WITH(NOLOCK) ON HDi.FTXthRefInt = DT.FTXthDocNo AND HDi.FTXthBchTo = DT.FTXthBchTo AND HDi.FTXthWhTo = DT.FTXthWahTo
		INNER JOIN TCNTPdtTbiDT DTi WITH(NOLOCK) ON HDi.FTXthDocNo = DTi.FTXthDocNo AND DTi.FTPdtCode = DT.FTPdtCode
		--WHERE HDi.FTXthBchTo = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo
		WHERE HDi.FTBchCode = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo  -- 03.01.00 --
		--AND ISNULL(DTi.FTXtdDocNoRef,'') = ''
		AND HDi.FNXthDocType = 5  -- 2. --

		UPDATE TCNTPdtTboHD WITH(ROWLOCK)
		SET FTXthRefInt = @ptDocNo
		FROM TCNTPdtTboHD HDo
		INNER JOIN TCNTPdtTbiHD HDi WITH(NOLOCK) ON HDo.FTXthDocNo = HDi.FTXthRefInt
		WHERE HDi.FTBchCode = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo

		--Update balance In
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Tbi.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = Tbi.FTLastUpdBy
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTXthBchTo,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll -- 03.01.00 --
			FROM TCNTPdtTbiHD HD WITH(NOLOCK)
			INNER JOIN TCNTPdtTbiDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
			--WHERE HD.FTXthBchTo = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
			WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo	-- 03.01.00 --
			--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Tbi  ON Tbi.FTBchCode = STK.FTBchCode AND Tbi.FTXthWhTo = STK.FTWahCode AND Tbi.FTPdtCode = STK.FTPdtCode
			GROUP BY HD.FTXthBchTo,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Tbi  ON Tbi.FTXthBchTo = STK.FTBchCode AND Tbi.FTXthWhTo = STK.FTWahCode AND Tbi.FTPdtCode = STK.FTPdtCode -- 03.01.00 --

		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		--SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		SELECT HD.FTXthBchTo,HD.FTXthDocNo AS FTStkDocNo	-- 03.01.00 --
		,'1' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTbiDT DT with(nolock)
		INNER JOIN TCNTPdtTbiHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate,HD.FTXthBchTo

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk
	END 
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxBchPdtTnfOut]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxBchPdtTnfOut]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxBchPdtTnfOut] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxBchPdtTnfOut]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5),  -- 2. --
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)
/*---------------------------------------------------------------------
Document History
Version		Date			User	Remark
03.01.00	25/03/2020		Em		create  
03.02.00	27/03/2020		Em		แก้ไขขนาดฟิลด์สาขาจาก 3 เป็น 5
03.03.00	13/04/2020		Em		แก้ไขปรับปรุง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcBchOut'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  

	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') FROM TCNTPdtTboHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)

	IF @tStaPrc <> '1'	-- 6. --
	BEGIN
		--Create stk balance
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)	
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,	
		SELECT DISTINCT HD.FTXthBchFrm,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,	-- 03.03.00 --
		GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TCNTPdtTboHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTboDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTXthBchFrm = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode	-- 03.03.00 --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = ''

		--Delete old data
		DELETE FROM TCNTPdtIntDTBch WHERE  FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo

		--Insert new data
		INSERT INTO TCNTPdtIntDTBch(FTBchCode, FTXthDocNo, FNXtdSeqNo, FNXthDocType, FTXthBchTo, FTXthWahTo, 
			FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, FCXtdQtyRcv, FCXtdQtyAll,		
			FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		SELECT HD.FTBchCode, HD.FTXthDocNo, FNXtdSeqNo, '2', HD.FTXthBchTo, FTXthWhTo, 
			FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, 0 AS FCXtdQtyRcv, FCXtdQtyAll,		
			GETDATE() AS FDLastUpdOn, @ptWho AS FTLastUpdBy, GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM TCNTPdtTboDT DT WITH(NOLOCK)
		INNER JOIN TCNTPdtTboHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo 
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo

		--Update balance Out
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Two.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = Two.FTLastUpdBy
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTXthBchFrm,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll	-- 03.03.00 --
		FROM TCNTPdtTboHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTboDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Two  ON Two.FTBchCode = STK.FTBchCode AND Two.FTXthWhFrm = STK.FTWahCode AND Two.FTPdtCode = STK.FTPdtCode
		GROUP BY HD.FTXthBchFrm,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Two  ON Two.FTXthBchFrm = STK.FTBchCode AND Two.FTXthWhFrm = STK.FTWahCode AND Two.FTPdtCode = STK.FTPdtCode	-- 03.03.00 --

		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		--SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		SELECT HD.FTXthBchFrm,HD.FTXthDocNo AS FTStkDocNo	-- 03.03.00 --
		,'2' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTboDT DT with(nolock)
		INNER JOIN TCNTPdtTboHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		GROUP BY HD.FTXthBchFrm,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate	-- 03.03.00 --

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk
	END	 
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxPricePrc]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxPricePrc]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxPricePrc] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_DOCxPricePrc]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tHQCode varchar(5)
DECLARE @tBchTo varchar(5)	--2.--
DECLARE @tZneTo varchar(30)	--2.--
DECLARE @tAggCode  varchar(5)	--2.--
DECLARE @tPplCode  varchar(5)	--2.--
DECLARE @TTmpPrcPri TABLE 
   ( 
   --FTAggCode  varchar(5), /*Arm 63-06-08 Comment Code */
   --FTPghZneTo varchar(30), /*Arm 63-06-08 Comment Code */
   --FTPghBchTo varchar(5), /*Arm 63-06-08 Comment Code */
   FTPghDocNo varchar(20), 
   FTPplCode varchar(20), 
   FTPdtCode varchar(20),
   FTPunCode varchar(5),
   FDPghDStart datetime,
   FTPghTStart varchar(10),
   FDPghDStop datetime,
   FTPghTStop varchar(10),
   FTPghDocType varchar(1),
   FTPghStaAdj varchar(1),
   FCPgdPriceRet numeric(18, 4),
   --FCPgdPriceWhs numeric(18, 4), /*Arm 63-06-08 Comment Code */
   --FCPgdPriceNet numeric(18, 4), /*Arm 63-06-08 Comment Code */
   FTPdtBchCode varchar(5)
   ) 
DECLARE @tStaPrc varchar(1)		-- 6. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.23/03/2020	Em		create  
2.08/06/2020    Arm     แก้ไข ยกเลิกฟิวด์
----------------------------------------------------------------------*/
BEGIN TRY
	--SET @tHQCode = ISNULL((SELECT TOP 1 FTBchCode FROM TCNMBranch with(nolock) WHERE ISNULL(FTBchStaHQ,'') = '1' ),'')

	/*Arm 63-06-08 Comment Code */
	--SELECT TOP 1 @tAggCode = ISNULL(FTAggCode,'') ,@tZneTo = ISNULL(FTXphZneTo,''),@tBchTo = ISNULL(FTXphBchTo,'') 
	--,@tPplCode = ISNULL(FTPplCode,'') 
	--,@tStaPrc = ISNULL(FTXphStaPrcDoc,'')	-- 6. --
	--FROM TCNTPdtAdjPriHD with(nolock) WHERE FTXphDocNo = @ptDocNo	--4.--
	
	/*Arm 63-06-08 Edit Code */
	SELECT TOP 1 @tPplCode = ISNULL(FTPplCode,'') 
	,@tStaPrc = ISNULL(FTXphStaPrcDoc,'')	-- 6. --
	FROM TCNTPdtAdjPriHD with(nolock) WHERE FTXphDocNo = @ptDocNo	--4.--
	/*Arm 63-06-08 End Edit Code */


	IF @tStaPrc <> '1'	-- 6. --
	BEGIN
		--INSERT INTO @TTmpPrcPri(FTAggCode, FTPghZneTo, FTPghBchTo, FTPplCode, FTPdtCode, FTPunCode, FDPghDStart, FTPghTStart, /*Arm 63-06-08 Comment Code */
		--FDPghDStop, FTPghTStop, FTPghDocNo, FTPghDocType, FTPghStaAdj, FCPgdPriceRet, FCPgdPriceWhs, FCPgdPriceNet, FTPdtBchCode) /*Arm 63-06-08 Comment Code */
		INSERT INTO @TTmpPrcPri(FTPplCode, FTPdtCode, FTPunCode, FDPghDStart, FTPghTStart,
		FDPghDStop, FTPghTStop, FTPghDocNo, FTPghDocType, FTPghStaAdj, FCPgdPriceRet, FTPdtBchCode)
		-- SELECT DISTINCT ISNULL(HD.FTAggCode,'') AS FTAggCode, ISNULL(HD.FTXphZneTo,'') AS FTPghZneTo, ISNULL(HD.FTXphBchTo,'') AS FTPghBchTo, ISNULL(HD.FTPplCode,'') AS FTPplCode, /*Arm 63-06-08 Comment Code */
		SELECT DISTINCT ISNULL(HD.FTPplCode,'') AS FTPplCode, 
				DT.FTPdtCode, DT.FTPunCode, HD.FDXphDStart, HD.FTXphTStart,
				HD.FDXphDStop, HD.FTXphTStop , HD.FTXphDocNo, HD.FTXphDocType, HD.FTXphStaAdj, 
				--DT.FCXpdPriceRet, DT.FCXpdPriceWhs, DT.FCXpdPriceNet, DT.FTXpdBchTo		--2.-- /*Arm 63-06-08 Comment Code */
				DT.FCXpdPriceRet, DT.FTXpdBchTo		--2.--
		FROM TCNTPdtAdjPriDT DT with(nolock)		--4.--
		INNER JOIN TCNTPdtAdjPriHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXphDocNo = HD.FTXphDocNo	--4.--
		WHERE HD.FTXphDocNo = @ptDocNo	-- 7. --

		INSERT INTO TCNTPdtPrice4PDT
			(FTPdtCode, FTPunCode, FDPghDStart, FTPghTStart,FDPghDStop, FTPghTStop, 
			FTPghDocNo, FTPghDocType, FTPghStaAdj, FCPgdPriceRet, --FCPgdPriceWhs, FCPgdPriceNet, /*Arm 63-06-08 Comment Code */
			FTPplCode,
			FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)	-- 5.--
		SELECT FTPdtCode, FTPunCode, FDPghDStart, FTPghTStart,FDPghDStop, FTPghTStop, 
			FTPghDocNo, FTPghDocType, FTPghStaAdj, FCPgdPriceRet, --FCPgdPriceWhs, FCPgdPriceNet,
			FTPplCode,
			GETDATE(),@ptWho,GETDATE(),@ptWho	-- 5. --
		FROM @TTmpPrcPri

	END	-- 6. --
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
	select ERROR_MESSAGE()
END CATCH
GO

/****** Object:  StoredProcedure [dbo].[STP_DOCxPurchaseCNPrc]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxPurchaseCNPrc]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxPurchaseCNPrc] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxPurchaseCNPrc]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tDate varchar(10)
DECLARE @tTime varchar(8)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5),	-- 3. --
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		-- 2. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.17/06/2018	Em		create  
2.05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร
3.24/07/2019	Em		แก้ไขขนาดฟิลด์ Branch จาก 3 เป็น 5
4.30/07/2019	Em		เพิ่ม Insert StkBal และคำนวณต้นทุน
5.31/07/2019	Em		แก้ไขการปรับสต๊อก
----------------------------------------------------------------------*/
BEGIN TRY
	SET @tDate = CONVERT(VARCHAR(10),GETDATE(),121)
	SET @tTime = CONVERT(VARCHAR(8),GETDATE(),108)
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXphStaPrcStk,'') AS FTXphStaPrcStk FROM TAPTPcHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXphDocNo = @ptDocNo)	-- 2. --

	IF @tStaPrc <> '1'	-- 2. --
	BEGIN
		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT @ptDocNo AS FTComName,HD.FTBchCode,HD.FTXphDocNo AS FTStkDocNo
		,'2' AS FTStkType
		,FTPdtCode AS FTPdtStkCode
		, SUM(FCXpdQtyAll) AS FCStkQty,HD.FTWahCode AS FTWahCode,HD.FDXphDocDate AS FDStkDate
		, ROUND(SUM(DT.FCXpdNet)/SUM(FCXpdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXpdCostIn)/SUM(FCXpdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXpdCostEx)/SUM(FCXpdQtyAll),2) AS FCStkCostEx
		FROM TAPTPcDT DT with(nolock)
		INNER JOIN TAPTPcHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXphDocNo = HD.FTXphDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXphDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTWahCode,HD.FTXphDocNo,HD.FNXphDocType,DT.FTPdtCode,HD.FDXphDocDate

		--insert data to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk
		WHERE FTComName = @ptDocNo

		--update qty to stock balance
		UPDATE TCNTPdtStkBal with(rowlock) 
		--SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
		SET FCStkQty= BAL.FCStkQty - TMP.FCStkQty	-- 5. --
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtStkBal BAL 
		INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
		WHERE TMP.FTComName=@ptDocNo 
		AND ISNULL(TMP.FCStkQty,0)<>0

		-- 4. --
		--insert to Stock balance
		INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
		SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty*(-1),GETDATE(),@ptWho,GETDATE(),@ptWho
		FROM @TTmpPrcStk TMP
		LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
		WHERE ISNULL(BAL.FTPdtCode,'') = ''
		-- 4. --

		-- 4. --
		--Cost
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt - (TMP.FCStkQty*TMP.FCStkCostEx)
		,FCPdtCostEx = ROUND((FCPdtCostAmt - (TMP.FCStkQty*TMP.FCStkCostEx)) / STK.FCStkQty,2)
		,FCPdtCostLast = TMP.FCStkCostEx
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
		--INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode
		-- 5. --
		INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
		
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostIn = ROUND(FCPdtCostEx + (FCPdtCostEx * VAT.FCVatRate/100),2) 
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
		INNER JOIN TCNMPdt PDT with(nolock) ON COST.FTPdtCode = PDT.FTPdtCode
		INNER JOIN (
			SELECT FTVatCode,MAX(FDVatStart) AS FDVatStart 
			FROM TCNMVatRate with(nolock) 
			WHERE CONVERT(VARCHAR(10),FDVatStart,121) < CONVERT(VARCHAR(10),GETDATE(),121) 
			GROUP BY FTVatCode) VATT ON PDT.FTVatCode = VATT.FTVatCode
		INNER JOIN TCNMVatRate VAT with(nolock) ON VATT.FTVatCode = VAT.FTVatCode AND VATT.FDVatStart = VAT.FDVatStart
		-- 5. --

	END	-- 2. --
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxPurchaseInvPrc]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxPurchaseInvPrc]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxPurchaseInvPrc] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxPurchaseInvPrc]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tDate varchar(10)
DECLARE @tTime varchar(8)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5),	-- 3. -- 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		-- 2. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.12/06/2018	Em		create 
2.05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร 
3.24/07/2019	Em		แก้ไขขนาดฟิลด์ Branch จาก 3 เป็น 5
4.30/07/2019	Em		เพิ่ม Insert StkBal และปรับต้นทุน
5.31/07/2019	Em		แก้ไขการปรับต้นทุน
----------------------------------------------------------------------*/
BEGIN TRY
	SET @tDate = CONVERT(VARCHAR(10),GETDATE(),121)
	SET @tTime = CONVERT(VARCHAR(8),GETDATE(),108)
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXphStaPrcStk,'') AS FTXphStaPrcStk FROM TAPTPiHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXphDocNo = @ptDocNo)	-- 2. --

	IF @tStaPrc <> '1'	-- 2. --
	BEGIN
		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXphDocNo AS FTStkDocNo
		,'1' AS FTStkType
		,FTPdtCode AS FTPdtStkCode
		, SUM(FCXpdQtyAll) AS FCStkQty,HD.FTWahCode AS FTWahCode,HD.FDXphDocDate AS FDStkDate
		, ROUND(SUM(DT.FCXpdNet)/SUM(FCXpdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXpdCostIn)/SUM(FCXpdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXpdCostEx)/SUM(FCXpdQtyAll),2) AS FCStkCostEx
		FROM TAPTPiDT DT with(nolock)
		INNER JOIN TAPTPiHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXphDocNo = HD.FTXphDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXphDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTWahCode,HD.FTXphDocNo,HD.FNXphDocType,DT.FTPdtCode,HD.FDXphDocDate

		--insert data to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk

		--update qty to stock balance
		UPDATE TCNTPdtStkBal with(rowlock) 
		SET FCStkQty= BAL.FCStkQty + TMP.FCStkQty
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtStkBal BAL
		INNER JOIN @TTmpPrcStk TMP ON BAL.FTPdtCode =TMP.FTPdtCode AND BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode
		AND ISNULL(TMP.FCStkQty,0) <> 0

		-- 4. --
		--insert to Stock balance
		INSERT INTO TCNTPdtStkBal with(rowlock)(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
		SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,TMP.FCStkQty,GETDATE(),@ptWho,GETDATE(),@ptWho
		FROM @TTmpPrcStk TMP
		LEFT JOIN TCNTPdtStkBal BAL with(NOLOCK) ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTWahCode = BAL.FTWahCode AND TMP.FTPdtCode = BAL.FTPdtCode
		WHERE ISNULL(BAL.FTPdtCode,'') = ''
		-- 4. --

		-- 4. --
		--Cost
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*TMP.FCStkCostEx)
		,FCPdtCostEx = ROUND((FCPdtCostAmt + (TMP.FCStkQty*TMP.FCStkCostEx)) / STK.FCStkQty,2)
		,FCPdtCostLast = TMP.FCStkCostEx
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
		--INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode
		-- 5. --
		INNER JOIN (SELECT FTPdtCode,SUM(FCStkQty) AS FCStkQty FROM TCNTPdtStkBal with(nolock) WHERE FTBchCode = @ptBchCode GROUP BY FTPdtCode) STK ON COST.FTPdtCode = STK.FTPdtCode
		
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostIn = ROUND(FCPdtCostEx + (FCPdtCostEx * VAT.FCVatRate/100),2) 
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode
		INNER JOIN TCNMPdt PDT with(nolock) ON COST.FTPdtCode = PDT.FTPdtCode
		INNER JOIN (
			SELECT FTVatCode,MAX(FDVatStart) AS FDVatStart 
			FROM TCNMVatRate with(nolock) 
			WHERE CONVERT(VARCHAR(10),FDVatStart,121) < CONVERT(VARCHAR(10),GETDATE(),121) 
			GROUP BY FTVatCode) VATT ON PDT.FTVatCode = VATT.FTVatCode
		INNER JOIN TCNMVatRate VAT with(nolock) ON VATT.FTVatCode = VAT.FTVatCode AND VATT.FDVatStart = VAT.FDVatStart
		-- 5. --

		INSERT INTO TCNMPdtCostAvg(FTPdtCode,FCPdtCostEx,FCPdtCostIn,FCPdtCostLast,FCPdtCostAmt,FCPdtQtyBal,FDLastUpdOn)
		SELECT TMP.FTPdtCode,FCStkCostEx,FCStkCostIn,FCStkCostEx,(FCStkQty*FCStkCostEx) AS FCStkCostAmt,FCStkQty,GETDATE()
		FROM @TTmpPrcStk TMP
		LEFT JOIN TCNMPdtCostAvg COST with(nolock) ON TMP.FTPdtCode = COST.FTPdtCode
		WHERE ISNULL(COST.FTPdtCode,'') = ''
		-- 4. --

		-- 5. --
		UPDATE TCNMPdtSpl with(rowlock)
		SET FCSplLastPrice = DT.FCXpdSetPrice
		FROM TCNMPdtSpl SPL
		INNER JOIN TAPTPiHD HD with(nolock) ON SPL.FTSplCode = HD.FTSplCode
		INNER JOIN TAPTPiDT DT with(nolock) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXphDocNo = DT.FTXphDocNo AND SPL.FTPdtCode = DT.FTPdtCode AND SPL.FTBarCode = DT.FTXpdBarCode
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXphDocNo =@ptDocNo
		-- 5. --
	END		-- 2. --
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxSalePrcStk]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxSalePrcStk]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxSalePrcStk] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxSalePrcStk]
 @ptBchCode varchar(5)	-- 5. --
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tDate varchar(10)
DECLARE @tTime varchar(8)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5),		-- 5. --
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCXsdSetPrice decimal(18,2),
   FCXsdCostIn decimal(18,2),
   FCXsdCostEx decimal(18,2)
   ) 
DECLARE @tTrans varchar(20)
DECLARE @tStaPrc varchar(1)		-- 4. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.22/02/2019	Em		create  
2.22/04/2019	Em		แก้ไขในส่วนของการตัดสต๊อก Vending
3.17/06/2019	Em		เอาฟิลด์ StkCode ออก
4.05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร 
5.25/07/2019	Em		ปรับขนาดฟิลด์ Branch จาก 3 เป็น 5 และเอา Process Vending ออก
6.19/09/2019	Em		เพิ่มการ Insert ลงตาราง StkBal กรณีที่ยังไม่มีรายการอัพเดท
----------------------------------------------------------------------*/
SET @tTrans = 'PrcStk'
BEGIN TRY
	BEGIN TRANSACTION @tTrans
	SET @tDate = CONVERT(VARCHAR(10),GETDATE(),121)
	SET @tTime = CONVERT(VARCHAR(8),GETDATE(),108)
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXshStaPrcStk,'') FROM TPSTSalHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXshDocNo = @ptDocNo)	-- 4. --

	IF @tStaPrc <> '1'	-- 4. --
	BEGIN
		-- 5. --
		--IF EXISTS(SELECT TOP 1 FTXshDocNo FROM TPSTSalDTVD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXshDocNo = @ptDocNo) BEGIN
		--	--insert data to Temp
		--	--INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FTPdtStkCode,FCStkQty,FTWahCode,FDStkDate,FCXsdSetPrice,FCXsdCostIn,FCXsdCostEx)
		--	INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCXsdSetPrice,FCXsdCostIn,FCXsdCostEx)		--3.--
		--	SELECT HD.FTBchCode,HD.FTXshDocNo AS FTStkDocNo
		--	,CASE WHEN HD.FNXshDocType='1'THEN '3' ELSE '4' END AS FTStkType
		--	--,DT.FTPdtCode,FTXsdStkCode AS FTPdtStkCode
		--	,DT.FTPdtCode		--3.--
		--	, DT.FCXsdQtyAll AS FCStkQty,FTWahCode AS FTWahCode,HD.FDXshDocDate AS FDStkDate
		--	, DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx
		--	FROM TPSTSalDT DT with(nolock)
		--	INNER JOIN TPSTSalHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo
		--	LEFT JOIN TPSTSalDTVD VD with(nolock) ON DT.FTBchCode = VD.FTBchCode AND DT.FNXsdSeqNo = VD.FNXsdSeqNo AND ISNULL(VD.FTXsvStaPayItem,'2') = '1'
		--	WHERE HD.FTBchCode=@ptBchCode AND HD.FTXshDocNo = @ptDocNo
		--	AND ISNULL(FTXsdStaPdt,'')NOT IN('4','5')

		--	--update Stk balance
		--	UPDATE TCNTPdtStkBal with(rowlock)
		--	SET FCStkQty = ISNULL(STK.FCStkQty,0) + (CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END)
		--	,FDLastUpdOn = GETDATE()
		--	,FTLastUpdBy = @ptWho
		--	FROM TCNTPdtStkBal STK
		--	--INNER JOIN @TTmpPrcStk TMP ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtStkCode = TMP.FTPdtStkCode
		--	INNER JOIN @TTmpPrcStk TMP ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtCode = TMP.FTPdtCode		--3.--

		--	--insert stk card
		--	--INSERT INTO TCNTPdtStkCrd( FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtStkCode, FTStkType, FCStkQty, FCStkSetPrice, FCStkCostIn, FCStkCostEx, FDCreateOn, FTCreateBy)
		--	--SELECT  FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtStkCode, FTStkType, FCStkQty, FCXsdSetPrice, FCXsdCostIn, FCXsdCostEx, GETDATE() AS FDCreateOn,@ptWho AS FTCreateBy
		--	INSERT INTO TCNTPdtStkCrd( FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCStkSetPrice, FCStkCostIn, FCStkCostEx, FDCreateOn, FTCreateBy)		--3.--
		--	SELECT  FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCXsdSetPrice, FCXsdCostIn, FCXsdCostEx, GETDATE() AS FDCreateOn,@ptWho AS FTCreateBy		--3.--
		--	FROM @TTmpPrcStk

		--	--update stk balance vending
		--	UPDATE TVDTPdtStkBal with(rowlock)
		--	SET FCStkQty = ISNULL(STK.FCStkQty,0) + (CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END)
		--	,FDLastUpdOn = GETDATE()
		--	,FTLastUpdBy = @ptWho
		--	FROM TVDTPdtStkBal STK
		--	--INNER JOIN @TTmpPrcStk TMP  ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtStkCode = TMP.FTPdtStkCode
		--	INNER JOIN @TTmpPrcStk TMP  ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtCode = TMP.FTPdtCode		--3.--
		--	INNER JOIN TPSTSalDTVD VDT with(nolock) ON TMP.FTBchCode = VDT.FTBchCode AND TMP.FTStkDocNo = VDT.FTXshDocNo AND TMP.FTPdtCode = VDT.FTPdtCode
		--			AND STK.FNLayRow = VDT.FNLayRow AND STK.FNLayCol = VDT.FNLayCol AND ISNULL(VDT.FTXsvStaPayItem,'2') = '1'

		--END
		--ELSE 
		-- 5.--
		BEGIN
			--insert data to Temp
			--INSERT INTO @TTmpPrcStk (FTComName,FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FTPdtStkCode,FCStkQty,FTWahCode,FDStkDate,FCXsdSetPrice,FCXsdCostIn,FCXsdCostEx)
			INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCXsdSetPrice,FCXsdCostIn,FCXsdCostEx)		--3.--
			SELECT HD.FTBchCode,HD.FTXshDocNo AS FTStkDocNo
			,CASE WHEN HD.FNXshDocType='1'THEN '3' ELSE '4' END AS FTStkType
			--,FTPdtCode,FTXsdStkCode AS FTPdtStkCode
			,FTPdtCode		--3.--
			, SUM(DT.FCXsdQtyAll) AS FCStkQty,FTWahCode AS FTWahCode,HD.FDXshDocDate AS FDStkDate
			, DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx
			FROM TPSTSalDT DT with(nolock)
			INNER JOIN TPSTSalHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo
			WHERE HD.FTBchCode=@ptBchCode AND HD.FTXshDocNo =@ptDocNo
			AND ISNULL(FTXsdStaPdt,'')NOT IN('4','5')
			--GROUP BY HD.FTBchCode,HD.FTWahCode,HD.FTXshDocNo,HD.FNXshDocType,DT.FTPdtCode,DT.FTXsdStkCode,HD.FDXshDocDate,DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx
			GROUP BY HD.FTBchCode,HD.FTWahCode,HD.FTXshDocNo,HD.FNXshDocType,DT.FTPdtCode,HD.FDXshDocDate,DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx		--3.--

			--update Stk balance
			UPDATE TCNTPdtStkBal with(rowlock)
			SET FCStkQty = ISNULL(STK.FCStkQty,0) + (CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END)
			,FDLastUpdOn = GETDATE()
			,FTLastUpdBy = @ptWho
			FROM TCNTPdtStkBal STK
			--INNER JOIN @TTmpPrcStk TMP ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtStkCode = TMP.FTPdtStkCode
			INNER JOIN @TTmpPrcStk TMP ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtCode = TMP.FTPdtCode		--3.--

			-- 6. --
			INSERT INTO TCNTPdtStkBal(FTBchCode,FTWahCode,FTPdtCode,FCStkQty,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
			SELECT TMP.FTBchCode,TMP.FTWahCode,TMP.FTPdtCode,(CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END) AS FCStkQty,
			GETDATE() AS FDLastUpdOn, @ptWho AS FTLastUpdBy, GETDATE() AS FDCreateOn, @ptWho FTCreateBy
			FROM @TTmpPrcStk TMP
			LEFT JOIN TCNTPdtStkBal BAL WITH(NOLOCK) ON BAL.FTBchCode = TMP.FTBchCode AND BAL.FTWahCode = TMP.FTWahCode AND BAL.FTPdtCode = TMP.FTPdtCode
			WHERE ISNULL(BAL.FTPdtCode,'') = ''
			-- 6. --

			--insert stk card
			--INSERT INTO TCNTPdtStkCrd( FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtStkCode, FTStkType, FCStkQty, FCStkSetPrice, FCStkCostIn, FCStkCostEx, FDCreateOn, FTCreateBy)
			--SELECT  FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtStkCode, FTStkType, FCStkQty, FCXsdSetPrice, FCXsdCostIn, FCXsdCostEx, GETDATE() AS FDCreateOn,@ptWho AS FTCreateBy
			INSERT INTO TCNTPdtStkCrd( FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCStkSetPrice, FCStkCostIn, FCStkCostEx, FDCreateOn, FTCreateBy)		--3.--
			SELECT  FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCXsdSetPrice, FCXsdCostIn, FCXsdCostEx, GETDATE() AS FDCreateOn,@ptWho AS FTCreateBy		--3.--
			FROM @TTmpPrcStk
		END
	END -- 4. --
	COMMIT TRANSACTION @tTrans
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
	ROLLBACK TRANSACTION @tTrans
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxSaleVDPrcStk]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxSaleVDPrcStk]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxSaleVDPrcStk] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxSaleVDPrcStk]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tDate varchar(10)
DECLARE @tTime varchar(8)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCXsdSetPrice decimal(18,2),
   FCXsdCostIn decimal(18,2),
   FCXsdCostEx decimal(18,2)
   ) 
DECLARE @tTrans varchar(20)
DECLARE @tStaPrc varchar(1)
DECLARE @tPosName varchar(50)		-- 3. --
/*---------------------------------------------------------------------
Document History
  Version	Date			User	Remark
1.00.01.00	25/07/2019		Em		create  
2.00.02.00	19/08/2019		Em		หารายการถึงจุดที่ต้องเติมสินค้า
3.00.03.00	20/08/2019		Em		หาชื่อเครื่อง POS
4.00.04.00	20/09/2019		Em		ปรับปรุงแก้ไข
5.02.01.00	28/01/2019		Em		ปรับโครงสร้างตารางใหม่
----------------------------------------------------------------------*/
SET @tTrans = 'PrcStk'
BEGIN TRY
	BEGIN TRANSACTION @tTrans
	SET @tDate = CONVERT(VARCHAR(10),GETDATE(),121)
	SET @tTime = CONVERT(VARCHAR(8),GETDATE(),108)
	SET @tStaPrc = ISNULL((SELECT TOP 1 ISNULL(FTXshStaPrcStk,'') AS FTXshStaPrcStk FROM TVDTSalHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXshDocNo = @ptDocNo),'')
	SET @tPosName = ISNULL((SELECT TOP 1 FTPosRegNo FROM TCNMPos POS WITH(NOLOCK) 
					INNER JOIN TVDTSalHD SAL WITH(NOLOCK) ON SAL.FTPosCode = POS.FTPosCode AND SAL.FTBchCode = @ptBchCode AND SAL.FTXshDocNo = @ptDocNo),'')

	IF @tStaPrc <> '1'	-- 4. --
	BEGIN
		IF EXISTS(SELECT TOP 1 FTXshDocNo FROM TVDTSalDTVD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXshDocNo = @ptDocNo) BEGIN
			--insert data to Temp
			INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCXsdSetPrice,FCXsdCostIn,FCXsdCostEx)
			SELECT HD.FTBchCode,HD.FTXshDocNo AS FTStkDocNo
			,CASE WHEN HD.FNXshDocType='1'THEN '3' ELSE '4' END AS FTStkType
			,DT.FTPdtCode
			--, SUM(DT.FCXsdQtyAll) AS FCStkQty,FTWahCode AS FTWahCode,HD.FDXshDocDate AS FDStkDate
			, SUM(DT.FCXsdQtyAll) AS FCStkQty,VD.FTWahCode AS FTWahCode,HD.FDXshDocDate AS FDStkDate		-- 5. --
			, DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx
			FROM TVDTSalDT DT with(nolock)
			INNER JOIN TVDTSalHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo
			--INNER JOIN TVDTSalDTVD VD with(nolock) ON DT.FTBchCode = VD.FTBchCode AND DT.FNXsdSeqNo = VD.FNXsdSeqNo AND ISNULL(VD.FTXsvStaPayItem,'2') = '1'
			INNER JOIN TVDTSalDTVD VD with(nolock) ON DT.FTBchCode = VD.FTBchCode AND DT.FTXshDocNo = VD.FTXshDocNo AND DT.FNXsdSeqNo = VD.FNXsdSeqNo AND ISNULL(VD.FTXsvStaPayItem,'2') = '1'	-- 4. --
			WHERE HD.FTBchCode=@ptBchCode AND HD.FTXshDocNo = @ptDocNo
			AND ISNULL(FTXsdStaPdt,'')NOT IN('4','5')
			--GROUP BY HD.FTBchCode,HD.FTXshDocNo,HD.FNXshDocType,DT.FTPdtCode,FTWahCode,HD.FDXshDocDate, DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx
			GROUP BY HD.FTBchCode,HD.FTXshDocNo,HD.FNXshDocType,DT.FTPdtCode,VD.FTWahCode,HD.FDXshDocDate, DT.FCXsdSetPrice,DT.FCXsdCostIn,DT.FCXsdCostEx	-- 5. --

			--update Stk balance
			UPDATE TCNTPdtStkBal with(rowlock)
			SET FCStkQty = ISNULL(STK.FCStkQty,0) + (CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END)
			,FDLastUpdOn = GETDATE()
			,FTLastUpdBy = @ptWho
			FROM TCNTPdtStkBal STK
			INNER JOIN @TTmpPrcStk TMP ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtCode = TMP.FTPdtCode	

			--insert stk card
			INSERT INTO TCNTPdtStkCrd( FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCStkSetPrice, FCStkCostIn, FCStkCostEx, FDCreateOn, FTCreateBy)
			SELECT  FTBchCode, FDStkDate, FTStkDocNo, FTWahCode, FTPdtCode, FTStkType, FCStkQty, FCXsdSetPrice, FCXsdCostIn, FCXsdCostEx, GETDATE() AS FDCreateOn,@ptWho AS FTCreateBy
			FROM @TTmpPrcStk

			--update stk balance vending
			UPDATE TVDTPdtStkBal with(rowlock)
			SET FCStkQty = ISNULL(STK.FCStkQty,0) + (CASE WHEN TMP.FTStkType = '4' THEN TMP.FCStkQty ELSE TMP.FCStkQty *(-1) END)
			,FDLastUpdOn = GETDATE()
			,FTLastUpdBy = @ptWho
			FROM TVDTPdtStkBal STK
			INNER JOIN @TTmpPrcStk TMP  ON STK.FTBchCode = TMP.FTBchCode AND STK.FTWahCode = TMP.FTWahCode AND STK.FTPdtCode = TMP.FTPdtCode		--3.--
			INNER JOIN TVDTSalDTVD VDT with(nolock) ON TMP.FTBchCode = VDT.FTBchCode AND TMP.FTStkDocNo = VDT.FTXshDocNo AND TMP.FTPdtCode = VDT.FTPdtCode
					AND STK.FNLayRow = VDT.FNLayRow AND STK.FNLayCol = VDT.FNLayCol AND ISNULL(VDT.FTXsvStaPayItem,'2') = '1'

			-- 2. --
			SELECT @tPosName AS FTPosName,BAL.FTPdtCode,BAL.FNLayRow,BAL.FNLayCol,BAL.FCStkQty	-- 3.--
			FROM TVDTPdtStkBal BAL WITH(NOLOCK)
			INNER JOIN
				(SELECT BAL.FTBchCode,BAL.FTWahCode,BAL.FTPdtCode
				FROM TCNMPdtSpcBch PDT WITH(NOLOCK)
				INNER JOIN (SELECT FTBchCode,FTWahCode,FTPdtCode,SUM(FCStkQty)  AS FCStkQty
					FROM TVDTPdtStkBal WITH(NOLOCK)
					GROUP BY FTBchCode,FTWahCode,FTPdtCode) BAL ON PDT.FTPdtCode = BAL.FTPdtCode
				INNER JOIN @TTmpPrcStk TMP ON TMP.FTBchCode = BAL.FTBchCode AND TMP.FTPdtCode = BAL.FTPdtCode
				WHERE BAL.FCStkQty < ISNULL(PDT.FCPdtMin,0)) STK ON BAL.FTBchCode = STK.FTBchCode AND BAL.FTWahCode = STK.FTWahCode AND BAL.FTPdtCode = STK.FTPdtCode
			
			-- 2. --
		END
	END
	COMMIT TRANSACTION @tTrans
	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
	ROLLBACK TRANSACTION @tTrans
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxWahPdtTnf]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxWahPdtTnf]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxWahPdtTnf] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxWahPdtTnf]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5), --4--
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		-- 3. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.28/03/2019	Em		create  
2.13/06/2019	Em		แก้ไขชื่อตาราง
3.05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร
4.22/07/2019	Em		แก้ไขขนาดฟิลด์ BchCode จาก 3 เป็น 5
5.30/07/2019	Em		เพิ่มอัพเดทต้นทุน
6.31/07/2019	Em		แก้ไขปรับปรุง
7.20/09/2019	Em		แก้ไขปรับปรุง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcWahTnf'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') AS FTXthStaPrcStk FROM TCNTPdtTwxHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)	-- 3. --

	IF @tStaPrc <> '1'	-- 3. --
	BEGIN
		--Create stk balance
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,
		--GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		--GETDATE() AS FDCreateOn,HD.FTCreateBy
		GETDATE() AS FDLastUpd,@ptWho,	-- 7. --
		GETDATE() AS FDCreateOn,@ptWho	-- 7. --
		--FROM TCNTPdtTfwHD HD WITH(NOLOCK)
		--INNER JOIN TCNTPdtTfwDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		FROM TCNTPdtTwxHD HD WITH(NOLOCK)		--4.--
		INNER JOIN TCNTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo		--4.-
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = ''

		--Update In
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Tfw.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		--,FTLastUpdBy = Tfw.FTLastUpdBy
		,FTLastUpdBy = @ptWho	-- 7. --
		FROM TCNTPdtStkBal STK
		INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
				--FROM TCNTPdtTfwHD HD WITH(NOLOCK)
				--INNER JOIN TCNTPdtTfwDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
				FROM TCNTPdtTwxHD HD WITH(NOLOCK)		--4.--
				INNER JOIN TCNTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo	--4.--
				WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
				GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Tfw  ON Tfw.FTBchCode = STK.FTBchCode AND Tfw.FTXthWhTo = STK.FTWahCode AND Tfw.FTPdtCode = STK.FTPdtCode

		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,
		--GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		--GETDATE() AS FDCreateOn,HD.FTCreateBy
		SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,SUM(DT.FCXtdQtyAll) AS FCStkQty,	-- 7. --
		GETDATE() AS FDLastUpdOn,@ptWho,	-- 7. --
		GETDATE() AS FDCreateOn,@ptWho		-- 7. --
		--FROM TCNTPdtTfwHD HD WITH(NOLOCK)
		--INNER JOIN TCNTPdtTfwDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		FROM TCNTPdtTwxHD HD WITH(NOLOCK)		--4.--
		INNER JOIN TCNTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo		--4.--
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = ''
		GROUP BY HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode	-- 7. --

		--Update Out
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Tfw.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		--,FTLastUpdBy = Tfw.FTLastUpdBy
		,FTLastUpdBy = @ptWho	-- 7. --
		FROM TCNTPdtStkBal STK
		INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		--FROM TCNTPdtTfwHD HD WITH(NOLOCK)
		--INNER JOIN TCNTPdtTfwDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		FROM TCNTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Tfw  ON Tfw.FTBchCode = STK.FTBchCode AND Tfw.FTXthWhFrm = STK.FTWahCode AND Tfw.FTPdtCode = STK.FTPdtCode

		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		,'1' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTwxDT DT with(nolock)
		INNER JOIN TCNTPdtTwxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate

		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		,'2' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTwxDT DT with(nolock)
		INNER JOIN TCNTPdtTwxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk

		-- 5. --
		--Cost
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '1'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode

		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt - (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '2'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode
		-- 5. --
	END	-- 3. --
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxWahPdtTnfIn]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxWahPdtTnfIn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxWahPdtTnfIn] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxWahPdtTnfIn]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		-- 5. --
/*---------------------------------------------------------------------
Document History
Version		Date		User	Remark
00.01.00	12/02/2019	Em		create  
00.02.00	28/03/2019	Em		เพิ่มการ Update stock balance
00.03.00	23/04/2019	Em		เพิ่มการอัพเดท Stock Vending และแก้ไขการอ้างอิงเอกสาร
00.04.00	17/06/2019	Em		แก้ไขเอาฟิลด์ StkCode และ Insert StkCard
00.05.00	05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร
02.01.00	03/03/2020	Em		ปรับตามโครงสร้างใหม่
03.01.00	13/03/2020	Em		แก้ไขให้อัพเดทเลขที่อ้างอิง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcWahIn'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  

	--SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') FROM TCNTPdtTwiHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)	-- 5. --
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') FROM TCNTPdtTwiHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)  -- 02.01.00 --

	IF @tStaPrc <> '1'	-- 5. --
	BEGIN
		--Create stk balance
		--INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtStkCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTXtdStkCode,0 AS FCStkQty,
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)		--4.--
		SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,		--4.--
		GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TCNTPdtTwiHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwiDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTXtdStkCode = STK.FTPdtStkCode
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode	--4.--
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--AND ISNULL(STK.FTPdtStkCode,'') = ''
		AND ISNULL(STK.FTPdtCode,'') = ''		--4.--
		AND ISNULL(DT.FTXtdStaPrcStk,'') = ''	-- 02.01.00 --
		AND ISNULL(HD.FTXthWhFrm,'') <> ''	-- 02.01.00 --

		--INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtStkCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTXtdStkCode,0 AS FCStkQty,
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)		--4.--
		SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,		--4.--
		GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TCNTPdtTwiHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwiDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTXtdStkCode = STK.FTPdtStkCode
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--AND ISNULL(STK.FTPdtStkCode,'') = ''
		AND ISNULL(STK.FTPdtCode,'') = ''		--4.--
		AND ISNULL(DT.FTXtdStaPrcStk,'') = ''	-- 02.01.00 --
		AND ISNULL(HD.FTXthWhTo,'') <> ''	-- 02.01.00 --

		UPDATE TCNTPdtIntDT WITH(ROWLOCK)
		SET FCXtdQtyRcv = ISNULL(FCXtdQtyRcv,0) + ISNULL(DTi.FCXtdQtyAll,0)
		,FTXtdRvtRef = @ptDocNo	-- 03.01.00 --
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtIntDT DT
		INNER JOIN TCNTPdtTwiHD HDi WITH(NOLOCK) ON HDi.FTXthRefInt = DT.FTXthDocNo
		INNER JOIN TCNTPdtTwiDT DTi WITH(NOLOCK) ON HDi.FTXthDocNo = DTi.FTXthDocNo AND DTi.FTPdtCode = DT.FTPdtCode
		WHERE HDi.FTBchCode = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo
		AND ISNULL(DTi.FTXtdDocNoRef,'') = ''
	
		--UPDATE TCNTPdtIntHD WITH(ROWLOCK)
		--SET FTXthStaRcv = '1'
		--,FDLastUpdOn = GETDATE()
		--,FTLastUpdBy = @ptWho
		--FROM TCNTPdtIntHD HD
		--INNER JOIN TCNTPdtTwiHD HDi WITH(NOLOCK) ON HD.FTXthDocNo = HDi.FTXthRefInt
		--WHERE HDi.FTBchCode = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo

		--3.--
		UPDATE TCNTPdtTwoHD WITH(ROWLOCK)
		SET FTXthRefInt = @ptDocNo
		FROM TCNTPdtTwoHD HDo
		INNER JOIN TCNTPdtTwiHD HDi WITH(NOLOCK) ON HDo.FTXthDocNo = HDi.FTXthRefInt
		WHERE HDi.FTBchCode = @ptBchCode AND HDi.FTXthDocNo = @ptDocNo
		--3.--

		UPDATE TCNTPdtIntDT WITH(ROWLOCK)
		SET FCXtdQtyRcv = ISNULL(FCXtdQtyRcv,0) + ISNULL(DTi.FCXtdQtyAll,0)
		,FTXtdRvtRef = @ptDocNo	-- 03.01.00 --
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtIntDT DT
		INNER JOIN TCNTPdtTwiDT DTi WITH(NOLOCK) ON DT.FTBchCode = DTi.FTXtdBchRef AND DT.FTXthDocNo = DTi.FTXtdDocNoRef AND DT.FTPdtCode = DT.FTPdtCode
		WHERE DTi.FTBchCode = @ptBchCode AND DTi.FTXthDocNo = @ptDocNo
		AND ISNULL(DTi.FTXtdDocNoRef,'') <> ''

		--Update balance In
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Twi.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = Twi.FTLastUpdBy
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTXtdStkCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll		--4.--
		FROM TCNTPdtTwiHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwiDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(DT.FTXtdStaPrcStk,'') = ''	-- 02.01.00 --
		AND ISNULL(HD.FTXthWhTo,'') <> ''	-- 02.01.00 --
		--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTXtdStkCode) Twi  ON Twi.FTBchCode = STK.FTBchCode AND Twi.FTXthWhTo = STK.FTWahCode AND Twi.FTXtdStkCode = STK.FTPdtStkCode
		GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhTo, DT.FTPdtCode) Twi  ON Twi.FTBchCode = STK.FTBchCode AND Twi.FTXthWhTo = STK.FTWahCode AND Twi.FTPdtCode = STK.FTPdtCode		--4.--

		--3.--
		UPDATE TVDTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(DTV.FCXtdQty,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = DT.FTLastUpdBy
		FROM TVDTPdtStkBal STK
		INNER JOIN TCNTPdtTwiDTVD DTV WITH(NOLOCK) ON STK.FTBchCode = DTV.FTBchCode AND STK.FNLayRow = DTV.FNLayRow AND STK.FNLayCol = DTV.FNLayCol
		INNER JOIN TCNTPdtTwiDT DT WITH(NOLOCK) ON DTV.FTBchCode = DT.FTBchCode AND DTV.FTXthDocNo = DT.FTXthDocNo AND DTV.FNXtdSeqNo = DT.FNXtdSeqNo
		INNER JOIN TCNTPdtTwiHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo AND ISNULL(HD.FTXthWhTo,'') = STK.FTWahCode  -- 02.01.00 --
		WHERE DT.FTBchCode = @ptBchCode AND DT.FTXthDocNo = @ptDocNo
		AND ISNULL(DT.FTXtdStaPrcStk,'') = ''	-- 02.01.00 --
		AND ISNULL(HD.FTXthWhTo,'') <> ''	-- 02.01.00 --
		--3.--

		--4.--
		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		,'1' AS FTStkType
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTwiDT DT with(nolock)
		INNER JOIN TCNTPdtTwiHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		AND ISNULL(DT.FTXtdStaPrcStk,'') = ''	-- 02.01.00 --
		AND ISNULL(HD.FTXthWhTo,'') <> ''	-- 02.01.00 --
		GROUP BY HD.FTBchCode,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk
		--4.--
	END -- 5. --
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxWahPdtTnfOut]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxWahPdtTnfOut]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxWahPdtTnfOut] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxWahPdtTnfOut]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTComName varchar(50), 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty float, 
   FTWahCode varchar(5), 
   FDStkDate Datetime ,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)		-- 6. --
/*---------------------------------------------------------------------
Document History
Version		Date			User	Remark
00.01.00	08/02/2019	Em		create  
00.02.00	23/04/2019	Em		เพิ่มการอัพเดท Stock Vending
00.05.00	17/06/2019	Em		แก้ไขเอาฟิลด์ StkCode และ Insert StkCard
00.06.00	05/07/2019	Em		เพิ่มการตรวจสอบสถานะการประมวลผลเอกสาร
03.01.00	26/03/2020	Em		เพิ่มฟิลด์ FNXthDocType ใน IntDT
03.02.00	27/03/2020	Em		แก้ไข Type ลง stkcard
----------------------------------------------------------------------*/
SET @tTrans = 'PrcWahOut'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  

	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') FROM TCNTPdtTwoHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)	-- 6. --

	IF @tStaPrc <> '1'	-- 6. --
	BEGIN
		--Create stk balance
		--INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtStkCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTXtdStkCode,0 AS FCStkQty,
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)		--5.--
		SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,		--5.--
		GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TCNTPdtTwoHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwoDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTXtdStkCode = STK.FTPdtStkCode
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		--5.--
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--AND ISNULL(STK.FTPdtStkCode,'') = ''
		AND ISNULL(STK.FTPdtCode,'') = ''		--5.--

		----INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtStkCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		----SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTXtdStkCode,0 AS FCStkQty,
		--INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)		--5.--
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,		--5.--
		--GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		--GETDATE() AS FDCreateOn,HD.FTCreateBy
		--FROM TCNTPdtTwoHD HD WITH(NOLOCK)
		--INNER JOIN TCNTPdtTwoDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		----LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTXtdStkCode = STK.FTPdtStkCode
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		--5.--
		--WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		----AND ISNULL(STK.FTPdtStkCode,'') = ''
		--AND ISNULL(STK.FTPdtCode,'') = ''		--5.--
		
		--Delete old data
		DELETE FROM TCNTPdtIntDT WHERE  FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo
		
		--Insert new data
		--INSERT INTO TCNTPdtIntDT(FTBchCode, FTXthDocNo, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTXtdStkCode, FCXtdStkFac, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, FCXtdQtyRcv, FCXtdQtyAll, 
		--INSERT INTO TCNTPdtIntDT(FTBchCode, FTXthDocNo, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, FCXtdQtyRcv, FCXtdQtyAll,		--5.-- 
		--INSERT INTO TCNTPdtIntDT(FTBchCode, FTXthDocNo, FNXthDocType, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, FCXtdQtyRcv, FCXtdQtyAll,	-- 03.01.00 --
		INSERT INTO TCNTPdtIntDT(FTBchCode, FTXthDocNo, FNXthDocType, FNXtdSeqNo, FTXthWahTo, FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, FCXtdQtyRcv, FCXtdQtyAll,	-- 03.02.00 --
			FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT FTBchCode, FTXthDocNo, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTXtdStkCode, FCXtdStkFac, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, 0 AS FCXtdQtyRcv, FCXtdQtyAll,
		--SELECT FTBchCode, FTXthDocNo, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, 0 AS FCXtdQtyRcv, FCXtdQtyAll,		--5.--
		--SELECT FTBchCode, FTXthDocNo, 2, FNXtdSeqNo, FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, 0 AS FCXtdQtyRcv, FCXtdQtyAll,	-- 03.01.00 --
		SELECT HD.FTBchCode, HD.FTXthDocNo, 2, FNXtdSeqNo, HD.FTXthWhTo , FTPdtCode, FTXtdPdtName, FTPunCode, FTPunName, FCXtdFactor, FTXtdBarCode, FCXtdQty, 0 AS FCXtdQtyRcv, FCXtdQtyAll,	-- 03.02.00 --
			GETDATE() AS FDLastUpdOn, @ptWho AS FTLastUpdBy, GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM TCNTPdtTwoDT DT WITH(NOLOCK)
		INNER JOIN TCNTPdtTwoHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		
		--Update balance Out
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Two.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = Two.FTLastUpdBy
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTXtdStkCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQtyAll) AS FCXtdQtyAll
		FROM TCNTPdtTwoHD HD WITH(NOLOCK)
		INNER JOIN TCNTPdtTwoDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTXtdStkCode) Two  ON Two.FTBchCode = STK.FTBchCode AND Two.FTXthWhFrm = STK.FTWahCode AND Two.FTXtdStkCode = STK.FTPdtStkCode
		GROUP BY HD.FTBchCode,HD.FTLastUpdBy,HD.FTXthWhFrm, DT.FTPdtCode) Two  ON Two.FTBchCode = STK.FTBchCode AND Two.FTXthWhFrm = STK.FTWahCode AND Two.FTPdtCode = STK.FTPdtCode
		
		--2.--
		--Update stock balance vending
		UPDATE TVDTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(DTV.FCXtdQty,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = DT.FTLastUpdBy
		FROM TVDTPdtStkBal STK
		INNER JOIN  TCNTPdtTwoDTVD DTV WITH(NOLOCK) ON STK.FTBchCode = DTV.FTBchCode AND STK.FNLayRow = DTV.FNLayRow AND STK.FNLayCol = DTV.FNLayCol
		--INNER JOIN TCNTPdtTwoDT DT WITH(NOLOCK) ON STK.FTBchCode = DT.FTBchCode AND STK.FTPdtStkCode = DT.FTXtdStkCode AND DTV.FNXtdSeqNo = DT.FNXtdSeqNo
		INNER JOIN TCNTPdtTwoDT DT WITH(NOLOCK) ON STK.FTBchCode = DT.FTBchCode AND STK.FTPdtCode = DT.FTPdtCode AND DTV.FNXtdSeqNo = DT.FNXtdSeqNo
		WHERE DT.FTBchCode = @ptBchCode AND DT.FTXthDocNo = @ptDocNo
		--2.--
		
		--5.--
		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		--,'1' AS FTStkType
		,'2' AS FTStkType	-- 03.02.00 --
		,FTPdtCode AS FTPdtCode
		, SUM(FCXtdQtyAll) AS FCStkQty,HD.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, ROUND(SUM(FCXtdSetPrice)/SUM(FCXtdQtyAll),2) AS FCStkSetPrice
		, ROUND(SUM(DT.FCXtdCostIn)/SUM(FCXtdQtyAll),2) AS FCStkCostIn
		, ROUND(SUM(DT.FCXtdCostEx)/SUM(FCXtdQtyAll),2) AS FCStkCostEx
		FROM TCNTPdtTwoDT DT with(nolock)
		INNER JOIN TCNTPdtTwoHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		GROUP BY HD.FTBchCode,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		
		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk
		
		--5.--
	END	 -- 6. --
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
	SELECT ERROR_MESSAGE()
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_DOCxWahPdtTnfVD]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_DOCxWahPdtTnfVD]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_DOCxWahPdtTnfVD] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_DOCxWahPdtTnfVD]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5),
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tStaPrc varchar(1)	
/*---------------------------------------------------------------------
Document History
Version		Date		User	Remark
1.00.01.00	22/07/2019	Em		create  
2.00.02.00	30/07/2019	Em		เพิ่มอัพเดทต้นทุน
3.00.03.00	25/10/2019	Em		เพิ่มการตรวจสอบรายการสินค้าที่ไม่มีใน Layout
4.00.04.00	04/11/2019	Em		เพิ่มการตรวจสอบรายการสินค้าที่ไม่มี PdtCode
5.02.00.00	05/02/2020	Em		เปลี่ยนไปใช้ WahCode ที่ DT
6.02.01.00	06/02/2020	Em		เพิ่มฟิลด์ FNCabSeq
7.02.02.00	10/03/2020	Em		แก้ไขกรณี Insert Qty เป็น 0
----------------------------------------------------------------------*/
SET @tTrans = 'PrcWahTnfVD'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  
	SET @tStaPrc = (SELECT TOP 1 ISNULL(FTXthStaPrcStk,'') AS FTXthStaPrcStk FROM TVDTPdtTwxHD with(nolock) WHERE FTBchCode = @ptBchCode AND FTXthDocNo = @ptDocNo)

	IF @tStaPrc <> '1'
	BEGIN
	--Update Stock In
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Twx.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode,HD.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode,DT.FTXthWhTo, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll	-- 5. --
				FROM TVDTPdtTwxHD HD WITH(NOLOCK)
				INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
				WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
				--GROUP BY HD.FTBchCode, HD.FTXthWhTo, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhTo = STK.FTWahCode AND Twx.FTPdtCode = STK.FTPdtCode
				GROUP BY HD.FTBchCode, DT.FTXthWhTo, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhTo = STK.FTWahCode AND Twx.FTPdtCode = STK.FTPdtCode	-- 5. --

		--Update Stock In Vending
		UPDATE TVDTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty + ISNULL(Twx.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TVDTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode, HD.FTXthWhTo, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode, SUM(DT.FCXtdQty) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode, DT.FTXthWhTo, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode, SUM(DT.FCXtdQty) AS FCXtdQtyAll	-- 5. --	-- 6. --
				FROM TVDTPdtTwxHD HD WITH(NOLOCK)
				INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
				--INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON HD.FTXthWhTo = WAH.FTWahCode AND WAH.FTWahStaType = '6'
				INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON DT.FTXthWhTo = WAH.FTWahCode AND WAH.FTWahStaType = '6'	-- 5. --
				WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
				--GROUP BY HD.FTBchCode, HD.FTXthWhTo, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhTo = STK.FTWahCode 
				GROUP BY HD.FTBchCode, DT.FTXthWhTo, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhTo = STK.FTWahCode	-- 5. --	-- 6. --
				AND Twx.FTPdtCode = STK.FTPdtCode AND Twx.FNLayRow = STK.FNLayRow AND Twx.FNLayCol = STK.FNLayCol
				AND Twx.FNCabSeq = STK.FNCabSeq	-- 6. --

		--Update Stock Out
		UPDATE TCNTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Twx.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TCNTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode, HD.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode, DT.FTXthWhFrm, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll	-- 5. --
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--GROUP BY HD.FTBchCode, HD.FTXthWhFrm, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhFrm = STK.FTWahCode AND Twx.FTPdtCode = STK.FTPdtCode
		GROUP BY HD.FTBchCode, DT.FTXthWhFrm, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhFrm = STK.FTWahCode AND Twx.FTPdtCode = STK.FTPdtCode	-- 5. --

		--Update Stock Out
		UPDATE TVDTPdtStkBal WITH(ROWLOCK)
		SET FCStkQty = FCStkQty - ISNULL(Twx.FCXtdQtyAll,0)
		,FDLastUpdOn = GETDATE()
		,FTLastUpdBy = @ptWho
		FROM TVDTPdtStkBal STK
		--INNER JOIN (SELECT HD.FTBchCode, HD.FTXthWhFrm, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll
		INNER JOIN (SELECT HD.FTBchCode, DT.FTXthWhFrm, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode ,SUM(DT.FCXtdQty) AS FCXtdQtyAll	-- 6. --
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON HD.FTXthWhFrm = WAH.FTWahCode AND WAH.FTWahStaType = '6'
		INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON DT.FTXthWhFrm = WAH.FTWahCode AND WAH.FTWahStaType = '6'	-- 5. --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		--GROUP BY HD.FTBchCode, HD.FTXthWhFrm, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhFrm = STK.FTWahCode 
		GROUP BY HD.FTBchCode, DT.FTXthWhFrm, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode) Twx  ON Twx.FTBchCode = STK.FTBchCode AND Twx.FTXthWhFrm = STK.FTWahCode	-- 5. --	-- 6. --
		AND Twx.FTPdtCode = STK.FTPdtCode AND Twx.FNLayRow = STK.FNLayRow AND Twx.FNLayCol = STK.FNLayCol
		AND Twx.FNCabSeq = STK.FNCabSeq	-- 6. --

		--Create stk balance
		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,
		--SELECT DISTINCT HD.FTBchCode,DT.FTXthWhFrm,DT.FTPdtCode,0 AS FCStkQty,	-- 5. --
		SELECT DISTINCT HD.FTBchCode,DT.FTXthWhFrm,DT.FTPdtCode,ISNULL(DT.FCXtdQty,0) AS FCStkQty,
		GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND DT.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		-- 5. --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = '' AND ISNULL(DT.FTPdtCode,'') <> ''	AND ISNULL(STK.FTPdtCode,'') = '' -- 3. --  -- 4. --

		INSERT INTO TCNTPdtStkBal(FTBchCode, FTWahCode, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,
		--SELECT DISTINCT HD.FTBchCode,DT.FTXthWhTo,DT.FTPdtCode,0 AS FCStkQty,	-- 5. --
		SELECT DISTINCT HD.FTBchCode,DT.FTXthWhTo,DT.FTPdtCode,ISNULL(DT.FCXtdQty,0) AS FCStkQty,	-- 7. --
		GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		LEFT JOIN TCNTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND DT.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		-- 5. --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = '' AND ISNULL(DT.FTPdtCode,'') <> ''	AND ISNULL(STK.FTPdtCode,'') = '' 	-- 3. --  -- 4. --

		--Create stk balance Vending
		INSERT INTO TVDTPdtStkBal(FTBchCode, FTWahCode, FNCabSeq, FNLayRow, FNLayCol, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)	-- 6. --
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhFrm, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,0 AS FCStkQty,
		--SELECT DISTINCT HD.FTBchCode,DT.FTXthWhFrm, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,0 AS FCStkQty,		-- 5. --	-- 6. --
		SELECT DISTINCT HD.FTBchCode,DT.FTXthWhFrm, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,ISNULL(DT.FCXtdQty,0) AS FCStkQty,	-- 7. --
		GETDATE() AS FDLastUpd,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON HD.FTXthWhFrm = WAH.FTWahCode AND WAH.FTWahStaType = '6'
		--LEFT JOIN TVDTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON DT.FTXthWhFrm = WAH.FTWahCode AND WAH.FTWahStaType = '6'		-- 5. --
		LEFT JOIN TVDTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND DT.FTXthWhFrm = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode		-- 5. --
			AND DT.FNLayRow = STK.FNLayRow AND DT.FNLayCol = STK.FNLayCol
			AND DT.FNCabSeq = STK.FNCabSeq	-- 6. --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = '' AND ISNULL(DT.FTPdtCode,'') <> ''	AND ISNULL(STK.FTPdtCode,'') = '' 	-- 3. --  -- 4. --

		INSERT INTO TVDTPdtStkBal(FTBchCode, FTWahCode, FNCabSeq, FNLayRow, FNLayCol, FTPdtCode, FCStkQty, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)	-- 6. --
		--SELECT DISTINCT HD.FTBchCode,HD.FTXthWhTo, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,0 AS FCStkQty,
		--SELECT DISTINCT HD.FTBchCode,DT.FTXthWhTo, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,0 AS FCStkQty,		-- 5. --	-- 6. --
		SELECT DISTINCT HD.FTBchCode,DT.FTXthWhTo, DT.FNCabSeq, DT.FNLayRow, DT.FNLayCol, DT.FTPdtCode,ISNULL(DT.FCXtdQty,0) AS FCStkQty,	-- 7. --
		GETDATE() AS FDLastUpdOn,HD.FTLastUpdBy,
		GETDATE() AS FDCreateOn,HD.FTCreateBy
		FROM TVDTPdtTwxHD HD WITH(NOLOCK)
		INNER JOIN TVDTPdtTwxDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXthDocNo = DT.FTXthDocNo
		--INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON HD.FTXthWhTo = WAH.FTWahCode AND WAH.FTWahStaType = '6'
		--LEFT JOIN TVDTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND HD.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode
		INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON DT.FTXthWhTo = WAH.FTWahCode AND WAH.FTWahStaType = '6'		-- 5. --
		LEFT JOIN TVDTPdtStkBal STK WITH(NOLOCK) ON HD.FTBchCode = STK.FTBchCode AND DT.FTXthWhTo = STK.FTWahCode AND DT.FTPdtCode = STK.FTPdtCode	-- 5. --
			AND DT.FNLayRow = STK.FNLayRow AND DT.FNLayCol = STK.FNLayCol
			AND DT.FNCabSeq = STK.FNCabSeq	-- 6. --
		WHERE HD.FTBchCode = @ptBchCode AND HD.FTXthDocNo = @ptDocNo
		AND ISNULL(STK.FTPdtCode,'') = '' AND ISNULL(DT.FTPdtCode,'') <> ''	AND ISNULL(STK.FTPdtCode,'') = '' 	-- 3. --  -- 4. --
		
		--insert data to Temp
		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		,'1' AS FTStkType
		, FTPdtCode AS FTPdtCode
		--, SUM(FCXtdQty) AS FCStkQty,HD.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, SUM(FCXtdQty) AS FCStkQty,DT.FTXthWhTo AS FTWahCode,HD.FDXthDocDate AS FDStkDate		-- 5. --
		, ROUND(0,2) AS FCStkSetPrice
		, ROUND(0,2) AS FCStkCostIn
		, ROUND(0,2) AS FCStkCostEx
		FROM TVDTPdtTwxDT DT with(nolock)
		INNER JOIN TVDTPdtTwxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		GROUP BY HD.FTBchCode,DT.FTXthWhTo,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate	-- 5. --


		INSERT INTO @TTmpPrcStk (FTBchCode,FTStkDocNo,FTStkType,FTPdtCode,FCStkQty,FTWahCode,FDStkDate,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
		SELECT HD.FTBchCode,HD.FTXthDocNo AS FTStkDocNo
		,'2' AS FTStkType
		,FTPdtCode AS FTPdtCode
		--, SUM(FCXtdQty) AS FCStkQty,HD.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate
		, SUM(FCXtdQty) AS FCStkQty,DT.FTXthWhFrm AS FTWahCode,HD.FDXthDocDate AS FDStkDate		-- 5. --
		, ROUND(0,2) AS FCStkSetPrice
		, ROUND(0,2) AS FCStkCostIn
		, ROUND(0,2) AS FCStkCostEx
		FROM TVDTPdtTwxDT DT with(nolock)
		INNER JOIN TVDTPdtTwxHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXthDocNo = HD.FTXthDocNo
		WHERE HD.FTBchCode=@ptBchCode AND HD.FTXthDocNo =@ptDocNo
		--GROUP BY HD.FTBchCode,HD.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate
		GROUP BY HD.FTBchCode,DT.FTXthWhFrm,HD.FTXthDocNo,DT.FTPdtCode,HD.FDXthDocDate	-- 5. --

		--insert to stock card
		INSERT INTO TCNTPdtStkCrd with(rowlock)(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
		GETDATE() AS FDCreateOn, @ptWho AS FTCreateBy
		FROM @TTmpPrcStk

		-- 2. --
		--Cost
		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt + (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '1'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode

		UPDATE TCNMPdtCostAvg with(rowlock)
		SET FCPdtCostAmt = FCPdtCostAmt - (TMP.FCStkQty*COST.FCPdtCostEx)
		,FCPdtQtyBal = STK.FCStkQty
		,FDLastUpdOn = GETDATE()
		FROM TCNMPdtCostAvg COST
		INNER JOIN @TTmpPrcStk TMP ON COST.FTPdtCode = TMP.FTPdtCode AND TMP.FTStkType = '2'
		INNER JOIN TCNTPdtStkBal STK with(nolock) ON COST.FTPdtCode = STK.FTPdtCode AND STK.FTBchCode = @ptBchCode
		-- 2. --
	END	
	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_FCTnTempTransactionBCHToHQ]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_FCTnTempTransactionBCHToHQ]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_FCTnTempTransactionBCHToHQ] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_FCTnTempTransactionBCHToHQ]
	@ptColumn AS VARCHAR(8000),
	@ptBchCode AS VARCHAR(5),
	@ptPosCode AS VARCHAR(3),
	@ptDocNo AS VARCHAR(30),
	@rnErrNum AS INT OUTPUT,
	@rtErrMsg AS VARCHAR(8000) OUTPUT
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION

		SET @rtErrMsg = ''''
		SET @rnErrNum = 0;
		
		EXEC('
		-- delete duplicate transaction sale.
		DELETE HIS
		FROM TFNTCrdHisBch HIS WITH(NOLOCK)
			INNER JOIN TTmpTFNTCrdSale TMP WITH(NOLOCK) ON HIS.FTBchCode = TMP.FTBchCode
			AND HIS.FTTxnPosCode = TMP.FTTxnPosCode AND HIS.FTTxnDocNoRef = TMP.FTTxnDocNoRef
		WHERE TMP.FTBchCode = ''' + @ptBchCode + '''
		AND TMP.FTTxnPosCode = ''' + @ptPosCode + '''
		AND TMP.FTTxnDocNoRef = ''' + @ptDocNo + '''

		-- insert transaction sale form temp.
		INSERT INTO TFNTCrdHisBch WITH(ROWLOCK)
		(' + @ptColumn + ')
		SELECT ' + @ptColumn + '
		FROM TTmpTFNTCrdSale WITH(NOLOCK)
		WHERE FTBchCode = ''' + @ptBchCode + '''
		AND FTTxnPosCode = ''' + @ptPosCode + '''
		AND FTTxnDocNoRef = ''' + @ptDocNo + '''
		')
		
		COMMIT
		SELECT 1
	END TRY
	BEGIN CATCH
		ROLLBACK

		SET @rtErrMsg = ERROR_MESSAGE();
		SET @rnErrNum = ERROR_NUMBER();
		SELECT 0
	END CATCH

END

GO
/****** Object:  StoredProcedure [dbo].[STP_FCToGetSchemaTable]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_FCToGetSchemaTable]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_FCToGetSchemaTable] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_FCToGetSchemaTable]
	@ptTblName AS VARCHAR(50)
AS
BEGIN
	DECLARE @tSchema VARCHAR(8000) 
	SELECT @tSchema = COALESCE(@tSchema + ', ', '') + COLUMN_NAME
	FROM INFORMATION_SCHEMA.COLUMNS WITH(NOLOCK)
	WHERE TABLE_NAME = N'' + @ptTblName
	SELECT @tSchema
END

GO
/****** Object:  StoredProcedure [dbo].[STP_FCTxClearTempTransaction]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_FCTxClearTempTransaction]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_FCTxClearTempTransaction] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_FCTxClearTempTransaction]
	@ptBchCode AS VARCHAR(5),
	@ptPosCode AS VARCHAR(3),
	@ptDocNo AS VARCHAR(30)
AS
BEGIN
	DELETE
	FROM TTmpTFNTCrdSale WITH(ROWLOCK)
	WHERE FTBchCode = @ptBchCode
	AND FTTxnPosCode = @ptPosCode
	AND FTTxnDocNoRef = @ptDocNo
END

GO
/****** Object:  StoredProcedure [dbo].[STP_FCTxCreateTempTransaction]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_FCTxCreateTempTransaction]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_FCTxCreateTempTransaction] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_FCTxCreateTempTransaction]
AS
BEGIN
	-- Temp.
	IF OBJECT_ID('TTmpTFNTCrdSale', 'U') IS NULL
	BEGIN
		SELECT TOP 0 *
		INTO TTmpTFNTCrdSale
		FROM TFNTCrdHisBch WITH(NOLOCK)
	END
	
END

GO
/****** Object:  StoredProcedure [dbo].[STP_GETnPackageListCount]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GETnPackageListCount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GETnPackageListCount] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GETnPackageListCount]
	@pdDate DATE = NULL ,
	@pnZneID BIGINT = NULL,
	@pnTcgID BIGINT = NULL
AS
BEGIN TRY
	DECLARE @@nBookAdv INT;
	DECLARE @@tSqlCmd VARCHAR(MAX);
	
	-- Check parameter date.
	IF @pdDate IS NULL
	BEGIN
		-- Parameter date is null, get option booking advance.
		SELECT @@nBookAdv = FTSysDefValue
		FROM VTK_TSysConfig WITH(NOLOCK)
		WHERE FTSysCode = 'PBookAdv'
		AND FTSysSeq = '001'

		SET @pdDate = DATEADD(DAY, ISNULL(@@nBookAdv, 0), GETDATE())

		-- Generate SQL command.
		SET @@tSqlCmd = '' 
		SET @@tSqlCmd += 'SELECT COUNT(FNPkgID) ' + CHAR(13)
		SET @@tSqlCmd += 'FROM TTKTPkgList WITH(NOLOCK) ' + CHAR(13)
		SET @@tSqlCmd += 'WHERE (GETDATE() >= FDPkgStartSale) '
		SET @@tSqlCmd += 'OR (CONVERT(DATE, ''' + CONVERT(VARCHAR(10), @pdDate, 121) + ''') <= FDPkgStopSale) ' + CHAR(13)
	END
	ELSE
	BEGIN
		-- Get count package by parameter date.
		SET @@tSqlCmd = '' 
		SET @@tSqlCmd += 'SELECT COUNT(FNPkgID) ' + CHAR(13)
		SET @@tSqlCmd += 'FROM TTKTPkgList WITH(NOLOCK) ' + CHAR(13)
		SET @@tSqlCmd += 'WHERE (CONVERT(DATE, ''' + CONVERT(VARCHAR(10), @pdDate, 121) + ''') BETWEEN FDPkgStartSale AND FDPkgStopSale) '+ CHAR(13)
	END

	IF @pnZneID IS NOT NULL
		SET @@tSqlCmd += 'AND FNZneID = ' + CONVERT(VARCHAR(MAX), @pnZneID)  + CHAR(13)

	IF @pnTcgID IS NOT NULL
		SET @@tSqlCmd += 'AND FNTcgID = ' +  CONVERT(VARCHAR(MAX), @pnTcgID)  + CHAR(13)

	-- Execute SQL command.
	EXEC (@@tSqlCmd)
	--PRINT @@tSqlCmd
END TRY
BEGIN CATCH
	RETURN NULL;
END CATCH



GO
/****** Object:  StoredProcedure [dbo].[STP_GETnPromotionCount]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GETnPromotionCount]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GETnPromotionCount] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_GETnPromotionCount]
	@ptAgnKey AS VARCHAR(40),
	@ptCstKey As VARCHAR(40) = ''
	
AS
BEGIN
	IF (@ptCstKey = '')
	BEGIN
		SELECT COUNT(IMG.FNImgID)
		FROM TTKMImgPdt IMG WITH(NOLOCK)
		INNER JOIN
		(
			-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
			OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
				--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN('')
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
							THEN 1
							ELSE 0
						END
				END) = 1 

		) AGN ON IMG.FNImgRefID = AGN.FNPmhID
		WHERE UPPER(IMG.FTImgTable) = UPPER('TTKTPmtList')
		AND IMG.FTImgKey = 'Promotion'
	END
	ELSE
	BEGIN

		SELECT COUNT(IMG.FNImgID)
		FROM TTKMImgPdt IMG WITH(NOLOCK)
		INNER JOIN
		(
			-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
			OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN(@ptAgnKey)
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
							THEN 1
							ELSE 0
						END
				END) =1 

		) AGN ON IMG.FNImgRefID = AGN.FNPmhID
		INNER JOIN
		(
			-- หา agency หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '2') 
			OR PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา customer ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) IN(@ptCstKey)	-- 1:ยกเว้นกลุ่ม  2:เฉพาะกลุ่ม
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) NOT IN(@ptCstKey) -- 1:ยกเว้นกลุ่ม  2:เฉพาะกลุ่ม
							THEN 1
							ELSE 0
						END
				END) = 1 
		) CST ON AGN.FNPmhID = CST.FNPmhID	
		WHERE UPPER(IMG.FTImgTable) = UPPER('TTKTPmtList')
		AND IMG.FTImgKey = 'Promotion'
	END
END



GO
/****** Object:  StoredProcedure [dbo].[STP_GEToCard]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToCard]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToCard] AS' 
END
GO


ALTER PROCEDURE [dbo].[STP_GEToCard] 
 @ptCrdCode VARCHAR(30) NULL
AS
BEGIN

BEGIN TRANSACTION
		BEGIN TRY
		      SELECT 
			   ISNULL(M.FCCrdValue,0.00) AS FCCrdValue
			  ,ISNULL(M.FNCrdTxnPrcAdj,0) AS FNCrdTxnPrcAdj
			  ,ISNULL(M.FCCrdDeposit,0.00) AS FCCrdDeposit
			  ,ISNULL(M.FCCrdDepositPdt,0.00) AS FCCrdDepositPdt
			  ,ISNULL((ISNULL(M.FCCrdValue,0.00) - (ISNULL(M.FCCrdDeposit,0.00)+ISNULL(M.FCCrdDepositPdt,0.00))),0.00) AS cAvailable
			  ,L.FTCrdName
			  ,TFNMCardType_L.FTCtyName
			  ,M.FDCrdExpireDate
			  ,M.FDCrdLastTopup
			  ,ISNULL(T.FCCtyTopUpAuto,0.00) AS FCCtyTopUpAuto
			  ,T.FNCtyExpiredType
			  ,T.FNCtyExpirePeriod
			  ,L.FNLngID
			  ,M.FTCrdStaShift
			  ,M.FTCrdHolderID
			  ,M.FTCrdStaActive
			  ,ISNULL(T.FTCtyStaAlwRet,0) AS FTCtyStaAlwRet
			  ,ISNULL(M.FTCrdStaLocate,2) AS FTCrdStaLocate
			  ,M.FTCrdStaType
			 FROM TFNMCard M WITH (NOLOCK)
			 LEFT JOIN TFNMCard_L L WITH (NOLOCK) ON M.FTCrdCode = L.FTCrdCode
			 LEFT JOIN TFNMCardType  T WITH (NOLOCK) ON M.FTCtyCode= T.FTCtyCode
			 LEFT JOIN TFNMCardType_L WITH (NOLOCK) ON T.FTCtyCode= TFNMCardType_L.FTCtyCode  
			 AND L.FNLngID = TFNMCardType_L.FNLngID
			 WHERE M.FTCrdCode=@ptCrdCode
			
			COMMIT
		END TRY
		BEGIN CATCH
			ROLLBACK	
		END CATCH

END

GO
/****** Object:  StoredProcedure [dbo].[STP_GEToMember]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToMember]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToMember] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToMember] 
	@ptVal VARCHAR(20) NULL,
	@pnType INT NULL,
	@pnLang INT NULL
AS
BEGIN
	DECLARE @tSQL NVARCHAR(MAX)
	SET @tSQL = 'SELECT C.FTCstCode,FTCstName,C.FTPplCodeRet,C.FTPmgCode,ISNULL(I.FTImgObj,'''') AS FTImgObj,Crd.FDCrdExpireDate'  + CHAR(10)
	SET @tSQL += 'FROM TCNMCst C WITH (NOLOCK)'  + CHAR(10)
	SET @tSQL += 'LEFT JOIN TCNMCst_L L WITH (NOLOCK) ON (L.FTCstCode=C.FTCstCode) AND FNLngID='+  CAST(@pnLang AS VARCHAR(1)) +''  + CHAR(10)
	SET @tSQL += 'LEFT JOIN TCNMImgPerson I WITH (NOLOCK) ON (I.FTImgRefID=C.FTCstCode) AND FTImgtable=''TCNMCst'' AND FNImgSeq=1' + CHAR(10)
	SET @tSQL += 'LEFT JOIN TFNMCard Crd (NOLOCK) ON (Crd.FTCrdCode=C.FTCstCode)' + CHAR(10)
	SET @tSQL += 'WHERE 1=1' + CHAR(10)
			 
	IF (@pnType = 1)
		BEGIN
			SET @tSql += 'AND C.FTCstCardID=''' + @ptVal + '''' + CHAR(10)
		END
	ELSE IF (@pnType = 2)
		BEGIN
		    SET @tSql += 'AND C.FTCstTel=''' + @ptVal + '''' + CHAR(10)
		END
    ELSE IF (@pnType = 3)
		BEGIN
			SET @tSql += 'AND C.FTCstCode=''' + @ptVal + '''' + CHAR(10)
		END
		
    EXECUTE sp_executesql @tSql
	PRINT @tSql

END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToPackageDetail]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToPackageDetail]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToPackageDetail] AS' 
END
GO

--FNPkgID	FTPkgName
--6	แพคเก็จ ตั๋ว ราคาตาม Package
--7	แพคเก็จ ตั๋ว ราคาตาม Package.Booking
--8	แพคเก็จ ตั๋ว ราคาตาม Package.Holiday
--9	แพคเก็จ ตั๋ว ราคาตาม Package.DOW
--10	แพคเก็จ ตั๋ว ราคาตาม Package.Agency
--11	แพคเก็จ ตั๋ว ราคาตาม Package.Agency.Booking
--12	แพคเก็จ ตั๋ว ราคาตาม Package.Agency.Holiday
--13	แพคเก็จ ตั๋ว ราคาตาม Package.Agency.DOW
--14	แพคเก็จ ตั๋ว ราคาตาม Package.Customer
--15	แพคเก็จ ตั๋ว ราคาตาม Package.Customer.Booking
--16	แพคเก็จ ตั๋ว ราคาตาม Package.Customer.Holiday
--17	แพคเก็จ ตั๋ว ราคาตาม Package.Customer.DOW
--18	แพคเก็จ ตั๋ว ราคาตามสินค้า
--19	แพคเก็จ ตั๋ว ราคาตามสินค้า.Booking
--20	แพคเก็จ ตั๋ว ราคาตามสินค้า.Holiday
--21	แพคเก็จ ตั๋ว ราคาตามสินค้า.DOW
--22	แพคเก็จ ตั๋ว ราคาตามสินค้า.Agency
--23	แพคเก็จ ตั๋ว ราคาตามสินค้า.Agency.Booking
--24	แพคเก็จ ตั๋ว ราคาตามสินค้า.Agency.Holiday
--25	แพคเก็จ ตั๋ว ราคาตามสินค้า.Agency.DOW
--26	แพคเก็จ ตั๋ว ราคาตามสินค้า.Customer
--27	แพคเก็จ ตั๋ว ราคาตามสินค้า.Customer.Booking
--28	แพคเก็จ ตั๋ว ราคาตามสินค้า.Customer.Holiday
--29	แพคเก็จ ตั๋ว ราคาตามสินค้า.Customer.DOW
--30	แพคเก็จ บ้านพัก ราคาตามสินค้า
--31	แพคเก็จ บ้านพัก ราคาตามสินค้า.Booking
--32	แพคเก็จ บ้านพัก ราคาตามสินค้า.Holiday
--33	แพคเก็จ บ้านพัก ราคาตามสินค้า.DOW
--34	แพคเก็จ บ้านพัก ราคาตามสินค้า.Agency
--35	แพคเก็จ บ้านพัก ราคาตามสินค้า.Agency.Booking
--36	แพคเก็จ บ้านพัก ราคาตามสินค้า.Agency.Holiday
--37	แพคเก็จ บ้านพัก ราคาตามสินค้า.Agency.DOW
--38	แพคเก็จ บ้านพัก ราคาตามสินค้า.Customer
--39	แพคเก็จ บ้านพัก ราคาตามสินค้า.Customer.Booking
--40	แพคเก็จ บ้านพัก ราคาตามสินค้า.Customer.Holiday
--41	แพคเก็จ บ้านพัก ราคาตามสินค้า.Customer.DOW
--42	แพคเก็จ บ้านพัก ราคาตามแพ็คเก็จ
--43	แพคเก็จ บ้านพัก ราคาตามแพ็คเก็จ.Booking
--44	แพคเก็จ บ้านพัก ราคาตามแพ็คเก็จ.Holiday
--45	แพคเก็จ บ้านพัก ราคาตามแพ็คเก็จ.DOW


ALTER PROCEDURE [dbo].[STP_GEToPackageDetail]
	@pnPktID BIGINT,
	@pnZneID BIGINT,
	@pnCgpID BIGINT = NULL,
	@pnAggID BIGINT,
	@pnLang INT = 1,
	@pdDateChkIn DATETIME,
	@pdDateBooking DATETIME ---System date.
AS

DECLARE @oTblTmpPkgDT TABLE
(
	rnPkgID BIGINT,
	rnPkgPdtID BIGINT,
	rnPdtID BIGINT,
	rtName VARCHAR(100),
	rcSalePrice NUMERIC(18, 4),
	rcSetPrice NUMERIC(18, 4),
	rtPkgType VARCHAR(1),
	rtPriPgpType VARCHAR(1),
	rnPdtOthSystem BIGINT,
	rnPdtMaxPerson BIGINT,
	rtPriSpcType VARCHAR(1)	
)

--DECLARE @tDateCheckIn VARCHAR(10);
--DECLARE @tDateBooking VARCHAR(10);
--DECLARE @tGrpAgn VARCHAR(10);
--DECLARE @tGrpCst VARCHAR(10);
--DECLARE @nPackage INT;
--DECLARE @nLanguage INT;
--SET @nLanguage =1
--SET @nPackage =20
--SET @tGrpAgn='1'
--SET @tGrpCst='1'
--SET @tDateBooking='2017/09/05';	---System date.
--SET @tDateCheckIn ='2017/10/25';

INSERT INTO @oTblTmpPkgDT
SELECT DISTINCT TK.FNPkgID, TK.FNPkgPdtID, TK.FNPdtID, TK.FTPdtName,
	TK.PdtPrice AS 'SalePrice', 
	/*CASE 
		WHEN TK.FTPkgType = '1' THEN TK.PdtPrice 
		ELSE TK.PkgPrice 
	END AS 'SalePrice', */
	CASE TK.FTPkgType
		WHEN '1' THEN ---ราคาตามสินค้า
			CASE 
				WHEN TK.FTPgpType IS NOT NULL THEN ---มีราคาตามกลุ่ม
					CASE 
						WHEN TK.GBook > 0 THEN TK.GBook 
						WHEN TK.GHoliday > 0 THEN TK.GHoliday
						WHEN TK.GDayOfWeek > 0 THEN TK.GDayOfWeek
						WHEN TK.GrpPrice > 0 THEN TK.GrpPrice
					END
				ELSE  ---ไม่มีราคาตามกลุ่ม
					CASE
						WHEN TK.DBook > 0 THEN TK.DBook 
						WHEN TK.DHoliday > 0 THEN TK.DHoliday
						WHEN TK.DDayOfWeek > 0 THEN TK.DDayOfWeek
						WHEN TK.PdtPrice > 0 THEN TK.PdtPrice
					END
			END
		ELSE ---ราคาตามแพคเก็จ
			CASE 
				WHEN TK.FTPgpType IS NOT NULL THEN ---มีราคาตามกลุ่ม
					CASE 
						WHEN TK.GBook > 0 THEN TK.GBook 
						WHEN TK.GHoliday > 0 THEN TK.GHoliday
						WHEN TK.GDayOfWeek > 0 THEN TK.GDayOfWeek
						WHEN TK.GrpPrice > 0 THEN TK.GrpPrice
					END
				ELSE  ---ไม่มีราคาตามกลุ่ม
					CASE
						WHEN TK.PBook > 0 THEN TK.PBook 
						WHEN TK.PHoliday > 0 THEN TK.PHoliday
						WHEN TK.PDayOfWeek > 0 THEN TK.PDayOfWeek
						WHEN TK.PkgPrice > 0 THEN TK.PkgPrice
					END
			END
	END AS 'SetPrice', 
	TK.FTPkgType, ISNULL(TK.FTPgpType,''),
	--TK.FTPkgType, ISNULL(TK.FTPgpType,''),
	TK.FNPdtOthSystem AS rnPdtOthSystem,
	TK.FNPdtMaxPerson AS rnPdtMaxPerson,
	CASE
		WHEN TK.GBook > 0 OR TK.DBook > 0 OR TK.PBook > 0THEN '1'					---Booking
		WHEN TK.GHoliday > 0 OR TK.DHoliday > 0 OR TK.PHoliday > 0THEN '2'			---Holiday
		WHEN TK.GDayOfWeek > 0 OR TK.DDayOfWeek > 0 OR TK.PDayOfWeek > 0THEN '3'	---DOW
		WHEN TK.GrpPrice > 0 OR TK.PdtPrice > 0 OR TK.PkgPrice > 0THEN '4'			---Normal
	END AS 'PriSpecialType'
FROM (
	SELECT DISTINCT PKG.FNPkgID,PDT.FNPkgPdtID,PDT.FNPdtID
		,PPK.FCPpkPrice AS PkgPrice/*'ราคาแพคเก็จ'*/,PDT.FCPdtPrice AS PdtPrice/*'ราคาสินค้า'*/,PDTL.FTPdtName
		,PKG.FTPkgType
		,GRP.FTPgpType
		,GRP.FNPgpGrpID /*AS 'กลุ่ม'*/
		,GRP.FCPgpPdtPrice AS GrpPrice/*'ราคากลุ่ม'*/
		
		---Package Special Price
		,PDOW.FNPpdDayOfWeek AS PFNPpdDayOfWeek ,PDOW.FCPpdPrice AS 'PDayOfWeek'
		,PHLD.FDPphCheckIn AS PFDPphCheckIn,PHLD.FCPphPrice AS 'PHoliday'
		,PBOK.FNPpbDayFrm AS PFNPpbDayFrm ,PBOK.FNPpbDayTo AS PFNPpbDayTo,PBOK.FCPpbPrice AS  'PBook'
		
		---Product Special price
		,DDOW.FNPpdDayOfWeek AS DFNPpdDayOfWeek ,DDOW.FCPpdPrice AS 'DDayOfWeek'
		,DHLD.FDPphCheckIn AS DFDPphCheckIn,DHLD.FCPphPrice AS 'DHoliday'
		,DBOK.FNPpbDayFrm  AS DFNPpbDayFrm ,DBOK.FNPpbDayTo AS DFNPpbDayTo,DBOK.FCPpbPrice AS  'DBook'
		
		---Group Special Price Cst or Agn
		,GDOW.FNGpdDayOfWeek AS GCstFNGpdDayOfWeek ,GDOW.FCGpdPrice AS 'GDayOfWeek'
		,GHLD.FDGphCheckIn AS GCstFDGphCheckIn,GHLD.FCGphPrice AS 'GHoliday'
		,GBOK.FNGpbDayFrm AS GCstFNGpbDayFrm ,GBOK.FNGpbDayTo AS GCstFNGpbDayTo,GBOK.FCGpbPrice AS  'GBook'

		---Package Product Price Max Person
		,PDT.FNPdtMaxPerson --AS FNPdtMaxPerson
		,PDTM.FNPdtOthSystem 
	FROM TTKTPkgList PKG WITH(NOLOCK)
		INNER JOIN TTKTPkgPark PPK WITH(NOLOCK) ON PKG.FNPkgID = PPK.FNPkgID	--*[ANUBIS][][2017-11-22] - Join ใช้ราคาที่ Park
		INNER JOIN TTKTPkgPdtPri PDT WITH(NOLOCK) ON PKG.FNPkgID =PDT.FNPkgID
		INNER JOIN VTK_TTKMPdt_L PDTL WITH(NOLOCK) ON PDT.FNPdtID =PDTL.FNPdtID 
		LEFT JOIN VTK_TTKMPdt PDTM WITH(NOLOCK) ON PDT.FNPdtID = PDTM.FNPdtID

		---Group Agency or Customer
		LEFT JOIN TTKTPkgGrpPri GRP WITH(NOLOCK) ON 
			CASE WHEN ISNULL(GRP.FNPkgPdtID,'') ='' THEN PPK.FNPpkID ELSE PDT.FNPkgPdtID END =	--*[ANUBIS][][2017-11-22] - เปลี่ยนจาก PDT.FNPkgID เป็น PPK.FNPpkID เพื่อใช้ราคาจาก Park
			CASE WHEN ISNULL(GRP.FNPkgPdtID,'') ='' THEN GRP.FNPpkID ELSE GRP.FNPkgPdtID END	--*[ANUBIS][][2017-11-22] - เปลี่ยนจาก GRP.FNPkgID เป็น GRP.FNPpkID เพื่อใช้ราคาจาก Park
			AND GRP.FNPgpRefID = CASE WHEN GRP.FTPgpType = '1' THEN @pnAggID ELSE @pnCgpID END 

		---SPC Package
		LEFT JOIN TTKMPkgPriBooking PBOK WITH(NOLOCK) ON PKG.FNPkgID   =PBOK.FNPpkID 
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN PBOK.FNPpbDayFrm AND PBOK.FNPpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>PBOK.FNPpbDayFrm AND PBOK.FNPpbDayTo=0))
		LEFT JOIN TTKMPkgPriHoliday PHLD WITH(NOLOCK) ON PKG.FNPkgID = PHLD.FNPpkID 
			AND PHLD.FDPphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMPkgPriDOW PDOW WITH(NOLOCK) ON PKG.FNPkgID = PDOW.FNPpkID 
			AND DATEPART(dw,@pdDateChkIn) =PDOW.FNPpdDayOfWeek 

		---SPC Group
		LEFT JOIN TTKMGrpPriBooking GBOK WITH(NOLOCK) ON GRP.FNPgpGrpID = GBOK.FNPgpGrpID
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN GBOK.FNGpbDayFrm AND GBOK.FNGpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>GBOK.FNGpbDayFrm AND GBOK.FNGpbDayTo=0))
		LEFT JOIN TTKMGrpPriHoliday GHLD WITH(NOLOCK) ON GRP.FNPgpGrpID = GHLD.FNPgpGrpID
			AND GHLD.FDGphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMGrpPriDOW GDOW WITH(NOLOCK) ON GRP.FNPgpGrpID = GDOW.FNPgpGrpID
			AND DATEPART(dw,@pdDateChkIn) = GDOW.FNGpdDayOfWeek

		---SPC Product
		LEFT JOIN TTKMPdtPriBooking DBOK WITH(NOLOCK) ON PDT.FNPkgPdtID = DBOK.FNPkgPdtID 
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN DBOK.FNPpbDayFrm AND DBOK.FNPpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>DBOK.FNPpbDayFrm AND DBOK.FNPpbDayTo=0))
		LEFT JOIN TTKMPdtPriHoliday DHLD WITH(NOLOCK) ON PDT.FNPkgPdtID = DHLD.FNPkgPdtID 
			AND DHLD.FDPphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMPdtPriDOW DDOW WITH(NOLOCK) ON PDT.FNPkgPdtID = DDOW.FNPkgPdtID 
			AND DATEPART(dw,@pdDateChkIn) =DDOW.FNPpdDayOfWeek 

	WHERE PKG.FNPkgID = @pnPktID 
	AND PPK.FNZneID = @pnZneID
	AND PDTL.FNLngID = @pnLang 
	AND ((@pdDateBooking BETWEEN FDPkgStartSale AND PKG.FDPkgStopSale) 
	OR(@pdDateBooking >=FDPkgStartSale AND PKG.FDPkgStopSale IS NULL)) --Aum [15-12-2017] *-เพราะบางแพ็คเกจไม่่ระบุวันที่สิ้นสุดการขาย
	AND PPK.FTPpkType = '1' --Aum [23-11-2017] *-เพราะราคาอยู่ที่ PpkType = '1'
 )TK

--- Package detail
SELECT * FROM @oTblTmpPkgDT

--- Image
SELECT DISTINCT FNImgID AS rnImgID, FNImgRefID AS rnImgRefID, FNImgSeq AS rnImgSeq,
   FTImgType AS rtImgType , FTImgKey AS rtImgKey, FTImgObj AS rtImgObj
FROM TTKMImgPdt IMG WITH(NOLOCK)
   INNER JOIN @oTblTmpPkgDT DT ON IMG.FNImgRefID = DT.rnPdtID AND IMG.FTImgType = '5'



GO
/****** Object:  StoredProcedure [dbo].[STP_GEToPackageList]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToPackageList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToPackageList] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToPackageList] 
	@pnLang INT = 1, 
	@pdDate DATE = NULL ,
	@pnPage INT = 0,
	@pnRowPerPage INT = 100,
	@pnZneID BIGINT = NULL,
	@pnTcgID BIGINT = NULL
AS
BEGIN TRY
	DECLARE @@nBookAdv INT;
	DECLARE @@tSqlCmd VARCHAR(MAX);

	SET @@tSqlCmd = '' 
	SET @@tSqlCmd += 'SELECT PKG.FNPkgID AS rnPkgID, FNLocID AS rnLocID, FNZneID AS rnZneID, FNTcgID AS rnTcgID, ' + CHAR(13)
	SET @@tSqlCmd += '	FNPkgMaxChkIn AS rnPkgMaxChkIn, FNPkgMaxPark AS rnPkgMaxPark, FTPkgName AS rtPkgName, FTPkgDesc1 AS rtPkgDesc1, ' + CHAR(13)
	SET @@tSqlCmd += '	FTPkgDesc2 AS rtPkgDesc2, FTPkgDesc3 AS rtPkgDesc3, FTPkgDesc4 AS rtPkgDesc4, FTPkgDesc5 AS rtPkgDesc5, ' + CHAR(13)
	SET @@tSqlCmd += '	FDPkgStartChkIn AS rdPkgStartChkIn, FDPkgStopChkIn AS rdPkgStopChkIn,FDPkgStartChkIn AS rdPkgStartChkIn, FDPkgStopChkIn AS rdPkgStopChkIn, ' + CHAR(13)
	SET @@tSqlCmd += '	FTImgObj AS rtImgObj, FTPkgType AS rtPkgType ' + CHAR(13)
	SET @@tSqlCmd += 'FROM TTKTPkgList PKG WITH(NOLOCK) ' + CHAR(13)
	SET @@tSqlCmd += '	LEFT JOIN TTKTPkgList_L LNG WITH(NOLOCK) ON PKG.FNPkgID = LNG.FNPkgID ' + CHAR(13)
	SET @@tSqlCmd += '	AND LNG.FNLngID = ' + CONVERT(VARCHAR(MAX), @pnLang)  + CHAR(13)
	SET @@tSqlCmd += '	LEFT JOIN TTKMImgPdt IMG WITH(NOLOCK) ON PKG.FNPkgID = IMG.FNImgRefID ' + CHAR(13)
	SET @@tSqlCmd += '	AND IMG.FTImgType = ''6'' ' + CHAR(13)

	-- Check parameter date.
	IF @pdDate IS NULL
	BEGIN
		-- Parameter date is null, get option booking advance.
		SELECT @@nBookAdv = FTSysDefValue
		FROM VTK_TSysConfig WITH(NOLOCK)
		WHERE FTSysCode = 'PBookAdv'
		AND FTSysSeq = '001'

		SET @pdDate = DATEADD(DAY, ISNULL(@@nBookAdv, 0), GETDATE())
		SET @@tSqlCmd += 'WHERE (GETDATE() >= FDPkgStartSale) ' 
		SET @@tSqlCmd += 'OR (CONVERT(DATE, ''' + CONVERT(VARCHAR(10), @pdDate, 121) + ''') <= FDPkgStopSale) ' + CHAR(13)
		
		--SET @@tSqlCmd += 'WHERE (GETDATE() >= FDPkgStartSale) OR (''' + CONVERT(VARCHAR(10), @pdDate, 121) + ''' <= FDPkgStopSale) ' + CHAR(13)
	END
	ELSE
	BEGIN
		SET @@tSqlCmd += 'WHERE ''' + CONVERT(VARCHAR(10), @pdDate, 121) + ''' BETWEEN FDPkgStartSale AND FDPkgStopSale '+ CHAR(13)
	END

	IF @pnZneID IS NOT NULL
		SET @@tSqlCmd += 'AND FNZneID = ' + CONVERT(VARCHAR(MAX), @pnZneID)  + CHAR(13)

	IF @pnTcgID IS NOT NULL
		SET @@tSqlCmd += 'AND FNTcgID = ' +  CONVERT(VARCHAR(MAX), @pnTcgID)  + CHAR(13)

	SET @@tSqlCmd += 'ORDER BY PKG.FNPkgID ' + CHAR(13)
	SET @@tSqlCmd += 'OFFSET ' + CONVERT(VARCHAR(MAX), @pnPage) +' ROWS FETCH NEXT ' + CONVERT(VARCHAR(MAX), @pnRowPerPage) +' ROWS ONLY ' + CHAR(13)

	-- Execute SQL command.
	EXEC (@@tSqlCmd)
	--PRINT @@tSqlCmd
END TRY
BEGIN CATCH
	RETURN NULL;
END CATCH




GO
/****** Object:  StoredProcedure [dbo].[STP_GEToPackageSetPrice]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToPackageSetPrice]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToPackageSetPrice] AS' 
END
GO

-- =============================================
-- GET SetPrice FROM PackageList
-- =============================================
ALTER PROCEDURE [dbo].[STP_GEToPackageSetPrice]
	@pnEvnID BIGINT = null,
	@pnZneID BIGINT = null,
	@pdDateChkIn DATETIME = null,
	@pdDateBooking DATETIME = null---System date.
AS
SELECT DISTINCT TK.FNPkgID, /*TK.PdtPrice*/ 
	(CASE TK.FTPkgType
		WHEN '1' THEN ---ราคาตามสินค้า
		NULL
		ELSE ---ราคาตามแพคเก็จ
			TK.PkgPrice
	END) AS 'SalePrice', 
	CASE TK.FTPkgType
		WHEN '1' THEN ---ราคาตามสินค้า
		NULL
		ELSE ---ราคาตามแพคเก็จ
			CASE 
				WHEN TK.FTPgpType IS NOT NULL THEN ---มีราคาตามกลุ่ม
					CASE 
						WHEN TK.GBook > 0 THEN TK.GBook 
						WHEN TK.GHoliday > 0 THEN TK.GHoliday
						WHEN TK.GDayOfWeek > 0 THEN TK.GDayOfWeek
						WHEN TK.GrpPrice > 0 THEN TK.GrpPrice
					END
				ELSE  ---ไม่มีราคาตามกลุ่ม
					CASE
						WHEN TK.PBook > 0 THEN TK.PBook 
						WHEN TK.PHoliday > 0 THEN TK.PHoliday
						WHEN TK.PDayOfWeek > 0 THEN TK.PDayOfWeek
						WHEN TK.PkgPrice > 0 THEN TK.PkgPrice
					END
			END
	END AS 'SetPrice', 
	CASE
		WHEN TK.GBook > 0 OR TK.DBook > 0 OR TK.PBook > 0THEN '1'					---Booking
		WHEN TK.GHoliday > 0 OR TK.DHoliday > 0 OR TK.PHoliday > 0THEN '2'			---Holiday
		WHEN TK.GDayOfWeek > 0 OR TK.DDayOfWeek > 0 OR TK.PDayOfWeek > 0THEN '3'	---DOW
		WHEN TK.GrpPrice > 0 OR TK.PdtPrice > 0 OR TK.PkgPrice > 0THEN '4'			---Normal
	END AS 'PriSpecialType'
FROM (
	SELECT DISTINCT PKG.FNPkgID,PDT.FNPkgPdtID,PDT.FNPdtID
		,PPK.FCPpkPrice AS PkgPrice/*'ราคาแพคเก็จ'*/,PDT.FCPdtPrice AS PdtPrice/*'ราคาสินค้า'*/
		,PKG.FTPkgType
		,GRP.FTPgpType
		,GRP.FNPgpGrpID /*AS 'กลุ่ม'*/
		,GRP.FCPgpPdtPrice AS GrpPrice/*'ราคากลุ่ม'*/
		
		---Package Special Price
		,PDOW.FNPpdDayOfWeek AS PFNPpdDayOfWeek ,PDOW.FCPpdPrice AS 'PDayOfWeek'
		,PHLD.FDPphCheckIn AS PFDPphCheckIn,PHLD.FCPphPrice AS 'PHoliday'
		,PBOK.FNPpbDayFrm AS PFNPpbDayFrm ,PBOK.FNPpbDayTo AS PFNPpbDayTo,PBOK.FCPpbPrice AS  'PBook'
		
		---Product Special price
		,DDOW.FNPpdDayOfWeek AS DFNPpdDayOfWeek ,DDOW.FCPpdPrice AS 'DDayOfWeek'
		,DHLD.FDPphCheckIn AS DFDPphCheckIn,DHLD.FCPphPrice AS 'DHoliday'
		,DBOK.FNPpbDayFrm  AS DFNPpbDayFrm ,DBOK.FNPpbDayTo AS DFNPpbDayTo,DBOK.FCPpbPrice AS  'DBook'
		
		---Group Special Price Cst or Agn
		,GDOW.FNGpdDayOfWeek AS GCstFNGpdDayOfWeek ,GDOW.FCGpdPrice AS 'GDayOfWeek'
		,GHLD.FDGphCheckIn AS GCstFDGphCheckIn,GHLD.FCGphPrice AS 'GHoliday'
		,GBOK.FNGpbDayFrm AS GCstFNGpbDayFrm ,GBOK.FNGpbDayTo AS GCstFNGpbDayTo,GBOK.FCGpbPrice AS  'GBook'

	FROM TTKTPkgList PKG WITH(NOLOCK)
		INNER JOIN TTKTPkgPark PPK WITH(NOLOCK) ON PKG.FNPkgID = PPK.FNPkgID	--*[ANUBIS][][2017-11-22] - Join ใช้ราคาที่ Park
		INNER JOIN TTKTPkgPdtPri PDT WITH(NOLOCK) ON PKG.FNPkgID =PDT.FNPkgID
		INNER JOIN VTK_TTKMPdt_L PDTL WITH(NOLOCK) ON PDT.FNPdtID =PDTL.FNPdtID 
		LEFT JOIN VTK_TTKMPdt PDTM WITH(NOLOCK) ON PDT.FNPdtID = PDTM.FNPdtID

		---Group Agency or Customer
		LEFT JOIN TTKTPkgGrpPri GRP WITH(NOLOCK) ON 
			CASE WHEN ISNULL(GRP.FNPkgPdtID,'') ='' THEN PPK.FNPpkID ELSE PDT.FNPkgPdtID END =	--*[ANUBIS][][2017-11-22] - เปลี่ยนจาก PDT.FNPkgID เป็น PPK.FNPpkID เพื่อใช้ราคาจาก Park
			CASE WHEN ISNULL(GRP.FNPkgPdtID,'') ='' THEN GRP.FNPpkID ELSE GRP.FNPkgPdtID END	--*[ANUBIS][][2017-11-22] - เปลี่ยนจาก GRP.FNPkgID เป็น GRP.FNPpkID เพื่อใช้ราคาจาก Park

		---SPC Package
		LEFT JOIN TTKMPkgPriBooking PBOK WITH(NOLOCK) ON PKG.FNPkgID   =PBOK.FNPpkID 
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN PBOK.FNPpbDayFrm AND PBOK.FNPpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>PBOK.FNPpbDayFrm AND PBOK.FNPpbDayTo=0))
		LEFT JOIN TTKMPkgPriHoliday PHLD WITH(NOLOCK) ON PKG.FNPkgID = PHLD.FNPpkID 
			AND PHLD.FDPphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMPkgPriDOW PDOW WITH(NOLOCK) ON PKG.FNPkgID = PDOW.FNPpkID 
			AND DATEPART(dw,@pdDateChkIn) =PDOW.FNPpdDayOfWeek 

		---SPC Group
		LEFT JOIN TTKMGrpPriBooking GBOK WITH(NOLOCK) ON GRP.FNPgpGrpID = GBOK.FNPgpGrpID
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN GBOK.FNGpbDayFrm AND GBOK.FNGpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>GBOK.FNGpbDayFrm AND GBOK.FNGpbDayTo=0))
		LEFT JOIN TTKMGrpPriHoliday GHLD WITH(NOLOCK) ON GRP.FNPgpGrpID = GHLD.FNPgpGrpID
			AND GHLD.FDGphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMGrpPriDOW GDOW WITH(NOLOCK) ON GRP.FNPgpGrpID = GDOW.FNPgpGrpID
			AND DATEPART(dw,@pdDateChkIn) = GDOW.FNGpdDayOfWeek

		---SPC Product
		LEFT JOIN TTKMPdtPriBooking DBOK WITH(NOLOCK) ON PDT.FNPkgPdtID = DBOK.FNPkgPdtID 
			AND(DATEDIFF(d,GETDATE(),@pdDateChkIn) BETWEEN DBOK.FNPpbDayFrm AND DBOK.FNPpbDayTo 
			OR (DATEDIFF(d,GETDATE(),@pdDateChkIn)>DBOK.FNPpbDayFrm AND DBOK.FNPpbDayTo=0))
		LEFT JOIN TTKMPdtPriHoliday DHLD WITH(NOLOCK) ON PDT.FNPkgPdtID = DHLD.FNPkgPdtID 
			AND DHLD.FDPphCheckIn IN (@pdDateChkIn)
		LEFT JOIN TTKMPdtPriDOW DDOW WITH(NOLOCK) ON PDT.FNPkgPdtID = DDOW.FNPkgPdtID 
			AND DATEPART(dw,@pdDateChkIn) =DDOW.FNPpdDayOfWeek 
	WHERE 1=1 AND FNEvnID = @pnEvnID
	AND PPK.FNZneID = @pnZneID AND ((@pdDateBooking BETWEEN FDPkgStartSale AND PKG.FDPkgStopSale)
	OR (CONVERT(DATETIME, GETDATE()) >= FDPkgStartSale AND FDPkgStopSale IS NULL))
	AND PPK.FTPpkType = 1
 )TK






GO
/****** Object:  StoredProcedure [dbo].[STP_GEToPmtWithSpcCondition]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToPmtWithSpcCondition]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToPmtWithSpcCondition] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_GEToPmtWithSpcCondition]
	@ptAgnKey AS VARCHAR(40)
	,@ptCstKey AS VARCHAR(40) = ''
	,@ptPmhCode AS VARCHAR(20)
AS

DECLARE @nHDNoPro AS INT

BEGIN
	IF (@ptCstKey = '')
	BEGIN
		-- กรณีมี agency ไม่มี customer.
		SELECT GRP.FNPmhID, GRP.FDPmhActivate, GRP.FDPmhTActivate, GRP.FDPmhExpired, GRP.FDPmhTExpired, GRP.FCPmhBuyAmt
			, PRK.FNPmoID, PKG.FNPkgID, GRP.FTPmhStaSpcPark, GRP.FTPmhStaSpcPdt, GRP.FCPmhGetValue
			, CASE WHEN PRK.FNTxhID IS NOT NULL THEN PRK.FNTxhID ELSE PKG.FNTxhID END AS FNTxhID
		FROM 
		(
			-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
				PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE ((ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
			OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2') --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				
			UNION

			-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
				PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
			FROM TTKTPmtList PMH WITH(NOLOCK)
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE ((PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' ))--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN(@ptAgnKey)
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
							THEN 1
							ELSE 0
						END
				END) = 1 
		) GRP
		INNER JOIN
		(
			-- หาอุทยานที่ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, NULL AS FNTxhID, PSP.FNPmoID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPark PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			WHERE PMH.FTPmhStaSpcPark = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			
			UNION
			
			-- หาอุทยานที่กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, PSP.FNPmoID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPark PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			INNER JOIN TTKTxnCartHD CHD WITH(NOLOCK) ON PSP.FNPmoID = CHD.FNPmoID
			WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSP.FTPspStaExclude = '2' AND PSP.FNPmoID IN(CHD.FNPmoID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
					THEN 1
					ELSE 0
					--	CASE
					--		WHEN PSP.FTPspStaExclude = '1' AND PSP.FNPmoID NOT IN(CHD.FNPmoID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
					--		THEN 1
					--		ELSE 0
					--	END
				END) = 1 
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

			UNION

			--*[AnUBiS][][2018-10-16]
			-- หาอุทยานที่กำหนดเฉพาะกลุ่ม ยกเว้นกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, CHD.FNPmoID 
			FROM TTKTxnCartHD CHD WITH(NOLOCK), TTKTPmtList PMH WITH(NOLOCK)
			WHERE FNPmoID NOT IN
			(
				SELECT FNPmoID
				FROM TTKTPmtSpcPark PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) 
			AND (
				SELECT FNPmoID
				FROM TTKTPmtSpcPark PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) IS NOT NULL
			AND PMH.FTPmhCode = @ptPmhCode	
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

		) PRK ON GRP.FNPmhID = PRK.FNPmhID
		INNER JOIN
		(
			-- หา package ที่ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, NULL AS FNTxhID, PSP.FNPspCodeRef AS FNPkgID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPdt PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			WHERE PMH.FTPmhStaSpcPdt = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			
			UNION
			
			-- หา package ที่กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, PSP.FNPspCodeRef AS FNPkgID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPdt PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			INNER JOIN TTKTxnCartHD CHD WITH(NOLOCK) ON PSP.FNPspCodeRef = CHD.FNPkgID
			WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND PSP.FTPspRefType = '2'
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSP.FTPspStaExclude = '2' AND PSP.FNPspCodeRef IN(CHD.FNPkgID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
					THEN 1
					ELSE 0
						--CASE
						--	WHEN PSP.FTPspStaExclude = '1' AND PSP.FNPspCodeRef NOT IN(CHD.FNPkgID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
						--	THEN 1
						--	ELSE 0
						--END
				END) = 1 
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

			UNION

			--*[AnUBiS][][2018-10-16]
			-- หา package ที่กำหนดเฉพาะกลุ่ม ยกเว้นกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, CHD.FNPkgID
			FROM TTKTxnCartHD CHD WITH(NOLOCK), TTKTPmtList PMH WITH(NOLOCK)
			WHERE CHD.FNPkgID NOT IN
			(
				SELECT PSP.FNPspCodeRef
				FROM TTKTPmtSpcPdt PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND PSP.FTPspRefType = '2'
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) 
			AND (
				SELECT PSP.FNPspCodeRef
				FROM TTKTPmtSpcPdt PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND PSP.FTPspRefType = '2'
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) IS NOT NULL
			AND PMH.FTPmhCode = @ptPmhCode	
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

		) PKG ON (PRK.FNPmhID = PKG.FNPmhID AND PRK.FNTxhID = PKG.FNTxhID) OR (PRK.FNPmhID = PKG.FNPmhID AND PRK.FNTxhID IS NULL) OR (PRK.FNPmhID = PKG.FNPmhID AND PKG.FNTxhID IS NULL)
	END
	ELSE
	BEGIN
		-- กรณีมีทั้ง agncy และ customer.
		SELECT GRP.FNPmhID, GRP.FDPmhActivate, GRP.FDPmhTActivate, GRP.FDPmhExpired, GRP.FDPmhTExpired, GRP.FCPmhBuyAmt
			, PRK.FNPmoID, PKG.FNPkgID, GRP.FTPmhStaSpcPark, GRP.FTPmhStaSpcPdt, GRP.FCPmhGetValue
			, CASE WHEN PRK.FNTxhID IS NOT NULL THEN PRK.FNTxhID ELSE PKG.FNTxhID END AS FNTxhID
		FROM 
		(
			SELECT CST.*
			FROM 
			(
				-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
				SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
					PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
				FROM TTKTPmtList PMH WITH(NOLOCK)
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
				WHERE ((ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
				OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
				OR PMH.FTPmhStaSpcGrp = '2') --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
					<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
					
				UNION

				-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
				SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
					PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
				FROM TTKTPmtList PMH WITH(NOLOCK)
					LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
					LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
				WHERE ((PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
				OR PMH.FTPmhStaSpcGrp = '1' ))--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
					<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND (CASE
						WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN(@ptAgnKey)
						THEN 1
						ELSE
							CASE
								WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
								THEN 1
								ELSE 0
							END
					END) = 1 
			) CST
			INNER JOIN
			(
				-- หา agency หรือ ไม่กำหนดเฉพาะกลุ่ม
				SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
					PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
				FROM TTKTPmtList PMH WITH(NOLOCK)
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
				WHERE ((ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '2') 
				OR PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
				OR PMH.FTPmhStaSpcGrp = '2') --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
					<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

				UNION

				-- หา customer ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
				SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate, PMH.FDPmhExpired, 
					PMH.FDPmhTExpired, PMH.FCPmhBuyAmt, PMH.FTPmhStaSpcPark, PMH.FTPmhStaSpcPdt, PMH.FCPmhGetValue
				FROM TTKTPmtList PMH WITH(NOLOCK)
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
				WHERE ((PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
				OR PMH.FTPmhStaSpcGrp = '1' ))--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
					<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND (CASE
						WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) IN(@ptCstKey)
						THEN 1
						ELSE
							CASE
								WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) NOT IN(@ptCstKey)
								THEN 1
								ELSE 0
							END
					END) = 1 
						
			) AGN ON CST.FNPmhID = AGN.FNPmhID
		) GRP
		INNER JOIN
		(
			-- หาอุทยานที่ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, NULL AS FNTxhID, PSP.FNPmoID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPark PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			WHERE PMH.FTPmhStaSpcPark = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			
			UNION
			
			-- หาอุทยานที่กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, PSP.FNPmoID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPark PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			INNER JOIN TTKTxnCartHD CHD WITH(NOLOCK) ON PSP.FNPmoID = CHD.FNPmoID
			WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSP.FTPspStaExclude = '2' AND PSP.FNPmoID IN(CHD.FNPmoID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
					THEN 1
					ELSE 0
						--CASE
						--	WHEN PSP.FTPspStaExclude = '1' AND PSP.FNPmoID NOT IN(CHD.FNPmoID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
						--	THEN 1
						--	ELSE 0
						--END
				END) = 1 
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

			UNION

			--*[AnUBiS][][2018-10-16]
			-- หาอุทยานที่กำหนดเฉพาะกลุ่ม ยกเว้นกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, CHD.FNPmoID 
			FROM TTKTxnCartHD CHD WITH(NOLOCK), TTKTPmtList PMH WITH(NOLOCK)
			WHERE FNPmoID NOT IN
			(
				SELECT FNPmoID
				FROM TTKTPmtSpcPark PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) 
			AND (
				SELECT FNPmoID
				FROM TTKTPmtSpcPark PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPark = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) IS NOT NULL
			AND PMH.FTPmhCode = @ptPmhCode	
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'
		) PRK ON GRP.FNPmhID = PRK.FNPmhID
		INNER JOIN
		(
			-- หา package ที่ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, NULL AS FNTxhID, PSP.FNPspCodeRef AS FNPkgID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPdt PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			WHERE PMH.FTPmhStaSpcPdt = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			
			UNION
			
			-- หา package ที่กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, PSP.FNPspCodeRef AS FNPkgID
			FROM TTKTPmtList PMH WITH(NOLOCK)
			LEFT JOIN TTKTPmtSpcPdt PSP WITH(NOLOCK) ON PMH.FNPmhID = PSP.FNPmhID
			INNER JOIN TTKTxnCartHD CHD WITH(NOLOCK) ON PSP.FNPspCodeRef = CHD.FNPkgID
			WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND PSP.FTPspRefType = '2'
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND PMH.FTPmhCode = @ptPmhCode
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSP.FTPspStaExclude = '2' AND PSP.FNPspCodeRef IN(CHD.FNPkgID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
					THEN 1
					ELSE 0
						--CASE
						--	WHEN PSP.FTPspStaExclude = '1' AND PSP.FNPspCodeRef NOT IN(CHD.FNPkgID) --1:ยกเว้นอุทยาน  2:เฉพาะอุทยาน
						--	THEN 1
						--	ELSE 0
						--END
				END) = 1 
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'

			UNION
			--*[AnUBiS][][2018-10-16]
			-- หา package ที่กำหนดเฉพาะกลุ่ม ยกเว้นกลุ่ม
			SELECT PMH.FNPmhID, CHD.FNTxhID, CHD.FNPkgID
			FROM TTKTxnCartHD CHD WITH(NOLOCK), TTKTPmtList PMH WITH(NOLOCK)
			WHERE CHD.FNPkgID NOT IN
			(
				SELECT PSP.FNPspCodeRef
				FROM TTKTPmtSpcPdt PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND PSP.FTPspRefType = '2'
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) 
			AND (
				SELECT PSP.FNPspCodeRef
				FROM TTKTPmtSpcPdt PSP WITH(NOLOCK)
				INNER JOIN TTKTPmtList PMH WITH(NOLOCK) ON PSP.FNPmhID = PMH.FNPmhID
				WHERE PMH.FTPmhStaSpcPdt = '1' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
				AND PSP.FTPspRefType = '2'
				AND ISNULL(PMH.FTPmhClosed, '0') = '0'
				AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1'
				AND PMH.FTPmhCode = @ptPmhCode
				AND GETDATE() 
							<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
				AND PSP.FTPspStaExclude = '1'
			) IS NOT NULL
			AND PMH.FTPmhCode = @ptPmhCode	
			AND CHD.FTAgnKeyAPI = @ptAgnKey
			AND CHD.FTCstKeyAccess = @ptCstKey
			AND ISNULL(CHD.FTTxhDocRef, '') = ''
			AND ISNULL(CHD.FTPmhCode, '') = ''
			AND CHD.FTTxhStaPaid = '1'
		) PKG ON (PRK.FNPmhID = PKG.FNPmhID AND PRK.FNTxhID = PKG.FNTxhID) 
				OR (PRK.FNPmhID = PKG.FNPmhID AND PRK.FNTxhID IS NULL) OR (PRK.FNPmhID = PKG.FNPmhID AND PKG.FNTxhID IS NULL)
	END
END


GO
/****** Object:  StoredProcedure [dbo].[STP_GEToPromotionList]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToPromotionList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToPromotionList] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_GEToPromotionList]
	@ptAgnKey AS VARCHAR(40)
	,@ptCstKey AS VARCHAR(40) = ''
	,@ptImgPth AS VARCHAR(255)
	,@pnRow AS INT
	,@pnRowPerPage AS INT
AS
BEGIN
	IF (@ptCstKey = '')
	BEGIN
		SELECT IMG.FNImgID AS rnImgID, IMG.FTImgRefID AS rtImgRefID, IMG.FNImgSeq AS rnImgSeq
			,IMG.FTImgTable AS rtImgTable , IMG.FTImgKey AS rtImgKey
			,(@ptImgPth + (CASE 
								WHEN LEFT(IMG.FTImgObj, 1) = '\' 
								THEN SUBSTRING(IMG.FTImgObj, 2, LEN(IMG.FTImgObj)) 
								ELSE IMG.FTImgObj 
							END)) AS rtImgObj
		FROM TTKMImgPdt IMG WITH(NOLOCK)
		INNER JOIN
		(
			-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
			OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
				--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
				LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
				LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN(@ptAgnKey)
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
							THEN 1
							ELSE 0
						END
				END) = 1 

		) AGN ON IMG.FNImgRefID = AGN.FNPmhID
		WHERE UPPER(IMG.FTImgTable) = UPPER('TTKTPmtList')
		AND IMG.FTImgKey = 'Promotion'
		ORDER BY CONVERT(DATETIME, CONVERT(VARCHAR(10), AGN.FDPmhActivate, 112)+' '+CONVERT(VARCHAR(8), AGN.FDPmhTActivate)) ASC
		OFFSET @pnRow  ROWS FETCH NEXT @pnRowPerPage ROWS ONLY
	END
	ELSE
	BEGIN
		SELECT IMG.FNImgID AS rnImgID, IMG.FTImgRefID AS rtImgRefID, IMG.FNImgSeq AS rnImgSeq
			,IMG.FTImgTable AS rtImgTable , IMG.FTImgKey AS rtImgKey
			,(@ptImgPth + (CASE 
								WHEN LEFT(IMG.FTImgObj, 1) = '\' 
								THEN SUBSTRING(IMG.FTImgObj, 2, LEN(IMG.FTImgObj)) 
								ELSE IMG.FTImgObj 
							END)) AS rtImgObj
		FROM TTKMImgPdt IMG WITH(NOLOCK)
		INNER JOIN
		(
			-- หา customer หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '1') 
			OR PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา agency ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TCNMAgency AGN WITH(NOLOCK) ON AGN.FTAggCode = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) IN(@ptAgnKey)
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),AGN.FTAgnKeyAPI) NOT IN(@ptAgnKey)
							THEN 1
							ELSE 0
						END
				END) =1 

		) AGN ON IMG.FNImgRefID = AGN.FNPmhID
		INNER JOIN
		(
			-- หา agency หรือ ไม่กำหนดเฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
			WHERE (ISNULL(CONVERT(VARCHAR(40), PSG.FTPsgRefID), '') = '' AND PSG.FTPsgType = '2') 
			OR PSG.FTPsgType = '1' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '2' --กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))

			UNION

			-- หา customer ที่ กำหนดเฉพาะกลุ่ม ทั้ง ยกเว้นกลุ่ม และ เฉพาะกลุ่ม
			SELECT PMH.FNPmhID, PMH.FDPmhActivate, PMH.FDPmhTActivate
			FROM TTKTPmtList PMH WITH(NOLOCK)
			--INNER JOIN TTKTPmtList_L PMHL WITH(NOLOCK) ON PMH.FNPmhID = PMHL.FNPmhID AND PMHL.FNLngID = 1
			LEFT JOIN TTKTPmtSpcGrp PSG WITH(NOLOCK) ON PMH.FNPmhID = PSG.FNPmhID
			LEFT JOIN TTKMCst CST WITH(NOLOCK) ON CONVERT(VARCHAR(5), CST.FNCgpID) = PSG.FTPsgRefID
			WHERE (PSG.FTPsgType = '2' -- กลุ่มลูกค้า/agency 1: agency, 2: customer
			OR PMH.FTPmhStaSpcGrp = '1' )--กำหนดกลุ่ม/ไม่กำหนด 1: กำหนด, 2: ไม่กำหนด
			AND ISNULL(PMH.FTPmhClosed, '0') = '0'
			AND ISNULL(PMH.FTPmhStaPrcDoc, '') = '1' --*[Adcha][][11/10/2018] เพิ่มเงื่อนไข  StaPrcDoc = 1
			AND GETDATE() 
				<= CONVERT(DATETIME, CONVERT(VARCHAR(10), PMH.FDPmhExpired, 112)+' '+CONVERT(VARCHAR(8), PMH.FDPmhTExpired))
			AND (CASE
					WHEN PSG.FTPsgStaExclude = '2' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) IN(@ptCstKey)	-- 1:ยกเว้นกลุ่ม  2:เฉพาะกลุ่ม
					THEN 1
					ELSE
						CASE
							WHEN PSG.FTPsgStaExclude = '1' AND CONVERT(VARCHAR(40),CST.FTCstKeyAccess) NOT IN(@ptCstKey) -- 1:ยกเว้นกลุ่ม  2:เฉพาะกลุ่ม
							THEN 1
							ELSE 0
						END
				END) = 1 
		) CST ON AGN.FNPmhID = CST.FNPmhID
		WHERE UPPER(IMG.FTImgTable) = UPPER('TTKTPmtList')
		AND IMG.FTImgKey = 'Promotion'
		ORDER BY CONVERT(DATETIME, CONVERT(VARCHAR(10), AGN.FDPmhActivate, 112)+' '+CONVERT(VARCHAR(8), AGN.FDPmhTActivate)) ASC
		OFFSET @pnRow  ROWS FETCH NEXT @pnRowPerPage ROWS ONLY
	END
END


GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMAppModule]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMAppModule]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMAppModule] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMAppModule] 
AS
BEGIN
	SELECT FTAppCode,FTAppModule,FNAppSeqNo,FTAppSignType
    FROM TCNMAppModule WITH(NOLOCK) 

END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourieLogin]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourieLogin]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourieLogin] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourieLogin]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	 FTCryCode,FTManCardID,FTManLogType,FDManPwdStart,FDManPwdExpired
	,FTManLogin,FTManLoginPwd,FTManRmk,FTManStaActive
	FROM TCNMCourieLogin WITH(NOLOCK) 
	WHERE FTCryCode IN (SELECT FTCryCode FROM TCNMCourier WITH (NOLOCK) WHERE  FDLastUPDOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourieMan]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourieMan]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourieMan] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourieMan] 
	@pdDate DATETIME NULL
AS
BEGIN
	
	SELECT 
	 FTCryCode,FTManCardID,FTManTel
	,FTManCardEmp,FTManSex,FDManDob
	,FTManStaActive
	FROM TCNMCourieMan WITH (NOLOCK) 
	WHERE FTCryCode IN (SELECT FTCryCode FROM TCNMCourier WITH (NOLOCK) WHERE FDLastUPDOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourieMan_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourieMan_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourieMan_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourieMan_L] 
	@pdDate DATETIME NULL
AS
BEGIN
	
	SELECT 
	FTCryCode,FTManCardID,FNLngID,FTManName,FTCryRmk
	FROM TCNMCourieMan_L WITH (NOLOCK) 
	WHERE FTCryCode IN (SELECT FTCryCode FROM TCNMCourier WITH (NOLOCK) WHERE FDLastUPDOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourier]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourier]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourier] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourier] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
		 FTCryCode,FNCryCrTerm,FCCryCrLimit
		,FTCryCardID,FTCryTaxNo,FTCryTel
		,FTCryFax,FTCryEmail,FTCrySex
		,FDCryDob,FTCgpCode,FTCtyCode
		,FTCryBusiness,FTCryBchHQ,FTCryBchCode
		,FTCryDelimeterQR,FTCryStaActive,FDLastUpdOn
		,FTLastUpdBy,FDCreateOn,FTCreateBy
		,FTCryLoginType
	FROM TCNMCourier
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourier_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourier_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourier_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourier_L] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FNLngID,FTCryCode,FTCryName,FTCryNameOth,FTCryRmk
	FROM TCNMCourier_L WHERE FTCryCode IN (SELECT  FTCryCode FROM TCNMCourier WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourierGrp]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourierGrp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourierGrp] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourierGrp]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTCgpCode,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TCNMCourierGrp WITH(NOLOCK)
	WHERE FDLastUPDOn >= @pdDate
	 
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourierGrp_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourierGrp_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourierGrp_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourierGrp_L]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTCgpCode,FNLngID,FTCgpName,FTCgpRmk
	FROM TCNMCourierGrp_L WITH(NOLOCK)
	WHERE FTCgpCode IN (SELECT FTCgpCode FROM TCNMCourierGrp WITH(NOLOCK) WHERE FDLastUPDOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourierType]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourierType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourierType] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourierType] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	FTCtyCode,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TCNMCourierType WITH (NOLOCK)
	WHERE FDLastUPDOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTCNMCourierType_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTCNMCourierType_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTCNMCourierType_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTCNMCourierType_L]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTCtyCode,FNLngID ,FTCtyName,FTCtyRmk FROM TCNMCourierType_L WITH (NOLOCK)
	WHERE FTCtyCode IN (SELECT FTCtyCode FROM TCNMCourierType WITH (NOLOCK) WHERE FDLastUPDOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTPSTSalDT]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTPSTSalDT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTPSTSalDT] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTPSTSalDT] 
	@ptDocNo NVARCHAR(20) NULL,
	@ptBchCode NVARCHAR(20) NULL,
	@ptShpCode NVARCHAR(20) NULL
AS
DECLARE @tMerVD VARCHAR(5)	-- 3. --
DECLARE @tMerPS VARCHAR(5)	-- 3. --
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
2.10/09/2019	Em		แก้ไขให้ดึงเฉพาะสินค้า Vending
3.17/09/2019	Em		แก้ไขให้ตรวจสอบว่าเป็น Merchant เดียวกัน  
----------------------------------------------------------------------*/
BEGIN
	--SELECT 
	--	 FTBchCode,FTXshDocNo,FNXsdSeqNo,FTPdtCode
	--	,FTXsdPdtName,FTPunCode,FTPunName,FCXsdFactor
	--	,FTXsdBarCode,FTSrnCode,FTXsdVatType,FTVatCode
	--	,FCXsdVatRate,FTXsdSaleType,FCXsdSalePrice,FCXsdQty
	--	,FCXsdQtyAll,FCXsdSetPrice,FCXsdAmtB4DisChg,FTXsdDisChgTxt
	--	,FCXsdDis,FCXsdChg,FCXsdNet,FCXsdNetAfHD
	--	,FCXsdVat,FCXsdVatable,FCXsdWhtAmt,FTXsdWhtCode
	--	,FCXsdWhtRate,FCXsdCostIn,FCXsdCostEx,FTXsdStaPdt
	--	,FCXsdQtyLef,FCXsdQtyRfn,FTXsdStaPrcStk,FTXsdStaAlwDis
	--	,FNXsdPdtLevel,FTXsdPdtParent,FCXsdQtySet,FTPdtStaSet
	--	,FTXsdRmk
	--	,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	--FROM TPSTSalDT WITH (NOLOCK)
	--WHERE FTXshDocNo=@ptDocNo

	-- 3. --
	SET @tMerVD = ISNULL((SELECT TOP 1 FTMerCode FROM TCNMShop WITH(NOLOCK) WHERE FTBchCode = @ptBchCode AND FTShpCode = @ptShpCode),'')
	SET @tMerPS = ISNULL((SELECT TOP 1 FTMerCode 
					FROM TCNMShop SHP WITH(NOLOCK)
					INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON ISNULL(HD.FTShpCode,'') = ISNULL(SHP.FTShpCode,'')
						AND HD.FTBchCode = SHP.FTBchCode AND HD.FTBchCode = @ptBchCode AND HD.FTXshDocNo = @ptDocNo),'')

	IF (@tMerVD = @tMerPS)
		BEGIN
			-- 2. --
			SELECT DISTINCT DT.FTBchCode,DT.FTXshDocNo,DT.FNXsdSeqNo,DT.FTPdtCode
				,DT.FTXsdPdtName,DT.FTPunCode,DT.FTPunName,DT.FCXsdFactor
				,DT.FTXsdBarCode,DT.FTSrnCode,DT.FTXsdVatType,DT.FTVatCode
				,DT.FCXsdVatRate,DT.FTXsdSaleType,DT.FCXsdSalePrice,DT.FCXsdQty
				,DT.FCXsdQtyAll,DT.FCXsdSetPrice,DT.FCXsdAmtB4DisChg,DT.FTXsdDisChgTxt
				,DT.FCXsdDis,DT.FCXsdChg,DT.FCXsdNet,DT.FCXsdNetAfHD
				,DT.FCXsdVat,DT.FCXsdVatable,DT.FCXsdWhtAmt,DT.FTXsdWhtCode
				,DT.FCXsdWhtRate,DT.FCXsdCostIn,DT.FCXsdCostEx,DT.FTXsdStaPdt
				,DT.FCXsdQtyLef,DT.FCXsdQtyRfn,DT.FTXsdStaPrcStk,DT.FTXsdStaAlwDis
				,DT.FNXsdPdtLevel,DT.FTXsdPdtParent,DT.FCXsdQtySet,DT.FTPdtStaSet
				,DT.FTXsdRmk
				,DT.FDLastUpdOn,DT.FTLastUpdBy,DT.FDCreateOn,DT.FTCreateBy
			FROM TPSTSalDT DT WITH(NOLOCK)
			INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo
			--INNER JOIN TVDMPdtLayout PLO WITH(NOLOCK) ON PLO.FTBchCode = DT.FTBchCode AND PLO.FTPdtCode = DT.FTPdtCode AND PLO.FTShpCode = HD.FTShpCode
			INNER JOIN TVDMPdtLayout PLO WITH(NOLOCK) ON PLO.FTBchCode = DT.FTBchCode AND PLO.FTPdtCode = DT.FTPdtCode AND PLO.FTShpCode = @ptShpCode	-- 3. --
			INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPdtCode = DT.FTPdtCode
			--WHERE HD.FTBchCode = @ptBchCode AND HD.FTXshDocNo = @ptDocNo AND HD.FTShpCode = @ptShpCode
			WHERE HD.FTBchCode = @ptBchCode AND HD.FTXshDocNo = @ptDocNo -- 3. --
			AND PDT.FTPdtType = '1'
			AND DT.FTXsdStaPdt = '1'
			-- 2. --	
		END
	ELSE
		BEGIN
			SELECT TOP 0 DT.FTBchCode,DT.FTXshDocNo,DT.FNXsdSeqNo,DT.FTPdtCode
				,DT.FTXsdPdtName,DT.FTPunCode,DT.FTPunName,DT.FCXsdFactor
				,DT.FTXsdBarCode,DT.FTSrnCode,DT.FTXsdVatType,DT.FTVatCode
				,DT.FCXsdVatRate,DT.FTXsdSaleType,DT.FCXsdSalePrice,DT.FCXsdQty
				,DT.FCXsdQtyAll,DT.FCXsdSetPrice,DT.FCXsdAmtB4DisChg,DT.FTXsdDisChgTxt
				,DT.FCXsdDis,DT.FCXsdChg,DT.FCXsdNet,DT.FCXsdNetAfHD
				,DT.FCXsdVat,DT.FCXsdVatable,DT.FCXsdWhtAmt,DT.FTXsdWhtCode
				,DT.FCXsdWhtRate,DT.FCXsdCostIn,DT.FCXsdCostEx,DT.FTXsdStaPdt
				,DT.FCXsdQtyLef,DT.FCXsdQtyRfn,DT.FTXsdStaPrcStk,DT.FTXsdStaAlwDis
				,DT.FNXsdPdtLevel,DT.FTXsdPdtParent,DT.FCXsdQtySet,DT.FTPdtStaSet
				,DT.FTXsdRmk
				,DT.FDLastUpdOn,DT.FTLastUpdBy,DT.FDCreateOn,DT.FTCreateBy
			FROM TPSTSalDT DT WITH(NOLOCK)
			INNER JOIN TPSTSalHD HD WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo
			INNER JOIN TVDMPdtLayout PLO WITH(NOLOCK) ON PLO.FTBchCode = DT.FTBchCode AND PLO.FTPdtCode = DT.FTPdtCode AND PLO.FTShpCode = @ptShpCode
			INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPdtCode = DT.FTPdtCode
		END
	-- 3. --
END



GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPdtPrice4CST]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPdtPrice4CST]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPdtPrice4CST] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPdtPrice4CST] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTPplCode,FTPdtCode,FTPzeCode
	 ,FTRthCode,FDPghDStart,FTPghTStart
	 ,FDPghDStop,FTPghTStop,FTShpCode
	 ,FTPghDocNo,FTPghDocType,FDLastUpdOn
	 ,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTTPdtPrice4CST WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPdtPrice4PDT]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPdtPrice4PDT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPdtPrice4PDT] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPdtPrice4PDT] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	   FTPdtCode,FTPzeCode,FTRthCode
	  ,FDPghDStart,FTPghTStart,FDPghDStop
	  ,FTPghTStop,FTShpCode,FTPghDocNo
	  ,FTPghDocType,FDLastUpdOn,FTLastUpdBy
	  ,FDCreateOn,FTCreateBy
	FROM TRTTPdtPrice4PDT WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPdtPriDOW]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPdtPriDOW]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPdtPriDOW] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPdtPriDOW] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTPdtCode,FNPpdDayOfWeek,FTShpCode
     ,FTPzeCode,FTRthCode
     ,FDLastUpdOn,FTLastUpdBy
    FROM TRTMPdtPriDOW WITH (NOLOCK) WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPdtPriHoliday]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPdtPriHoliday]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPdtPriHoliday] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPdtPriHoliday] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	    FTPdtCode,FDPphCheckIn
	   ,FDPphToSpcDay,FTShpCode
	   ,FTPzeCode,FTRthCode
	   ,FDLastUpdOn,FTLastUpdBy
	FROM TRTMPdtPriHoliday WITH (NOLOCK) WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPdtRental]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPdtRental]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPdtRental] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPdtRental] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
		 FTPdtCode,FTPdtRentType
		,FTPdtStaReqRet,FTPdtRentCond
		,FTPdtStaPay,FCPdtDeposit
		,FCPdtFee,FTShpCode
		,FDLastUpdOn,FTLastUpdBy
		,FDCreateOn,FTCreateBy
	FROM TRTMPdtRental WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPriRateDT]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPriRateDT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPriRateDT] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPriRateDT] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
      FTRthCode,FNRtdSeqNo
     ,FNRtdMinQty,FTRtdTmeType
     ,FCRtdTmeFact,FCRtdPrice
     ,FDLastUpdOn,FTLastUpdBy
   FROM TRTMPriRateDT WITH (NOLOCK) 
   WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPriRateHD]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPriRateHD]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPriRateHD] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPriRateHD] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT
		 FTRthCode,FTRthCalType
		,FDLastUpdOn,FTLastUpdBy
		,FDCreateOn,FTCreateBy
	FROM TRTMPriRateHD WITH (NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END



GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMPriRateHD_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMPriRateHD_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMPriRateHD_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMPriRateHD_L] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
		FTRthCode,ISNULL(FNLngID,0) AS FNLngID,FTRthName
	FROM TRTMPriRateHD_L WITH(NOLOCK) 
	WHERE FTRthCode IN (SELECT FTRthCode FROM TRTMPriRateHD WITH (NOLOCK) WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopLayout]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopLayout]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopLayout] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopLayout]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	   FTBchCode,FTMerCode,FTShpCode,FNLayNo
      ,FNLayScaleX,FNLayScaleY,FNLayRow,FNLayCol
      ,FTPzeCode,FTRakCode,FTLayStaUse
      ,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTMShopLayout WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopLayout_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopLayout_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopLayout_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopLayout_L]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTBchCode,FTShpCode,FNLayNo,FNLngID,FTLayName,FTLayRemark 
	FROM TRTMShopLayout_L WITH(NOLOCK)
	WHERE FTBchCode IN (SELECT  FTBchCode FROM TRTMShopLayout WITH(NOLOCK) WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopPos]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopPos]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopPos] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopPos] 
	@pdDate DATETIME NULL
AS
BEGIN	SELECT 
	 FTBchCode,FTShpCode,FTPosCode
	,FTPshPosSN,FTPshStaUse,FTPshSLRcvType
	,FTPshNetIP,FTPshNetPort,FDLastUpdOn
	,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTMShopPos WITH (NOLOCK)
	WHERE  FDLastUpdOn >= @pdDate

END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopPosLayout]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopPosLayout]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopPosLayout] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopPosLayout] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
		FTBchCode,FTShpCode,FTPosCode,FNLayNo,FNLayBoardNo,FTLayBoxNo 
	FROM TRTMShopPosLayout WITH (NOLOCK)
	WHERE FTShpCode IN (SELECT FTShpCode FROM TRTMShopPos WITH (NOLOCK) WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopPosLayout_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopPosLayout_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopPosLayout_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopPosLayout_L] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTBchCode,FTShpCode,FNLayNo,FNLngID,FTLayName,FTLayRemark
	FROM TRTMShopLayout_L WITH(NOLOCK)
	WHERE FTShpCode IN (SELECT FTShpCode FROM TRTMShopPos WITH (NOLOCK) WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopRack]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopRack]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopRack] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopRack] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTRakCode,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTMShopRack WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopRack_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopRack_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopRack_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopRack_L] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTRakCode,FNLngID,FTRakName,FTRakRmk
	FROM TRTMShopRack_L WITH(NOLOCK)
	WHERE FTRakCode IN (SELECT FTRakCode FROM TRTMShopRack WITH(NOLOCK) WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopSize]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopSize]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopSize] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopSize]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	 FTPzeCode,FCPzeDim,FCPzeHigh,FCPzeWide
	,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTMShopSize WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopSize_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopSize_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopSize_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopSize_L]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTSizCode,FNLngID,FTSizName,FTSizRemark FROM TRTMShopSize_L WITH (NOLOCK) 
	WHERE FTSizCode IN (SELECT FTPzeCode FROM TRTMShopSize WITH(NOLOCK)WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopType]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopType]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopType] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopType]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	 FTBchCode,FTShpCode,FTShtType
	,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTMShopType WITH(NOLOCK)
	WHERE  FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTMShopType_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTMShopType_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTMShopType_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTMShopType_L]
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	FTBchCode,FTShpCode,FTShtType,FNLngID,FTShtName,FTShtRemark
	FROM TRTMShopType_L WITH(NOLOCK)
	WHERE FTShpCode IN (SELECT FTShpCode FROM TRTMShopType WITH(NOLOCK)WHERE FDLastUpdOn >= @pdDate)
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTTLockerStatus]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTTLockerStatus]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTTLockerStatus] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTTLockerStatus] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
		FTBchCode,FTPosCode,FNLayNo,FTLayStaUse
       ,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTTLockerStatus
	WHERE FDLastUpdOn >= @pdDate




END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTTPdtPrice4CST]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTTPdtPrice4CST]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTTPdtPrice4CST] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTTPdtPrice4CST] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	  FTPplCode,FTPdtCode,FTPzeCode
	 ,FTRthCode,FDPghDStart,FTPghTStart
	 ,FDPghDStop,FTPghTStop,FTShpCode
	 ,FTPghDocNo,FTPghDocType,FDLastUpdOn
	 ,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TRTTPdtPrice4CST WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTRTTPdtPrice4PDT]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTRTTPdtPrice4PDT]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTRTTPdtPrice4PDT] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTRTTPdtPrice4PDT] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT 
	   FTPdtCode,FTPzeCode,FTRthCode
	  ,FDPghDStart,FTPghTStart,FDPghDStop
	  ,FTPghTStop,FTShpCode,FTPghDocNo
	  ,FTPghDocType,FDLastUpdOn,FTLastUpdBy
	  ,FDCreateOn,FTCreateBy
	FROM TRTTPdtPrice4PDT WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTSysApp]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTSysApp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTSysApp] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTSysApp] 
	@pdDate DATETIME NULL
AS
BEGIN
	SELECT FTAppCode,FTAppVersion,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy
	FROM TSysApp WITH(NOLOCK)
	WHERE FDLastUpdOn >= @pdDate
END





GO
/****** Object:  StoredProcedure [dbo].[STP_GEToTSysApp_L]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GEToTSysApp_L]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GEToTSysApp_L] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_GEToTSysApp_L] 
	@pdDate DATETIME NULL
AS
BEGIN
    SELECT FTAppCode,FNLngID,FTAppName,FTAppRmk
	FROM TSysApp_L WITH(NOLOCK)
	WHERE FTAppCode IN (SELECT FTAppCode FROM TSysApp WHERE FDLastUpdOn >= @pdDate)

END





GO
/****** Object:  StoredProcedure [dbo].[STP_GETtAutoGen]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_GETtAutoGen]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_GETtAutoGen] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_GETtAutoGen]
(@ptTblName VARCHAR(30),
@ptFedCode VARCHAR(30),
@pnDocType INT,
@pdDate Datetime,
@ptPosCode VARCHAR(5),
@ptShpCode VARCHAR(5),
@FTResult VARCHAR(30) OUTPUT
)  
AS
/*------------------------------------------------------------
Document History
  Date			User	Remark
1.04/11/2019	Em		create  
2.11/12/2019	Em		Convert Int ให้เป็น varchar
------------------------------------------------------------*/
BEGIN
	DECLARE @tDocNo VARCHAR(30)
	DECLARE @tStaDefUsage VARCHAR(1)
	DECLARE @tDocFmtChr VARCHAR(5)
	DECLARE @tDocFmtBch VARCHAR(1)
	DECLARE @tDocFmtPosShp VARCHAR(1)
	DECLARE @tDocFmtYear VARCHAR(1)
	DECLARE @tDocFmtMonth VARCHAR(1)
	DECLARE @tDocFmtDay VARCHAR(1)
	DECLARE @tDocFmtSep VARCHAR(1)
	DECLARE @tDocFmtNum VARCHAR(50)
	DECLARE @tStaAlwChr VARCHAR(1)
	DECLARE @tStaAlwBch VARCHAR(1)
	DECLARE @tStaAlwPosShp VARCHAR(1)
	DECLARE @tStaAlwYear VARCHAR(1)
	DECLARE @tStaAlwMonth VARCHAR(1)
	DECLARE @tStaAlwDay VARCHAR(1)
	DECLARE @tStaAlwSep VARCHAR(1)
	DECLARE @tFmtLeft VARCHAR(30)
	DECLARE @tBchCode VARCHAR(5)
	DECLARE @nMaxDoc INT
	DECLARE @tSql NVARCHAR(MAX)
	DECLARE @tPara NVARCHAR(2000)
	DECLARE @nLenFmt INT
	DECLARE @nLenLeft INT
	DECLARE @nLenNum INT

	SELECT TOP 1 @tDocFmtChr = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefChar ELSE FTSatUsrChar END),
		@tDocFmtBch = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefBch ELSE FTSatUsrBch END),
		@tDocFmtPosShp = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefPosShp ELSE FTSatUsrPosShp END),
		@tDocFmtYear = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefYear ELSE FTSatUsrYear END),
		@tDocFmtMonth = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefMonth ELSE FTSatUsrMonth END),
		@tDocFmtDay = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefDay ELSE FTSatUsrDay END),
		@tDocFmtSep = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefMonth ELSE FTSatUsrMonth END),
		@tDocFmtNum = (CASE WHEN FTSatStaDefUsage = '1' THEN FTSatDefNum ELSE FTSatUsrNum END),
		@tStaAlwChr = ISNULL(FTSatStaAlwChr,'2'),@tStaAlwBch = ISNULL(FTSatStaAlwBch,'2'),
		@tStaAlwPosShp = ISNULL(FTSatStaAlwPosShp,'2'),@tStaAlwYear = ISNULL(FTSatStaAlwYear,'2'),
		@tStaAlwMonth = ISNULL(FTSatStaAlwMonth,'2'),@tStaAlwDay = ISNULL(FTSatStaAlwDay,'2'),
		@tStaAlwSep = ISNULL(FTSatStaAlwSep,'2')
	FROM TCNTAuto
	WHERE FTSatTblName = @ptTblName AND FTSatStaDocType = @pnDocType AND FTSatFedCode = @ptFedCode 

	SELECT TOP 1 @tBchCode = ISNULL(FTBchCode,'') FROM TCNMComp WITH(NOLOCK)

	SET @tFmtLeft = ''
	IF (@tStaAlwChr = '1') SET @tFmtLeft = @tDocFmtChr
	IF (@tStaAlwBch = '1' AND @tDocFmtBch = '1') SET @tFmtLeft += @tBchCode
	IF (@tStaAlwPosShp = '1')
	BEGIN
		IF (@tDocFmtPosShp = '1')
			SET @tFmtLeft += @ptPosCode
		ELSE IF (@tDocFmtPosShp = '2')
			SET @tFmtLeft += @ptShpCode
	END 
	IF (@tStaAlwYear = '1' AND @tDocFmtYear = '1') SET @tFmtLeft += RIGHT(CONVERT(VARCHAR(4),YEAR(@pdDate)),2)	-- 2. --
	IF (@tStaAlwMonth = '1' AND @tDocFmtMonth = '1') SET @tFmtLeft += CONVERT(VARCHAR(2),MONTH(@pdDate))	-- 2. --
	IF (@tStaAlwDay = '1' AND @tDocFmtDay = '1') SET @tFmtLeft += CONVERT(VARCHAR(4),DAY(@pdDate))	-- 2. --
	IF (@tStaAlwSep = '1' AND @tDocFmtSep = '1') SET @tFmtLeft += '-'

	SET @nLenFmt = LEN(@tFmtLeft+@tDocFmtNum)
	SET @nLenLeft = LEN(@tFmtLeft)
	SET @nLenNum = LEN(@tDocFmtNum)

	SET @tSql = 'SELECT @nMaxDocOUT = RIGHT(ISNULL(MAX(' + @ptFedCode + '),0),@nLenNumIn)'
	SET @tSql += ' FROM ' + @ptTblName + ' WITH(NOLOCK) ' 
	SET @tSql += ' WHERE LEN(' + @ptFedCode + ') = @nLenFmtIn AND LEFT(' + @ptFedCode + ',@nLenLeftIn) = @tFmtLeftIn'
	SET @tPara = '@nLenFmtIn INT,@nLenLeftIn INT,@nLenNumIn INT,@tFmtLeftIn VARCHAR(30),@nMaxDocOUT INT OUTPUT'
	EXECUTE sp_executesql @tSql, @tPara,@nLenFmtIn = @nLenFmt,@nLenLeftIn = @nLenLeft,@nLenNumIn = @nLenNum,@tFmtLeftIn = @tFmtLeft ,@nMaxDocOUT = @nMaxDoc OUTPUT

	IF(@nMaxDoc = CONVERT(INT,REPLACE(REPLACE(@tDocFmtNum,'1','9'),'0','9')))
		SET @nMaxDoc =1
	ELSE
		SET @nMaxDoc = @nMaxDoc + 1

	SET @tDocNo = @tFmtLeft + FORMAT(@nMaxDoc,REPLACE(@tDocFmtNum,'1','0'))

    SET @FTResult = @tDocNo  
END
GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnAvailableTopup]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnAvailableTopup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnAvailableTopup] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnAvailableTopup] 
	@ptBchCode VARCHAR(5) NULL,
	@ptCrdCode VARCHAR(20) NULL,
	@pcFCCrdValue NUMERIC(18,4) NULL,
	@ptTxnPosCode VARCHAR(3) NULL
AS
BEGIN
        BEGIN TRANSACTION  
			SAVE TRANSACTION AvailableTopup  
			BEGIN TRY  

            -- Insert transection TopUp
            INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
            ( 
				FTBchCode,FTTxnDocType,FTCrdCode, 
				FDTxnDocDate,FTBchCodeRef,FCTxnValue, 
				FTTxnStaPrc,FTTxnPosCode 
				,FTTxnStaOffLine     
            ) 
            VALUES 
            ( 
				@ptBchCode,'5',@ptCrdCode, 
				GETDATE(),@ptBchCode,@pcFCCrdValue, 
				'1',@ptTxnPosCode
				,'0'    
            ) 

            -- Update Master Card
            UPDATE TFNMCard WITH (ROWLOCK) SET  
            FCCrdValue='0', 
            FCCrdDeposit='0', 
            FDCrdResetDate=GETDATE()  
            WHERE FTCrdCode=@ptCrdCode

            COMMIT TRANSACTION AvailableTopup 
        END TRY 

        BEGIN CATCH 
			ROLLBACK TRANSACTION AvailableTopup 
        END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnCancelTopup]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnCancelTopup]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnCancelTopup] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnCancelTopup] 
	@ptBchCode VARCHAR(5) NULL, 
	@ptCrdCode VARCHAR(20) NULL, 
	@pcFCTxnValue NUMERIC(18,4)  NULL,
	@ptFTTxnPosCode VARCHAR(3) NULL,  
	@pcAvailable NUMERIC(18,4)  NULL,  
	@pnTxnOffline INT NULL,  
	@pnTxnID INT NULL
AS
BEGIN
  BEGIN TRANSACTION  
        SAVE TRANSACTION CancelTopup  
        BEGIN TRY  

			-- Insert transection Sale
            INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
            ( 
				FTBchCode,FTTxnDocType,FTCrdCode, 
				FDTxnDocDate,FTBchCodeRef,FCTxnValue, 
				FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue,FTTxnStaOffLine 
            ) 
            VALUES 
            ( 
				@ptBchCode,'2',@ptCrdCode, 
				GETDATE(),@ptBchCode,@pcFCTxnValue, 
				'1',@ptFTTxnPosCode,@pcAvailable,@pnTxnOffline
            ) 

			-- Update Master Card
            UPDATE TFNMCard WITH (ROWLOCK) SET  
            FCCrdValue=(ISNULL(FCCrdValue,0) - @pcFCTxnValue), 
            FDCrdLastTopup=GETDATE() 
            WHERE FTCrdCode=@ptCrdCode
           
			-- Update Ref Id Canceled
            UPDATE TFNTCrdTopUp WITH (ROWLOCK) SET  
            FTTxnStaCancel='1' 
            WHERE FNTxnID=@pnTxnID

			 COMMIT TRANSACTION CancelTopup 
        END TRY 

        BEGIN CATCH 
			ROLLBACK TRANSACTION CancelTopup 
        END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnCardNew]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnCardNew]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnCardNew] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnCardNew] 
   @pnLngID INT NULL,              --รหัสภาษา 
   @ptBchCode  VARCHAR(5) NULL,    --รหัสสาขา 
   @ptCrdCode VARCHAR(30) NULL,    --รหัสบัตร 
   @ptCtyCode VARCHAR(30) NULL,    --รหัสประเภทบัตร 
   @ptCrdHolderID VARCHAR(30) NULL,--รหัสผู้ถือบัตร 
   @ptDptCode VARCHAR(30) NULL,    --รหัสแผนก 
   @ptCrdName VARCHAR(30) NULL,     --ชื่อผู้ถือบัตร 
   @pcCtyDeposit NUMERIC(18,4) NULL --ค่ามัดจำ
AS
BEGIN
DECLARE @tExpCrd VARCHAR(10) 
SET @tExpCrd = '9999-12-31'

    BEGIN TRANSACTION  
    SAVE TRANSACTION Card  
    BEGIN TRY  
		-- Insert TFNMCard
		INSERT INTO TFNMCard WITH(ROWLOCK) 
		(
			 FTCrdCode,FDCrdStartDate,FDCrdExpireDate,FTCtyCode 
			,FCCrdDeposit,FTCrdHolderID,FTCrdRefID,FTCrdStaType 
			,FTDptCode,FTCrdStaShift,FTCrdStaActive,FDCreateOn,FTCreateBy
		) VALUES (
			@ptCrdCode,GETDATE(),@tExpCrd,@ptCtyCode 
			,@pcCtyDeposit,@ptCrdHolderID,'','2' 
			,@ptDptCode,1,1,GETDATE(),'AdaPostStoreBack'
	    )  

	    -- Insert TFNMCard_L
		INSERT INTO TFNMCard_L WITH (ROWLOCK) 
		(
			FTCrdCode,FNLngID,FTCrdName,FTCrdRmk
		) VALUES (
			@ptCrdCode,@pnLngID,@ptCrdName,''
		) 

	    -- Commit Command
		COMMIT TRANSACTION Card 
    END TRY 

    BEGIN CATCH 
    ROLLBACK TRANSACTION Card 
    END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnCardUPD]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnCardUPD]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnCardUPD] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnCardUPD] 
   @pnLngID INT NULL,              --รหัสภาษา 
   @ptBchCode  VARCHAR(5) NULL,    --รหัสสาขา 
   @ptCrdCode VARCHAR(30) NULL,    --รหัสบัตร 
   @ptCtyCode VARCHAR(30) NULL,    --รหัสประเภทบัตร 
   @ptCrdHolderID VARCHAR(30) NULL,--รหัสผู้ถือบัตร 
   @ptDptCode VARCHAR(30) NULL,    --รหัสแผนก 
   @ptCrdName VARCHAR(30) NULL,     --ชื่อผู้ถือบัตร 
   @pcCtyDeposit NUMERIC(18,4) NULL --ค่ามัดจำ
AS
BEGIN
DECLARE @tExpCrd VARCHAR(10)
SET @tExpCrd = '9999-12-31'

    BEGIN TRANSACTION  
        SAVE TRANSACTION Card  
        BEGIN TRY  
       
			-- Update TFNMCard
			UPDATE TFNMCard WITH(ROWLOCK) SET 
				FDCrdStartDate=GETDATE() 
				,FDCrdExpireDate= @tExpCrd
				,FTCtyCode=@ptCtyCode 
				,FCCrdDeposit=@pcCtyDeposit
				,FTCrdHolderID=@ptCrdHolderID 
				,FTCrdRefID=NULL 
				,FTCrdStaType='1' 
				,FTDptCode=@ptDptCode 
				,FDLastUpdOn=GETDATE() 
				,FTLastUpdBy='AdaPostStoreBack' 
			WHERE FTCrdCode=@ptCrdCode 

			-- Update TFNMCard_L
			UPDATE TFNMCard_L WITH (ROWLOCK) SET FTCrdName=@ptCrdName,FTCrdRmk='' 
			WHERE FNLngID = 1 AND FTCrdCode=@ptCrdCode 

			-- Commit Command
			COMMIT TRANSACTION Card 
        END TRY 

        BEGIN CATCH 
			ROLLBACK TRANSACTION Card 
        END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnPaytxn]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnPaytxn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnPaytxn] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnPaytxn] 
	@ptBchCode VARCHAR(5) NULL,
	@ptCrdCode VARCHAR(20) NULL,
	@ptTxnPosCode VARCHAR(3) NULL,
	@ptTxnDocNoRef VARCHAR(20) NULL,
	@pcTxnValue NUMERIC(18,4) NULL,
	@pcCrdDeposit NUMERIC(18,4) NULL,
	@pcAvailable NUMERIC(18,4) NULL,
	@ptShpCode VARCHAR(5) NULL,
	@pnTxnOffline INT NULL,
	@pnTxnRef INT NULL,
	@pnFNTxnIDRef INT NULL    -- ข้อมูล Ref TFNTCrdSale
AS
BEGIN
DECLARE @tSql NVARCHAR(MAX)
        SET @tSql = 'BEGIN TRANSACTION' + CHAR(10)
		SET @tSql += 'SAVE TRANSACTION SavePay'  + CHAR(10)
		SET @tSql +=	'BEGIN TRY' + CHAR(10)

		IF(@pnTxnRef <> 0)
		BEGIN
			-- Update StaCancel
			
			 SET @tSql +=	     'UPDATE TFNTCrdSale WITH (ROWLOCK) SET '  + CHAR(10)
			 SET @tSql +=	     'FTTxnStaCancel=null'  + CHAR(10)
			 SET @tSql +=	     'WHERE FNTxnID=(SELECT FNTxnIDRef FROM TFNTCrdSale WHERE FNTxnID='+ CAST(@pnTxnRef AS VARCHAR(10)) +')'  + CHAR(10)
		END
		
		-- Insert transection Sale
        SET @tSql +=		'INSERT INTO TFNTCrdSale WITH(ROWLOCK)'  + CHAR(10)
        SET @tSql +=		'('  + CHAR(10)
        SET @tSql +=		  'FTBchCode,FTCrdCode,FTTxnDocType'  + CHAR(10)
        SET @tSql +=		  ',FTTxnPosCode,FTTxnDocNoRef,FCTxnValue'  + CHAR(10)
        SET @tSql +=		  ',FTTxnstaPrc,FDTxnDocDate,FTBchCodeRef'  + CHAR(10)
        SET @tSql +=		  ',FCTxnDeposit,FCTxnCrdValue,FTShpCode'  + CHAR(10)

		IF(@pnTxnRef <> 0)
		BEGIN
			SET @tSql +=	  ',FTTxnStaCancel' + CHAR(10)
		END

        SET @tSql +=	      ',FNTxnIDRef,FTTxnStaOffLine ' + CHAR(10)
        SET @tSql +=	     ')  VALUES (' + CHAR(10)
        SET @tSql +=	     '''' + @ptBchCode + ''','''  + @ptCrdCode + ''',''3''' + CHAR(10)
        SET @tSql +=	     ',''' + @ptTxnPosCode + ''',''' + @ptTxnDocNoRef + ''',''' + CAST(@pcTxnValue AS VARCHAR(30)) + '''' + CHAR(10)
        SET @tSql +=	     ',''1'',GETDATE(),''' + @ptBchCode + ''''  + CHAR(10)
        SET @tSql +=         ',' + CAST(@pcCrdDeposit AS VARCHAR(30)) + ''  + CHAR(10)
		SET @tSql +=         ',' + CAST(@pcAvailable AS VARCHAR(30)) + ''  + CHAR(10)
		SET @tSql +=         ',''' + @ptShpCode + ''''  + CHAR(10)

		IF(@pnTxnRef <> 0)
		BEGIN
			SET @tSql +=	 ',''1''' + CHAR(10)
		END

        SET @tSql +=	      ',' + CAST(@pnTxnRef AS VARCHAR(30)) + ',' +  CAST(@pnTxnOffline AS VARCHAR(30)) + '' + CHAR(10)
        SET @tSql +=		  ')' + CHAR(10)

        --Update Master Card
        SET @tSql +=		  '    UPDATE TFNMCard WITH (ROWLOCK) SET '  + CHAR(10)
        SET @tSql +=		  '    FCCrdValue=(ISNULL(FCCrdValue,0) - ' + CAST(@pcTxnValue AS VARCHAR(30)) + ')'  + CHAR(10)
        SET @tSql +=		  '    WHERE FTCrdCode=''' + @ptCrdCode + ''''  + CHAR(10)
        SET @tSql +=		  '    COMMIT TRANSACTION SavePay '  + CHAR(10)
        SET @tSql +=		  'END TRY '  + CHAR(10)

        SET @tSql +=		  'BEGIN CATCH '  + CHAR(10)
        SET @tSql +=		  'ROLLBACK TRANSACTION SavePay '  + CHAR(10)
        SET @tSql +=		  'END CATCH '  + CHAR(10)
		EXECUTE sp_executesql @tSql
		Print  @tSql
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnReturnTopupList]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnReturnTopupList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnReturnTopupList] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnReturnTopupList] 
	@ptBchCode VARCHAR(5) NULL,
	@ptCrdCode  VARCHAR(20) NULL,
	@pcTxnValue  NUMERIC(18,4) NULL,  --oCard.FCCrdValue เติมเงินแบบ Manual  or  oCard.FCCtyTopupAuto เติมเงินแบบ Auto
	@ptTxnPosCode VARCHAR(3) NULL,
	@pcCrdValue   NUMERIC(18,4) NULL,  
	@ptShpCode VARCHAR(5) NULL,
	@ptDocNoRef VARCHAR(30) NULL
AS
BEGIN
	  BEGIN TRANSACTION  
        SAVE TRANSACTION ReturnTopupList  
        BEGIN TRY  

			INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
            ( 
				 FTBchCode,FTTxnDocType,FTCrdCode 
				,FDTxnDocDate,FTBchCodeRef,FCTxnValue 
				,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue 
				,FTShpCode,FTTxnStaOffLine,FTTxnDocNoRef     
            ) VALUES (
				@ptBchCode,'2',@ptCrdCode, 
				GETDATE(),@ptBchCode,@pcTxnValue, 
				'1',@ptTxnPosCode,@pcCrdValue
				,@ptShpCode,'0',@ptDocNoRef
            ) 

			-- Update Master Card
            UPDATE TFNMCard WITH (ROWLOCK) SET  
            FCCrdValue=(ISNULL(FCCrdValue,0) - @pcTxnValue), 
            FDCrdLastTopup=GETDATE()  
            WHERE FTCrdCode=@ptCrdCode
            COMMIT TRANSACTION ReturnTopupList 
        END TRY 

		BEGIN CATCH 
			ROLLBACK TRANSACTION ReturnTopupList 
        END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnTnfCrd]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnTnfCrd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnTnfCrd] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnTnfCrd] 
	@ptFrmCrdCode VARCHAR(30) NULL,
	@ptToCrdCode  VARCHAR(30) NULL,
	@ptBchCode  VARCHAR(5) NULL,
	@pcFrmCrdValue NUMERIC(18,4) NULL,
	@pcToCrdValue NUMERIC(18,4) NULL,
	@ptDocNoRef  VARCHAR(30) NULL
AS
BEGIN
	BEGIN TRANSACTION  
		SAVE TRANSACTION TnfCrd  
			BEGIN TRY  

				--โอนเงินออก --ใช้ จากรหัสบัตร(parameter)
				INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
				( 
					 FTBchCode,FTTxnDocType,FTCrdCode
					,FDTxnDocDate,FTBchCodeRef,FCTxnValue
					,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue 
					,FTTxnStaOffLine    
					,FTTxnDocNoRef      
				) 
				VALUES 
				( 
					@ptBchCode,'8',@ptFrmCrdCode
					,GETDATE(),@ptBchCode,@pcFrmCrdValue
					,'1','',@pcFrmCrdValue
					,'0'    
					,@ptDocNoRef  
				) 

				-- Update Master Card จากรหัสบัตร(parameter)
				UPDATE TFNMCard WITH (ROWLOCK) SET  
					 FDCrdResetDate=GetDate() 
					,FDCrdLastTopup=NULL 
					,FCCrdValue=0 
					,FCCrdDeposit=0 
					,FCCrdDepositPdt=0 
					,FNCrdTxnOffline=0 
					,FNCrdTxnPrcAdj=0 
					,FTCrdStaActive='2'  
				WHERE FTCrdCode=@ptFrmCrdCode

				--โอนเงินเข้า --ใช้ ถึงรหัสบัตร(parameter)
				INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
				( 
					 FTBchCode,FTTxnDocType,FTCrdCode 
					,FDTxnDocDate,FTBchCodeRef,FCTxnValue 
					,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue 
					,FTTxnStaOffLine    
					,FTTxnDocNoRef     
				) 
				VALUES 
				( 
					@ptBchCode,'9',@ptToCrdCode 
					,GETDATE(),@ptBchCode,@pcFrmCrdValue
					,'1','',@pcToCrdValue
					,'0'     
					,@ptDocNoRef   
				) 

				-- Update Master Card ถึงรหัสบัตร(parameter)
				UPDATE TFNMCard WITH (ROWLOCK) SET  
					FDCrdLastTopup=GetDate() 
				   ,FCCrdValue=@pcFrmCrdValue
				   ,FTCrdStaActive='1'  
				WHERE FTCrdCode=@ptToCrdCode

				COMMIT TRANSACTION TnfCrd 
			END TRY 

			BEGIN CATCH 
				ROLLBACK TRANSACTION TnfCrd 
			END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnTopUp]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnTopUp]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnTopUp] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnTopUp] 
	@ptBchCode VARCHAR(5) NULL,
	@ptCrdCode VARCHAR(20) NULL,
	@pcValTopup NUMERIC(18,4)  NULL,
	@ptTxnPosCode VARCHAR(3) NULL,
	@pcAvailable NUMERIC(18,4)  NULL,
	@ptShpCode VARCHAR(5) NULL,
	@pnTxnOffline INT NULL
AS
BEGIN
	  BEGIN TRANSACTION  
            SAVE TRANSACTION Topup  
            BEGIN TRY  

                -- Insert transection Sale
                INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
                ( 
					FTBchCode,FTTxnDocType,FTCrdCode, 
					FDTxnDocDate,FTBchCodeRef,FCTxnValue, 
					FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue, 
					FTShpCode,FTTxnStaOffLine 
                ) VALUES ( 
					@ptBchCode,'1',@ptCrdCode
					,GETDATE(),@ptBchCode,@pcValTopup
					,'1',@ptTxnPosCode,@pcAvailable 
					,@ptShpCode,@pnTxnOffline
                ) 

                -- Update Master Card
                UPDATE TFNMCard WITH (ROWLOCK) SET  
                FCCrdValue=(ISNULL(FCCrdValue,0) + @pcValTopup), 
                FDCrdLastTopup=GETDATE()  
                WHERE FTCrdCode=@ptCrdCode

                 -- Commit Command
                COMMIT TRANSACTION Topup 
            END TRY 

            BEGIN CATCH 
            ROLLBACK TRANSACTION Topup 
            END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCnTopupList]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCnTopupList]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCnTopupList] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_PRCnTopupList] 
	@ptBchCode VARCHAR(5) NUll,
	@ptCrdCode VARCHAR(20) NUll,
	@pcTxnValue  NUMERIC(18,4) NULL,
	@ptTxnPosCode VARCHAR(3) NUll,
	@pcCrdValue NUMERIC(18,4) NULL,
	@ptShpCode  VARCHAR(5) NUll,
	@ptDocNoRef VARCHAR(30) NUll
AS

--BEGIN TRY  
--	BEGIN TRANSACTION TopupList
--	SAVE TRANSACTION TopupList  
--	INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
--        ( 
--			FTBchCode,FTTxnDocType,FTCrdCode 
--			,FDTxnDocDate,FTBchCodeRef,FCTxnValue 
--			,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue
--			,FTShpCode ,FTTxnStaOffLine,FTTxnDocNoRef    
--        ) 
--        VALUES 
--        ( 
--			@ptBchCode,'1',@ptCrdCode 
--			,GETDATE(),@ptBchCode,@pcTxnValue 
--			,'1',@ptTxnPosCode,@pcCrdValue
--			,@ptShpCode,'0',@ptDocNoRef     
--        ) 

--        -- Update Master Card
--        UPDATE TFNMCard WITH (ROWLOCK) SET  
--        FCCrdValue=(ISNULL(FCCrdValue,0) + @pcTxnValue), 
--        FDCrdLastTopup=GETDATE()  
--        WHERE FTCrdCode=@ptCrdCode
--        COMMIT TRANSACTION TopupList 
--END TRY 
--BEGIN CATCH 
--	ROLLBACK TRANSACTION TopupList 
--END CATCH 
DECLARE @tTrans varchar(20)
SET @tTrans = 'PrcStk'
BEGIN TRY
	INSERT INTO TFNTCrdTopUp WITH(ROWLOCK) 
        ( 
			FTBchCode,FTTxnDocType,FTCrdCode 
			,FDTxnDocDate,FTBchCodeRef,FCTxnValue 
			,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue
			,FTShpCode ,FTTxnStaOffLine,FTTxnDocNoRef    
        ) 
        VALUES 
        ( 
			@ptBchCode,'1',@ptCrdCode 
			,GETDATE(),@ptBchCode,@pcTxnValue 
			,'1',@ptTxnPosCode,@pcCrdValue
			,@ptShpCode,'0',@ptDocNoRef     
        ) 

        -- Update Master Card
        UPDATE TFNMCard WITH (ROWLOCK) SET  
        FCCrdValue=(ISNULL(FCCrdValue,0) + @pcTxnValue), 
        FDCrdLastTopup=GETDATE()  
        WHERE FTCrdCode=@ptCrdCode
END TRY
BEGIN CATCH
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_PRCoCalPmt]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCoCalPmt]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCoCalPmt] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCoCalPmt]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptCstCode varchar(20)
,@ptPplCodeCst varchar(20) 
,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPmtCal TABLE 
   ( 
   FTBchCode varchar(5),
   FTPmhDocNo varchar(20), 
   FTPmhStaOnTopPmt varchar(1),
   FTPmhStaRcvFree varchar(1),
   FTPbyStaBuyCond varchar(1),
   FTPbyStaCalSum varchar(1),
   FCPbyGetQtyDiv Numeric(18,4),
   FCPbyBuyQty Numeric(18,4),
   FCPbyBuyAmt Numeric(18,4),
   FNPbySeqNo INT,
   FTPgtStaEffect varchar(1),
   FTPgtStaGetType varchar(1),
   FCPgtGetValue Numeric(18,4),
   FCPgtGetNet Numeric(18,4),
   FCPgtGetDis Numeric(18,4),
   FTCphDocNo varchar(20),
   FTPplCode varchar(20)
   ) 
DECLARE @TTmpPD TABLE 
   ( 
   FTBchCode varchar(5),
   FTXshDocNo varchar(20), 
   FTPmhCode varchar(20), 
   FTPmdGrpName varchar(50),
   FTPdtCode varchar(25),
   FTPunCode varchar(5),
   FNSdtSeqNo int,
   FCXsdQty Numeric(18,4),
   FCXsdQtyAll Numeric(18,4),
   FCXsdNet Numeric(18,4),
   FCXsdSetPrice Numeric(18,4),
   FCXpdGetQtyDiv Numeric(18,4),
   FTXpdGetType varchar(1),
   FCXpdGetValue Numeric(18,4),
   FCXpdDis Numeric(18,4),
   FCXdtPerDisAvg Numeric(18,4),
   FCXdtDisAvg Numeric(18,4),
   FCXpdPoint BIGINT,
   FTPmhStaOnTopPmt varchar(1),
   FTXpdStaRcv varchar(1),
   FTPplCode  varchar(20),
   FTPgtCpnText varchar(50),
   FTCpdBarCpn varchar(20)
   ) 
DECLARE @TTmpPmtExc TABLE
(
	FTPmhCode varchar(20)
)
DECLARE @TTmpPdtPpl TABLE
(
	FTPmhDocNo varchar(20),
	FTPdtCode varchar(20),
	FTPunCode varchar(5),
	FCXsdQty numeric(18,4),
	FCXsdSetPrice numeric(18,4),
	FCXsdNet numeric(18,4),
	FTPplCode varchar(20),
	FCPplPrice numeric(18,4),
	FCPplNet numeric(18,4),
	FCAmtDiff numeric(18,4)
)
DECLARE @tStaPrc varchar(1)	
DECLARE @tBchFrm varchar(5)
DECLARE @tBchTo varchar(5)
DECLARE @tPmhDocNo varchar(25)
DECLARE @cPmtQtyDiv Numeric(18,4)
DECLARE @tStaBuyCond varchar(1)	--1:ครบจำนวน 2:ครบมูลค่า 3:ตามช่วงจำนวน 4:ตามช่วงมูลค่า 5:ตามช่วงเวลา
DECLARE @tStaCalSum varchar(1)	--1:นับแยก 2:นับรวม
DECLARE @tStaOnTopPmt varchar(1)
DECLARE @tStaRcvFree varchar(1)
DECLARE @tStaGetType varchar(1)	--1:ลดบาท 2:ลด% 3:ปรับราคา 4:.ใช้กลุ่มราคา 5:แถม(Free) 6:ไม่กำหนด
DECLARE @tStaEffect varchar(1)	--1:ตามคำนวณ 2:ทั้งกลุ่ม
DECLARE @cGetValue Numeric(18,4)
DECLARE @cGetDis Numeric(18,4)
DECLARE @cQtyUse Numeric(18,4)
DECLARE @cQtyPdt Numeric(18,4)
DECLARE @cQtyUpd Numeric(18,4)
DECLARE @tPmdGrpName varchar(50)
DECLARE @tPdtCode varchar(25)
DECLARE @tPunCode varchar(5)
DECLARE @nSeqNo int
DECLARE @nSeqNoCB int
DECLARE @cSetPrice Numeric(18,4)
DECLARE @cNet Numeric(18,4)
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.24/02/2020	Em		create  
2.19/03/2020	Em		แก้ไขกรณีสินค้าทั้งร้าน และ คูปอง
3.19/03/2020	Em		แก้ไขกรณีส่วนลดมากกว่ามูลค่าสินค้าให้เอาที่มูลค่าสินค้าแทน
4.20/03/2020	Em		เพิ่มการตรวจสอบโปรโมชั่น กรณีที่มีสมาชิก
5.21/03/2020	Em		การคำนวณแต้ม และตรวจสอบสมาชิก
6.23/03/2020	Em		แก้ไขปรับปรุง
7.24/03/2020	Em		แก้ไขปรับปรุง
8.26/03/2020	Em		เงื่อนไขการเลือกสินค้า
9.27/03/2020	Em		แก้ไขปรับปรุง
----------------------------------------------------------------------*/
SET @tTrans = 'PrcBchTnf'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  

	-- ++++++++++++++++++ Gen data to PD +++++++++++++++++++++++++++++++
	INSERT INTO @TTmpPD(FTBchCode,FTXshDocNo,FTPmhCode,FTPmdGrpName,FTPdtCode,FTPunCode,FNSdtSeqNo,FCXsdQty,FCXsdQtyAll,FCXsdNet,FCXsdSetPrice)
	SELECT DISTINCT *
	FROM (
		SELECT SDT.FTBchCode,SDT.FTXshDocNo,HD.FTPmhDocNo,DT.FTPmdGrpName,SDT.FTPdtCode,SDT.FTPunCode,SDT.FNXsdSeqNo,SDT.FCXsdQty,SDT.FCXsdQtyAll,
		SDT.FCXsdNet,SDT.FCXsdSetPrice
			FROM TPMTPmtHD HD with(nolock)
			LEFT JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
			LEFT JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo 
						AND DT.FTPmdGrpName = CB.FTPmdGrpName AND CB.FTPbyStaPdtDT = '1'
			LEFT JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo 
						AND DT.FTPmdGrpName = CG.FTPmdGrpName AND CG.FTPgtStaPdtDT = '1'
			LEFT JOIN TPMTSalDT SDT WITH(NOLOCK) ON DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			LEFT JOIN TPMTPmtHDCstPri HCP WITH(NOLOCK) ON HD.FTBchCode = HCP.FTBchCode AND HD.FTPmhDocNo = HCP.FTPmhDocNo	-- 4. --
			WHERE 1=1
			AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
			AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
			AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
			AND SDT.FTXshDocNo = @ptDocNo
			AND SDT.FTBchCode = @ptBchCode
			AND (ISNULL(HCP.FTPplCode,'') = '' OR (ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '1'))	-- 4. --
			AND HD.FTPmhDocNo NOT IN (SELECT DISTINCT FTPmhDocNo FROM TPMTPmtHDCstPri WITH(NOLOCK) WHERE ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '2') -- 4. --
			AND (HD.FTPmhStaChkCst = '2' OR (HD.FTPmhStaChkCst = '1' OR ISNULL(@ptCstCode,'') <> ''))  -- 5. --
			--AND ISNULL(CG.FTPmdGrpName,'') <> '' AND ISNULL(CB.FTPmdGrpName,'') <> ''
		UNION ALL
		-- 2. --
		SELECT SDT.FTBchCode,SDT.FTXshDocNo,HD.FTPmhDocNo,DT.FTPmdGrpName,SDT.FTPdtCode,SDT.FTPunCode,SDT.FNXsdSeqNo,SDT.FCXsdQty,SDT.FCXsdQtyAll,
		SDT.FCXsdNet,SDT.FCXsdSetPrice
			FROM TPMTSalDT SDT WITH(NOLOCK),TPMTPmtHD HD with(nolock)
			INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
			LEFT JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo 
						AND DT.FTPmdGrpName = CB.FTPmdGrpName AND CB.FTPbyStaPdtDT = '1'
			LEFT JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo 
						AND DT.FTPmdGrpName = CG.FTPmdGrpName AND CG.FTPgtStaPdtDT = '1'
			LEFT JOIN TPMTPmtHDCstPri HCP WITH(NOLOCK) ON HD.FTBchCode = HCP.FTBchCode AND HD.FTPmhDocNo = HCP.FTPmhDocNo	-- 4. --
			WHERE 1=1
			AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
			AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
			AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
			AND SDT.FTXshDocNo = @ptDocNo
			AND SDT.FTBchCode = @ptBchCode
			AND ISNULL(DT.FTPmdRefCode,'') = ''
			AND (ISNULL(HCP.FTPplCode,'') = '' OR (ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '1'))	-- 4. --
			AND HD.FTPmhDocNo NOT IN (SELECT DISTINCT FTPmhDocNo FROM TPMTPmtHDCstPri WITH(NOLOCK) WHERE ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '2') -- 4. --
			AND (HD.FTPmhStaChkCst = '2' OR (HD.FTPmhStaChkCst = '1' OR ISNULL(@ptCstCode,'') <> ''))  -- 5. --
			--AND ISNULL(CG.FTPmdGrpName,'') <> '' AND ISNULL(CB.FTPmdGrpName,'') <> ''
		UNION ALL
		SELECT SDT.FTBchCode,SDT.FTXshDocNo,HD.FTPmhDocNo,DT.FTPmdGrpName,SDT.FTPdtCode,SDT.FTPunCode,SDT.FNXsdSeqNo,SDT.FCXsdQty,SDT.FCXsdQtyAll,
		SDT.FCXsdNet,SDT.FCXsdSetPrice
			FROM TPMTPmtHD HD with(nolock)
			LEFT JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
			LEFT JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo 
						AND DT.FTPmdGrpName = CB.FTPmdGrpName AND CB.FTPbyStaPdtDT = '2'
			LEFT JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo 
						AND DT.FTPmdGrpName = CG.FTPmdGrpName AND CG.FTPgtStaPdtDT = '2'
			INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode 
					AND (CASE WHEN ISNULL(DT.FTPmdSubRef,'') = '' THEN PDT.FTPmoCode ELSE DT.FTPmdSubRef END) = PDT.FTPmoCode
			INNER JOIN TPMTSalDT SDT WITH(NOLOCK) ON SDT.FTPdtCode = PDT.FTPdtCode
			LEFT JOIN TPMTPmtHDCstPri HCP WITH(NOLOCK) ON HD.FTBchCode = HCP.FTBchCode AND HD.FTPmhDocNo = HCP.FTPmhDocNo	-- 4. --
			WHERE 1=1
			AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
			AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
			AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
			AND SDT.FTXshDocNo = @ptDocNo
			AND SDT.FTBchCode = @ptBchCode
			AND (ISNULL(HCP.FTPplCode,'') = '' OR (ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '1'))	-- 4. --
			AND HD.FTPmhDocNo NOT IN (SELECT DISTINCT FTPmhDocNo FROM TPMTPmtHDCstPri WITH(NOLOCK) WHERE ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '2') -- 4. --
			AND (HD.FTPmhStaChkCst = '2' OR (HD.FTPmhStaChkCst = '1' OR ISNULL(@ptCstCode,'') <> ''))  -- 5. --
			--AND ISNULL(CG.FTPmdGrpName,'') <> '' AND ISNULL(CB.FTPmdGrpName,'') <> ''
		UNION ALL
		SELECT DISTINCT SDT.FTBchCode,SDT.FTXshDocNo,HD.FTPmhDocNo,DT.FTPmdGrpName,SDT.FTPdtCode,SDT.FTPunCode,SDT.FNXsdSeqNo,SDT.FCXsdQty,SDT.FCXsdQtyAll,
		SDT.FCXsdNet,SDT.FCXsdSetPrice
			FROM TPMTSalDT SDT WITH(NOLOCK),TPMTPmtHD HD with(nolock)
			INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
			LEFT JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo 
						AND DT.FTPmdGrpName = CB.FTPmdGrpName AND CB.FTPbyStaPdtDT = '2'
			LEFT JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo 
						AND DT.FTPmdGrpName = CG.FTPmdGrpName AND CG.FTPgtStaPdtDT = '2'
			LEFT JOIN TPMTPmtHDCstPri HCP WITH(NOLOCK) ON HD.FTBchCode = HCP.FTBchCode AND HD.FTPmhDocNo = HCP.FTPmhDocNo	-- 4. --
			INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode 
					AND (CASE WHEN ISNULL(DT.FTPmdSubRef,'') = '' THEN PDT.FTPmoCode ELSE DT.FTPmdSubRef END) = PDT.FTPmoCode
			WHERE 1=1
			AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
			AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
			AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
			AND SDT.FTXshDocNo = @ptDocNo
			AND SDT.FTBchCode = @ptBchCode
			AND ISNULL(DT.FTPmdRefCode,'') = ''
			AND (ISNULL(HCP.FTPplCode,'') = '' OR (ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '1'))	-- 4. --
			AND HD.FTPmhDocNo NOT IN (SELECT DISTINCT FTPmhDocNo FROM TPMTPmtHDCstPri WITH(NOLOCK) WHERE ISNULL(HCP.FTPplCode,'') = @ptPplCodeCst AND HCP.FTPmhStaType = '2') -- 4. --
			AND (HD.FTPmhStaChkCst = '2' OR (HD.FTPmhStaChkCst = '1' OR ISNULL(@ptCstCode,'') <> ''))  -- 5. --
			--AND ISNULL(CG.FTPmdGrpName,'') <> '' AND ISNULL(CB.FTPmdGrpName,'') <> ''
	) Tmp
	-- 2. --
	-- ++++++++++++++++ End Gen data to PD +++++++++++++++++++++++++++++++
	
RecalPmt:
	DELETE FROM @TTmpPmtCal
	-- Promotion Buy
	INSERT INTO @TTmpPmtCal
	(FTBchCode,FTPmhDocNo,FTPbyStaBuyCond,FTPbyStaCalSum,FCPbyGetQtyDiv,FNPbySeqNo,FCPbyBuyQty,FCPbyBuyAmt,FTPmhStaOnTopPmt,FTPmhStaRcvFree)
	--ครบจำนวน นับแยก
	--SELECT FTBchCode,FTPmhDocNo,'1','1',FLOOR(MIN(FCXsdQty/FCPbyMinValue)),0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	--SELECT FTBchCode,FTPmhDocNo,'1','1',FLOOR(MIN(CASE WHEN FCXsdQty>FCPbyMaxValue AND FCPbyMaxValue >0 THEN FCPbyMaxValue/FCPbyMinValue ELSE FCXsdQty/FCPbyMinValue END)),
	-- 9. --
	SELECT FTBchCode,FTPmhDocNo,'1','1',
	FLOOR(MIN(
		CASE WHEN FCPbyMinValue > 0 THEN
			CASE WHEN FCXsdQty>FCPbyMaxValue AND FCPbyMaxValue >0 THEN 
				FCPbyMaxValue/FCPbyMinValue 
			ELSE FCXsdQty/FCPbyMinValue END
		ELSE 0 END
	)),
	-- 9. --
		0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
		AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '1' AND CB.FTPbyStaCalSum = '1' 
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	GROUP BY FTBchCode,FTPmhDocNo,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	HAVING COUNT(TMP.FTPmdGrpName) = SUM(CASE WHEN ISNULL(TMP.FCXsdQty,0) >= TMP.FCPbyMinValue THEN 1 ELSE 0 END)

	--ครบมูลค่า นับแยก
	UNION
	--SELECT FTBchCode,FTPmhDocNo,'2','1',FLOOR(MIN(CASE WHEN FCXsdNet > FCPbyMaxValue AND FCPbyMaxValue > 0 THEN FCPbyMaxValue/FCPbyMinValue ELSE FCXsdNet/FCPbyMinValue END)),
	-- 9. --
	SELECT FTBchCode,FTPmhDocNo,'2','1',
	FLOOR(MIN(
		CASE WHEN FCPbyMinValue > 0 THEN
			CASE WHEN FCXsdNet > FCPbyMaxValue AND FCPbyMaxValue > 0 THEN 
				FCPbyMaxValue/FCPbyMinValue 
			ELSE FCXsdNet/FCPbyMinValue END
		ELSE 0 END
	)),
	-- 9. --
		0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
		AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '2' AND CB.FTPbyStaCalSum = '1' 
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	GROUP BY FTBchCode,FTPmhDocNo,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	HAVING COUNT(TMP.FTPmdGrpName) = SUM(CASE WHEN TMP.FCXsdNet >= TMP.FCPbyMinValue THEN 1 ELSE 0 END)

	--ครบจำนวน นับรวม
	UNION
	--SELECT FTBchCode,FTPmhDocNo,'1','2',FLOOR(SUM(FCXsdQty)/MIN(FCPbyMinValue)),0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	-- 9. --
	SELECT FTBchCode,FTPmhDocNo,'1','2',
	FLOOR(CASE WHEN MIN(FCPbyMinValue) > 0 THEN SUM(FCXsdQty)/MIN(FCPbyMinValue) ELSE 0 END),
	0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	-- 9. --
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '1' AND CB.FTPbyStaCalSum = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	GROUP BY FTBchCode,FTPmhDocNo,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	HAVING COUNT(TMP.FTPmdGrpName) = SUM(CASE WHEN TMP.FCXsdQty > 0 THEN 1 ELSE 0 END)

	--ครบมูลค่า นับรวม
	UNION
	--SELECT FTBchCode,FTPmhDocNo,'2','2',FLOOR(SUM(FCXsdNet)/MIN(FCPbyMinValue)),0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	-- 9. --
	SELECT FTBchCode,FTPmhDocNo,'2','2',
	FLOOR(CASE WHEN MIN(FCPbyMinValue) > 0 THEN SUM(FCXsdNet)/MIN(FCPbyMinValue) ELSE 0 END),
	0,SUM(FCXsdQty),SUM(FCXsdNet),FTPmhStaOnTopPmt,FTPmhStaRcvFree
	-- 9. --
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '2' AND CB.FTPbyStaCalSum = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	GROUP BY FTBchCode,FTPmhDocNo,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	HAVING COUNT(TMP.FTPmdGrpName) = SUM(CASE WHEN TMP.FCXsdNet > 0 THEN 1 ELSE 0 END)

	--ช่วงจำนวน
	UNION
	SELECT FTBchCode,FTPmhDocNo,'3','1',FLOOR(FCXsdQty),FNPbySeq,FCXsdQty,FCXsdNet,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '3' AND CB.FTPbyStaCalSum = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	WHERE (FCPbyMaxValue = 0 AND FCXsdQty >= FCPbyMinValue) OR (FCXsdQty BETWEEN FCPbyMinValue AND FCPbyMaxValue)
	
	--ช่วงมูลค่า
	UNION
	SELECT FTBchCode,FTPmhDocNo,'4','1',1,FNPbySeq,FCXsdQty,FCXsdNet,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '4' AND CB.FTPbyStaCalSum = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	WHERE (FCPbyMaxValue = 0 AND FCXsdNet >= FCPbyMinValue) OR (FCXsdNet BETWEEN FCPbyMinValue AND FCPbyMaxValue)

	--ช่วงเวลา ครบจำนวน
	UNION
	SELECT FTBchCode,FTPmhDocNo,'5','1',FCXsdQty,FNPbySeq,FCXsdQty,FCXsdNet,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,CB.FTPbyMinTime,CB.FTPbyMaxTime
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '5' AND CB.FTPbyStaCalSum = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,CB.FTPbyMinTime,CB.FTPbyMaxTime,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	WHERE (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),FTPbyMinTime,108) AND CONVERT(VARCHAR(10),FTPbyMaxTime,108))
	AND FCXsdQty >= FCPbyMinValue

	--ช่วงเวลา มูลค่า
	UNION
	SELECT FTBchCode,FTPmhDocNo,'5','2',FCXsdNet,FNPbySeq,FCXsdQty,FCXsdNet,FTPmhStaOnTopPmt,FTPmhStaRcvFree
	FROM
		(SELECT CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,CB.FTPbyMinTime,CB.FTPbyMaxTime
		,SUM(ISNULL(SDT.FCXsdQty,0)) AS FCXsdQty,SUM(ISNULL(SDT.FCXsdNet,0)) AS FCXsdNet
		,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FCXsdSetPrice >= CB.FCPbyMinSetPri
		LEFT JOIN @TTmpPmtExc EXC ON HD.FTPmhDocNo = EXC.FTPmhCode 
		WHERE CB.FTPbyStaBuyCond = '5' AND CB.FTPbyStaCalSum = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND ISNULL(EXC.FTPmhCode,'') = ''
		GROUP BY CB.FTBchCode,CB.FTPmhDocNo,CB.FNPbySeq,CB.FTPmdGrpName,CB.FTPbyStaCalSum,CB.FTPbyStaBuyCond,CB.FTPbyStaPdtDT,CB.FCPbyPerAvgDis,CB.FCPbyMinSetPri,
		CB.FCPbyMinValue,CB.FCPbyMaxValue,CB.FTPbyMinTime,CB.FTPbyMaxTime,HD.FTPmhStaOnTopPmt,HD.FTPmhStaRcvFree) TMP
	WHERE (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),FTPbyMinTime,108) AND CONVERT(VARCHAR(10),FTPbyMaxTime,108))
	AND FCXsdNet >= FCPbyMinValue

	--++++++++++++++++++++++++++ Promotion Get ++++++++++++++++++++++++++++++++
	-- 1.1.1 ส่วนลดบาท-ครบจำนวน-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM((TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue)*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM((TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue)*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --
	
	-- 1.1.2 ส่วนลดบาท-ครบมูลค่า-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv* SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	
	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv* SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 1.1.3 ส่วนลดบาท-ตามช่วง
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXSdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '1'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	--,FCPgtGetDis = (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv)
	,FCPgtGetDis = (CASE WHEN CAL.FCXsdNet < (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) THEN CAL.FCXsdNet ELSE (CAL.FCPgtGetvalue * TMP.FCPbyGetQtyDiv) END)	-- 3. --
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXSdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '1'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 2.2.1 ส่วนลด%-ครบจำนวน-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue) AS FCXsdNet
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet	-- 7. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet	-- 7. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 2.2.2 ส่วนลด%-ครบมูลค่า-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(TMP.FCPbyGetQtyDiv*CB.FCPbyMinValue) AS FCXsdNet
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet	-- 7. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet	-- 7. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 2.2.3 ส่วนลด%-ตามช่วง
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXSdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXSdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 2.2.4 ส่วนลด%-ครบจำนวน-ทั้งกลุ่ม
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 2.2.2 ส่วนลด%-ครบมูลค่า-ทั้งกลุ่ม
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '2'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = ((CAL.FCXsdNet * CAL.FCPgtGetvalue)/100)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,SUM(SDT.FCXsdNet) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode 
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '2'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 3.3.1 ปรับราคา-ครบจำนวน-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --
	
	-- 3.3.2 ปรับราคา-ครบมูลค่า-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '2'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXsdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 3.3.3 ปรับราคา-ตามช่วง
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	
	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '3'
	,FCPgtGetValue = CAL.FCPgtGetvalue
	,FCPgtGetNet = CAL.FCXSdNet
	,FCPgtGetDis = CAL.FCXsdNet - (CAL.FCPgtGetvalue * CAL.FCPbyGetQtyDiv)
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv,SUM(TMP.FCPbyGetQtyDiv*SDT.FCXsdSetPrice) AS FCXsdNet
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
		AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,TMP.FCPbyGetQtyDiv) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 4.1 ใช้กลุ่มราคา-ครบจำนวน-ตามคำนวณ
	DELETE FROM @TTmpPdtPpl
	INSERT INTO @TTmpPdtPpl(FTPmhDocNo,FTPdtCode,FTPunCode,FCXsdQty,FCXsdSetPrice,FCXsdNet,FTPplCode)
	SELECT PD.FTPmhCode,PD.FTPdtCode,PD.FTPunCode,PD.FCXsdQty,PD.FCXsdSetPrice,(PD.FCXsdQty*PD.FCXsdSetPrice),CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtHD HD WITH(NOLOCK) ON HD.FTPmhDocNo = PD.FTPmhCode
	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON CG.FTBchCode = HD.FTBchCode AND CG.FTPmhDocNo = HD.FTPmhDocNo 
	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '4'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')

	INSERT INTO @TTmpPdtPpl(FTPmhDocNo,FTPdtCode,FTPunCode,FCXsdQty,FCXsdSetPrice,FCXsdNet,FTPplCode)
	SELECT PD.FTPmhCode,PD.FTPdtCode,PD.FTPunCode,PD.FCXsdQty,PD.FCXsdSetPrice,(PD.FCXsdQty*PD.FCXsdSetPrice),CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtHD HD WITH(NOLOCK) ON HD.FTPmhDocNo = PD.FTPmhCode
	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON CG.FTBchCode = HD.FTBchCode AND CG.FTPmhDocNo = HD.FTPmhDocNo
	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '4'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')

	-- 4.2 ใช้กลุ่มราคา-ครบมูลค่า-ตามคำนวณ
	INSERT INTO @TTmpPdtPpl(FTPmhDocNo,FTPdtCode,FTPunCode,FCXsdQty,FCXsdSetPrice,FCXsdNet,FTPplCode)
	SELECT PD.FTPmhCode,PD.FTPdtCode,PD.FTPunCode,PD.FCXsdQty,PD.FCXsdSetPrice,(PD.FCXsdQty*PD.FCXsdSetPrice),CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtHD HD WITH(NOLOCK) ON HD.FTPmhDocNo = PD.FTPmhCode
	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON CG.FTBchCode = HD.FTBchCode AND CG.FTPmhDocNo = HD.FTPmhDocNo
	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '4'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')

	INSERT INTO @TTmpPdtPpl(FTPmhDocNo,FTPdtCode,FTPunCode,FCXsdQty,FCXsdSetPrice,FCXsdNet,FTPplCode)
	SELECT PD.FTPmhCode,PD.FTPdtCode,PD.FTPunCode,PD.FCXsdQty,PD.FCXsdSetPrice,(PD.FCXsdQty*PD.FCXsdSetPrice),CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtHD HD WITH(NOLOCK) ON HD.FTPmhDocNo = PD.FTPmhCode
	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON CG.FTBchCode = HD.FTBchCode AND CG.FTPmhDocNo = HD.FTPmhDocNo
	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	WHERE CG.FTPgtStaGetEffect = '2' AND CG.FTPgtStaGetType = '4'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')

	-- 4.3 ใช้กลุ่มราคา-ตามช่วง
	INSERT INTO @TTmpPdtPpl(FTPmhDocNo,FTPdtCode,FTPunCode,FCXsdQty,FCXsdSetPrice,FCXsdNet,FTPplCode)
	SELECT PD.FTPmhCode,PD.FTPdtCode,PD.FTPunCode,PD.FCXsdQty,PD.FCXsdSetPrice,(PD.FCXsdQty*PD.FCXsdSetPrice),CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtHD HD WITH(NOLOCK) ON HD.FTPmhDocNo = PD.FTPmhCode
	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON CG.FTBchCode = HD.FTBchCode AND CG.FTPmhDocNo = HD.FTPmhDocNo
	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '4'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )

	UPDATE @TTmpPdtPpl
	SET FCPplPrice = ISNULL(PRI.FCPdtPrice,FCXsdSetPrice)
	,FCPplNet = ISNULL(PRI.FCPdtPrice,FCXsdSetPrice) * FCXsdQty
	,FCAmtDiff = FCXsdNet - (ISNULL(PRI.FCPdtPrice,FCXsdSetPrice) * FCXsdQty)
	FROM @TTmpPdtPpl PPL
	INNER JOIN TPSTPdtPrice PRI WITH(NOLOCK) ON PRI.FTPdtCode = PPL.FTPdtCode AND PRI.FTPunCode = PPL.FTPunCode AND PRI.FTPplCode = PPL.FTPplCode

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '4'
	,FCPgtGetValue = 0
	,FCPgtGetNet = PPL.FCXsdNet
	,FCPgtGetDis = PPL.FCAmtDiff
	,FCPbyGetQtyDiv = 1
	,FTPplCode = PPL.FTPplCode
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT FTPmhDocNo,FTPplCode,SUM(FCAmtDiff) AS FCAmtDiff,SUM(FCXsdNet) AS FCXsdNet 
				FROM @TTmpPdtPpl
				GROUP BY FTPmhDocNo,FTPplCode) PPL ON TMP.FTPmhDocNo = PPL.FTPmhDocNo

	-- 5.1 ของแถม-ครบจำนวน-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty *FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * CAL.FCQtyDiv
	,FCPbyGetQtyDiv = CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(SDT.FCXsdSetPrice) AS FCXsdSetPrice, SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
		--MIN(CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN TMP.FCPbyGetQtyDiv ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END) AS FCQtyDiv
		-- 9. --
		MIN(CASE WHEN CG.FCPgtGetvalue > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END 
		ELSE 0 END) AS FCQtyDiv
		-- 9. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty *FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * CAL.FCQtyDiv
	,FCPbyGetQtyDiv = CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
		MIN(CASE WHEN CG.FCPgtGetvalue > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END 
		ELSE 0 END) AS FCQtyDiv
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(SDT.FCXsdSetPrice) AS FCXsdSetPrice,SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
		--MIN(CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) > TMP.FCPbyGetQtyDiv THEN TMP.FCPbyGetQtyDiv ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) END) AS FCQtyDiv
		-- 9. --
		MIN(CASE WHEN (CB.FCPbyMinValue+CG.FCPgtGetvalue) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) END 
		ELSE 0 END) AS FCQtyDiv
		-- 9. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
		MIN(CASE WHEN (CB.FCPbyMinValue+CG.FCPgtGetvalue) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+CG.FCPgtGetvalue)) END 
		ELSE 0 END) AS FCQtyDiv
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '1')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 5.2 ของแถม-ครบมูลค่า-ตามคำนวณ
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty *FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * CAL.FCQtyDiv
	,FCPbyGetQtyDiv = CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(SDT.FCXsdSetPrice) AS FCXsdSetPrice, SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
		--MIN(CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN TMP.FCPbyGetQtyDiv ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END) AS FCQtyDiv
		-- 9. --
		MIN(CASE WHEN CG.FCPgtGetvalue > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END 
		ELSE 0 END) AS FCQtyDiv
		-- 9. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty *FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * CAL.FCQtyDiv
	,FCPbyGetQtyDiv = CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
		MIN(CASE WHEN CG.FCPgtGetvalue > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/CG.FCPgtGetvalue) END 
		ELSE 0 END) AS FCQtyDiv
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
			AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
			AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
			AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
			AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(SDT.FCXsdSetPrice) AS FCXsdSetPrice,SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
		--MIN(CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN TMP.FCPbyGetQtyDiv ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END) AS FCQtyDiv
		-- 9. --
		MIN(CASE WHEN (CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice)) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END 
		ELSE 0 END) AS FCQtyDiv
		-- 9. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
		MIN(CASE WHEN (CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice)) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END 
		ELSE 0 END) AS FCQtyDiv
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '2')
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	-- 5.3 ของแถม-ตามช่วง
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(SDT.FCXsdSetPrice) AS FCXsdSetPrice,SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
	-- 8. --
		--MIN(CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN TMP.FCPbyGetQtyDiv ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END) AS FCQtyDiv
		-- 9. --
		MIN(CASE WHEN (CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice)) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END 
		ELSE 0 END) AS FCQtyDiv
		-- 9. --
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	-- 10. --
	UPDATE @TTmpPmtCal
	SET FTPgtStaEffect = '1'
	,FTPgtStaGetType = '5'
	,FCPgtGetValue = CAL.FCQtyDiv
	,FCPgtGetNet = FCXsdQty * FCXsdSetPrice
	,FCPgtGetDis = FCXsdSetPrice * (CAL.FCQtyDiv*CAL.FCPgtGetvalue)
	,FCPbyGetQtyDiv =CAL.FCQtyDiv
	FROM @TTmpPmtCal TMP
	INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,
		CASE WHEN COUNT(SDT.FTPdtCode) > 1 THEN
			CASE HD.FTPmhStaGetPdt
			WHEN '1' THEN MIN(SDT.FCXsdSetPrice)
			WHEN '2' THEN MAX(SDT.FCXsdSetPrice)
			ELSE
				MIN(SDT.FCXsdSetPrice)
			END
		ELSE MIN(SDT.FCXsdSetPrice) END AS FCXsdSetPrice, 
		SUM(SDT.FCXsdQty) AS FCXsdQty,CG.FCPgtGetvalue,
		MIN(CASE WHEN (CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice)) > 0 THEN 
			CASE WHEN FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) > TMP.FCPbyGetQtyDiv THEN 
				TMP.FCPbyGetQtyDiv 
			ELSE FLOOR(SDT.FCXsdQty/(CB.FCPbyMinValue+(CG.FCPgtGetvalue*SDT.FCXsdSetPrice))) END 
		ELSE 0 END) AS FCQtyDiv
		FROM TPMTPmtHD HD with(nolock)
		INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
		INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
		INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
			AND CG.FTPmdGrpName = CB.FTPmdGrpName	-- 8. --
			AND CG.FTPgtStaPdtDT = '2'
		INNER JOIN TCNMPdt PDT WITH(NOLOCK) ON PDT.FTPbnCode = DT.FTPmdRefCode
		INNER JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND PDT.FTPdtCode = SDT.FTPdtCode
			AND SDT.FTPmdGrpName = CG.FTPmdGrpName	-- 8. --
		INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
		WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '5'
		AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
		AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
		AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
		AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
		GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,HD.FTPmhStaGetPdt) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	-- 10. --

	---- 6.1 ไม่กำหนด-ครบจำนวน-ตามคำนวณ
	--UPDATE @TTmpPmtCal
	--SET FTPgtStaEffect = '1'
	--,FTPgtStaGetType = '6'
	--,FCPgtGetValue = 0
	--,FCPgtGetNet = 0
	--,FCPgtGetDis = 0
	--,FCPbyGetQtyDiv = CAL.FCQtyDiv
	--,FTCphDocNo = CAL.FTCphDocNo
	--FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(CG.FCPgtGetvalue*TMP.FCPbyGetQtyDiv) AS FCQtyDiv,CG.FTCphDocNo,CG.FTPgtCpnText
	--	FROM TPMTPmtHD HD with(nolock)
	--	INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
	--	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
	--	LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
	--	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	--	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '6' AND (CG.FTPgtStaCoupon = '2' OR CG.FTPgtStaCoupon = '3')
	--	AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
	--	AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
	--	AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
	--	AND (TMP.FTPbyStaBuyCond = '1')
	--	GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,CG.FTCphDocNo,CG.FTPgtCpnText) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	
	--UPDATE @TTmpPmtCal
	--SET FTPgtStaEffect = '1'
	--,FTPgtStaGetType = '6'
	--,FCPgtGetValue = 0
	--,FCPgtGetNet = 0
	--,FCPgtGetDis = 0
	--,FCPbyGetQtyDiv = CAL.FCQtyDiv
	--,FTCphDocNo = CAL.FTCphDocNo
	--FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(CG.FCPgtGetvalue*TMP.FCPbyGetQtyDiv) AS FCQtyDiv,CG.FTCphDocNo,CG.FTPgtCpnText
	--	FROM TPMTPmtHD HD with(nolock)
	--	INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
	--	INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
	--	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
	--	LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
	--	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	--	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '6' AND (CG.FTPgtStaCoupon = '2' OR CG.FTPgtStaCoupon = '3')
	--	AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
	--	AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
	--	AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
	--	AND (TMP.FTPbyStaBuyCond = '1')
	--	GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,CG.FTCphDocNo,CG.FTPgtCpnText) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo
	
	---- 6.2 ไม่กำหนด-ครบมูลค่า-ตามคำนวณ
	--UPDATE @TTmpPmtCal
	--SET FTPgtStaEffect = '1'
	--,FTPgtStaGetType = '6'
	--,FCPgtGetValue = 0
	--,FCPgtGetNet = 0
	--,FCPgtGetDis = 0
	--,FCPbyGetQtyDiv = CAL.FCQtyDiv
	--,FTCphDocNo = CAL.FTCphDocNo
	--FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(CG.FCPgtGetvalue*TMP.FCPbyGetQtyDiv) AS FCQtyDiv,CG.FTCphDocNo,CG.FTPgtCpnText
	--	FROM TPMTPmtHD HD with(nolock)
	--	INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
	--	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
	--	LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
	--	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	--	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '6' AND (CG.FTPgtStaCoupon = '2' OR CG.FTPgtStaCoupon = '3')
	--	AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
	--	AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
	--	AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
	--	AND (TMP.FTPbyStaBuyCond = '2')
	--	GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,CG.FTCphDocNo,CG.FTPgtCpnText) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	--UPDATE @TTmpPmtCal
	--SET FTPgtStaEffect = '1'
	--,FTPgtStaGetType = '6'
	--,FCPgtGetValue = 0
	--,FCPgtGetNet = 0
	--,FCPgtGetDis = 0
	--,FCPbyGetQtyDiv = CAL.FCQtyDiv
	--,FTCphDocNo = CAL.FTCphDocNo
	--FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(CG.FCPgtGetvalue*TMP.FCPbyGetQtyDiv) AS FCQtyDiv,CG.FTCphDocNo,CG.FTPgtCpnText
	--	FROM TPMTPmtHD HD with(nolock)
	--	INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
	--	INNER JOIN TPMTPmtCB CB WITH(NOLOCK) ON DT.FTBchCode = CB.FTBchCode AND DT.FTPmhDocNo = CB.FTPmhDocNo AND DT.FTPmdGrpName = CB.FTPmdGrpName
	--	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName
	--	LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
	--	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo
	--	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '6' AND (CG.FTPgtStaCoupon = '2' OR CG.FTPgtStaCoupon = '3')
	--	AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
	--	AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
	--	AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
	--	AND (TMP.FTPbyStaBuyCond = '2')
	--	GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FCPgtGetvalue,CG.FTCphDocNo,CG.FTPgtCpnText) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	---- 6.3 ไม่กำหนด-ตามช่วง
	--UPDATE @TTmpPmtCal
	--SET FTPgtStaEffect = '1'
	--,FTPgtStaGetType = '6'
	--,FCPgtGetValue = 0
	--,FCPgtGetNet = 0
	--,FCPgtGetDis = 0
	--,FCPbyGetQtyDiv = CAL.FCQtyDiv
	--,FTCphDocNo = CAL.FTCphDocNo
	--FROM @TTmpPmtCal TMP
	--INNER JOIN (SELECT HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,MIN(CG.FCPgtGetvalue*TMP.FCPbyGetQtyDiv) AS FCQtyDiv,CG.FTCphDocNo,CG.FTPgtCpnText
	--	FROM TPMTPmtHD HD with(nolock)
	--	INNER JOIN TPMTPmtDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTPmhDocNo = DT.FTPmhDocNo
	--	INNER JOIN TPMTPmtCG CG WITH(NOLOCK) ON DT.FTBchCode = CG.FTBchCode AND DT.FTPmhDocNo = CG.FTPmhDocNo AND DT.FTPmdGrpName = CG.FTPmdGrpName 
	--	LEFT JOIN @TTmpPD SDT ON HD.FTPmhDocNo = SDT.FTPmhCode AND DT.FTPmdRefCode = SDT.FTPdtCode AND DT.FTPmdSubRef = SDT.FTPunCode
	--	INNER JOIN @TTmpPmtCal TMP ON HD.FTBchCode = TMP.FTBchCode AND HD.FTPmhDocNo = TMP.FTPmhDocNo AND CG.FNPgtSeq = TMP.FNPbySeqNo
	--	WHERE CG.FTPgtStaGetEffect = '1' AND CG.FTPgtStaGetType = '3' AND (CG.FTPgtStaCoupon = '2' OR CG.FTPgtStaCoupon = '3')
	--	AND (CONVERT(VARCHAR(10),GETDATE(),121) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhDStart,121) AND CONVERT(VARCHAR(10),FDPmhDStop,121))
	--	AND (CONVERT(VARCHAR(10),GETDATE(),108) BETWEEN CONVERT(VARCHAR(10),HD.FDPmhTStart,108) AND CONVERT(VARCHAR(10),FDPmhTStop,108))
	--	AND ISNULL(HD.FTPmhStaClosed,'0') = '0'
	--	AND (TMP.FTPbyStaBuyCond = '3' OR TMP.FTPbyStaBuyCond = '4' OR TMP.FTPbyStaBuyCond = '5' )
	--	GROUP BY HD.FTBchCode,HD.FTPmhDocNo,CG.FTPmdGrpName,CG.FTCphDocNo,CG.FTPgtCpnText) CAL ON CAL.FTBchCode = TMP.FTBchCode AND CAL.FTPmhDocNo = TMP.FTPmhDocNo

	--++++++++++++++++++++++++ End Promotion Get ++++++++++++++++++++++++++++++

	--select * from @TTmpPmtCal
	--select * from @TTmpPdtPpl
	--select * from @TTmpPD
	SET @tPmhDocNo = ISNULL((SELECT TOP 1 FTPmhDocNo FROM @TTmpPmtCal WHERE ISNULL(FTPgtStaEffect,'') <> '' AND ISNULL(FCPbyGetQtyDiv,0) > 0 ORDER BY FCPgtGetDis DESC),'')
	
	IF @tPmhDocNo <> '' BEGIN
		
		SELECT @cPmtQtyDiv = FCPbyGetQtyDiv,@tStaBuyCond = FTPbyStaBuyCond,@tStaCalSum = FTPbyStaCalSum 
		,@cGetValue = FCPgtGetValue,@cGetDis = FCPgtGetDis,@nSeqNoCB = FNPbySeqNo
		,@tStaOnTopPmt = FTPmhStaOnTopPmt,@tStaRcvFree =FTPmhStaRcvFree,@tStaGetType = FTPgtStaGetType
		,@tStaEffect = FTPgtStaEffect
		FROM @TTmpPmtCal WHERE FTPmhDocNo = @tPmhDocNo

		IF @tStaBuyCond = '1' OR @tStaBuyCond = '3' OR @tStaBuyCond = '5' BEGIN
			UPDATE @TTmpPD
			SET FCXpdGetQtyDiv = @cPmtQtyDiv
			,FTXpdGetType = @tStaGetType
			,FCXpdGetValue = @cGetValue
			,FCXpdDis = @cGetDis
			,FTXpdStaRcv = @tStaRcvFree
			,FTPmhStaOnTopPmt = @tStaOnTopPmt
			WHERE FTPmhCode = @tPmhDocNo

			-- update qty user
			DECLARE cursor_Qty CURSOR FOR
			SELECT FTPmdGrpName,FCPbyMinValue,FNPbySeq
			FROM TPMTPmtCB
			WHERE FTPmhDocNo = @tPmhDocNo
			UNION ALL
			SELECT FTPmdGrpName,FCPgtGetvalue,FNPgtSeq
			FROM TPMTPmtCG
			WHERE FTPmhDocNo = @tPmhDocNo
			AND FTPgtStaGetType = '5'

			OPEN cursor_Qty
			FETCH NEXT FROM cursor_Qty
			INTO @tPmdGrpName,@cQtyUse,@nSeqNo;
			WHILE(@@FETCH_STATUS=0)
			BEGIN
				SET @cQtyUse = @cQtyUse * @cPmtQtyDiv
				IF @nSeqNoCB = 0 OR @nSeqNo = @nSeqNoCB BEGIN
					-- update PD
					DECLARE cursor_PD CURSOR FOR
					SELECT FTPdtCode,FTPunCode,FNSdtSeqNo,FCXsdQty
					FROM @TTmpPD
					WHERE FTPmhCode = @tPmhDocNo AND FTPmdGrpName = @tPmdGrpName

					OPEN cursor_PD
					FETCH NEXT FROM cursor_PD
					INTO @tPdtCode,@tPunCode,@nSeqNo,@cQtyPdt
					WHILE(@@FETCH_STATUS=0)
					BEGIN
						IF @tStaEffect = '2' BEGIN
							SET @cQtyUpd = @cQtyPdt
							SET @cQtyUse = @cQtyPdt
						END
						ELSE BEGIN
							IF @cQtyUse >= @cQtyPdt BEGIN
								SET @cQtyUpd = @cQtyPdt
								SET @cQtyUse = @cQtyUse - @cQtyPdt
							END
							ELSE BEGIN
								SET @cQtyUpd = @cQtyUse
								SET @cQtyUse = 0
							END
						END
						--UPDATE @TTmpPD
						--SET FCXsdQty = @cQtyUpd
						--WHERE FTPmhCode = @tPmhDocNo AND FTPmdGrpName = @tPmdGrpName
						--AND FTPdtCode = @tPdtCode AND FTPunCode = @tPunCode AND FNSdtSeqNo = @nSeqNo

						IF (@tStaOnTopPmt = '2') BEGIN
							UPDATE @TTmpPD
							SET FCXsdQty =FCXsdQty - @cQtyUpd
							,FCXsdNet = FCXsdSetPrice * (FCXsdQty - @cQtyUpd)
							WHERE FTPmhCode <> @tPmhDocNo
							AND FTPdtCode = @tPdtCode AND FTPunCode = @tPunCode AND FNSdtSeqNo = @nSeqNo
							AND ISNULL(FTXpdGetType,'') = ''
						END

						IF (@cQtyUse = 0) BEGIN
							BREAK
						END 

						FETCH NEXT FROM cursor_PD
						INTO @tPdtCode,@tPunCode,@nSeqNo,@cQtyPdt
					END
					CLOSE cursor_PD;
					DEALLOCATE cursor_PD;
					-- End update PD
				END
				
				FETCH NEXT FROM cursor_Qty
				INTO @tPmdGrpName,@cQtyUse,@nSeqNo;
			END
			CLOSE cursor_Qty;
			DEALLOCATE cursor_Qty;
		END
		IF @tStaBuyCond = '2' OR @tStaBuyCond = '4'  BEGIN
			UPDATE @TTmpPD
			SET FCXpdGetQtyDiv = @cPmtQtyDiv
			,FTXpdGetType = @tStaGetType
			,FCXpdGetValue = @cGetValue
			,FCXpdDis = @cGetDis
			,FTXpdStaRcv = @tStaRcvFree
			,FTPmhStaOnTopPmt = @tStaOnTopPmt
			WHERE FTPmhCode = @tPmhDocNo

			-- update qty user
			DECLARE cursor_Qty CURSOR FOR
			SELECT FTPmdGrpName,FCPbyMinValue,FNPbySeq
			FROM TPMTPmtCB
			WHERE FTPmhDocNo = @tPmhDocNo
			UNION ALL
			SELECT FTPmdGrpName,FCPgtGetvalue,FNPgtSeq
			FROM TPMTPmtCG
			WHERE FTPmhDocNo = @tPmhDocNo
			AND FTPgtStaGetType = '5'

			OPEN cursor_Qty
			FETCH NEXT FROM cursor_Qty
			INTO @tPmdGrpName,@cQtyUse,@nSeqNo;
			WHILE(@@FETCH_STATUS=0)
			BEGIN
				SET @cQtyUse = @cQtyUse * @cPmtQtyDiv
				IF @nSeqNoCB = 0 OR @nSeqNo = @nSeqNoCB BEGIN
					-- update PD
					DECLARE cursor_PD CURSOR FOR
					SELECT FTPdtCode,FTPunCode,FNSdtSeqNo,FCXsdQty,FCXsdSetPrice,FCXsdNet
					FROM @TTmpPD
					WHERE FTPmhCode = @tPmhDocNo AND FTPmdGrpName = @tPmdGrpName

					OPEN cursor_PD
					FETCH NEXT FROM cursor_PD
					INTO @tPdtCode,@tPunCode,@nSeqNo,@cQtyPdt,@cSetPrice,@cNet
					WHILE(@@FETCH_STATUS=0)
					BEGIN
						IF @tStaEffect = '2' BEGIN
							SET @cQtyUpd = @cQtyPdt
							SET @cQtyUse = @cQtyPdt
						END
						ELSE BEGIN
							IF @cQtyUse >= @cNet BEGIN
								SET @cQtyUpd = @cQtyPdt
								SET @cQtyUse = @cQtyUse - @cNet
							END
							ELSE BEGIN
								SET @cQtyUpd = CEILING(@cQtyUse/@cSetPrice)
								SET @cQtyUse = 0
							END
						END

						--UPDATE @TTmpPD
						--SET FCXsdQty = @cQtyUpd
						--WHERE FTPmhCode = @tPmhDocNo AND FTPmdGrpName = @tPmdGrpName
						--AND FTPdtCode = @tPdtCode AND FTPunCode = @tPunCode AND FNSdtSeqNo = @nSeqNo

						IF (@tStaOnTopPmt = '2') BEGIN
							UPDATE @TTmpPD
							SET FCXsdQty =FCXsdQty - @cQtyUpd
							,FCXsdNet = FCXsdSetPrice * (FCXsdQty - @cQtyUpd)
							WHERE FTPmhCode <> @tPmhDocNo
							AND FTPdtCode = @tPdtCode AND FTPunCode = @tPunCode AND FNSdtSeqNo = @nSeqNo
							AND ISNULL(FTXpdGetType,'') = ''
						END

						IF (@cQtyUse = 0) BEGIN
							BREAK
						END 

						FETCH NEXT FROM cursor_PD
						INTO @tPdtCode,@tPunCode,@nSeqNo,@cQtyPdt
					END
					CLOSE cursor_PD;
					DEALLOCATE cursor_PD;
					-- End update PD
				END
				FETCH NEXT FROM cursor_Qty
				INTO @tPmdGrpName,@cQtyUse,@nSeqNo;
			END
			CLOSE cursor_Qty;
			DEALLOCATE cursor_Qty;
		END


		DELETE FROM @TTmpPD WHERE FCXsdQty = 0

		INSERT INTO @TTmpPmtExc(FTPmhCode) VALUES (@tPmhDocNo)
		GOTO RecalPmt -- กลับไปคำนวณใหม่
	END

	DELETE FROM @TTmpPD WHERE ISNULL(FTXpdGetType,'') = ''

	-- 5. --
	UPDATE @TTmpPD
	SET FTPplCode = CG.FTPplCode
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtCG CG ON CG.FTPmhDocNo = PD.FTPmhCode AND CG.FTPmdGrpName = PD.FTPmdGrpName
	WHERE PD.FTXpdGetType = '4'

	UPDATE @TTmpPD
	SET FTCpdBarCpn = (CASE WHEN CG.FTPgtStaCoupon = '2' THEN CG.FTCphDocNo ELSE '' END)
	,FTPgtCpnText = (CASE WHEN CG.FTPgtStaCoupon = '3' THEN CG.FTPgtCpnText ELSE '' END)
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtCG CG ON CG.FTPmhDocNo = PD.FTPmhCode AND CG.FTPmdGrpName = PD.FTPmdGrpName

	UPDATE @TTmpPD
	SET FCXpdPoint = TMP.FCXpdPoint
	FROM @TTmpPD PD
	INNER JOIN ( SELECT FTPmhCode,
				(CASE CG.FTPgtStaPntCalType 
					WHEN '1' THEN FLOOR(SUM(FCXsdQty * FCXsdSetPrice)/(CASE WHEN CG.FNPgtPntBuy = 0 THEN 1 ELSE CG.FNPgtPntBuy END)) * CG.FNPgtPntGet 
					WHEN '2' THEN FLOOR(SUM(FCXsdQty)/(CASE WHEN CG.FNPgtPntBuy = 0 THEN 1 ELSE CG.FNPgtPntBuy END)) * CG.FNPgtPntGet
					ELSE 0 END) AS FCXpdPoint
				FROM @TTmpPD PD
				INNER JOIN TPMTPmtCG CG ON CG.FTPmhDocNo = PD.FTPmhCode AND CG.FTPmdGrpName = PD.FTPmdGrpName
				WHERE CG.FTPgtStaPoint = '2'
				GROUP BY PD.FTPmhCode,CG.FTPgtStaPntCalType,CG.FNPgtPntBuy,CG.FNPgtPntGet
				) TMP ON PD.FTPmhCode = TMP.FTPmhCode
	-- 5. --

	-- 2. --
	UPDATE @TTmpPD
	SET FTCpdBarCpn = ISNULL((SELECT TOP 1 FTCpdBarCpn FROM TFNTCouponDT WITH(NOLOCK) WHERE FTCphDocNo = PD.FTCpdBarCpn),'')
	FROM @TTmpPD PD
	WHERE ISNULL(FTCpdBarCpn,'') <> ''
	-- 2. --

	-- update percent average
	UPDATE @TTmpPD
	SET FCXdtPerDisAvg = CB.FCPbyPerAvgDis
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtCB CB ON PD.FTPmhCode = CB.FTPmhDocNo AND PD.FTPmdGrpName = CB.FTPmdGrpName

	UPDATE @TTmpPD
	SET FCXdtPerDisAvg = CG.FCPgtPerAvgDis
	FROM @TTmpPD PD
	INNER JOIN TPMTPmtCG CG ON PD.FTPmhCode = CG.FTPmhDocNo AND PD.FTPmdGrpName = CG.FTPmdGrpName
	-- End update percent average

	-- update discount average
	UPDATE @TTmpPD
	SET FCXdtDisAvg = (FCXpdDis * FCXdtPerDisAvg)/100

	SELECT * FROM @TTmpPD

	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    SET @FNResult= -1
	SELECT ERROR_MESSAGE()
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_PRCxCardDayEnd]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCxCardDayEnd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCxCardDayEnd] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCxCardDayEnd]
@pdDate DATETIME
,@FNResult INT OUTPUT 
AS
/*-----------------------------------------------------------------------------
Document History
Date			User	Remark
01.03/12/2018	Em		Create
-----------------------------------------------------------------------------*/
DECLARE @tFedSelect VARCHAR(8000) 
DECLARE @tDatePrc VARCHAR(10)
DECLARE @tSql VARCHAR(MAX)
DECLARE @TransName varchar(20) = 'DayEndPrc'; 

BEGIN TRY  
	SET @FNResult = 0
	BEGIN TRANSACTION @TransName

	SELECT @tFedSelect = COALESCE(@tFedSelect + ', ', '') + COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TFNTCrdHis'

	SET @tDatePrc = CONVERT(VARCHAR(10),@pdDate,121)

	SET @tSql = 'INSERT INTO TFNTCrdHis(' + @tFedSelect + ')' + CHAR(10) +
				'SELECT ' + @tFedSelect + ' FROM TFNTCrdOffline WITH(NOLOCK) ' + CHAR(10) +
				'WHERE CONVERT(VARCHAR(10),FDTxnDocDate,121) <= ''' + @tDatePrc + '''' + CHAR(10) +
				'UNION ALL ' + CHAR(10) +
				'SELECT ' + @tFedSelect + ' FROM TFNTCrdTopUp WITH(NOLOCK) ' + CHAR(10) +
				'WHERE CONVERT(VARCHAR(10),FDTxnDocDate,121) <= ''' + @tDatePrc + '''' + CHAR(10) +
				'UNION ALL ' + CHAR(10) +
				'SELECT ' + @tFedSelect + CHAR(10) +
				'FROM TFNTCrdSale ' + CHAR(10) +
				'WHERE CONVERT(VARCHAR(10),FDTxnDocDate,121) <= ''' + @tDatePrc + ''''
	EXECUTE sp_sqlexec @tSql

	DELETE FROM TFNTCrdOffline
	FROM TFNTCrdOffline Crd WITH(NOLOCK)
	INNER JOIN TFNTCrdHis His ON Crd.FTBchCode = His.FTBchCode AND Crd.FNTxnID = His.FNTxnID AND Crd.FTTxnDocType = His.FTTxnDocType AND Crd.FTTxnStaOffLine = His.FTTxnStaOffLine
	WHERE CONVERT(VARCHAR(10),Crd.FDTxnDocDate,121) <= @tDatePrc

	DELETE FROM TFNTCrdTopUp
	FROM TFNTCrdTopUp Crd WITH(NOLOCK)
	INNER JOIN TFNTCrdHis His ON Crd.FTBchCode = His.FTBchCode AND Crd.FNTxnID = His.FNTxnID AND Crd.FTTxnDocType = His.FTTxnDocType AND Crd.FTTxnStaOffLine = His.FTTxnStaOffLine
	WHERE CONVERT(VARCHAR(10),Crd.FDTxnDocDate,121) <= @tDatePrc

	DELETE FROM TFNTCrdSale
	FROM TFNTCrdSale Crd WITH(NOLOCK)
	INNER JOIN TFNTCrdHis His ON Crd.FTBchCode = His.FTBchCode AND Crd.FNTxnID = His.FNTxnID AND Crd.FTTxnDocType = His.FTTxnDocType AND Crd.FTTxnStaOffLine = His.FTTxnStaOffLine
	WHERE CONVERT(VARCHAR(10),Crd.FDTxnDocDate,121) <= @tDatePrc

	SET @FNResult = 1
	COMMIT TRANSACTION @TransName
END TRY  
BEGIN CATCH  
	SET @FNResult = -1
	ROLLBACK TRANSACTION @TransName
END CATCH  

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCxCardMonthEnd]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCxCardMonthEnd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCxCardMonthEnd] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCxCardMonthEnd]
@pnYYYY INT
,@pnMM INT
,@FNResult INT OUTPUT 
AS
/*-----------------------------------------------------------------------------
Document History
Date			User	Remark
01.03/12/2018	Em		Create
-----------------------------------------------------------------------------*/
DECLARE @pdFrmDate DATETIME
DECLARE @pdToDate DATETIME
DECLARE @pdMeDate DATETIME
DECLARE @TransName VARCHAR(20) = 'MonthEndPrc'; 
DECLARE @tDocNo VARCHAR(30)

BEGIN TRY  
	SET @FNResult = 0
	BEGIN TRANSACTION @TransName

	--ส่ง Parameter ปี,เดือนที่ต้องการ
	SET @pdMeDate= DATEFROMPARTS(@pnYYYY,@pnMM,'01')
	SET @pdFrmDate=DATEADD(d,1,EOMONTH ( @pdMeDate, -2 ))
	SET @pdToDate=EOMONTH ( @pdMeDate, -1 )
	SET @tDocNo = 'ME' + SUBSTRING(CONVERT(VARCHAR(10),@pdMeDate,112),3,6)

	DELETE FROM TFNTCrdHisME WHERE FTTxnDocNoRef = @tDocNo

	/*ประเภทรายการ
	+:0:MonthEnd,1:เติมเงิน,4:ยกเลิกตัดจ่าย(คืน),9:โอนเงินเข้า
	-:2:ยกเลิกเติมเงิน,3:ตัดจ่าย(ขาย)5:แลกคืน,8:โอนเงินออก,10:ล้างบัตร
	N/A:6:เบิกบัตร,7:คืนบัตร,11:ปรับสถานะ,12:บัตรใหม่*/
	INSERT INTO TFNTCrdHisME(FTBchCode, FTTxnDocType, FTTxnStaOffLine, FTTxnDocNoRef, FTCrdCode, FDTxnDocDate, FCTxnCrdValue, FCTxnValue, FCTxnDeposit, FTTxnStaPrc)
	SELECT BCH.FTBchCode,'0' AS FTTxnDocType,'0' AS FTTxnStaOffLine, @tDocNo AS FTTxnDocNoRef, CRD.FTCrdCode, @pdMeDate AS FDTxnDocDate, ISNULL(TXN.FCTxnValue,0) AS FCTxnValue , 0 AS FCTxnValue,
	0 AS FCTxnDeposit, '1' AS FTTxnStaPrc
	FROM TCNMBranch BCH ,TFNMCard CRD
	LEFT JOIN
		(SELECT FTBchCode, FTCrdCode,ISNULL(SUM(CASE WHEN FTTxnDocType IN('0','1','4','9') THEN (FCTxnValue)
		ELSE CASE WHEN FTTxnDocType IN('2','3','5','8','10') THEN -1*(FCTxnValue) ELSE 0 END END ),0) AS FCTxnValue
		FROM TFNTCrdHis WITH(NOLOCK)
		--WHERE FDTxnDocDate BETWEEN @pdFrmDate AND @pdToDate
		GROUP BY FTBchCode,FTCrdCode)TXN ON CRD.FTCrdCode=TXN.FTCrdCode
	WHERE  CRD.FTCrdStaActive='1'

	COMMIT TRANSACTION @TransName
	SET @FNResult = 1
END TRY  
BEGIN CATCH  
	ROLLBACK TRANSACTION @TransName
	SET @FNResult = -1
END CATCH  

GO
/****** Object:  StoredProcedure [dbo].[STP_PRCxLockerStatus]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCxLockerStatus]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCxLockerStatus] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCxLockerStatus]
 @ptBchCode varchar(5)
,@ptDocNo varchar(30)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @TTmpPrc TABLE 
   (  
   FTBchCode varchar(5), 
   FTPosCode varchar(5), 
   FNXsdLayNo INT, 
   FDXshDatePick Datetime, 
   FTXshDocNo varchar(20), 
   FDXshDocDate Datetime
   ) 
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.18/09/2019	Em		create  
----------------------------------------------------------------------*/
BEGIN TRY
	
	INSERT INTO @TTmpPrc(FTBchCode,FTPosCode,FNXsdLayNo,FDXshDatePick,FTXshDocNo,FDXshDocDate)
	SELECT HD.FTBchCode,HD.FTPosCode,SL.FNXsdLayNo,HD.FDXshDatePick,HD.FTXshDocNo,HD.FDXshDocDate
	FROM TRTTSalHD HD WITH(NOLOCK)
	INNER JOIN TRTTSalDT DT WITH(NOLOCK) ON HD.FTBchCode = DT.FTBchCode AND HD.FTXshDocNo = DT.FTXshDocNo
	INNER JOIN TRTTSalDTSL SL WITH(NOLOCK) ON HD.FTBchCode = SL.FTBchCode AND HD.FTXshDocNo = SL.FTXshDocNo
	WHERE HD.FTBchCode = @ptBchCode AND HD.FTXshDocNo = @ptDocNo

	IF NOT EXISTS(SELECT LST.FTPosCode FROM TRTTLockerStatus LST WITH(NOLOCK) 
								INNER JOIN @TTmpPrc TMP ON LST.FTBchCode = TMP.FTBchCode 
								AND LST.FTPosCode = TMP.FTPosCode AND LST.FNLayNo = TMP.FNXsdLayNo)
	BEGIN
		INSERT INTO TRTTLockerStatus(FTBchCode,FTPosCode,FNLayNo,FTLayStaUse,FDLastUpdOn,FTLastUpdBy,FDCreateOn,FTCreateBy)
		SELECT FTBchCode,FTPosCode,FNXsdLayNo,'1',GETDATE(),@ptWho,GETDATE(),@ptWho
		FROM @TTmpPrc
	END

	UPDATE LST
	SET FTLayStaUse = (CASE WHEN TMP.FDXshDatePick < TMP.FDXshDocDate OR TMP.FDXshDatePick IS NULL THEN '2' ELSE '1' END)
	,FDLastUpdOn = GETDATE()
	,FTLastUpdBy = @ptWho
	FROM TRTTLockerStatus LST WITH(ROWLOCK)
	INNER JOIN @TTmpPrc TMP ON LST.FTBchCode = TMP.FTBchCode AND LST.FTPosCode = TMP.FTPosCode AND LST.FNLayNo = TMP.FNXsdLayNo

	SET @FNResult= 0
END TRY
BEGIN CATCH
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH


GO
/****** Object:  StoredProcedure [dbo].[STP_PRCxStockMonthEnd]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCxStockMonthEnd]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCxStockMonthEnd] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCxStockMonthEnd]
@pdDate Datetime
,@FNResult INT OUTPUT AS
DECLARE @tTrans VARCHAR(20)
DECLARE @TTmpPrcStk TABLE 
   ( 
   FTBchCode varchar(5), 
   FTStkDocNo varchar(20), 
   FTStkType varchar(1), 
   FTPdtCode varchar(20), 
   FCStkQty decimal(18,2), 
   FTWahCode varchar(5), 
   FDStkDate Datetime,
   FCStkSetPrice decimal(18,2),
   FCStkCostIn decimal(18,2),
   FCStkCostEx decimal(18,2)
   ) 
DECLARE @tBchCode varchar(5)
DECLARE @dStkDate Datetime
/*---------------------------------------------------------------------
Document History
  Date			User	Remark
1.28/08/2019	Em		create  
2.04/12/2019	Em		แก้ไขคลังที่จะประมวลผลใหม่
3.27/02/2020	Em		แก้ไขให้ทำ MonthEnd ทุกคลังที่อยู่ในระบบที่ใช้งาน
4.27/02/2020	Em		ปรับ Query Statement ใหม่
----------------------------------------------------------------------*/
SET @tTrans = 'PrcBchTnf'
BEGIN TRY
	BEGIN TRANSACTION @tTrans  
	SELECT TOP 1 @tBchCode = ISNULL(FTBchCode,'') FROM TCNMComp WITH(NOLOCK) 
	SET @dStkDate = CONVERT(Datetime, CONVERT(VARCHAR(8),@pdDate,121) + '01')

	--Data to Temp
	INSERT INTO @TTmpPrcStk(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx)
	--SELECT @tBchCode AS FTBchCode, @dStkDate AS FDStkDate, 'ME' + CONVERT(VARCHAR(6),@pdDate,112) AS FTStkDocNo ,
	--WAH.FTWahCode AS FTWahCode,PDT.FTPdtCode,0 AS FTStkType,
	--ISNULL(SUM(CASE FTStkType WHEN 0 THEN FCStkQty
	--	WHEN 1 THEN FCStkQty
	--	WHEN 2 THEN FCStkQty * (-1)
	--	WHEN 3 THEN FCStkQty * (-1)
	--	WHEN 4 THEN FCStkQty
	--	WHEN 5 THEN FCStkQty END
	--),0)  AS FCStkQty,
	--0 AS FCStkSetPrice,
	--0 AS FCStkCostIn,
	--0 AS FCStkCostEx
	--FROM TCNMWaHouse WAH WITH(NOLOCK) ,TCNMPdt PDT WITH(NOLOCK)
	--LEFT JOIN TCNTPdtStkCrd STK WITH(NOLOCK) ON STK.FTPdtCode = PDT.FTPdtCode AND STK.FTBchCode = @tBchCode
	--	AND CONVERT(VARCHAR(6),FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,@pdDate),112)
	--	AND STK.FTWahCode IN (SELECT FTWahCode FROM TCNMWaHouse WITH(NOLOCK) WHERE FTWahStaType = '1')
	--WHERE PDT.FTPdtStkControl = '1'
	--AND WAH.FTWahStaType = '1'
	--GROUP BY FTBchCode,CONVERT(VARCHAR(6),FDStkDate,112),WAH.FTWahCode,PDT.FTPdtCode
	---- 2. --
	--SELECT @tBchCode AS FTBchCode, @dStkDate AS FDStkDate, 'ME' + CONVERT(VARCHAR(6),@pdDate,112) AS FTStkDocNo ,
	--WAH.FTWahCode AS FTWahCode,PDT.FTPdtCode,0 AS FTStkType,
	--ISNULL(SUM(CASE FTStkType WHEN 0 THEN FCStkQty
	--	WHEN 1 THEN FCStkQty
	--	WHEN 2 THEN FCStkQty * (-1)
	--	WHEN 3 THEN FCStkQty * (-1)
	--	WHEN 4 THEN FCStkQty
	--	WHEN 5 THEN FCStkQty END
	--),0)  AS FCStkQty,
	--0 AS FCStkSetPrice,
	--0 AS FCStkCostIn,
	--0 AS FCStkCostEx
	--FROM (SELECT DISTINCT FTWahCode FROM TCNTPdtStkCrd with(nolock)) WAH,TCNMPdt PDT WITH(NOLOCK)
	--LEFT JOIN TCNTPdtStkCrd STK WITH(NOLOCK) ON STK.FTPdtCode = PDT.FTPdtCode AND STK.FTBchCode = @tBchCode
	--	AND CONVERT(VARCHAR(6),FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,@pdDate),112)
	--WHERE PDT.FTPdtStkControl = '1'
	--AND STK.FTWahCode = WAH.FTWahCode
	--GROUP BY FTBchCode,CONVERT(VARCHAR(6),FDStkDate,112),WAH.FTWahCode,PDT.FTPdtCode
	---- 2. --

	---- 3. --
	--SELECT @tBchCode AS FTBchCode, @dStkDate AS FDStkDate, 'ME' + CONVERT(VARCHAR(6),@pdDate,112) AS FTStkDocNo ,
	--WAH.FTWahCode AS FTWahCode,PDT.FTPdtCode,0 AS FTStkType,
	--(CASE WHEN ISNULL(STK.FTWahCode,'') = '' THEN 0
	--	ELSE ISNULL(SUM(CASE FTStkType WHEN 0 THEN FCStkQty
	--		WHEN 1 THEN FCStkQty
	--		WHEN 2 THEN FCStkQty * (-1)
	--		WHEN 3 THEN FCStkQty * (-1)
	--		WHEN 4 THEN FCStkQty
	--		WHEN 5 THEN FCStkQty END
	--	),0)  
	--END) AS FCStkQty,
	--0 AS FCStkSetPrice,
	--0 AS FCStkCostIn,
	--0 AS FCStkCostEx
	--FROM TCNMWaHouse WAH with(nolock),TCNMPdt PDT WITH(NOLOCK)
	--LEFT JOIN TCNTPdtStkCrd STK WITH(NOLOCK) ON STK.FTPdtCode = PDT.FTPdtCode AND STK.FTBchCode = @tBchCode
	--	AND CONVERT(VARCHAR(6),FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,@pdDate),112)
	--WHERE PDT.FTPdtStkControl = '1'
	--AND (WAH.FTWahCode = STK.FTWahCode OR ISNULL(STK.FTWahCode,'') = '')
	--AND (WAH.FTWahStaType = 1 OR (WAH.FTWahStaType IN ('4','5','6') AND ISNULL(WAH.FTWahRefCode,'') <> ''))
	--GROUP BY FTBchCode,CONVERT(VARCHAR(6),FDStkDate,112),WAH.FTWahCode,STK.FTWahCode,PDT.FTPdtCode
	---- 3. --

	-- 4. --
	SELECT DISTINCT @tBchCode AS FTBchCode, @dStkDate AS FDStkDate, 'ME' + CONVERT(VARCHAR(6),@pdDate,112) AS FTStkDocNo ,
	PDT.FTWahCode AS FTWahCode,PDT.FTPdtCode,0 AS FTStkType,
	 ISNULL(STK.FCStkQty,0)+ ISNULL(SCE.FCStkQty,0) AS FCStkQty,	-- 4. --
	0 AS FCStkSetPrice,
	0 AS FCStkCostIn,
	0 AS FCStkCostEx
	FROM (SELECT WAH.FTWahCode,PDT.FTPdtCode
		FROM TCNMWaHouse WAH with(nolock),TCNMPdt PDT WITH(NOLOCK)
		WHERE PDT.FTPdtStkControl = '1'
		AND (WAH.FTWahStaType = 1 OR WAH.FTWahStaType = 2 OR (WAH.FTWahStaType IN ('4','5','6') AND ISNULL(WAH.FTWahRefCode,'') <> ''))
		) PDT
	LEFT JOIN (SELECT FTBchCode,FTWahCode,FTPdtCode ,
					ISNULL(SUM(CASE FTStkType WHEN 0 THEN FCStkQty
						WHEN 1 THEN FCStkQty
						WHEN 2 THEN FCStkQty * (-1)
						WHEN 3 THEN FCStkQty * (-1)
						WHEN 4 THEN FCStkQty
						WHEN 5 THEN FCStkQty END
					),0)  AS FCStkQty
				FROM TCNTPdtStkCrd WITH(NOLOCK)
				WHERE FTBchCode = @tBchCode
				AND CONVERT(VARCHAR(6),FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,@pdDate),112)
				GROUP BY FTBchCode,FTWahCode,FTPdtCode) STK ON STK.FTPdtCode = PDT.FTPdtCode AND STK.FTWahCode = PDT.FTWahCode
	LEFT JOIN TCNTPdtStkCrdME SCE WITH(NOLOCK) ON SCE.FTPdtCode = PDT.FTPdtCode AND SCE.FTBchCode = @tBchCode AND SCE.FTWahCode = PDT.FTWahCode		-- 4. --
		AND CONVERT(VARCHAR(6),SCE.FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,@pdDate),112)				-- 4. --
	-- 4. --

	--update cost
	UPDATE @TTmpPrcStk
	SET FCStkCostIn = STK.FCStkCostIn
	,FCStkCostEx = STK.FCStkCostEx
	FROM @TTmpPrcStk TMP
	INNER JOIN TCNTPdtStkCrd STK WITH(NOLOCK) ON TMP.FTBchCode = STK.FTBchCode AND TMP.FTWahCode = STK.FTWahCode AND TMP.FTPdtCode = STK.FTPdtCode
	INNER JOIN (SELECT STK.FTBchCode,STK.FTWahCode,STK.FTPdtCode,MAX(STK.FDCreateOn) AS FDCreateOn
				FROM TCNTPdtStkCrd STK WITH(NOLOCK)
				INNER JOIN TCNMWaHouse WAH WITH(NOLOCK) ON WAH.FTWahCode = STK.FTWahCode AND WAH.FTWahStaType = '1'
				WHERE CONVERT(VARCHAR(6),STK.FDStkDate,112) = CONVERT(VARCHAR(6),DATEADD(Month,-1,STK.FDStkDate),112)
				GROUP BY STK.FTBchCode,STK.FTWahCode,STK.FTPdtCode
				) STK2 ON STK2.FTBchCode = STK.FTBchCode AND STK2.FTWahCode = STK.FTWahCode AND STK2.FTPdtCode = STK.FTPdtCode AND STK2.FDCreateOn = STK.FDCreateOn

	--Delete Old data
	DELETE TCNTPdtStkCrdME
	FROM TCNTPdtStkCrdME SME WITH(ROWLOCK)
	INNER JOIN @TTmpPrcStk TMP ON TMP.FTBchCode = SME.FTBchCode AND TMP.FTStkDocNo = SME.FTStkDocNo AND TMP.FTPdtCode = SME.FTPdtCode AND SME.FTStkType = '0'

	--Insert Data to stkcrdME
	INSERT INTO TCNTPdtStkCrdME(FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,FDCreateOn,FTCreateBy)
	SELECT FTBchCode,FDStkDate,FTStkDocNo,FTWahCode,FTPdtCode,FTStkType,FCStkQty,FCStkSetPrice,FCStkCostIn,FCStkCostEx,
	GETDATE() AS FDCreateOn,'System' AS FTCreateBy
	FROM @TTmpPrcStk

	COMMIT TRANSACTION @tTrans  
	SET @FNResult= 0
END TRY
BEGIN CATCH
	ROLLBACK TRANSACTION @tTrans  
    --EXEC STP_MSGxWriteTSysPrcLog @ptComName,@ptWho,@ptDocNo ,@tDate ,@tTime
    SET @FNResult= -1
END CATCH
GO
/****** Object:  StoredProcedure [dbo].[STP_PRCxSumBill]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_PRCxSumBill]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_PRCxSumBill] AS' 
END
GO
ALTER PROCEDURE [dbo].[STP_PRCxSumBill]
 @ptBchCode varchar(3)
,@ptDocNoTax varchar(20)
,@pnSaleDocType INT
,@ptDocDate varchar(10)
,@ptWho varchar(100) ,@FNResult INT OUTPUT AS
DECLARE @tBchCode VARCHAR(5)
DECLARE @nDocType int
DECLARE @tWhoUpd VARCHAR(50)
DECLARE @tDocNoTax VARCHAR(20)
DECLARE @tCstCodeDef VARCHAR(20)
DECLARE @tVatCode VARCHAR(5)
DECLARE @cVatRate DECIMAL(18,2)
DECLARE @tDocDate VARCHAR(10)

BEGIN TRY
	SET @tBchCode = @ptBchCode
	SET @tDocNoTax = @ptDocNoTax
	SET @tWhoUpd = @ptWho
	SET @nDocType = @pnSaleDocType
	SET @tCstCodeDef = ISNULL((SELECT TOP 1 FTSysStaUsrValue FROM TSysConfig WHERE FTSysCode = 'ACstDef' AND FTSysSeq = '001'),'')
	SET @tVatCode = ISNULL((SELECT TOP 1 FTVatCode FROM TCNMComp WHERE FTBchCode = @tBchCode),'')
	SET @cVatRate = ISNULL((SELECT TOP 1 FCVatRate FROM TCNMVatRate WHERE FTVatCode = @tVatCode AND CONVERT(DATETIME,FDVatStart) <= CONVERT(DATETIME,GETDATE()) ORDER BY FDVatStart DESC),0)
	SET @tDocDate = @ptDocDate

	--Insert HD
	INSERT INTO TARTTaxHD (FTBchCode, FTXshDocNo, FTShpCode, FNXshDocType, FDXshDocDate, FTXshCshOrCrd, FTXshVATInOrEx, FTDptCode, FTWahCode, FTPosCode, FTShfCode, FNSdtSeqNo, FTUsrCode, FTSpnCode, FTXshApvCode, 
	FTCstCode, FNXshCstTaxAdd, FTXshDocVatFull, FTXshRefExt, FDXshRefExtDate, FTXshRefInt, FDXshRefIntDate, FTXshRefAE, FNXshDocPrint, FTRteCode, FCXshRteFac, FTVatCode, FCXshVATRate, FCXshTotal, 
	FCXshVatNoDisChg, FCXshNoVatNoDisChg, FCXshVatDisChgAvi, FCXshNoVatDisChgAvi, FTXshDisChgTxt, FCXshDis, FCXshChg, FCXshRefAEAmt, FCXshVatAfDisChg, FCXshNoVatAfDisChg, FCXshAfDisChgAE, FTXshWpCode, 
	FCXshVat, FCXshVatable, FCXshGrandB4Wht, FCXshWpTax, FCXshGrand, FCXshRnd, FTXshGndText, FCXshPaid, FCXshLeft, FTXshStaRefund, FTXshRmk, FTXshStaDoc, FTXshStaApv, FTXshStaPrcStk, FTXshStaPaid, 
	FNXshStaDocAct, FNXshStaRef, FTXshStaVatType, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
	SELECT @tBchCode AS FTBchCode,@tDocNoTax AS FTXshDocNo,'' AS FTShpCode, (CASE WHEN @nDocType = 1 THEN 6 ELSE 7 END) AS FNXshDocType, (CONVERT(VARCHAR(10),FDXshDocDate,121) + ' ' + CONVERT(VARCHAR(8),GETDATE(),108)) AS FDXshDocDate,
	'1' AS FTXshCshOrCrd, FTXshVATInOrEx, '' AS FTDptCode, '001' AS FTWahCode, '499' AS FTPosCode, '' AS FTShfCode, SUM(FNSdtSeqNo) AS FNSdtSeqNo, '' AS FTUsrCode, '' AS FTSpnCode, '' AS FTXshApvCode, @tCstCodeDef AS FTCstCode, 
	1 AS FNXshCstTaxAdd, @tDocNoTax AS FTXshDocVatFull, '' AS FTXshRefExt, CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshRefExtDate, '' AS FTXshRefInt, CONVERT(VARCHAR(10),FDXshDocDate,121) AS FDXshRefIntDate, '' AS FTXshRefAE, 
	0 AS FNXshDocPrint, '' AS FTRteCode, 0 AS FCXshRteFac, @tVatCode AS FTVatCode, @cVatRate AS FCXshVATRate, SUM(FCXshTotal) AS FCXshTotal, SUM(FCXshVatNoDisChg) AS FCXshVatNoDisChg, SUM(FCXshNoVatNoDisChg) AS FCXshNoVatNoDisChg, 
	SUM(FCXshVatDisChgAvi) AS FCXshVatDisChgAvi, SUM(FCXshNoVatDisChgAvi) AS FCXshNoVatDisChgAvi, '' AS FTXshDisChgTxt, SUM(FCXshDis) AS FCXshDis, SUM(FCXshChg) AS FCXshChg, SUM(FCXshRefAEAmt) AS FCXshRefAEAmt, 
	SUM(FCXshVatAfDisChg) AS FCXshVatAfDisChg, SUM(FCXshNoVatAfDisChg) AS FCXshNoVatAfDisChg, SUM(FCXshAfDisChgAE) AS FCXshAfDisChgAE, '' AS FTXshWpCode, SUM(FCXshVat) AS FCXshVat, SUM(FCXshVatable) AS FCXshVatable, 
	SUM(FCXshGrandB4Wht) AS FCXshGrandB4Wht, SUM(FCXshWpTax) AS FCXshWpTax, SUM(FCXshGrand) AS FCXshGrand, SUM(FCXshRnd) AS FCXshRnd, '' AS FTXshGndText, SUM(FCXshPaid) AS FCXshPaid, SUM(FCXshLeft) AS FCXshLeft, 
	'' AS FTXshStaRefund, '' AS FTXshRmk, '1' AS FTXshStaDoc, '1' AS FTXshStaApv, '1' AS FTXshStaPrcStk, '3' AS FTXshStaPaid, 1 AS FNXshStaDocAct, 0 AS FNXshStaRef, 2 AS FTXshStaVatType, 
	GETDATE() AS FDLastUpdOn, @tWhoUpd AS FTLastUpdBy, GETDATE() AS FDCreateOn, @tWhoUpd AS FTCreateBy
	FROM TPSTAbbHD with(nolock)
	WHERE FTBchCode = @tBchCode AND FNXshDocType = @nDocType AND CONVERT(VARCHAR(10),FDXshDocDate,121) = @tDocDate
	AND ISNULL(FTXshDocVatFull,'') = ''
	GROUP BY CONVERT(VARCHAR(10),FDXshDocDate,121),FNXshDocType,FTXshVATInOrEx

	--Insert HDDis
	INSERT INTO TARTTaxHDDis(FTBchCode, FTXshDocNo, FDXshDateIns, FTXshDisChgTxt, FCXshTotalVatAlwDis, FCXshTotalNoVatAlwDis, FCXshDis, FCXshChg, FCXshDisVat, FCXshDisNoVat, FCXshChgVat, FCXshChgNoVat, FTXshUsrApv)
	SELECT @tBchCode AS FTBchCode, @tDocNoTax AS FTXshDocNo, GETDATE() AS FDXshDateIns, '' AS FTXshDisChgTxt, SUM(DIS.FCXshTotalVatAlwDis) AS FCXshTotalVatAlwDis, SUM(DIS.FCXshTotalNoVatAlwDis) AS FCXshTotalNoVatAlwDis, 
	SUM(DIS.FCXshDis) AS FCXshDis, SUM(DIS.FCXshChg) AS FCXshChg, SUM(DIS.FCXshDisVat) AS FCXshDisVat, SUM(DIS.FCXshDisNoVat) AS FCXshDisNoVat, SUM(DIS.FCXshChgVat) AS FCXshChgVat, SUM(DIS.FCXshChgNoVat) AS FCXshChgNoVat, '' AS FTXshUsrApv
	FROM TPSTAbbHDDis DIS with(nolock)
	INNER JOIN TPSTAbbHD HD with(nolock) ON DIS.FTBchCode = HD.FTBchCode AND DIS.FTXshDocNo = HD.FTXshDocNo 
	WHERE HD.FTBchCode = @tBchCode AND HD.FNXshDocType = @nDocType AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) = @tDocDate
	AND ISNULL(HD.FTXshDocVatFull,'') = ''

	--Create DT Temp
	DECLARE @TPSTTmpDT TABLE
		(FNSeqNew int,
		FTBchCode VARCHAR(5), 
		FTXshDocNo VARCHAR(20),  
		FNXsdSeqNo int)
	INSERT INTO @TPSTTmpDT(FNSeqNew,FTBchCode,FTXshDocNo,FNXsdSeqNo) 
	SELECT ROW_NUMBER() OVER(ORDER BY DT.FTXshDocNo,DT.FNXsdSeqNo) AS FNSeqNo,DT.FTBchCode,DT.FTXshDocNo,DT.FNXsdSeqNo
	FROM TPSTAbbDT DT with(nolock)
	INNER JOIN TPSTAbbHD HD with(nolock) ON DT.FTBchCode = HD.FTBchCode AND DT.FTXshDocNo = HD.FTXshDocNo 
	WHERE HD.FTBchCode = @tBchCode AND HD.FNXshDocType = @nDocType AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) = @tDocDate
	AND ISNULL(HD.FTXshDocVatFull,'') = ''
	ORDER BY DT.FTXshDocNo,DT.FNXsdSeqNo

	--Insert DT
	INSERT INTO TARTTaxDT(FTBchCode, FTXshDocNo, FNXsdSeqNo, FTPdtCode, FTXsdPdtName, FTXsdStkCode, FCXsdStkFac, FTPunCode, FTPunName, FCXsdFactor, FTXsdBarCode, FTSrnCode, FTXsdVatType, FTVatCode, FCXsdVatRate, 
	FTXsdSaleType, FCXsdSalePrice, FCXsdQty, FCXsdQtyAll, FCXsdSetPrice, FCXsdAmt, FCXsdDisChgAvi, FTXsdDisChgTxt, FCXsdDis, FCXsdChg, FCXsdNet, FCXsdNetAfHD, FCXsdNetEx, FCXsdVat, FCXsdVatable, FCXsdWhtAmt, 
	FTXsdWhtCode, FCXsdWhtRate, FCXsdCostIn, FCXsdCostEx, FTXsdStaPdt, FCXsdQtyLef, FCXsdQtyRfn, FTXsdStaPrcStk, FTXsdStaAlwDis, FNXsdPdtLevel, FTXsdPdtParent, FCXsdQtySet, FTPdtStaSet, FTXsdRmk, 
	FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
	SELECT DT.FTBchCode AS FTBchCode, @tDocNoTax AS FTXshDocNo, TMP.FNSeqNew AS FNXsdSeqNo, FTPdtCode, FTXsdPdtName, FTXsdStkCode, FCXsdStkFac, FTPunCode, FTPunName, FCXsdFactor, FTXsdBarCode, FTSrnCode, FTXsdVatType, FTVatCode, FCXsdVatRate, 
	FTXsdSaleType, FCXsdSalePrice, FCXsdQty, FCXsdQtyAll, FCXsdSetPrice, FCXsdAmt, FCXsdDisChgAvi, FTXsdDisChgTxt, FCXsdDis, FCXsdChg, FCXsdNet, FCXsdNetAfHD, FCXsdNetEx, FCXsdVat, FCXsdVatable, FCXsdWhtAmt, 
	FTXsdWhtCode, FCXsdWhtRate, FCXsdCostIn, FCXsdCostEx, FTXsdStaPdt, FCXsdQtyLef, FCXsdQtyRfn, FTXsdStaPrcStk, FTXsdStaAlwDis, FNXsdPdtLevel, FTXsdPdtParent, FCXsdQtySet, FTPdtStaSet, FTXsdRmk, 
	FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy
	FROM TPSTAbbDT DT with(nolock)
	INNER JOIN @TPSTTmpDT TMP ON DT.FTBchCode = TMP.FTBchCode AND DT.FTXshDocNo = TMP.FTXshDocNo AND DT.FNXsdSeqNo = TMP.FNXsdSeqNo

	--Insert DTDis
	INSERT INTO TARTTaxDTDis(FTBchCode, FTXshDocNo, FNXsdSeqNo, FDXddDateIns, FNXddStaDis, FCXddDisChgAvi, FTXddDisChgTxt, FCXddDis, FCXddChg, FTXddUsrApv)
	SELECT DT.FTBchCode AS FTBchCode, @tDocNoTax AS FTXshDocNo, TMP.FNSeqNew AS FNXsdSeqNo, FDXddDateIns, FNXddStaDis, FCXddDisChgAvi, FTXddDisChgTxt, FCXddDis, FCXddChg, FTXddUsrApv
	FROM TPSTAbbDTDis DT with(nolock)
	INNER JOIN @TPSTTmpDT TMP ON DT.FTBchCode = TMP.FTBchCode AND DT.FTXshDocNo = TMP.FTXshDocNo AND DT.FNXsdSeqNo = TMP.FNXsdSeqNo

	--Insert DTPmt
	INSERT INTO TARTTaxDTPmt(FTBchCode, FTXshDocNo, FTPmhCode, FTXdpGrpName, FTXsdBarCode, FNXsdSeqNo, FCXdpQtyAll, FCXdpNet, FCXdpSetPrice, FCXdpGetQtyDiv, FCXdpGetCond, FCXdpGetValue, FCXdpDis, FCXdpDisAvg, 
							 FCXdpPoint, FTXdpStaExceptPmt, FTXdpStaRcv)
	SELECT DT.FTBchCode AS FTBchCode, @tDocNoTax AS FTXshDocNo, FTPmhCode, FTXdpGrpName, FTXsdBarCode, TMP.FNSeqNew AS FNXsdSeqNo, FCXdpQtyAll, FCXdpNet, FCXdpSetPrice, FCXdpGetQtyDiv, FCXdpGetCond, FCXdpGetValue, FCXdpDis, FCXdpDisAvg, 
							 FCXdpPoint, FTXdpStaExceptPmt, FTXdpStaRcv
	FROM TPSTAbbDTPmt DT with(nolock)
	INNER JOIN @TPSTTmpDT TMP ON DT.FTBchCode = TMP.FTBchCode AND DT.FTXshDocNo = TMP.FTXshDocNo AND DT.FNXsdSeqNo = TMP.FNXsdSeqNo

	--Insert RC
	INSERT INTO TARTTaxRC(FTBchCode, FTXshDocNo, FNXrcSeqNo, FTRcvCode, FTRcvName, FTXrcRefNo1, FTXrcRefNo2, FDXrcRefDate, FTXrcRefDesc, FTBnkCode, FTRteCode, FCXrcRteFac, FCXrcFrmLeftAmt, FCXrcUsrPayAmt, FCXrcDep, 
                         FCXrcNet, FCXrcChg, FTXrcRmk, FTPhwCode, FTXrcRetDocRef, FTXrcStaPayOffline, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
	SELECT @tBchCode AS FTBchCode, @tDocNoTax AS FTXshDocNo,ROW_NUMBER() OVER(PARTITION BY CONVERT(VARCHAR(10),HD.FDXshDocDate,121),HD.FNXshDocType,RC.FTRcvCode,RC.FTRcvName ORDER BY RC.FTRcvCode) AS FNXrcSeqNo, FTRcvCode, FTRcvName, 
	'' AS FTXrcRefNo1, '' AS FTXrcRefNo2, CONVERT(VARCHAR(10),HD.FDXshDocDate,121) AS FDXrcRefDate, '' AS FTXrcRefDesc, '' AS FTBnkCode, '' AS FTRteCode, 0 AS FCXrcRteFac, SUM(FCXrcNet) AS FCXrcFrmLeftAmt, 
	SUM(FCXrcNet) AS FCXrcUsrPayAmt, SUM(FCXrcNet) AS FCXrcDep, SUM(FCXrcNet) AS FCXrcNet, 0 AS FCXrcChg, '' AS FTXrcRmk, '' AS FTPhwCode, '' AS FTXrcRetDocRef, '' AS FTXrcStaPayOffline, 
	GETDATE() AS FDLastUpdOn, @tWhoUpd AS FTLastUpdBy, GETDATE() AS FDCreateOn, @tWhoUpd AS FTCreateBy
	FROM TPSTAbbRC RC with(nolock)
	INNER JOIN TPSTAbbHD HD with(nolock) ON RC.FTBchCode = HD.FTBchCode AND RC.FTXshDocNo = HD.FTXshDocNo 
	WHERE HD.FTBchCode = @tBchCode AND HD.FNXshDocType = @nDocType AND CONVERT(VARCHAR(10),HD.FDXshDocDate,121) = @tDocDate
	AND ISNULL(HD.FTXshDocVatFull,'') = ''
	GROUP BY CONVERT(VARCHAR(10),HD.FDXshDocDate,121),HD.FNXshDocType,RC.FTRcvCode,RC.FTRcvName

	UPDATE TPSTAbbHD with(rowlock)
	SET FTXshDocVatFull = @tDocNoTax
	,FDLastUpdOn = GETDATE()
	,FTLastUpdBy = @tWhoUpd 
	WHERE FTBchCode = @tBchCode AND FNXshDocType = @nDocType AND CONVERT(VARCHAR(10),FDXshDocDate,121) = @tDocDate

	SET @FNResult= 0
END TRY
BEGIN CATCH 
	SET @FNResult= -1
END CATCH

GO
/****** Object:  StoredProcedure [dbo].[STP_SETnCancelPayTxn]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_SETnCancelPayTxn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_SETnCancelPayTxn] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_SETnCancelPayTxn] 
	@ptBchCode VARCHAR(5) NULL,
	@ptCrdCode VARCHAR(20) NULL,
	@ptShpCode VARCHAR(5) NULL,
	@ptTxnDocNoRef VARCHAR(30) NULL,
	@pcTxnValue NUMERIC(18,4) NULL,
	@pnTxnID INT NULL,
	@ptPosCode VARCHAR(3) NULL,
    @pcTxnDeposit NUMERIC(18,4) NULL,
    @pnTxnOffline INT NULL
AS
BEGIN
        BEGIN TRANSACTION  
        SAVE TRANSACTION SavePay  
        BEGIN TRY  

            -- Insert transection Sale
            INSERT INTO TFNTCrdSale WITH(ROWLOCK) 
            ( 
				  FTBchCode,FTCrdCode,FTTxnDocType 
				 ,FTTxnDocNoRef,FCTxnValue,FNTxnIDRef 
				 ,FTTxnstaPrc,FDTxnDocDate,FTBchCodeRef 
				 ,FTTxnPosCode,FCTxnDeposit 
				 ,FTShpCode,FTTxnStaOffLine 
				 ,FCTxnCrdValue  
            ) 
            SELECT 
                 @ptBchCode,@ptCrdCode,'4', 
				 @ptTxnDocNoRef,@pcTxnValue,@pnTxnID, 
                 '1',GETDATE(),@ptBchCode
				,@ptPosCode,@pcTxnDeposit
				,@ptShpCode,@pnTxnOffline  
				,FCCrdValue 
            FROM TFNMCard WITH(NOLOCK) 
            WHERE FTCrdCode=@ptCrdCode

            -- Update Master Card
            UPDATE TFNMCard WITH (ROWLOCK) SET  
                 FCCrdValue=(ISNULL(FCCrdValue,0) + @pcTxnValue)
                 ,FCCrdDeposit=(ISNULL(FCCrdDeposit,0) - @pcTxnDeposit) 
            WHERE FTCrdCode=@ptCrdCode

            -- Update Cancel Pay
            UPDATE TFNTCrdSale WITH (ROWLOCK) SET  
				 FTTxnStaCancel='1' 
            WHERE FNTxnIDRef=@pnTxnID

            COMMIT TRANSACTION SavePay 
        END TRY 

        BEGIN CATCH 
        ROLLBACK TRANSACTION SavePay 
        END CATCH 
END

GO
/****** Object:  StoredProcedure [dbo].[STP_SETnResetExpired]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_SETnResetExpired]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_SETnResetExpired] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_SETnResetExpired] 
	@ptBchCode VARCHAR(5) NUll,
	@ptCrdCode VARCHAR(20)  NUll,
	@ptPosCode VARCHAR(5)  NUll,
	@FCCrdValue NUMERIC(18,4) NULL,
	@ptDocNoRef VARCHAR(20) NUll,
	@ptCrdSta VARCHAR(1) NUll
   ,@FNResult INT OUT 
AS
BEGIN
DECLARE @tSql NVARCHAR(MAX)
  BEGIN TRANSACTION    
        BEGIN TRY   

			SET @tSql =   'BEGIN TRANSACTION' + CHAR(10)
			SET @tSql +=              'SAVE TRANSACTION ResetExpired' + CHAR(10)
			SET @tSql +=                  'BEGIN TRY'  + CHAR(10)
								   -- Insert transection Sale
			SET @tSql +=			  '	   INSERT INTO TFNTCrdTopUp WITH(ROWLOCK)' + CHAR(10)
			SET @tSql +=			  '		   (' + CHAR(10)
			SET @tSql +=              '				FTBchCode,FTTxnDocType,FTCrdCode' + CHAR(10)
			SET @tSql +=              '				,FDTxnDocDate,FTBchCodeRef,FCTxnValue' + CHAR(10)
			SET @tSql +=              '				,FTTxnStaPrc,FTTxnPosCode,FCTxnCrdValue' + CHAR(10)
			SET @tSql +=			  '				,FTTxnStaOffLine,FTTxnDocNoRef'      + CHAR(10)
			SET @tSql +=			  '		   )' + CHAR(10)
			SET @tSql +=			  '		   VALUES' + CHAR(10)
			SET @tSql +=			  '		   (' + CHAR(10)
			SET @tSql +=              '				''' + @ptBchCode + ''',''10'',''' + @ptCrdCode + '''' + CHAR(10)
			SET @tSql +=              '		        ,GETDATE(),''' + @ptBchCode + ''',' + CAST(@FCCrdValue AS VARCHAR(30)) + '' + CHAR(10)
			SET @tSql +=              '				,''1'',''' + @ptPosCode + ''',' + CAST(@FCCrdValue AS VARCHAR(30)) + '' + CHAR(10)
			SET @tSql +=			  '				,''0'',''' + @ptDocNoRef + ''''  + CHAR(10)
			SET @tSql +=			  '	       )'  + CHAR(10)
							  -- Update Master Card
			SET @tSql +=			  '	    UPDATE TFNMCard WITH (ROWLOCK) SET'     + CHAR(10)
							IF(ISNULL(@ptCrdSta,'') = '' OR @ptCrdSta ='3')
							BEGIN
								SET @tSql += 'FCCrdValue=0,' + CHAR(10)
							END
			SET @tSql +=			   '       FCCrdDeposit=0' + CHAR(10)
			SET @tSql +=			   '      ,FCCrdDepositPdt=0' + CHAR(10)
			SET @tSql +=			   '      ,FDCrdLastTopup=NULL'+ CHAR(10)
			SET @tSql +=			   '      ,FDCrdResetDate=GETDATE()' + CHAR(10)
			SET @tSql +=			   '      WHERE FTCrdCode=''' + @ptCrdCode + ''''  + CHAR(10)

			SET @tSql +=			   '      COMMIT TRANSACTION ResetExpired' + CHAR(10)
			SET @tSql +=			   '    END TRY' + CHAR(10)

			 SET @tSql +=              'BEGIN CATCH'+ CHAR(10)
			 SET @tSql +=              '    ROLLBACK TRANSACTION ResetExpired'+ CHAR(10)
			 SET @tSql +=              'END CATCH '+ CHAR(10)
			 PRINT  @tSql
			
			 EXECUTE sp_executesql @tSql
			 COMMIT
		END TRY

		BEGIN CATCH 
			ROLLBACK TRANSACTION  
        END CATCH 

END

GO
/****** Object:  StoredProcedure [dbo].[STP_SEToCheckPayTxn]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_SEToCheckPayTxn]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_SEToCheckPayTxn] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_SEToCheckPayTxn] 
 @ptDocNo VARCHAR(30) NULL,
   @ptPosCode VARCHAR(3) NULL,
   @ptBchCode VARCHAR(5) NULL,
   @pnLngID INT NULL,
   @ptDocType VARCHAR(1),
   @pdSysDate DATETIME NULL,
   @pnPrevious INT
AS
BEGIN
	 DECLARE @tSql NVARCHAR(MAX)
      SET @tSql =  'SELECT' + CHAR(10)
      SET @tSql +=  '  TXN.FNTxnID AS rnTxnID,  '  + CHAR(10)
      SET @tSql +=  '  TXN.FTTxnDocNoRef AS rtTxnDocNoRef, '   + CHAR(10)
      SET @tSql +=  '  TXN.FDTxnDocDate AS rdTxnDocDate,'    + CHAR(10)
      SET @tSql +=  '  TXN.FTCrdCode AS rtCrdCode,  '  + CHAR(10)
      SET @tSql +=  '   CASE WHEN ISNULL(CRDL.FTCrdName,'''') = '''''  + CHAR(10)
      SET @tSql +=  '        THEN ( '  + CHAR(10)
      SET @tSql +=  '               SELECT TOP 1 FTCrdName  '  + CHAR(10)
      SET @tSql +=  '               FROM TFNMCard_L WITH(NOLOCK)  '  + CHAR(10)
      SET @tSql +=  '              	WHERE FTCrdCode = CRD.FTCrdCode  '  + CHAR(10)
      SET @tSql +=  '              	ORDER BY FNLngID ASC '  + CHAR(10)
      SET @tSql +=  '              	)  '  + CHAR(10)
      SET @tSql +=  '              	ELSE CRDL.FTCrdName  '  + CHAR(10)
      SET @tSql +=  '              	END AS rtCrdName, '  + CHAR(10)
      SET @tSql +=  '   TXN.FCTxnCrdValue AS rcTxnCrdValue, '   + CHAR(10)
      SET @tSql +=  '   TXN.FCTxnValue AS rcTxnValue, '   + CHAR(10)
      SET @tSql +=  '   TXN.FNTxnIDRef AS rnTxnIDRef,  '  + CHAR(10)
      SET @tSql +=  '   CRD.FTCrdHolderID AS rtCrdHolderID  '  + CHAR(10)
      SET @tSql +=  '   FROM TFNTCrdSale TXN WITH(NOLOCK) '  + CHAR(10)
      SET @tSql +=  '   INNER JOIN TFNMCard CRD WITH(NOLOCK) ON TXN.FTCrdCode = CRD.FTCrdCode '  + CHAR(10)
      SET @tSql +=  '   LEFT JOIN TFNMCard_L CRDL WITH(NOLOCK) ON CRD.FTCrdCode = CRDL.FTCrdCode  '  + CHAR(10)
      SET @tSql +=  '   AND CRDL.FNLngID =' + CAST(@pnLngID AS VARCHAR(10)) + ''  + CHAR(10)
      SET @tSql +=  '   WHERE TXN.FTTxnDocNoRef=''' + @ptDocNo + ''''   + CHAR(10)
      SET @tSql +=  '   AND TXN.FTTxnPosCode = ''' + @ptPosCode + ''''  + CHAR(10)
      SET @tSql +=  '   AND TXN.FTBchCode = ''' + @ptBchCode + ''''  + CHAR(10)
      SET @tSql +=  '   AND TXN.FTTxnDocType = ''' + @ptDocType + ''''  + CHAR(10)

	  --*[AnUBiS][][2019-06-14] - check system date.
	  IF (@pdSysDate IS NULL)
	  BEGIN
		SET @pdSysDate = GETDATE();
	  END

	  IF (@pnPrevious IS NULL)
	  BEGIN
		SET @pnPrevious = 0;
	  END

	  SET @tSql +=  '   AND (' + CHAR(10)
	  SET @tSql +=  '         CONVERT(DATE, TXN.FDTxnDocDate) BETWEEN' + CHAR(10)
	  SET @tSql +=  '         CONVERT(DATE, DATEADD(DAY, -' + CONVERT(VARCHAR(3), @pnPrevious) + ', CONVERT(DATE, ''' + CONVERT(VARCHAR(10), @pdSysDate, 120) + '''))) AND ' + CHAR(10)
	  SET @tSql +=  '         CONVERT(DATE, ''' + CONVERT(VARCHAR(10), @pdSysDate, 120) + ''')' + CHAR(10)
	  SET @tSql +=  '       )' + CHAR(10)

	  IF(@ptDocType = '3')
	  BEGIN
	  SET @tSql +=  '   AND ISNULL(TXN.FTTxnStaCancel, '''') = '''''   + CHAR(10)
	  END
      SET @tSql +=  '   ORDER BY TXN.FDTxnDocDate ASC '  + CHAR(10)
	  EXECUTE sp_executesql @tSql
      Print  @tSql
END

GO
/****** Object:  StoredProcedure [dbo].[STP_SEToCrdHistory]    Script Date: 5/8/2563 13:03:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[STP_SEToCrdHistory]') AND type in (N'P', N'PC'))
BEGIN
EXEC dbo.sp_executesql @statement = N'CREATE PROCEDURE [dbo].[STP_SEToCrdHistory] AS' 
END
GO

ALTER PROCEDURE [dbo].[STP_SEToCrdHistory] 
	@pnQty INT NULL,
	@ptCrdCode  VARCHAR(20) NULL,
	@ptTxnDocDate VARCHAR(10) NULL,
	@pnStaOffine INT NULL,
	@ptSort VARCHAR(1),
	@pnDayPrv INT NULL
AS
BEGIN
DECLARE @tSql NVARCHAR(MAX)
SET @tSql =  'DECLARE @nQty AS INTEGER' + CHAR(10)
SET @tSql += 'DECLARE @tCrdCode AS VARCHAR(50) ' + CHAR(10)
SET @tSql += 'DECLARE @tTxnDocDate AS VARCHAR(10) ' + CHAR(10)
SET @tSql += 'SET @nQty = ''' + CAST(@pnQty AS VARCHAR(10)) + '''' + CHAR(10)
SET @tSql += 'SET @tCrdCode = ''' + @ptCrdCode + ''''  + CHAR(10)
SET @tSql += 'SET @tTxnDocDate = ''' + @ptTxnDocDate + '''' + CHAR(10)
                      
SET @tSql += 'SELECT TOP(@nQty) FTTxnDocType AS rtType, FDTxnDocDate AS rdDocDate ' + CHAR(10)
SET @tSql += '    ,FTBchCodeRef AS rtBchRef,FTTxnDocNoRef AS rtDocRef ' + CHAR(10)
SET @tSql += '    ,CONVERT(NUMERIC(10,2), FCTxnValue) AS rcTxnValue,' + CAST(@pnStaOffine AS VARCHAR(10)) + ' AS rnStaOffline ' + CHAR(10)
SET @tSql += '    ,FTShpName AS rtShopName, ISNULL(FCTxnDeposit,0) AS rcTxnDeposit ' + CHAR(10)
SET @tSql += '    ,FCTxnCrdValue AS rcTxnCrdValue  ' + CHAR(10)
SET @tSql += 'FROM ' + CHAR(10)
SET @tSql += '   (' + CHAR(10)
SET @tSql += '     SELECT CTP.FTCrdCode, CTP.FTBchCode, CTP.FTTxnDocType ' + CHAR(10)
SET @tSql += '        ,CTP.FDTxnDocDate, CTP.FTBchCodeRef, CTP.FCTxnDeposit ' + CHAR(10)
SET @tSql += '        ,CTP.FTTxnDocNoRef, CTP.FCTxnValue, SHPL.FTShpName ' + CHAR(10)
SET @tSql += '        ,CTP.FCTxnCrdValue ' + CHAR(10)
SET @tSql += '     FROM TFNTCrdTopup CTP WITH(NOLOCK) ' + CHAR(10)
SET @tSql += '	   LEFT JOIN TCNMShop_L SHPL WITH(NOLOCK) ON CTP.FTShpCode = SHPL.FTShpCode ' + CHAR(10)
SET @tSql += '     WHERE CTP.FTCrdCode = @tCrdCode ' + CHAR(10)

SET @tSql += '     UNION  ' + CHAR(10)

SET @tSql += '     SELECT CSL.FTCrdCode, CSL.FTBchCode, CSL.FTTxnDocType ' + CHAR(10)
SET @tSql += '         ,CSL.FDTxnDocDate,CSL.FTBchCodeRef,CSL.FCTxnDeposit ' + CHAR(10)
SET @tSql += '         ,CSL.FTTxnDocNoRef,CSL.FCTxnValue,SHPL.FTShpName  ' + CHAR(10)
SET @tSql += '         ,CSL.FCTxnCrdValue  ' + CHAR(10)
SET @tSql += '     FROM TFNTCrdSale CSL WITH(NOLOCK)  ' + CHAR(10)
SET @tSql += '     LEFT JOIN TCNMShop_L SHPL WITH(NOLOCK) ON CSL.FTShpCode = SHPL.FTShpCode  ' + CHAR(10)
SET @tSql += '     WHERE CSL.FTCrdCode = @tCrdCode ' + CHAR(10)
SET @tSql += '     UNION ' + CHAR(10)
SET @tSql += '     SELECT COF.FTCrdCode, COF.FTBchCode, COF.FTTxnDocType ' + CHAR(10)
SET @tSql += '         ,COF.FDTxnDocDate,COF.FTBchCodeRef,COF.FCTxnDeposit ' + CHAR(10)
SET @tSql += '         ,COF.FTTxnDocNoRef,COF.FCTxnValue,SHPL.FTShpName ' + CHAR(10)
SET @tSql += '         ,COF.FCTxnCrdValue ' + CHAR(10)
SET @tSql += '     FROM TFNTCrdOffline COF WITH(NOLOCK) ' + CHAR(10)
SET @tSql += '     LEFT JOIN TCNMShop_L SHPL WITH(NOLOCK) ON COF.FTShpCode = SHPL.FTShpCode ' + CHAR(10)
SET @tSql += '     WHERE COF.FTCrdCode = @tCrdCode      ' + CHAR(10)

SET @tSql += '     UNION ' + CHAR(10)
                      
SET @tSql += '     SELECT CHS.FTCrdCode, CHS.FTBchCode, CHS.FTTxnDocType ' + CHAR(10)
SET @tSql += '     	   ,CHS.FDTxnDocDate, CHS.FTBchCodeRef, CHS.FCTxnDeposit ' + CHAR(10)
SET @tSql += '     	   ,CHS.FTTxnDocNoRef, CHS.FCTxnValue, SHPL.FTShpName ' + CHAR(10)
SET @tSql += '         ,CHS.FCTxnCrdValue ' + CHAR(10)
SET @tSql += '     FROM TFNTCrdHis CHS WITH(NOLOCK) ' + CHAR(10)
SET @tSql += '     LEFT JOIN TCNMShop_L SHPL WITH(NOLOCK) ON CHS.FTShpCode = SHPL.FTShpCode ' + CHAR(10)
SET @tSql += '     WHERE CHS.FTCrdCode = @tCrdCode    ' + CHAR(10)

SET @tSql += '     UNION          ' + CHAR(10)

SET @tSql += '     SELECT CHB.FTCrdCode, CHB.FTBchCode, CHB.FTTxnDocType ' + CHAR(10)
SET @tSql += '          ,CHB.FDTxnDocDate,CHB.FTBchCodeRef,CHB.FCTxnDeposit ' + CHAR(10)
SET @tSql += '          ,CHB.FTTxnDocNoRef,CHB.FCTxnValue,SHPL.FTShpName ' + CHAR(10)
SET @tSql += '          ,CHB.FCTxnCrdValue' + CHAR(10)
SET @tSql += '     FROM TFNTCrdHisBch CHB WITH(NOLOCK) ' + CHAR(10)
SET @tSql += '     LEFT JOIN TCNMShop_L SHPL WITH(NOLOCK) ON CHB.FTShpCode = SHPL.FTShpCode ' + CHAR(10)
SET @tSql += '     WHERE CHB.FTCrdCode = @tCrdCode ' + CHAR(10)
SET @tSql += '    ) AS CrdHistory ' + CHAR(10)
                   


IF (ISNULL(@ptTxnDocDate,'') <> '')
	BEGIN
		SET @tSql += 'WHERE CONVERT(VARCHAR(10), FDTxnDocDate, 121) = @tTxnDocDate ' + CHAR(10)
	END
ELSE 
	BEGIN
		SET @tSql += 'WHERE CONVERT(VARCHAR(10), FDTxnDocDate, 121) >= CONVERT(VARCHAR(10),DATEADD(DAY,-' + CAST(@pnDayPrv AS VARCHAR(10)) + ',GETDATE()),121) ' + CHAR(10)
	END

IF (@ptSort = '0')
	BEGIN
		SET @tSql += 'ORDER BY FDTxnDocDate ASC ' + CHAR(10)
	END
ELSE 
	BEGIN
		SET @tSql += 'ORDER BY FDTxnDocDate DESC ' + CHAR(10)
	END
    EXECUTE sp_executesql @tSql
    Print  @tSql
END

GO


/*=========================================== END STORE ===================================================*/




/****** Object:  View [dbo].[VCN_VatActive]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_VatActive]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_VatActive]
AS
SELECT V.* FROM (
SELECT 
ROW_NUMBER() OVER(PARTITION BY FTVatCode ORDER BY  FTVatCode ASC ,FDVatStart DESC) AS FNRowPart,
FTVatCode,
FCVatRate,
FDVatStart
FROM TCNMVatRate ) V
WHERE V.FNRowPart = 1



' 
GO


/****** Object:  View [dbo].[VCN_ProductBar]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductBar]'))
EXEC dbo.sp_executesql @statement = N'/*SELECT * FROM TCNMPdtBar*/
CREATE VIEW [dbo].[VCN_ProductBar]
AS
SELECT        PDT_BAR.FTPdtCode, PDT_L.FTPdtName, IMO.FTImgObj, PDT_BAR.FTPunCode, PDT_BAR.FTBarCode, PDT.FTVatCode, VAT.FCVatRate, PDT_L.FNLngID AS FNLngPdtBar, PDT_SPL.FTSplCode, PDT_BAR.FTPlcCode, 
                         PLC.FTPlcName, PDT_SPL.FTUsrCode
FROM            dbo.TCNMPdtBar AS PDT_BAR LEFT OUTER JOIN
                         dbo.tcnmpdt AS PDT ON PDT_BAR.FTPdtCode = PDT.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdt_L AS PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode LEFT OUTER JOIN
                         dbo.VCN_VatActive AS VAT ON PDT.FTVatCode = VAT.FTVatCode LEFT OUTER JOIN
                         dbo.TCNMImgPdt AS IMO ON PDT.FTPdtCode = IMO.FTImgRefID AND IMO.FTImgTable = ''TCNMPdt'' AND IMO.FNImgSeq = 1 LEFT OUTER JOIN
                         dbo.TCNMPdtLoc_L AS PLC ON PDT_BAR.FTPlcCode = PLC.FTPlcCode LEFT OUTER JOIN
                         dbo.TCNMPdtSpl AS PDT_SPL ON PDT_BAR.FTPdtCode = PDT_SPL.FTPdtCode AND PDT_BAR.FTBarCode = PDT_SPL.FTBarCode
' 
GO


/****** Object:  View [dbo].[VCN_ProductsHQ]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductsHQ]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_ProductsHQ]
AS
SELECT        PDT.FTPdtCode, PDT_L.FTPdtName, PDT.FTPdtStaVatBuy, PDT.FTPdtStaVat, PDT.FTVatCode, ISNULL(VAT.FCVatRate, 0) AS FCVatRate, PDT_IMG.FTImgObj, PDT.FTPdtStaActive, PDT.FTPdtSetOrSN, PDT.FTPgpChain, 
                         PDT.FTPtyCode, PDT_AGE.FCPdtCookTime, PDT_AGE.FCPdtCookHeat, ISNULL(PDT_L.FNLngID, 0) AS FNLngIDPdt, ISNULL(PDT_UNL.FNLngID, 0) AS FNLngIDUnit, PDT_PS.FTPunCode, PDT_UNL.FTPunName, 
                         PDT_PS.FCPdtUnitFact, PSB.FTBchCode AS FTPdtSpcBch, PSB.FTMerCode, PSB.FTShpCode, PSB.FTMgpCode, SUBPDT_SPL.FTSplCode, SUBPDT_SPL.FTUsrCode AS FTBuyer, VBAR.FTBarCode, PDT.FTPdtStaAlwDis
FROM            dbo.TCNMPdt AS PDT LEFT OUTER JOIN
                         dbo.TCNMPdtSpcBch AS PSB ON PSB.FTPdtCode = PDT.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdt_L AS PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtPackSize AS PDT_PS ON PDT.FTPdtCode = PDT_PS.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtUnit_L AS PDT_UNL ON PDT_PS.FTPunCode = PDT_UNL.FTPunCode LEFT OUTER JOIN
                         dbo.TCNMPdtAge AS PDT_AGE ON PDT.FTPdtCode = PDT_AGE.FTPdtCode LEFT OUTER JOIN
                             (SELECT        PDT_SPL.FTPdtCode, PDT_SPL.FTSplCode, PDT_BAR.FTPunCode, PDT_SPL.FTUsrCode
                               FROM            dbo.TCNMPdtSpl AS PDT_SPL INNER JOIN
                                                         dbo.TCNMPdtBar AS PDT_BAR ON PDT_SPL.FTBarCode = PDT_BAR.FTBarCode AND PDT_BAR.FTPdtCode = PDT_SPL.FTPdtCode) AS SUBPDT_SPL ON PDT_PS.FTPdtCode = SUBPDT_SPL.FTPdtCode AND 
                         PDT_PS.FTPunCode = SUBPDT_SPL.FTPunCode LEFT OUTER JOIN
                             (SELECT        FTImgRefID, FTImgObj
                               FROM            dbo.TCNMImgPdt
                               WHERE        (FTImgTable = ''TCNMPdt'') AND (FNImgSeq = 1)) AS PDT_IMG ON PDT.FTPdtCode = PDT_IMG.FTImgRefID LEFT OUTER JOIN
                         dbo.VCN_VatActive AS VAT ON PDT.FTVatCode = VAT.FTVatCode LEFT OUTER JOIN
                         dbo.VCN_ProductBar AS VBAR ON PDT.FTPdtCode = VBAR.FTPdtCode AND PDT_UNL.FTPunCode = VBAR.FTPunCode
' 
GO
/****** Object:  View [dbo].[VCN_ProductsBranch]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductsBranch]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_ProductsBranch]
AS
SELECT        PDT.FTPdtCode, PDT_L.FTPdtName, PDT.FTPdtStaVatBuy, PDT.FTPdtStaVat, PDT.FTVatCode, ISNULL(VAT.FCVatRate, 0) AS FCVatRate, PDT_IMG.FTImgObj, PDT.FTPdtStaActive, PDT.FTPdtSetOrSN, PDT.FTPgpChain, 
                         PDT.FTPtyCode, PDT_AGE.FCPdtCookTime, PDT_AGE.FCPdtCookHeat, PDT_L.FNLngID AS FNLngIDPdt, PDT_UNL.FNLngID AS FNLngIDUnit, PDT_PS.FTPunCode, PDT_UNL.FTPunName, PDT_PS.FCPdtUnitFact, 
                         PSB.FTBchCode AS FTPdtSpcBch, PSB.FTMerCode, PSB.FTShpCode, PSB.FTMgpCode, VBAR.FTSplCode, VBAR.FTUsrCode AS FTBuyer, VBAR.FTBarCode, PDT.FTPdtStaAlwDis, PSB.FTAgnCode
FROM            dbo.TCNMPdt AS PDT LEFT OUTER JOIN
                         dbo.TCNMPdtSpcBch AS PSB ON PSB.FTPdtCode = PDT.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdt_L AS PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtPackSize AS PDT_PS ON PDT.FTPdtCode = PDT_PS.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtUnit_L AS PDT_UNL ON PDT_PS.FTPunCode = PDT_UNL.FTPunCode LEFT OUTER JOIN
                         dbo.TCNMPdtAge AS PDT_AGE ON PDT.FTPdtCode = PDT_AGE.FTPdtCode LEFT OUTER JOIN
                             (SELECT        FTImgRefID, FTImgObj
                               FROM            dbo.TCNMImgPdt
                               WHERE        (FTImgTable = ''TCNMPdt'') AND (FNImgSeq = 1)) AS PDT_IMG ON PDT.FTPdtCode = PDT_IMG.FTImgRefID LEFT OUTER JOIN
                         dbo.VCN_VatActive AS VAT ON PDT.FTVatCode = VAT.FTVatCode LEFT OUTER JOIN
                         dbo.VCN_ProductBar AS VBAR ON PDT.FTPdtCode = VBAR.FTPdtCode AND PDT_UNL.FTPunCode = VBAR.FTPunCode
' 
GO
/****** Object:  View [dbo].[VCN_ProductShop]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductShop]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_ProductShop] AS 
SELECT        PDT.FTPdtCode, PDT_L.FTPdtName, PDT.FTPdtStaVatBuy, PDT.FTPdtStaVat, PDT.FTVatCode, ISNULL(VAT.FCVatRate, 0) AS FCVatRate, PDT_IMG.FTImgObj, PDT.FTPdtStaActive, PDT.FTPdtSetOrSN, PDT.FTPgpChain, 
                         PDT.FTPtyCode, PDT_AGE.FCPdtCookTime, PDT_AGE.FCPdtCookHeat, PDT_L.FNLngID AS FNLngIDPdt, PDT_UNL.FNLngID AS FNLngIDUnit, PDT_PS.FTPunCode, PDT_UNL.FTPunName, PDT_PS.FCPdtUnitFact, 
                         PSB.FTBchCode AS FTPdtSpcBch, PSB.FTMerCode, PSB.FTShpCode, PSB.FTMgpCode, SUBPDT_SPL.FTSplCode, SUBPDT_SPL.FTUsrCode AS FTBuyer, VBAR.FTBarCode ,PDT.FTPdtStaAlwDis
FROM            dbo.TCNMPdt AS PDT LEFT OUTER JOIN
                         dbo.TCNMPdtSpcBch AS PSB ON PSB.FTPdtCode = PDT.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdt_L AS PDT_L ON PDT.FTPdtCode = PDT_L.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtPackSize AS PDT_PS ON PDT.FTPdtCode = PDT_PS.FTPdtCode LEFT OUTER JOIN
                         dbo.TCNMPdtUnit_L AS PDT_UNL ON PDT_PS.FTPunCode = PDT_UNL.FTPunCode LEFT OUTER JOIN
                         dbo.VCN_ProductBar AS VBAR ON PDT.FTPdtCode = VBAR.FTPdtCode AND PDT_UNL.FTPunCode = VBAR.FTPunCode LEFT OUTER JOIN
                         dbo.TCNMPdtAge AS PDT_AGE ON PDT.FTPdtCode = PDT_AGE.FTPdtCode LEFT OUTER JOIN
                             (SELECT        PDT_SPL.FTPdtCode, PDT_SPL.FTSplCode, PDT_BAR.FTPunCode, PDT_SPL.FTUsrCode
                               FROM            dbo.TCNMPdtSpl AS PDT_SPL INNER JOIN
                                                         dbo.TCNMPdtBar AS PDT_BAR ON PDT_SPL.FTBarCode = PDT_BAR.FTBarCode AND PDT_BAR.FTPdtCode = PDT_SPL.FTPdtCode) AS SUBPDT_SPL ON PDT_PS.FTPdtCode = SUBPDT_SPL.FTPdtCode AND 
                         PDT_PS.FTPunCode = SUBPDT_SPL.FTPunCode LEFT OUTER JOIN
                             (SELECT        FTImgRefID, FTImgObj
                               FROM            dbo.TCNMImgPdt
                               WHERE        (FTImgTable = ''TCNMPdt'') AND (FNImgSeq = 1)) AS PDT_IMG ON PDT.FTPdtCode = PDT_IMG.FTImgRefID LEFT OUTER JOIN
                         dbo.VCN_VatActive AS VAT ON PDT.FTVatCode = VAT.FTVatCode
WHERE        (ISNULL(PSB.FTMerCode, '''') <> '''') OR
                         (ISNULL(PSB.FTShpCode, '''') <> '''')' 
GO


/****** Object:  View [dbo].[VCN_ProductCost]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductCost]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_ProductCost]
AS
SELECT 
PDT.FTPdtCode,
PDT.FCPdtCostStd AS FCPdtCostStd,
CAVG.FCPdtCostIn AS FCPdtCostAVGIN,
CAVG.FCPdtCostEx AS FCPdtCostAVGEX,
CLST.FCSplLastPrice AS FCPdtCostLast,
CFIFO.FCPdtCostIn AS FCPdtCostFIFOIN,
CFIFO.FCPdtCostEx AS FCPdtCostFIFOEX

FROM TCNMPdt PDT
LEFT JOIN TCNMPdtCostAvg CAVG ON PDT.FTPdtCode = CAVG.FTPdtCode
LEFT JOIN (
SELECT  C.* FROM (
SELECT  ROW_NUMBER() OVER(PARTITION BY FTPdtCode ORDER BY FTPdtCode  DESC , FDSplLastDate DESC) AS FNRowPart,
        FTPdtCode,
		FCSplLastPrice
FROM TCNMPdtSpl ) C
WHERE C.FNRowPart = 1
) CLST  ON PDT.FTPdtCode = CLST.FTPdtCode
LEFT JOIN TCNMPdtCostFIFO CFIFO ON PDT.FTPdtCode = CFIFO.FTPdtCode



' 
GO
/****** Object:  View [dbo].[VCN_ProductsSaleByBill]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_ProductsSaleByBill]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_ProductsSaleByBill]
AS
SELECT P.*
FROM
(
    SELECT DISTINCT 
           T.[FTXshDocNo], 
           STUFF(
    (
        SELECT DISTINCT 
               '', '' + ISNULL(T1.FTXsdPdtName, ''N/A'') AS FTXsdPdtName
        FROM TPSTSalDT T1 WITH(NOLOCK)
        WHERE T.[FTXshDocNo] = T1.[FTXshDocNo]
              AND T1.FTXsdStaPdt <> ''4'' FOR XML PATH(''''), TYPE
    ).value(''.'', ''NVARCHAR(MAX)''), 1, 2, '''') FTPdtName
    FROM TPSTSalDT T WITH(NOLOCK)

    UNION ALL

    SELECT DISTINCT 
           T.[FTXshDocNo], 
           STUFF(
    (
        SELECT DISTINCT 
               '', '' + ISNULL(T1.FTXsdPdtName, ''N/A'') AS FTXsdPdtName
        FROM TVDTSalDT T1 WITH(NOLOCK)
        WHERE T.[FTXshDocNo] = T1.[FTXshDocNo]
              AND T1.FTXsdStaPdt <> ''4'' FOR XML PATH(''''), TYPE
    ).value(''.'', ''NVARCHAR(MAX)''), 1, 2, '''') FTPdtCode
    FROM TVDTSalDT T WITH(NOLOCK)
) P;
' 
GO
/****** Object:  View [dbo].[VCN_TimePeriod]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_TimePeriod]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_TimePeriod]
AS
SELECT        ''06:00'' AS FTTpdStart, ''06:59'' AS FTTpdStop
UNION ALL
SELECT        ''07:00'' AS FTTpdStart, ''07:59'' AS FTTpdStop
UNION ALL
SELECT        ''08:00'' AS FTTpdStart, ''08:59'' AS FTTpdStop
UNION ALL
SELECT        ''09:00'' AS FTTpdStart, ''09:59'' AS FTTpdStop
UNION ALL
SELECT        ''10:00'' AS FTTpdStart, ''10:59'' AS FTTpdStop
UNION ALL
SELECT        ''11:00'' AS FTTpdStart, ''11:59'' AS FTTpdStop
UNION ALL
SELECT        ''12:00'' AS FTTpdStart, ''12:59'' AS FTTpdStop
UNION ALL
SELECT        ''13:00'' AS FTTpdStart, ''13:59'' AS FTTpdStop
UNION ALL
SELECT        ''14:00'' AS FTTpdStart, ''14:59'' AS FTTpdStop
UNION ALL
SELECT        ''15:00'' AS FTTpdStart, ''15:59'' AS FTTpdStop
UNION ALL
SELECT        ''16:00'' AS FTTpdStart, ''16:59'' AS FTTpdStop
UNION ALL
SELECT        ''17:00'' AS FTTpdStart, ''17:59'' AS FTTpdStop
UNION ALL
SELECT        ''18:00'' AS FTTpdStart, ''18:59'' AS FTTpdStop
UNION ALL
SELECT        ''19:00'' AS FTTpdStart, ''19:59'' AS FTTpdStop
UNION ALL
SELECT        ''20:00'' AS FTTpdStart, ''20:59'' AS FTTpdStop
UNION ALL
SELECT        ''21:00'' AS FTTpdStart, ''21:59'' AS FTTpdStop
UNION ALL
SELECT        ''22:00'' AS FTTpdStart, ''22:59'' AS FTTpdStop
UNION ALL
SELECT        ''23:00'' AS FTTpdStart, ''23:59'' AS FTTpdStop
UNION ALL
SELECT        ''00:00'' AS FTTpdStart, ''00:59'' AS FTTpdStop




' 
GO
/****** Object:  View [dbo].[VFN_DebitCardByCst]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VFN_DebitCardByCst]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VFN_DebitCardByCst] AS
SELECT CRD.FTCrdCode,CRD.FTCrdStaActive,MAN.FTCrdRefCode FROM TFNMCard CRD INNER JOIN TFNMCardMan MAN 
ON MAN.FTCrdCode=CRD.FTCrdCode AND MAN.FTCrdTable=''TCNMCst'' AND CRD.FTCrdStaActive =''1''
' 
GO
/****** Object:  View [dbo].[VPS_CouponActive]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VPS_CouponActive]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VPS_CouponActive] AS 
--HD
SELECT HD.*
FROM TFNTCouponHD HD  WITH (NOLOCK) 
LEFT JOIN  TFNTCouponDT DT  WITH (NOLOCK) ON  HD.FTBchCode=DT.FTBchCode AND HD.FTCphDocNo =DT.FTCphDocNo  
LEFT JOIN TFNTCouponHDBch BCH  WITH (NOLOCK) ON HD.FTBchCode=BCH.FTBchCode AND HD.FTCphDocNo =BCH.FTCphDocNo  --กรณีกำหนด สาขา
LEFT JOIN TFNTCouponHDCstPri PPL  WITH (NOLOCK) ON HD.FTBchCode=PPL.FTBchCode AND HD.FTCphDocNo =PPL.FTCphDocNo  --กรณีกลุ่มราคา
LEFT JOIN TFNTCouponHDPdt PDT  WITH (NOLOCK) ON   PDT.FTBchCode=PDT.FTBchCode AND HD.FTCphDocNo =PDT.FTCphDocNo 

--drop view VPS_ReedeemActive
--=================================
--SELECT * FROM VPS_ReedeemActive
' 
GO
/****** Object:  View [dbo].[VPS_RedeemActive]    Script Date: 5/8/2563 15:27:13 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VPS_RedeemActive]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VPS_RedeemActive] AS 
--HD
SELECT DISTINCT RHD.FTBchCode,RHD.FTRdhDocNo,RHD.FTRdhDocType AS FTTmpDocType,RHD.FTRdhCalType AS FTTmpCalType,RHD.FDRdhDStart AS FDTmpDStart  ,RHD.FDRdhDStop AS FDTmpDStop
,RHD.FDRdhTStart AS FDTmpTStart,RHD.FDRdhTStop AS FDTmpTStop
,RHD.FNRdhLimitQty AS FTTmpStaOnTopPmt,RHD.FTRdhStaOntopPmt AS FNTmpLimitPerBill
--DT
,RDT.FTRddGrpName AS FTTmpGrpName,RDT.FTPdtCode AS FTTmpPdtCode,RDT.FTPunCode AS FTTmpPunCode,RDT.FTRddStaType AS  FTTmpPdtStaType
--CD
,RCD.FTRdcRefCode AS FTTmpRedeemCode,RCD.FCRdcUsePoint AS FCTmpUsePoint,RCD.FCRdcUseMny AS FCTmpUseMny,RCD.FCRdcMinTotBill AS FCTmpMinTotBill
--Spc. BCH
,BCH.FTRdhBchTo AS FTTmpBchTo,BCH.FTRdhStaType AS FTTmpBchStaType
--Spc. PPL
,PPL.FTPplCode AS FTTmpPplCode,PPL.FTRdhStaType AS FTTmpPplStaType
FROM TARTRedeemHD RHD  WITH (NOLOCK) 
INNER JOIN TARTRedeemCD RCD  WITH (NOLOCK) ON   RHD.FTBchCode=RCD.FTBchCode AND RHD.FTRdhDocNo =RCD.FTRdhDocNo 
LEFT JOIN  TARTRedeemDT RDT  WITH (NOLOCK) ON  RHD.FTBchCode=RDT.FTBchCode AND RHD.FTRdhDocNo =RDT.FTRdhDocNo  AND RCD.FTRddGrpName=RDT.FTRddGrpName 
LEFT JOIN TARTRedeemHDBch BCH  WITH (NOLOCK) ON RHD.FTBchCode=BCH.FTBchCode AND RHD.FTRdhDocNo =BCH.FTRdhDocNo  --กรณีกำหนด สาขา
LEFT JOIN TARTRedeemHDCstPri PPL  WITH (NOLOCK) ON RHD.FTBchCode=PPL.FTBchCode AND RHD.FTRdhDocNo =PPL.FTRdhDocNo ; --กรณีกลุ่มราคา

--drop view VPS_ReedeemActive
--=================================
--SELECT * FROM VPS_ReedeemActive
' 
GO


/****** Object:  View [dbo].[VCN_Price4PdtActive]    Script Date: 5/8/2563 21:49:03 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.views WHERE object_id = OBJECT_ID(N'[dbo].[VCN_Price4PdtActive]'))
EXEC dbo.sp_executesql @statement = N'CREATE VIEW [dbo].[VCN_Price4PdtActive] AS 
SELECT
	P.*
FROM
	(
		SELECT
			ROW_NUMBER () OVER (
				PARTITION BY FTPdtCode,
				FTPunCode
			ORDER BY
				FTPdtCode ASC,
				FDPghDStart DESC
			) AS FNRowPart,
			FTPdtCode,
			FTPunCode,
			CONVERT (
				VARCHAR (16),
				FDPghDStart,
				121
			) AS FDPghDStart,
			0 AS FCPgdPriceNet,
			FCPgdPriceRet,
			0 AS FCPgdPriceWhs
		FROM
			TCNTPdtPrice4PDT
		WHERE
			FDPghDStart <= CONVERT (VARCHAR(10), GETDATE(), 121)
	) P
WHERE
	FNRowPart = 1' 
GO
IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_DiagramPane1' , N'SCHEMA',N'dbo', N'VIEW',N'VCN_Price4PdtActive', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[13] 4[14] 2[42] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VCN_Price4PdtActive'
GO
IF NOT EXISTS (SELECT * FROM sys.fn_listextendedproperty(N'MS_DiagramPaneCount' , N'SCHEMA',N'dbo', N'VIEW',N'VCN_Price4PdtActive', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=1 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'VCN_Price4PdtActive'
GO


/****** Object:  Table [dbo].[TLKTLogHis]    Script Date: 13/8/2563 12:20:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TLKTLogHis]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[TLKTLogHis](
	[FNLogID] [bigint] NOT NULL,
	[FDLogCreate] [datetime] NULL,
	[FTLogType] [varchar](1) NULL,
	[FTLogTask] [varchar](100) NULL,
	[FTLogTaskRef] [varchar](100) NULL,
	[FTLogStaPrc] [varchar](1) NULL,
	[FNLogQtyAll] [int] NULL,
	[FNLogQtyDone] [int] NULL,
	[FTLogStaSend] [varchar](1) NULL,
	[FDCreateOn] [datetime] NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
 CONSTRAINT [PK_TLKTLogHis] PRIMARY KEY CLUSTERED 
(
	[FNLogID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO

--####################################   END Intitail 05/08/2020 By Nale   ##################################################---

--############################################## Do Some Thing ##########################################--




UPDATE TSysShwDT SET FTShwFedStaUsed = 0 WHERE FTShwFedShw IN('FCPgdPriceNet','FCPgdPriceWhs')


--####################################  เพิ่ม ฟังชั่นหน้า แดชบอร์ด  10/08/2020 By Doz   ##################################################---

DELETE FROM TPSMFuncHD WHERE FTGhdCode = '053' 
INSERT INTO TPSMFuncHD
(FTGhdCode, FTGhdApp, FTKbdScreen, FTKbdGrpName, FNGhdMaxPerPage, FTGhdLayOut, FNGhdMaxLayOutX, FNGhdMaxLayOutY, FTGhdStaAlwChg, FDLastUpdOn, FTLastUpdBy, FDCreateOn, FTCreateBy)
VALUES
('053', 'SB', 'DASHBOARD', 'BAR', '0', 'ML', '0', '0', '0', GETDATE(),'', GETDATE(),'');


DELETE FROM TPSMFuncDT WHERE FTGhdCode = '053'
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB01','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB02','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB03','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB04','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB05','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB06','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB07','1','1','1','0','0','','1','1','1');
INSERT INTO TPSMFuncDT
(FTGhdCode,FTSysCode,FNGdtPage,FNGdtDefSeq,FNGdtUsrSeq,FNGdtBtnSizeX,FNGdtBtnSizeY,FTGdtCallByName,FTGdtStaUse,FNGdtFuncLevel,FTGdtSysUse)
VALUES
('053','DSB08','1','1','1','0','0','','1','1','1');


DELETE FROM TPSMFuncDT_L WHERE FTGhdCode = '053'
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB01','1','จำนวนบิลขาย และ ยอดขายรวม');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB01','2',' number of sales bills and total sales' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB02','1','ยอดขายตามการชำระเงิน');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB02','2',' sales according to payment' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB03','1','10 รายการสินค้าใหม่');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB03','2',' 10 new products' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB04','1','ยอดขายตามกลุ่มสินค้า');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB04','2',' sales by product group' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB05','1','ยอดขายตามประเภทสินค้า');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB05','2','sales by product type' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB06','1','10 อันดับสินค้าขายดีตามจำนวน');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB06','2','top 10 bestsellers by number' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB07','1','ข้อมูลการขาย ตามสาขา ตามจุดขาย');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB07','2','sales information by branch' );
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB08','1','10 อันดับสินค้าขายดีตามมูลค่า');
INSERT INTO TPSMFuncDT_L
(FTGhdCode,FTSysCode,FNLngID,FTGdtName)
VALUES
('053','DSB08','2','top 10 bestsellers by value' );


--############################################## END Do Some Thing ##########################################--

/****** Object:  StoredProcedure [dbo].[SP_CNtAUTAutoDocNo]    Script Date: 13/8/2563 17:50:29 ******/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Kitpipat Kaewkieo
-- Create date: 28/04/2020
-- Description:	สร้างรหัสเอกสารอัตโนมัติ
--Version 1 / 28/04/2020
--Version 2 / 13/05/2020 รองรับ Master
-- =============================================
ALTER PROCEDURE [dbo].[SP_CNtAUTAutoDocNo]
	-- Add the parameters for the stored procedure here
	@ptTblName VARCHAR(30),
	@ptDocType VARCHAR(10),
	@ptBchCode VARCHAR(5),
	@ptShpCode VARCHAR(5),
	@ptPosCode VARCHAR(5),
	@pdDocDate DATETIME,
	@ptResult VARCHAR(30) OUTPUT
AS
BEGIN TRY
     --Def Setting
	 DECLARE @tDefChar VARCHAR(5)
	 DECLARE @tDefBch VARCHAR(1)
	 DECLARE @tDefPosShp VARCHAR(1)
	 DECLARE @tDefYear VARCHAR(1)
	 DECLARE @tDefMonth VARCHAR(1)
	 DECLARE @tDefDay VARCHAR(1)
	 DECLARE @tDefSep VARCHAR(1)
	 DECLARE @nMinRunning VARCHAR(1)
	 DECLARE @tDefNum VARCHAR(50)
	 
	 DECLARE @nDefStaReset VARCHAR(1)
	 
	 
	 --User Setting
	 DECLARE @tUsrFmtAll VARCHAR(100)
	 DECLARE @tUsrStaReset VARCHAR(100)
	 DECLARE @tUsrFmtReset VARCHAR(100)
	 DECLARE @nUsrNumSize INT
	 DECLARE @tSatUsrNum VARCHAR(20)
	 DECLARE @tUsrFmtPst VARCHAR(100)
	 DECLARE @tUsrChar VARCHAR(50)
	 DECLARE @tUsrStaAlwSep VARCHAR(1)
	 
	 --ตัวแปรกลาง
	 DECLARE @tFedCode VARCHAR(100) 
	 DECLARE @nStaResBch INT
	 DECLARE @nStaResDay INT
	 DECLARE @nStaResMonth INT
	 DECLARE @nStaResYear INT

	 DECLARE @tSQLMaxDoc NVARCHAR(MAX)
	         SET @tSQLMaxDoc = ''

	 DECLARE @tParamMaxDoc NVARCHAR(MAX)
	         SET @tParamMaxDoc = ''
	 
	 DECLARE @tFilterBch NVARCHAR(200)
	         SET @tFilterBch = ''

	 DECLARE @tMaxBchCode VARCHAR(20)
	 DECLARE @tLastNo VARCHAR(20)
	 DECLARE @tLastDay VARCHAR(10)
	 DECLARE @tLastMonth VARCHAR(10)
	 DECLARE @tLastYear VARCHAR(10)
	 DECLARE @tRunningNo VARCHAR(10)
	 DECLARE @tAutoFrm VARCHAR(100)
	 DECLARE @tNextDocNo VARCHAR(100)
	 DECLARE @tStartNum VARCHAR(50)
	 DECLARE @nRunningSize INT
	 DECLARE @tFTBchCode VARCHAR(50) --13/05/2020 

	 --การหาวัน-เดือน-ปีที่ต้องการ Gen Code
	 DECLARE @tSaleYear VARCHAR(10)
	 DECLARE @tSaleMonth VARCHAR(10)
	 DECLARE @tSaleDate VARCHAR(10)
	 SET @tSaleYear = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),1,4)
	 SET @tSaleMonth = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),6,2)
	 SET @tSaleDate = SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),9,2)
	 
     --Get Config
	 SELECT   @tDefChar=ISNULL(AUT.FTSatDefChar,'')
	         ,@tDefBch = ISNULL(AUT.FTSatDefBch,0)
			 ,@tDefPosShp = ISNULL(AUT.FTSatDefPosShp,0)
			 ,@tDefYear = ISNULL(AUT.FTSatDefYear,0)
			 ,@tDefMonth = ISNULL(AUT.FTSatDefMonth,0)
			 ,@tDefDay = ISNULL(AUT.FTSatDefDay,0)
			 ,@tDefSep = ISNULL(AUT.FTSatDefSep,0)
			 ,@nDefStaReset = ISNULL(FTSatStaReset,0)
			 ,@tFedCode = AUT.FTSatFedCode
			 ,@nMinRunning = ISNULL(AUT.FNSatMinRunning,0)
			 ,@tDefNum = ISNULL(FTSatDefNum,1)
			 ,@tUsrFmtAll = ISNULL(TXN.FTAhmFmtAll,'')
			 ,@tUsrStaReset = ISNULL(TXN.FTAhmStaReset,0)
			 ,@tUsrFmtReset = ISNULL(TXN.FTAhmFmtReset,'')
			 ,@nUsrNumSize = ISNULL(TXN.FNAhmNumSize,5)
			 ,@tSatUsrNum = TXN.FTSatUsrNum
			 ,@tUsrFmtPst = TXN.FTAhmFmtPst
			 ,@tUsrChar = TXN.FTAhmFmtChar
			 ,@tUsrStaAlwSep = ISNULL(TXN.FTSatStaAlwSep,0)

	 FROM    TCNTAuto AUT
	 LEFT    JOIN TCNTAutoHisTxn TXN ON AUT.FTSatTblName = TXN.FTAhmTblName 
								 AND AUT.FTSatFedCode = TXN.FTAhmFedCode
								 AND AUT.FTSatStaDocType = TXN.FTSatStaDocType
	 WHERE   AUT.FTSatTblName = @ptTblName
	 AND     AUT.FTSatStaDocType = @ptDocType

	 ------------------------------------------------------------------------------------------------------------------------------------------
	 --หาเลข auto running ล่าสุด
	IF(@tUsrFmtAll <> '')
	   BEGIN
			SET @nUsrNumSize = @nUsrNumSize
	        IF(CHARINDEX('BCH', @tUsrFmtReset) <> 0)
			  BEGIN
			       SET @tFilterBch+= ' AND FTBchCode='''+@ptBchCode+''''
				   SET @tFTBchCode = 'FTBchCode' --13/05/2020
			  END
			ELSE
			  BEGIN
			       SET @tFilterBch+= ''
				   SET @tFTBchCode = '''''' --13/05/2020
			  END
	   END
	ELSE
	   BEGIN
		   SET @nUsrNumSize = LEN(@tDefNum)
	       IF(@nDefStaReset = 4)
		      BEGIN
			     SET @tFilterBch+= ' AND FTBchCode='''+@ptBchCode+''''
				 SET @tFTBchCode = 'FTBchCode' --13/05/2020
			  END
		   ELSE
		     BEGIN
			   SET @tFilterBch+= ''
			   SET @tFTBchCode = '''''' --13/05/2020
			 END
	   END

	SET @tSQLMaxDoc+= ' SELECT TOP 1 @tMaxBchCodeOUT = '+@tFTBchCode --13/05/2020
	SET @tSQLMaxDoc+= ' ,@tLastNoOUT = RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+')'
	SET @tSQLMaxDoc+= ' ,@tLastDayOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),9,2)'
	SET @tSQLMaxDoc+= ' ,@tLastMonthOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),6,2)'
	SET @tSQLMaxDoc+= ' ,@tLastYearOUT = SUBSTRING(CONVERT(VARCHAR(10),FDCreateOn,121),1,4)'
	SET @tSQLMaxDoc+= ' FROM '+@ptTblName
	SET @tSQLMaxDoc+= ' WHERE ISNULL(TRY_PARSE(RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+') AS int ),0) <> 0 '
	SET @tSQLMaxDoc += ' AND RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+') = '
	SET @tSQLMaxDoc += ' (SELECT MAX(RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+')) FROM '+@ptTblName
	SET @tSQLMaxDoc += ' WHERE 1=1 ' + @tFilterBch
	IF(@tFilterBch <> '')
	BEGIN
		SET @tSQLMaxDoc += @tFilterBch
	END

	SET @tSQLMaxDoc += ' AND ISNULL(TRY_PARSE(RIGHT('+@tFedCode+','+CAST(@nUsrNumSize AS VARCHAR(10))+') AS int ),0) <> 0 ) '
	SET @tSQLMaxDoc+= @tFilterBch
	--SET @tSQLMaxDoc+= ' ORDER BY ROW_NUMBER() OVER(ORDER BY FDCreateOn ASC) DESC '

	--PRINT(@tSQLMaxDoc);
	--return;

	SET @tParamMaxDoc+= N' @tMaxBchCodeOUT VARCHAR(20) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastNoOUT VARCHAR(20) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastDayOUT VARCHAR(10) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastMonthOUT VARCHAR(10) OUTPUT '
	SET @tParamMaxDoc+= N',@tLastYearOUT VARCHAR(10) OUTPUT '

	--PRINT(@tSQLMaxDoc);
	--return;

	EXECUTE sp_executesql @tSQLMaxDoc,
					        @tParamMaxDoc,
							@tMaxBchCodeOUT = @tMaxBchCode OUTPUT,
							@tLastNoOUT = @tLastNo OUTPUT,
							@tLastDayOUT = @tLastDay OUTPUT,
							@tLastMonthOUT = @tLastMonth OUTPUT,
							@tLastYearOUT = @tLastYear OUTPUT

	 ------------------------------------------------------------------------------------------------------------------------------------------

	 --ตรวจสอบว่ามีการกำหนดการตั้งค่าโดยผู้ใช้หรือไม่
	 IF(@tUsrFmtAll <> '')
	    BEGIN
		     --ตรวจสอบการ reset number
			 IF(@tUsrStaReset <> 0)
			    BEGIN

				    --มีการตั้งค่าให้ reset number
					SET @nStaResBch  = CHARINDEX('BCH', @tUsrFmtReset)
					SET @nStaResYear  = CHARINDEX('YYYY', @tUsrFmtReset)
					SET @nStaResMonth  = CHARINDEX('MM', @tUsrFmtReset)
					SET @nStaResDay  = CHARINDEX('DD', @tUsrFmtReset)

				END
		     ELSE
			    BEGIN
				   --ไม่มีการ reset number ใช้แบบ run ต่อเนื่อง
				    SET @nStaResBch  = 0
					SET @nStaResYear  = 0
					SET @nStaResMonth  = 0
					SET @nStaResDay  = 0

				END

			--จัด Format ตามที่ผู้ใช้ตั้งค่า
			DECLARE @nPosition INT
			DECLARE @nLen INT
			DECLARE @tFrmType varchar(8000)
			SET @tUsrFmtPst = @tUsrFmtPst + ','
			SET @nPosition = 0
			SET @nLen = 0
			SET @tAutoFrm = ''

			WHILE CHARINDEX(',', @tUsrFmtPst, @nPosition+1) > 0
				BEGIN
					SET @nLen = CHARINDEX(',', @tUsrFmtPst, @nPosition+1) - @nPosition
					SET @tFrmType = SUBSTRING(@tUsrFmtPst, @nPosition, @nLen)

					IF(@tFrmType = 'CHA')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @tUsrChar
						END
					ELSE IF(@tFrmType = 'BCH')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @ptBchCode
						END

					ELSE IF(@tFrmType = 'PSH')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + @ptShpCode+@ptPosCode
						END
					
					ELSE IF(@tFrmType = 'YYYY' OR @tFrmType = 'YY')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + CONVERT(VARCHAR(4),@pdDocDate,121)
						END

					ELSE IF(@tFrmType = 'MM')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),6,2)
						END

					ELSE IF(@tFrmType = 'DD')
						BEGIN
							SET @tAutoFrm = @tAutoFrm + SUBSTRING(CONVERT(VARCHAR(10),@pdDocDate,121),9,2)
						END
					
					SET @nPosition = CHARINDEX(',', @tUsrFmtPst, @nPosition+@nLen) + 1

			END

			IF(@tUsrStaAlwSep <> 0)
			   BEGIN
			       SET @tAutoFrm = @tAutoFrm + '-'
			   END
			--จบการจัด Format

			--Set Start Number
			SET @tStartNum = @tSatUsrNum
			--SET Running Size Number
			SET @nRunningSize = @nUsrNumSize
		END
	 ELSE
	    BEGIN
		   --ใช้ค่า Def จากระบบ
		   --ตรวจสอบการ reset รหัส
		   IF(@nDefStaReset = 1) BEGIN SET @nStaResYear = @nDefStaReset  END ELSE BEGIN SET @nStaResYear = '0'  END
		   IF(@nDefStaReset = 2) BEGIN SET @nStaResMonth = @nDefStaReset END ELSE BEGIN SET @nStaResMonth = '0' END
		   IF(@nDefStaReset = 3) BEGIN SET @nStaResDay = @nDefStaReset   END ELSE BEGIN SET @nStaResDay = '0'   END
		   IF(@nDefStaReset = 4) BEGIN SET @nStaResBch = @nDefStaReset   END ELSE BEGIN SET @nStaResBch = '0'   END

		   IF(@tLastNo <> '') BEGIN SET @tLastNo = @tLastNo END ELSE BEGIN SET @tLastNo = 0 END

		   SET @nRunningSize = LEN(@tDefNum)
		   --SET @tStartNum = CONCAT(REPLICATE('0',@nRunningSize-LEN(1)),1) 
		   SET @tStartNum = @tDefNum
		   SET @tAutoFrm = ''
		   IF(@tDefChar <> '')  BEGIN SET @tAutoFrm+= @tDefChar  END
		   IF(@tDefBch <> 0)    BEGIN SET @tAutoFrm+= @ptBchCode END
		   IF(@tDefPosShp <> 0) BEGIN SET @tAutoFrm+= @ptPosCode END
		   IF(@tDefYear <> 0)  
		      BEGIN 
			        IF(@tDefYear = 'YYYY')
					   BEGIN
			                SET @tSaleYear = @tSaleYear
							SET @tLastYear = @tLastYear
					   END
					ELSE
					   BEGIN
					       SET @tSaleYear = SUBSTRING(@tSaleYear,3,2)
						   SET @tLastYear = SUBSTRING(@tLastYear,3,2)
					   END     
			        SET @tAutoFrm+=  @tSaleYear 
			  END
			IF(@tDefMonth <> 0)  BEGIN SET @tAutoFrm+= @tSaleMonth END
			IF(@tDefDay <> 0)    BEGIN SET @tAutoFrm+= @tSaleDate  END
			IF(@tDefSep <> 0)    BEGIN SET @tAutoFrm+= '-'  END

		END
     
	 -----------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามสาขา 
	IF(@nStaResBch <> 0 )
		BEGIN
		    
			IF(@tMaxBchCode <> '')
				BEGIN 
					SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo 
				 
				END
			ELSE
				BEGIN
					SET @tRunningNo = @tStartNum
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามปี
	ELSE IF(@nStaResYear <> 0)
		BEGIN
		    --PRINT('Reset ตามปี')
			--PRINT('Last Year:'+@tLastYear+'tSaleYear:'+@tSaleYear)
		    IF(@tLastYear <> '')
			    BEGIN
			        SET @tLastYear = @tLastYear
				END
			ELSE
			    BEGIN
				    SET @tLastYear = '1900'
				END

		    IF(@tLastYear <> @tSaleYear)
			    BEGIN
				    SET @tRunningNo = @tStartNum
				    SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
			ELSE
			    BEGIN
				    SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามเดือน
	ELSE IF(@nStaResMonth <> 0)
	     BEGIN
		      IF(@tLastMonth <> '')
			     BEGIN
				       SET @tLastMonth = @tLastMonth
				 END
			  ELSE
			     BEGIN
				      SET @tLastMonth = '00'
				 END
			 IF(@tLastMonth <> @tSaleMonth)
			   BEGIN
			        SET @tRunningNo = @tStartNum
				    SET @tNextDocNo = @tAutoFrm+@tRunningNo
			   END
			 ELSE
			   BEGIN
			       SET @tRunningNo = @tLastNo + 1
				   SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
				   SET @tNextDocNo = @tAutoFrm+@tRunningNo
			   END
		 END
	------------------------------------------------------------------------------------------------------------------------------
	--ตรวจสอบการ reset เลขที่เอกสารตามวัน
	ELSE IF(@nStaResDay <> 0)
		BEGIN
			IF(@tLastDay <> '')
				BEGIN
					SET @tLastDay = @tLastDay
				END
			ELSE
				BEGIN
					SET @tLastDay = '00'
				END
			IF(@tLastDay <> @tSaleDate)
				BEGIN
					SET @tRunningNo = @tStartNum
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
			ELSE
				BEGIN
					SET @tRunningNo = @tLastNo + 1
					SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)
					SET @tNextDocNo = @tAutoFrm+@tRunningNo
				END
		END
	------------------------------------------------------------------------------------------------------------------------------
	--ใช้การ Run แบบต่อเนื่อง
	ELSE
	   BEGIN
		   IF(@tLastNo <> '')
			  BEGIN
			     SET @tRunningNo = @tLastNo + 1
			  END
			ELSE
			  BEGIN
			    SET @tRunningNo = @tStartNum
			  END

		   SET @tRunningNo = CONCAT(REPLICATE('0',@nRunningSize-LEN(@tRunningNo)),@tRunningNo)

		   SET @tNextDocNo = @tAutoFrm+@tRunningNo
	   END
	------------------------------------------------------------------------------------------------------------------------------

	--เลขที่เอกสารที่ได้
	--PRINT( @tRunningNo )
--return
    SELECT @tNextDocNo AS FTXxhDocNo

END TRY
BEGIN CATCH
     return -1
END CATCH

GO




/****** Object:  Table [dbo].[TCNTDocHDDisTmp]    Script Date: 18/8/2563 18:48:09 ******/
DROP TABLE IF EXISTS [dbo].[TCNTDocHDDisTmp]
GO
/****** Object:  Table [dbo].[TCNTDocDTTmp]    Script Date: 18/8/2563 18:48:10 ******/
DROP TABLE IF EXISTS [dbo].[TCNTDocDTTmp]
GO
/****** Object:  Table [dbo].[TCNTDocDTDisTmp]    Script Date: 18/8/2563 18:48:10 ******/
DROP TABLE IF EXISTS [dbo].[TCNTDocDTDisTmp]
GO
/****** Object:  Table [dbo].[TCNTDocDTDisTmp]    Script Date: 18/8/2563 18:48:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TCNTDocDTDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NOT NULL,
	[FNXtdSeqNo] [bigint] NOT NULL,
	[FTSessionID] [varchar](255) NOT NULL,
	[FDXtdDateIns] [datetime] NOT NULL,
	[FNXtdStaDis] [bigint] NULL,
	[FTXtdDisChgType] [varchar](10) NULL,
	[FCXtdNet] [numeric](18, 4) NULL,
	[FCXtdValue] [numeric](18, 4) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
 CONSTRAINT [PK_TCNTDocDTDisTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTXthDocNo] ASC,
	[FNXtdSeqNo] ASC,
	[FTSessionID] ASC,
	[FDXtdDateIns] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TCNTDocDTTmp]    Script Date: 18/8/2563 18:48:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TCNTDocDTTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NULL,
	[FNXtdSeqNo] [bigint] NULL,
	[FTXthDocKey] [varchar](20) NULL,
	[FTPdtCode] [varchar](20) NULL,
	[FTXtdPdtName] [varchar](255) NULL,
	[FTPunCode] [varchar](5) NULL,
	[FTPunName] [varchar](50) NULL,
	[FCXtdFactor] [numeric](18, 4) NULL,
	[FTXtdBarCode] [varchar](25) NULL,
	[FTXtdVatType] [varchar](1) NULL,
	[FTVatCode] [varchar](5) NULL,
	[FCXtdVatRate] [numeric](18, 4) NULL,
	[FCXtdQty] [numeric](18, 4) NULL,
	[FCXtdQtyAll] [numeric](18, 4) NULL,
	[FCXtdSetPrice] [numeric](18, 4) NULL,
	[FCXtdAmt] [numeric](18, 4) NULL,
	[FCXtdVat] [numeric](18, 4) NULL,
	[FCXtdVatable] [numeric](18, 4) NULL,
	[FCXtdNet] [numeric](18, 4) NULL,
	[FCXtdCostIn] [numeric](18, 4) NULL,
	[FCXtdCostEx] [numeric](18, 4) NULL,
	[FTXtdStaPrcStk] [varchar](1) NULL,
	[FNXtdPdtLevel] [bigint] NULL,
	[FTXtdPdtParent] [varchar](20) NULL,
	[FCXtdQtySet] [numeric](18, 4) NULL,
	[FTXtdPdtStaSet] [varchar](1) NULL,
	[FTXtdRmk] [varchar](200) NULL,
	[FTXtdBchRef] [varchar](5) NULL,
	[FTXtdDocNoRef] [varchar](20) NULL,
	[FCXtdPriceRet] [numeric](18, 4) NULL,
	[FCXtdPriceWhs] [numeric](18, 4) NULL,
	[FCXtdPriceNet] [numeric](18, 4) NULL,
	[FTXtdShpTo] [varchar](5) NULL,
	[FTXtdBchTo] [varchar](5) NULL,
	[FTSrnCode] [varchar](50) NULL,
	[FTXtdSaleType] [varchar](1) NULL,
	[FCXtdSalePrice] [numeric](18, 4) NULL,
	[FCXtdAmtB4DisChg] [numeric](18, 4) NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
	[FCXtdDis] [numeric](18, 4) NULL,
	[FCXtdChg] [numeric](18, 4) NULL,
	[FCXtdNetAfHD] [numeric](18, 4) NULL,
	[FCXtdWhtAmt] [numeric](18, 4) NULL,
	[FTXtdWhtCode] [varchar](5) NULL,
	[FCXtdWhtRate] [numeric](18, 4) NULL,
	[FCXtdQtyLef] [numeric](18, 4) NULL,
	[FCXtdQtyRfn] [numeric](18, 4) NULL,
	[FTXtdStaAlwDis] [varchar](1) NULL,
	[FTPdtName] [varchar](50) NULL,
	[FCPdtUnitFact] [numeric](18, 4) NULL,
	[FTPgpChain] [varchar](50) NULL,
	[FNAjdLayRow] [numeric](18, 2) NULL,
	[FNAjdLayCol] [numeric](18, 2) NULL,
	[FCAjdWahB4Adj] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC1] [numeric](18, 4) NULL,
	[FDAjdDateTimeC1] [datetime] NULL,
	[FCAjdUnitQtyC1] [numeric](18, 4) NULL,
	[FCAjdQtyAllC1] [numeric](18, 4) NULL,
	[FCAjdSaleB4AdjC2] [numeric](18, 4) NULL,
	[FDAjdDateTimeC2] [datetime] NULL,
	[FCAjdUnitQtyC2] [numeric](18, 4) NULL,
	[FCAjdQtyAllC2] [numeric](18, 4) NULL,
	[FCAjdUnitQty] [numeric](18, 4) NULL,
	[FDAjdDateTime] [datetime] NULL,
	[FCAjdQtyAll] [numeric](18, 4) NULL,
	[FCAjdQtyAllDiff] [numeric](18, 4) NULL,
	[FTAjdPlcCode] [varchar](5) NULL,
	[FTSessionID] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](20) NULL,
	[FTCreateBy] [varchar](20) NULL,
	[FNLayRowForTWXVD] [bigint] NULL,
	[FNLayColForTWXVD] [bigint] NULL,
	[FCLayColQtyMaxForTWXVD] [numeric](18, 4) NULL,
	[FCStkQty] [numeric](18, 4) NULL,
	[FCMaxTransferForTWXVD] [numeric](18, 4) NULL,
	[FCUserInPutTransferForTWXVD] [numeric](18, 4) NULL,
	[FTMerCodeForADJPL] [varchar](5) NULL,
	[FTShpCodeForADJPL] [varchar](5) NULL,
	[FTPzeCodeForADJPL] [varchar](5) NULL,
	[FTRthCodeForADJPL] [varchar](5) NULL,
	[FTSizNameForADJPL] [varchar](40) NULL,
	[FTBchCodeForADJPL] [varchar](5) NULL,
	[FNLayRowForADJSTKVD] [bigint] NULL,
	[FNLayColForADJSTKVD] [bigint] NULL,
	[FCLayColQtyMaxForADJSTKVD] [numeric](18, 4) NULL,
	[FCUserInPutForADJSTKVD] [numeric](18, 4) NULL,
	[FCDateTimeInputForADJSTKVD] [datetime] NULL,
	[FNCabSeqForTWXVD] [int] NULL,
	[FTCabNameForTWXVD] [varchar](255) NULL,
	[FTXthWhFrmForTWXVD] [varchar](5) NULL,
	[FTXthWhToForTWXVD] [varchar](5) NULL,
	[FTBddTypeForDeposit] [varchar](255) NULL,
	[FTBddRefNoForDeposit] [varchar](20) NULL,
	[FDBddRefDateForDeposit] [datetime] NULL,
	[FCBddRefAmtForDeposit] [numeric](18, 4) NULL,
	[FTBddRefBnkNameForDeposit] [varchar](255) NULL,
	[FTTmpStatus] [varchar](1) NULL,
	[FTTmpRemark] [varchar](max) NULL
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[TCNTDocHDDisTmp]    Script Date: 18/8/2563 18:48:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TCNTDocHDDisTmp](
	[FTBchCode] [varchar](5) NOT NULL,
	[FTXthDocNo] [varchar](20) NOT NULL,
	[FDXtdDateIns] [datetime] NOT NULL,
	[FTXtdDisChgTxt] [varchar](20) NULL,
	[FTXtdDisChgType] [varchar](10) NULL,
	[FCXtdTotalAfDisChg] [numeric](18, 4) NULL,
	[FCXtdTotalB4DisChg] [numeric](18, 4) NULL,
	[FCXtdDisChg] [numeric](18, 4) NULL,
	[FCXtdAmt] [numeric](18, 4) NULL,
	[FTSessionID] [varchar](255) NULL,
	[FDLastUpdOn] [datetime] NULL,
	[FDCreateOn] [datetime] NULL,
	[FTLastUpdBy] [varchar](255) NULL,
	[FTCreateBy] [varchar](255) NULL,
 CONSTRAINT [PK_TCNTDocHDDisTmp] PRIMARY KEY CLUSTERED 
(
	[FTBchCode] ASC,
	[FTXthDocNo] ASC,
	[FDXtdDateIns] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO




/****** Object:  Table [dbo].[TCNTMenuFavorite]    Script Date: 20/8/2563 11:07:11 ******/
DROP TABLE IF EXISTS [dbo].[TCNTMenuFavorite]
GO
/****** Object:  Table [dbo].[TCNTMenuFavorite]    Script Date: 20/8/2563 11:07:11 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[TCNTMenuFavorite](
	[FTMfvID] [bigint] IDENTITY(1,1) NOT NULL,
	[FTMnuCode] [varchar](20) NOT NULL,
	[FTMnuRoute] [varchar](250) NULL,
	[FTMnuImgPath] [varchar](250) NULL,
	[FTMfvOwner] [varchar](250) NULL,
	[FTMfvName] [varchar](250) NULL,
PRIMARY KEY CLUSTERED 
(
	[FTMfvID] ASC,
	[FTMnuCode] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO





TRUNCATE TABLE TSysMenuAlbAct;
TRUNCATE TABLE TSysMenuGrp;
TRUNCATE TABLE TSysMenuGrp_L;
TRUNCATE TABLE TSysMenuGrpModule;
TRUNCATE TABLE TSysMenuGrpModule_L;
TRUNCATE TABLE TSysMenuList;
TRUNCATE TABLE TSysMenuList_L;

INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ABI001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ABI002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ABI003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ABI004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AP0001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AP0002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AP0003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AP0004', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('APD001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARC001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARC002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARD001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARD002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARD003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARS001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARS002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AST001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AST002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AST003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('AST004', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC004', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC005', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC006', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC007', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC008', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FDC009', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FNT001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('FNT002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('PDM001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('PDM002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('PDM003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('RPT001', '1', '0', '0', '0', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('RPT002', '1', '0', '0', '0', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('RPT003', '1', '0', '0', '0', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('RPT004', '1', '0', '0', '0', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('RPT005', '1', '0', '0', '0', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCR001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCR002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCR003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCR004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCT001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCT002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SCT003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SET001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SET002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SKU001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SKU002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SKU003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SKU004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SLK001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD005', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD006', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD007', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD008', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD009', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPD010', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPS001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPS002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPS003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPS004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SPS005', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC005', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC006', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC007', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC008', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC009', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC010 ', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SRC011', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SSP001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SSP002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SSP003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ST001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('STO001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('STO002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('STO003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('STO004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SUR001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SUR002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SUR003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SUR004', '1', '0', '0', '0', '1', '1', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SUR005', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SVD001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS001', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS002', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS003', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS004', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS005', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('SYS006', '1', '1', '1', '1', '0', '0', '0', '0');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO001', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO002', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO003', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO005', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO006', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO007', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO008', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO009', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO010', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('TXO011', '1', '1', '1', '1', '1', '1', '1', '1');
INSERT INTO [TSysMenuAlbAct] ([FTMnuCode], [FTAutStaRead], [FTAutStaAdd], [FTAutStaEdit], [FTAutStaDelete], [FTAutStaCancel], [FTAutStaAppv], [FTAutStaPrint], [FTAutStaPrintMore]) VALUES ('ARS003', '1', '1', '1', '1', '0', '0', '0', '0');



INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('ABI', 'AB', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('AP', 'AP', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('APD', 'AP', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('ARC', 'AR', '3', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('ARD', 'AR', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('ARS', 'AR', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('AST', 'IC', '3', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('DOCAP', 'AP', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('DOCSKU', 'SKU', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('FDC', 'FN', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('FNT', 'FN', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('PDM', 'IC', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SCR', 'MAS', '11', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SCT', 'MAS', '8', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SKU', 'SKU', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SLK', 'MAS', '5', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SPD', 'MAS', '7', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SPS', 'MAS', '3', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SRC', 'MAS', '10', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SSP', 'MAS', '9', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('ST', 'AB', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('STO', 'MAS', '2', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SUR', 'MAS', '6', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SVD', 'MAS', '4', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('SYS', 'MAS', '1', '1');
INSERT INTO [TSysMenuGrp] ([FTGmnCode], [FTGmnModCode], [FNGmnShwSeq], [FTGmnStaUse]) VALUES ('TXO', 'IC', '2', '1');



INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ABI', '1', 'Interface KADS', 'AB');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ABI', '2', 'Interface KADS', 'AB');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('AP', '1', 'ผู้จำหน่าย', 'AP');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('AP', '2', 'Supplier', 'AP');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARC', '1', 'ตรวจสอบ', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARC', '2', 'Sale Check', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARD', '1', 'เอกสาร', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARD', '2', 'Document', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARS', '1', 'ขาย', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ARS', '2', 'Sale', 'AR');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('AST', '1', 'ใบตรวจนับ', 'IC');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('AST', '2', 'Adjust Stock', 'IC');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('DOCAP', '1', 'เอกสาร', 'AP');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('DOCAP', '2', 'Document ', 'AP');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('DOCSKU', '1', 'เอกสาร', 'SKU');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('DOCSKU', '2', 'Document', 'SKU');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('FDC', '1', 'เอกสาร', 'FN');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('FDC', '2', 'Document', 'FN');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('FNT', '1', 'ประเภทชำระ', 'FN');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('FNT', '2', 'Payment Type', 'FN');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('PDM', '1', 'คลังสินค้า', 'IC');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('PDM', '2', 'Product movement', 'IC');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SCT', '1', 'ข้อมูลลูกค้า', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SCT', '2', 'System Customer', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SKU', '1', 'สินค้า', 'SKU');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SKU', '2', 'Product', 'SKU');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SPD', '1', 'ข้อมูลสินค้า', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SPD', '2', 'System Product', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SPS', '1', 'ข้อมูลจุดขาย', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SPS', '2', 'System Pos', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SRC', '1', 'ข้อมูลการชำระ', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SRC', '2', 'System Recive', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SSP', '1', 'ข้อมูลผู้จำหน่าย', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SSP', '2', 'System Supplier', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ST', '1', 'ตั้งค่า', 'AB');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('ST', '2', 'Setting', 'AB');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('STO', '1', 'ข้อมูลสาขา', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('STO', '2', 'System Branch', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SUR', '1', 'ข้อมูลผู้ใช้', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SUR', '2', 'System User', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SYS', '1', 'ข้อมูลระบบ', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('SYS', '2', 'System Info', 'MAS');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('TXO', '1', 'เอกสาร', 'IC');
INSERT INTO [TSysMenuGrp_L] ([FTGmnCode], [FNLngID], [FTGmnName], [FTGmnSystem]) VALUES ('TXO', '2', 'Document', 'IC');


INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('AB', '9', '1', '/application/modules/common/assets/images/iconsmenu/adalink.png', ' ');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('AP', '5', '0', '/application/modules/common/assets/images/iconsmenu/ap.png', ' ');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('AR', '6', '1', '/application/modules/common/assets/images/iconsmenu/ar.png', '');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('FAV', '1', '1', '/application/modules/common/assets/images/iconsmenu/fav.png', '');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('FN', '7', '1', '/application/modules/common/assets/images/iconsmenu/fn.png', '');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('IC', '4', '1', '/application/modules/common/assets/images/iconsmenu/inventory.png', ' ');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('MAS', '2', '1', '/application/modules/common/assets/images/iconsmenu/master.png', '');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('RPT', '10', '1', '/application/modules/common/assets/images/iconsmenu/rpt.png', ' ');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('SET', '11', '1', '/application/modules/common/assets/images/iconsmenu/set.png', ' ');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('SKU', '3', '1', '/application/modules/common/assets/images/iconsmenu/sku.png', '');
INSERT INTO [TSysMenuGrpModule] ([FTGmnModCode], [FNGmnModShwSeq], [FTGmnModStaUse], [FTGmmModPathIcon], [FTGmmModColorBtn]) VALUES ('TK', '8', '0', '/application/modules/common/assets/images/iconsmenu/tk.png', ' ');


INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AB', '1', 'การเชื่อมต่อ');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AB', '2', 'Link');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AP', '1', 'ซื้อ');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AP', '2', 'Purchase');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AR', '1', 'ขาย');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('AR', '2', 'Consignment');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('FN', '1', 'การเงิน');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('FN', '2', 'Finance');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('IC', '1', 'คลังสินค้า');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('IC', '2', 'Inventory');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('MAS', '1', 'ข้อมูลหลัก');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('MAS', '2', 'Master');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('RPT', '1', 'รายงาน');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('RPT', '2', 'Report');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('SET', '1', 'ตั้งค่าระบบ');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('SET', '2', 'Setting');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('SKU', '1', 'สินค้า');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('SKU', '2', 'Products');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('TK', '1', 'ระบบตั๋ว');
INSERT INTO [TSysMenuGrpModule_L] ([FTGmnModCode], [FNLngID], [FTGmnModName]) VALUES ('TK', '2', 'Ticket');



INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ABI', 'ABI', 'ABI001', '1', 'NULL', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'AB', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ABI', 'ABI', 'ABI002', '2', 'interfaceimport/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AB', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ABI', 'ABI', 'ABI003', '3', 'interfaceexport/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'T', '1', ' ', 'AB', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ABI', 'ABI', 'ABI004', '4', 'interfacehistory/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'AB', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('AP', 'AP', 'AP0001', '1', 'supplier/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AP', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARC', 'ARC', 'ARC001', '1', 'dcmCheckSO/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARD', 'ARD', 'ARC002', '4', 'salBookingLocker/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARD', 'ARD', 'ARD001', '1', 'dcmSO/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARD', 'ARD', 'ARD002', '2', 'dcmReprintEJ/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARD', 'ARD', 'ARD003', '3', 'dcmRDH/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARS', 'ARS', 'ARS001', '1', 'dashboardsale/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'AR', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARS', 'ARS', 'ARS002', '2', 'dashboardsaleTable/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AR', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCAP', 'DOCAP', 'AP0002', '1', 'dcmPI/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AP', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCAP', 'DOCAP', 'AP0003', '2', 'creditNote/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AP', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCAP', 'DOCAP', 'AP0004', '3', 'docPO/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'AP', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCSKU', 'DOCSKU', 'SKU003', '3', 'dcmSPA/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'SKU', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCSKU', 'DOCSKU', 'SKU004', '5', 'promotion/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'SKU', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('DOCSKU', 'DOCSKU', 'SKU005', '4', 'ADJPL/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'SKU', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC001', '1', 'deposit/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC002', '2', 'cardShiftNewCard/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC003', '3', 'cardShiftOut/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC004', '4', 'cardShiftReturn/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC005', '5', 'cardShiftTopUp/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC006', '6', 'cardShiftRefund/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC007', '7', 'cardShiftStatus/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC008', '8', 'cardShiftChange/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FDC', 'FDC', 'FDC009', '9', 'cardmngdata/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FNT', 'FNT', 'FNT001', '1', 'card/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('FNT', 'FNT', 'FNT002', '2', 'dcmCouponSetup/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'FN', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('PDM', 'PDM', 'PDM003', '3', 'movement/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'IC', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('RPT', 'RPT', 'RPT001', '1', 'rptReport/001/0/0', '0', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'RPT', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('RPT', 'RPT', 'RPT002', '2', 'rptReport/002/0/0', '0', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'RPT', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('RPT', 'RPT', 'RPT005', '5', 'rptReport/005/0/0', '0', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'RPT', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCR', 'SCR', 'SCR001', '1', 'courier/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCR', 'SCR', 'SCR002', '2', 'courierMan/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCR', 'SCR', 'SCR003', '3', 'courierGrp/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCR', 'SCR', 'SCR004', '4', 'courierType/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCT', 'SCT', 'SCT001', '1', 'customerGroup/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCT', 'SCT', 'SCT002', '2', 'customerType/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SCT', 'SCT', 'SCT003', '3', 'customerLevel/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SET', 'SET', 'SET001', '1', 'SettingConfig/0/0', '0', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'SET', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SET', 'SET', 'SET002', '2', 'discountpolicy/0/0', '0', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'SET', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SKU', 'SKU', 'SKU001', '1', 'product/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'SKU', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SKU', 'SKU', 'SKU002', '2', 'dcmPriRentLocker/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'SKU', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SLK', 'SLK', 'SLK001', '1', 'NULL', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD001', '1', 'pdtunit/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD002', '2', 'pdtpricegroup/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD003', '3', 'pdtgroup/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD004', '4', 'pdttype/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD005', '5', 'pdtmodel/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD006', '6', 'pdtcolor/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD007', '7', 'pdtbrand/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD008', '8', 'pdtsize/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD009', '9', 'pdtlocation/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPD', 'SPD', 'SPD010', '10', 'pdtTouchGroup/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPS', 'SPS', 'SPS001', '1', 'salemachine/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPS', 'SPS', 'SPS002', '2', 'slipMessage/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPS', 'SPS', 'SPS003', '3', 'NULL', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPS', 'SPS', 'SPS004', '4', 'adMessage/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SPS', 'SPS', 'SPS005', '5', 'posreg/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'MAS', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC001', '1', 'recive/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC002', '2', 'coupontype/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC003', '3', 'cardtype/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC004', '4', 'bankindex/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC005', '5', 'creditcard/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC006', '6', 'posEdc/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC007', '7', 'BookBank/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC008', '8', 'BookCheque/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC009', '9', 'bankdeptype/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC010', '10', 'banknote/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', 'NULL', 'MAS', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SRC', 'SRC', 'SRC011', '11', 'card/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', 'NULL', 'MAS', 'NULL');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SSP', 'SSP', 'SSP001', '1', 'groupsupplier/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SSP', 'SSP', 'SSP002', '2', 'suppliertype/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SSP', 'SSP', 'SSP003', '3', 'supplierlev/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ST', 'ST', 'ST001', '1', 'connectionsetting/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'AB', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('STO', 'STO', 'STO001', '1', 'branch/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('STO', 'STO', 'STO002', '2', 'warehouse/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('STO', 'STO', 'STO003', '3', 'shop/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('STO', 'STO', 'STO004', '4', 'zone/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SUR', 'SUR', 'SUR001', '1', 'user/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SUR', 'SUR', 'SUR002', '2', 'department/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SUR', 'SUR', 'SUR003', '3', 'role/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SUR', 'SUR', 'SUR004', '4', 'PermissionApproveDoc/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SUR', 'SUR', 'SUR005', '5', 'funcSetting/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SVD', 'SVD', 'SVD001', '1', 'NULL', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'MAS', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS001', '1', 'company/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS002', '2', 'rate/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS003', '3', 'vatrate/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS004', '4', 'merchant/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS005', '6', 'reason/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('SYS', 'SYS', 'SYS006', '5', 'agency/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'MAS', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'AST001', '10', 'dcmAST/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'AST002', '11', 'ADJSTKVD/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'AST003', '12', 'adjStkSub/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'AST004', '13', 'docSM/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'PDM002', '14', 'TBX/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO001', '1', 'TFW/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO002', '2', 'TWXVD/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO003', '3', 'TWI/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO005', '5', 'TWO/0/0/4', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO006', '6', 'TWO/0/0/2', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO007', '7', 'docTransferBchOut/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', ' ', 'IC', ' ');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO008', '8', 'docTBI/0/0/5', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO009', '9', 'docTBI/0/0/1', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO010', '4', 'TXOOut/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('TXO', 'TXO', 'TXO011', '9', 'NULL', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '0', '', 'IC', '');
INSERT INTO [TSysMenuList] ([FTGmnCode], [FTMnuParent], [FTMnuCode], [FNMnuSeq], [FTMnuCtlName], [FNMnuLevel], [FTMnuStaPosHpm], [FTMnuStaPosFhn], [FTMnuStaSmartHpm], [FTMnuStaSmartFhn], [FTMnuStaMoreHpm], [FTMnuStaMoreFhn], [FTMnuType], [FTMnuStaAPIPos], [FTMnuStaAPISmart], [FTMnuStaUse], [FTMnuPath], [FTGmnModCode], [FTMnuImgPath]) VALUES ('ARS', 'ARS', 'ARS003', '3', 'customer/0/0', '1', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y', '1', 'Y', 'Y', '1', ' ', 'AR', ' ');


INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI001', '1', 'กำหนดค่า', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI001', '2', 'Initial Setup', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI002', '1', 'นำเข้า', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI002', '2', 'Import ', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI003', '1', 'ส่งออก', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI003', '2', 'Export', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI004', '1', 'ประวัติการนำเข้า - ส่งออก', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ABI004', '2', 'History Import -Export ', 'Interface SAP HANA');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0001', '1', 'ผู้จำหน่าย', 'ซื้อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0001', '2', 'Supplier', 'Buy');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0002', '1', 'ใบรับของ-ใบซื้อสินค้า/บริการ', 'ซื้อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0002', '2', 'Purchase Invoice', 'Buy');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0003', '1', 'ใบลดหนี้', 'ซื้อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0003', '2', 'Credit Note', 'Buy');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0004', '1', 'ใบสั่งซื้อ', 'ซื้อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AP0004', '2', 'Purchase order', 'Buy');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARC001', '1', 'การอนุมัติใบสั่งขาย', 'ตรวจสอบ - การขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARC001', '2', 'Approving Sale Order', 'Check - Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARC002', '1', 'การจองช่องตู้ฝาก', 'ตรวจสอบ - การขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARC002', '2', 'Lockers Booking', 'Check - Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD001', '1', 'ใบสั่งขาย', 'เอกสาร - การขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD001', '2', 'Sale Order', 'Document - Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD002', '1', 'สำเนาอิเล็กทรอนิคส์', 'เอกสาร - การขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD002', '2', 'Electronic Journals', 'Document - Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD003', '1', 'เงื่อนไขการแลกแต้ม', 'เอกสาร - การขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARD003', '2', 'Condition Redeem Point', 'Document - Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARS001', '1', 'แดชบอร์ด', 'ขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARS001', '2', 'Dashboard', 'Sale');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARS002', '1', 'ตรวจสอบยอดขายหน้าร้าน', 'ขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST001', '1', 'ใบตรวจนับ - ยืนยัน สินค้าคงคลัง', 'ใบตรวจนับย่อย/รวม - สินค้าคงคลัง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST001', '2', 'Stock & Mearge Checking', 'ใบตรวจนับ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST002', '1', 'ใบตรวจนับ - ตู้สินค้า', 'ใบตรวจนับ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST002', '2', 'Vendding', 'ใบตรวจนับ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST003', '1', 'ใบตรวจนับ - ย่อย สินค้าคงคลัง', 'ใบตรวจนับ-ย่อย สินค้าคงคลัง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST003', '2', 'Inventory Counts', 'Inventory Counts');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('AST004', '1', 'ใบตรวจนับ - รวม สินค้าคงคลัง', 'ใบตรวจนับ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC001', '1', 'ใบนำฝาก', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC001', '2', 'Deposit Slip', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC002', '1', 'ใบสร้างบัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC002', '2', 'Cash Card New', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC003', '1', 'ใบเบิกบัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC003', '2', 'Cash Card Requisition', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC004', '1', 'ใบคืนบัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC004', '2', 'Cash Card Return', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC005', '1', 'ใบเติมเงินเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC005', '2', 'Cash Card Topup', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC006', '1', 'ใบคืนเงินเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC006', '2', 'Cash Card Refund ', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC007', '1', 'ใบเปลี่ยนสถานะบัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC007', '2', 'Cash Card Change Status', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC008', '1', 'ใบเปลี่ยนบัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC008', '2', 'Cash Card Change', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC009', '1', 'นำเข้า - ส่งออก บัตรเงินสด', 'เอกสาร - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FDC009', '2', 'Cash Card Import - Export', 'Document - Financh');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FNT001', '1', 'บัตรเงินสด', 'ประเภทชำระ - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FNT001', '2', 'Cash Card', 'PaymentType - Finance');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FNT002', '1', 'คูปอง / บัตรกำนัล', 'ประเภทชำระ - การเงิน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('FNT002', '2', 'Coupon / Voucher', 'PaymentType - Finance');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('PDM002', '1', 'ใบโอนสินค้าระหว่างสาขา', 'ใบโอนสินค้าระหว่างสาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('PDM002', '2', 'Transfer Branch', 'Transfer Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('PDM003', '1', 'ความเคลื่อนไหวสินค้า', 'Product Movement');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT001', '1', 'ข้อมูลการขาย', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT001', '2', 'Report Consignment', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT002', '1', 'ข้อมูลตู้สินค้า', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT002', '2', 'Report Vending', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT005', '1', 'รายงานวิเคราะห์', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('RPT005', '2', 'Report Analysis', 'รายงาน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR001', '1', 'บริษัท', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR001', '2', 'Company', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR002', '1', 'พนักงาน', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR002', '2', 'Employee', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR003', '1', 'กลุ่ม', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR003', '2', 'Group', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR004', '1', 'ประเภท', 'ข้อมูลบริษัทขนส่ง');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCR004', '2', 'Type', '');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT001', '1', 'กลุ่มลูกค้า', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT001', '2', 'Customer Group', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT002', '1', 'ประเภทลูกค้า', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT002', '2', 'Customer Type', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT003', '1', 'ระดับลูกค้า', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SCT003', '2', 'Customer Level', 'ข้อมูลลูกค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SET001', '1', 'ตั้งค่าระบบ', 'ตั้งค่าระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SET001', '2', 'Setting config', 'ตั้งค่าระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SET002', '1', 'กำหนดเงื่อนไขส่วนลด', 'กำหนดเงื่อนไขส่วนลด');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SET002', '2', 'Discount Policy', 'Discount Policy');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU001', '1', 'สินค้า', 'สินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU001', '2', 'Product', 'SKU');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU002', '1', 'กำหนดอัตราค่าเช่า', 'สินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU002', '2', 'Rental Rate', 'SKU');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU003', '1', 'ใบปรับราคาขาย', 'สินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU003', '2', 'Adjust Price', 'SKU');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU004', '1', 'โปรโมชั่น', 'สินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU004', '2', 'Promotion', 'SKU');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU005', '1', 'ใบปรับราคาสินค้าเช่า', 'ใบปรับราคาสินค้าเช่า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SKU005', '2', 'ใบปรับราคาสินค้าเช่า', 'ใบปรับราคาสินค้าเช่า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SLK001', '1', 'ลำดับ', 'ข้อมูลตู้ฝาก');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SLK001', '2', 'Cabinet No', 'System Locker');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD001', '1', 'หน่วยสินค้า', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD001', '2', 'Product Unit', 'System Product');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD002', '1', 'กลุ่มราคาสินค้า', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD002', '2', 'Product Price Group', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD003', '1', 'กลุ่มสินค้า', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD003', '2', 'Product Group', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD004', '1', 'ประเภทสินค้า', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD004', '2', 'Product Type', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD005', '1', 'รุ่น', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD005', '2', 'Model', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD006', '1', 'สี', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD006', '2', 'Color', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD007', '1', 'ยีห้อ', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD007', '2', 'Brand', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD008', '1', 'ขนาด', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD008', '2', 'Size', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD009', '1', 'ทีเก็บสินค้า', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD009', '2', 'Location', 'ข้อมูลสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD010', '1', 'กลุ่มสินค้าด่วน', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPD010', '2', 'Product Touch Screen', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS001', '1', 'จุดขาย', 'ข้อมูลจุดขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS001', '2', 'POS', 'System POS');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS002', '1', 'กำหนดหัวท้ายใบเสร็จ', 'ข้อมูลจุดขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS002', '2', 'Config Header - Footer Slip', 'System POS');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS003', '1', 'กำหนดฟังก์ชั่นจุดขาย', 'ข้อมูลจุดขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS003', '2', 'Config POS Functions', 'System POS');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS004', '1', 'สื่อ,ข้อความ หน้าจอลูกค้า', 'ข้อมูลจุดขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS004', '2', 'Advertisement', 'System POS');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS005', '1', 'ลงทะเบียนจุดขาย', 'ลงทะเบียนจุดขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SPS005', '2', 'Register Pos', 'Register Pos');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC001', '1', 'ประเภทการชำระเงิน', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC001', '2', 'Payment Type', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC002', '1', 'ประเภทคูปอง/บัตรกำนัล ', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC002', '2', 'Coupon/Voucher Type', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC003', '1', 'ประเภทบัตรเงินสด', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC003', '2', 'Cash Card Type ', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC004', '1', 'ธนาคาร', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC004', '2', 'Bank', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC005', '1', 'บัตรเครดิต', 'ช้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC005', '2', 'Credit Card', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC006', '1', 'เครื่องรับชำระเงินอิเล็กทรอนิกส์ (EDC)', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC006', '2', 'Electronic Data Capture (EDC)', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC007', '1', 'สมุดบัญชีธนาคาร', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC007', '2', 'Book Bank', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC008', '1', 'สมุดเช็ค', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC008', '2', 'Cheque Book', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC009', '1', 'ประเภทใบนำฝาก', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC009', '2', 'Deposit Slip Type', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC010', '1', 'ธนบัตร', 'ข้อมูลการชำระ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC010', '2', 'BankNote', 'System Recive');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC011', '1', 'บัตรเงินสด', ' บัตรเงินสด');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SRC011', '2', 'Cash card  ', 'Cash card  ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP001', '1', 'กลุ่ม', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP001', '2', 'Group', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP002', '1', 'ประเภท', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP002', '2', 'Type', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP003', '1', 'ระดับ', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SSP003', '2', 'Level', 'ข้อมูลผู้จําหน่าย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ST001', '1', 'ตั้งค่า', 'การเชื่อมต่อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ST001', '2', 'setting', 'การเชื่อมต่อ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO001', '1', 'สาขา', 'ข้อมูลสาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO001', '2', 'Branch', 'System Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO002', '1', 'คลังสินค้า', 'ข้อมูลสาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO002', '2', 'Warehouse', 'System Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO003', '1', 'ร้านค้า', 'ข้อมูลสาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO003', '2', 'Shop', 'System Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO004', '1', 'โซน', 'ข้อมูลสาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('STO004', '2', 'Zone', 'System Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR001', '1', 'ผู้ใช้', 'ข้อมูลผู้ใช้');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR001', '2', 'User', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR002', '1', 'แผนก', 'ข้อมูลผู้ใช้');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR002', '2', 'Department', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR003', '1', 'สิทธิการใช้งาน', 'ข้อมูลผู้ใช้');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR003', '2', 'User authority', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR004', '1', 'สิทธิ์การอนุมัติเอกสาร', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR004', '2', 'Permission Approve Document', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR005', '1', 'ตั้งค่าการใช้งานฟังก์ชัน', 'ข้อมูลผู้ใช้');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SUR005', '2', 'Function Setting', 'System User');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SVD001', '1', 'ประเภทตู้สินค้า', 'ข้อมูลตู้ขาย');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SVD001', '2', 'Cabinet Type', 'System Vedding');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS001', '1', 'บริษัท', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS001', '2', 'Company', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS002', '1', 'สกุลเงิน', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS002', '2', 'Currency', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS003', '1', 'อัตราภาษี', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS003', '2', 'Vat Rate', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS004', '1', 'กลุ่มธุรกิจ', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS004', '2', 'Merchant', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS005', '1', 'เหตุผล', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS005', '2', 'Reason', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS006', '1', 'ตัวแทนขาย', 'ข้อมูลระบบ');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('SYS006', '2', 'agency', 'System Info');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO001', '1', 'ใบโอนสินค้าระหว่างคลัง', 'ใบโอนสินค้าระหว่างคลังทั่วไป');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO001', '2', 'General', 'Transfer Warehouse General');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO002', '1', 'ตู้สินค้า', 'ใบโอนสินค้าระหว่างคลังตู้สินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO002', '2', 'Vending', 'Transfer Warehouse Vending');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO003', '1', 'ใบรับโอน - คลังสินค้า', 'ใบรับโอน');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO003', '2', 'Transfer receipt input', 'Transfer receipt');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO005', '1', 'ใบจ่ายโอน - คลังสินค้า', 'ใบจ่ายโอน - คลังสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO005', '2', '    Warehouse transfer slip', 'Warehouse transfer slip');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO006', '1', 'เบิกออก - คลังสินค้า', 'เบิกออก - คลังสินค้า');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO006', '2', 'Warehouse  Withdraw', 'Warehouse  Withdraw');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO007', '1', 'ใบจ่ายโอน - สาขา', 'ใบจ่ายโอน - สาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO007', '2', 'Product Transfer Branch', 'Product Transfer Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO008', '1', 'ใบรับโอน - สาขา', 'ใบรับโอน - สาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO008', '2', '  Transfer Receipt - Branch', 'Transfer Receipt - Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO009', '1', 'ใบรับเข้า - สาขา', 'ใบรับเข้า - สาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO009', '2', 'Receipt - Branch', 'Receipt - Branch');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO010', '1', 'ใบรับเข้า - คลังสินค้า', 'NULL');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO010', '2', 'Transfer receipt output', 'NULL');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('TXO011', '1', 'ใบสั่งสินค้า -  สาขา', 'ใบสั่งสินค้า -  สาขา');
INSERT INTO [TSysMenuList_L] ([FTMnuCode], [FNLngID], [FTMnuName], [FTMnuRmk]) VALUES ('ARS003', '1', 'ลูกค้า', 'ขาย');

--######################################################################################---
-- 						Create By : Napat(Jame) 25/01/2021
--######################################################################################---

UPDATE TsysConfig 	SET FTSysSeq='4' WHERE FTSysCode='tPS_Warehouse'
UPDATE TsysConfig_L SET FTSysSeq='4' WHERE FTSysCode='tPS_Warehouse'

IF NOT EXISTS (SELECT FTSysCode FROM TSysConfig WHERE FTSysCode = 'tPS_Channel')
BEGIN
	INSERT INTO [dbo].[TSysConfig]
		([FTSysCode],[FTSysApp],[FTSysKey],[FTSysSeq],[FTGmnCode],[FTSysStaAlwEdit]
		,[FTSysStaDataType],[FNSysMaxLength],[FTSysStaDefValue],[FTSysStaDefRef]
		,[FTSysStaUsrValue],[FTSysStaUsrRef],[FDLastUpdOn],[FTLastUpdBy],[FDCreateOn],[FTCreateBy])
	VALUES
		('tPS_Channel','AP','Company','5','COMP','1','6',0,'','','','',GETDATE()
		,'009',GETDATE(),'009')
END

IF NOT EXISTS (SELECT FTSysCode FROM TSysConfig_L WHERE FTSysCode = 'tPS_Channel')
BEGIN
	INSERT INTO [dbo].[TSysConfig_L]
		([FTSysCode],[FTSysApp],[FTSysKey],[FTSysSeq],[FNLngID],[FTSysName],[FTSysDesc],[FTSysRmk])
	VALUES
		('tPS_Channel','AP','Company','5','1','ช่องทางการขาย','ช่องทางการขาย',''),
		('tPS_Channel','AP','Company','5','2','Channel','Channel','')
END

IF NOT EXISTS (SELECT FTAppCode FROM TSysApp WHERE FTAppCode = 'VS')
BEGIN
	INSERT INTO [dbo].[TSysApp]
		([FTAppCode],[FTAppVersion],[FDLastUpdOn],[FTLastUpdBy],[FDCreateOn],[FTCreateBy])
	VALUES
		('VS','5',GETDATE(),'',GETDATE(),'')
END

IF NOT EXISTS (SELECT FTAppCode FROM TSysApp_L WHERE FTAppCode = 'VS')
BEGIN
	INSERT INTO [dbo].[TSysApp_L]
		([FTAppCode],[FNLngID],[FTAppName],[FTAppRmk])
	VALUES
		('VS',1,'ระบบหน่วยรถ',''),
		('VS',2,'Van Sales','')
END

--######################################################################################---

--####################################   ส่วนล่างสุดเสมอ   ##################################################---
DECLARE @TblName VARCHAR(50)
DECLARE @ColName VARCHAR(30)
DECLARE @IndexName VARCHAR(50)
DECLARE @tSql NVARCHAR(250)

DECLARE Col_Cursor CURSOR FOR
SELECT Col.TABLE_NAME,COLUMN_NAME
FROM INFORMATION_SCHEMA.COLUMNS Col
INNER JOIN INFORMATION_SCHEMA.TABLES Tbl ON Col.TABLE_NAME = tbl.TABLE_NAME
WHERE LEFT(COLUMN_NAME,2) = 'FC'
--AND DATA_TYPE <> 'numeric'
AND DATA_TYPE <> 'datetime'
AND DATA_TYPE <> 'varchar'
AND DATA_TYPE <> 'nvarchar'
AND TABLE_TYPE = 'BASE TABLE'

OPEN Col_Cursor
FETCH NEXT FROM Col_Cursor INTO @TblName,@ColName

WHILE @@FETCH_STATUS = 0
BEGIN
 SET @tSql = 'ALTER TABLE ' + @TblName + ' ALTER COLUMN ' + @ColName + ' NUMERIC(18,4)' 
 EXECUTE sp_executesql  @tsql

 FETCH NEXT FROM Col_Cursor INTO @TblName,@ColName
END
CLOSE Col_Cursor
DEALLOCATE Col_Cursor

